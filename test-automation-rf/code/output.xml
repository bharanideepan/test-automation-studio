<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241127 12:36:10.575" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:19.314" endtime="20241127 12:36:19.314"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241127 12:36:50.300" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '37', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:06:50.080Z', 'createdAt': '2024-11-27T07:06:50.080Z', 'errorMes...</msg>
<status status="PASS" starttime="20241127 12:36:19.314" endtime="20241127 12:36:50.300"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241127 12:36:50.300" endtime="20241127 12:36:50.300"/>
</break>
<status status="NOT RUN" starttime="20241127 12:36:50.300" endtime="20241127 12:36:50.300"/>
</branch>
<status status="PASS" starttime="20241127 12:36:50.300" endtime="20241127 12:36:50.300"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241127 12:36:50.302" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\adc549b3-e3dc-45c7-8792-1b90ed3f72dc"}</msg>
<msg timestamp="20241127 12:36:51.560" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\adc549b3-e3dc-45c7-8792-1b90ed3f72dc"}</msg>
<status status="PASS" starttime="20241127 12:36:50.301" endtime="20241127 12:36:51.560"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241127 12:36:51.562" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241127 12:36:51.591" level="INFO">Successfully created context. </msg>
<msg timestamp="20241127 12:36:51.591" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241127 12:36:51.561" endtime="20241127 12:36:51.591"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241127 12:36:51.599" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241127 12:36:51.592" endtime="20241127 12:36:51.599"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:36:53.503" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241127 12:36:53.504" level="INFO">${page_id} = {'page_id': 'page=9bc8aeab-f9c0-461f-8521-654b436171c1', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:36:51.600" endtime="20241127 12:36:53.504"/>
</kw>
<status status="PASS" starttime="20241127 12:36:50.301" endtime="20241127 12:36:53.504"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:53.505" endtime="20241127 12:36:53.512"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:53.515" endtime="20241127 12:36:53.516"/>
</kw>
<msg timestamp="20241127 12:36:53.516" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.514" endtime="20241127 12:36:53.516"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.520" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241127 12:36:53.520" endtime="20241127 12:36:53.520"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.521" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.520" endtime="20241127 12:36:53.521"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.520" endtime="20241127 12:36:53.521"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.521" endtime="20241127 12:36:53.521"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.521" endtime="20241127 12:36:53.521"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.520" endtime="20241127 12:36:53.521"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.519" endtime="20241127 12:36:53.522"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.516" endtime="20241127 12:36:53.522"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:53.522" endtime="20241127 12:36:53.522"/>
</return>
<msg timestamp="20241127 12:36:53.523" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.514" endtime="20241127 12:36:53.523"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.524" endtime="20241127 12:36:53.524"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241127 12:36:53.524" endtime="20241127 12:36:53.524"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:53.524" endtime="20241127 12:36:53.524"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.523" endtime="20241127 12:36:53.524"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:53.528" endtime="20241127 12:36:53.528"/>
</kw>
<msg timestamp="20241127 12:36:53.528" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.527" endtime="20241127 12:36:53.528"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.529" level="INFO">${values} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:36:53.529" endtime="20241127 12:36:53.529"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.530" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.530" endtime="20241127 12:36:53.530"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.529" endtime="20241127 12:36:53.530"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.531" endtime="20241127 12:36:53.531"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.530" endtime="20241127 12:36:53.531"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.529" endtime="20241127 12:36:53.531"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.528" endtime="20241127 12:36:53.531"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.528" endtime="20241127 12:36:53.531"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:53.531" endtime="20241127 12:36:53.531"/>
</return>
<msg timestamp="20241127 12:36:53.532" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.527" endtime="20241127 12:36:53.532"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:53.535" endtime="20241127 12:36:53.536"/>
</kw>
<msg timestamp="20241127 12:36:53.536" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.535" endtime="20241127 12:36:53.536"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.537" level="INFO">${values} = {'id': '37', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:06:50.080Z', 'createdAt': '2024-11-27T07:06:50.080Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:36:53.537" endtime="20241127 12:36:53.537"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.538" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.538" endtime="20241127 12:36:53.538"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.537" endtime="20241127 12:36:53.538"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.539" endtime="20241127 12:36:53.539"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.538" endtime="20241127 12:36:53.540"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.537" endtime="20241127 12:36:53.540"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.536" endtime="20241127 12:36:53.540"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.536" endtime="20241127 12:36:53.540"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:53.540" endtime="20241127 12:36:53.540"/>
</return>
<msg timestamp="20241127 12:36:53.541" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.534" endtime="20241127 12:36:53.541"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.542" endtime="20241127 12:36:53.542"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.541" endtime="20241127 12:36:53.542"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.541" endtime="20241127 12:36:53.542"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.543" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:36:53.542" endtime="20241127 12:36:53.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.543" level="INFO">${testCaseRun} = {'id': '37', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:06:50.080Z', 'createdAt': '2024-11-27T07:06:50.080Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:36:53.543" endtime="20241127 12:36:53.543"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.544" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241127 12:36:53.544" endtime="20241127 12:36:53.544"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:53.544" endtime="20241127 12:36:53.545"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:53.548" endtime="20241127 12:36:53.549"/>
</kw>
<msg timestamp="20241127 12:36:53.549" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.548" endtime="20241127 12:36:53.549"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.550" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241127 12:36:53.549" endtime="20241127 12:36:53.550"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.551" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.550" endtime="20241127 12:36:53.551"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.550" endtime="20241127 12:36:53.551"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.551" endtime="20241127 12:36:53.551"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.551" endtime="20241127 12:36:53.551"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.550" endtime="20241127 12:36:53.551"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.549" endtime="20241127 12:36:53.551"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.549" endtime="20241127 12:36:53.552"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:53.552" endtime="20241127 12:36:53.552"/>
</return>
<msg timestamp="20241127 12:36:53.552" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.547" endtime="20241127 12:36:53.552"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:53.553" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '37', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241127 12:36:53.552" endtime="20241127 12:36:53.553"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:53.554" level="INFO">${json_response} = {"testCaseRunId": "37", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241127 12:36:53.554" endtime="20241127 12:36:53.554"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:53.561" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:53.562" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:53.555" endtime="20241127 12:36:53.562"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:53.562" endtime="20241127 12:36:53.563"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:53.563" endtime="20241127 12:36:53.563"/>
</return>
<status status="PASS" starttime="20241127 12:36:53.553" endtime="20241127 12:36:53.563"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:53.565" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:53.565"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.566" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:53.566"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:53.566" endtime="20241127 12:36:53.567"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:53.571" endtime="20241127 12:36:53.572"/>
</kw>
<msg timestamp="20241127 12:36:53.572" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.571" endtime="20241127 12:36:53.572"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.574" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241127 12:36:53.573" endtime="20241127 12:36:53.574"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.575" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.575" endtime="20241127 12:36:53.575"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.574" endtime="20241127 12:36:53.575"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.576" endtime="20241127 12:36:53.576"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.575" endtime="20241127 12:36:53.576"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.574" endtime="20241127 12:36:53.576"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.573" endtime="20241127 12:36:53.576"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.572" endtime="20241127 12:36:53.576"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:53.576" endtime="20241127 12:36:53.576"/>
</return>
<msg timestamp="20241127 12:36:53.577" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:53.570" endtime="20241127 12:36:53.577"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.578" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241127 12:36:53.578" endtime="20241127 12:36:53.579"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:53.579" endtime="20241127 12:36:53.579"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:36:53.580" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241127 12:36:53.580" endtime="20241127 12:36:53.580"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.581" endtime="20241127 12:36:53.581"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:53.581" endtime="20241127 12:36:53.581"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:53.580" endtime="20241127 12:36:53.581"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.580" endtime="20241127 12:36:53.581"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:53.582" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:36:53.582" endtime="20241127 12:36:53.582"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:36:56.221" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241127 12:36:56.221" level="INFO">${page_id} = {'page_id': 'page=99c31b03-da6b-4265-b748-004e82099ecc', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:36:53.584" endtime="20241127 12:36:56.221"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241127 12:36:56.223" level="INFO">Switching to page {'page_id': 'page=99c31b03-da6b-4265-b748-004e82099ecc', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241127 12:36:56.299" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=c2a3e15d-c023-49f7-bd86-d63e64ca6009",
    "contexts": [
      {
        "type": "context",
        "id": "context=cfcbe8a1-a915-4c45-818a-a9906a1e0d08",
        "activePage": "page=99c31b03-da6b-4265-b748-004e82099ecc",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=9bc8aeab-f9c0-461f-8521-654b436171c1",
            "timestamp": 1732691211.824
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=99c31b03-da6b-4265-b748-004e82099ecc",
            "timestamp": 1732691213.643
          }
        ]
      }
    ],
    "activeContext": "context=cfcbe8a1-a915-4c45-818a-a9906a1e0d08",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241127 12:36:56.305" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241127 12:36:56.222" endtime="20241127 12:36:56.305"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.583" endtime="20241127 12:36:56.306"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.583" endtime="20241127 12:36:56.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.306" endtime="20241127 12:36:56.306"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.306" endtime="20241127 12:36:56.306"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.309" endtime="20241127 12:36:56.309"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.307" endtime="20241127 12:36:56.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.312" endtime="20241127 12:36:56.312"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.314" endtime="20241127 12:36:56.314"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.309" endtime="20241127 12:36:56.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.316" endtime="20241127 12:36:56.316"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.314" endtime="20241127 12:36:56.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.320" endtime="20241127 12:36:56.320"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.316" endtime="20241127 12:36:56.321"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.325" endtime="20241127 12:36:56.326"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.326" endtime="20241127 12:36:56.327"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.326" endtime="20241127 12:36:56.327"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.326" endtime="20241127 12:36:56.327"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.321" endtime="20241127 12:36:56.327"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.329" endtime="20241127 12:36:56.329"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.327" endtime="20241127 12:36:56.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.332" endtime="20241127 12:36:56.332"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.333" endtime="20241127 12:36:56.333"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.333" endtime="20241127 12:36:56.333"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.334" endtime="20241127 12:36:56.334"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.334" endtime="20241127 12:36:56.334"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.333" endtime="20241127 12:36:56.335"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.330" endtime="20241127 12:36:56.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:56.345" endtime="20241127 12:36:56.345"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.349" endtime="20241127 12:36:56.349"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.335" endtime="20241127 12:36:56.349"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.351" endtime="20241127 12:36:56.351"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.352" endtime="20241127 12:36:56.352"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.351" endtime="20241127 12:36:56.352"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.352" endtime="20241127 12:36:56.352"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.352" endtime="20241127 12:36:56.353"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.351" endtime="20241127 12:36:56.353"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.350" endtime="20241127 12:36:56.353"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:56.360" endtime="20241127 12:36:56.360"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.365" endtime="20241127 12:36:56.365"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.353" endtime="20241127 12:36:56.366"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.367" endtime="20241127 12:36:56.367"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.368" endtime="20241127 12:36:56.368"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.368" endtime="20241127 12:36:56.368"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.368" endtime="20241127 12:36:56.368"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.368" endtime="20241127 12:36:56.368"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.367" endtime="20241127 12:36:56.369"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.366" endtime="20241127 12:36:56.369"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.373" endtime="20241127 12:36:56.373"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.369" endtime="20241127 12:36:56.373"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.383" endtime="20241127 12:36:56.383"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.384" endtime="20241127 12:36:56.384"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.373" endtime="20241127 12:36:56.384"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.582" endtime="20241127 12:36:56.385"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.385" endtime="20241127 12:36:56.386"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:36:56.386" endtime="20241127 12:36:56.386"/>
</return>
<msg timestamp="20241127 12:36:56.387" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:36:53.581" endtime="20241127 12:36:56.387"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.388" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241127 12:36:56.388" endtime="20241127 12:36:56.388"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.389" endtime="20241127 12:36:56.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.389" endtime="20241127 12:36:56.389"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.390" endtime="20241127 12:36:56.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.390" endtime="20241127 12:36:56.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.390" endtime="20241127 12:36:56.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.390" endtime="20241127 12:36:56.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.391" endtime="20241127 12:36:56.391"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.391" endtime="20241127 12:36:56.391"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.393" endtime="20241127 12:36:56.394"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.397"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.397"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.398"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.398"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.398" endtime="20241127 12:36:56.398"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.398" endtime="20241127 12:36:56.398"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.398" endtime="20241127 12:36:56.399"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.398" endtime="20241127 12:36:56.399"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.399" endtime="20241127 12:36:56.399"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.399" endtime="20241127 12:36:56.400"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.399" endtime="20241127 12:36:56.400"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.399" endtime="20241127 12:36:56.400"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.400"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.397" endtime="20241127 12:36:56.400"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:56.401" endtime="20241127 12:36:56.401"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.401" endtime="20241127 12:36:56.401"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.401" endtime="20241127 12:36:56.401"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.402" endtime="20241127 12:36:56.402"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.401" endtime="20241127 12:36:56.402"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.401" endtime="20241127 12:36:56.402"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.402" endtime="20241127 12:36:56.402"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.403" endtime="20241127 12:36:56.403"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.402" endtime="20241127 12:36:56.403"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.402" endtime="20241127 12:36:56.403"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.400" endtime="20241127 12:36:56.403"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.400" endtime="20241127 12:36:56.403"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.389" endtime="20241127 12:36:56.404"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:36:56.389" endtime="20241127 12:36:56.404"/>
</for>
<msg timestamp="20241127 12:36:56.404" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:36:56.387" endtime="20241127 12:36:56.404"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.404" endtime="20241127 12:36:56.405"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:36:56.414" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241127 12:36:56.413" endtime="20241127 12:36:56.414"/>
</kw>
<msg timestamp="20241127 12:36:56.414" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:36:56.412" endtime="20241127 12:36:56.414"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.415" endtime="20241127 12:36:56.415"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.416" endtime="20241127 12:36:56.416"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.415" endtime="20241127 12:36:56.416"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.416" endtime="20241127 12:36:56.416"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.416" endtime="20241127 12:36:56.416"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.415" endtime="20241127 12:36:56.416"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.415" endtime="20241127 12:36:56.416"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.415" endtime="20241127 12:36:56.417"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:56.417" endtime="20241127 12:36:56.417"/>
</return>
<msg timestamp="20241127 12:36:56.417" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241127 12:36:56.411" endtime="20241127 12:36:56.417"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.418" endtime="20241127 12:36:56.418"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.417" endtime="20241127 12:36:56.418"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.420" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241127 12:36:56.418" endtime="20241127 12:36:56.420"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.418" endtime="20241127 12:36:56.420"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.417" endtime="20241127 12:36:56.420"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:56.422" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '414', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241127 12:36:56.420" endtime="20241127 12:36:56.422"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:56.423" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "414", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241127 12:36:56.422" endtime="20241127 12:36:56.423"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:56.431" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:56.431" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:56.423" endtime="20241127 12:36:56.431"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.431" endtime="20241127 12:36:56.432"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:56.432" endtime="20241127 12:36:56.433"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.422" endtime="20241127 12:36:56.433"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.405" endtime="20241127 12:36:56.433"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:36:56.435" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:36:56.433" endtime="20241127 12:36:56.435"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.578" endtime="20241127 12:36:56.435"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.435" endtime="20241127 12:36:56.435"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.436" endtime="20241127 12:36:56.436"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.436" endtime="20241127 12:36:56.437"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.435" endtime="20241127 12:36:56.437"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.578" endtime="20241127 12:36:56.437"/>
</try>
<status status="PASS" starttime="20241127 12:36:53.578" endtime="20241127 12:36:56.437"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.438" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241127 12:36:56.438" endtime="20241127 12:36:56.438"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.438" endtime="20241127 12:36:56.439"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:36:56.439" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241127 12:36:56.439" endtime="20241127 12:36:56.439"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.441" endtime="20241127 12:36:56.441"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.441" endtime="20241127 12:36:56.442"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.441" endtime="20241127 12:36:56.442"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.441" endtime="20241127 12:36:56.442"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.443" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:36:56.442" endtime="20241127 12:36:56.443"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.443" endtime="20241127 12:36:56.443"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.443" endtime="20241127 12:36:56.443"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.444" endtime="20241127 12:36:56.444"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.444" endtime="20241127 12:36:56.444"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.446" endtime="20241127 12:36:56.446"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.444" endtime="20241127 12:36:56.447"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.449" endtime="20241127 12:36:56.450"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.460" endtime="20241127 12:36:56.461"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.447" endtime="20241127 12:36:56.461"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.466" endtime="20241127 12:36:56.466"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.462" endtime="20241127 12:36:56.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.473" endtime="20241127 12:36:56.474"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.467" endtime="20241127 12:36:56.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.569" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:36:56.492" endtime="20241127 12:36:56.569"/>
</kw>
<msg timestamp="20241127 12:36:56.569" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.491" endtime="20241127 12:36:56.569"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.570" endtime="20241127 12:36:56.570"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.491" endtime="20241127 12:36:56.571"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.571" endtime="20241127 12:36:56.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.573" endtime="20241127 12:36:56.573"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.571" endtime="20241127 12:36:56.573"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.490" endtime="20241127 12:36:56.573"/>
</try>
<msg timestamp="20241127 12:36:56.574" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.489" endtime="20241127 12:36:56.574"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.574" endtime="20241127 12:36:56.575"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.487" endtime="20241127 12:36:56.575"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.575" endtime="20241127 12:36:56.575"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.575" endtime="20241127 12:36:56.576"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.487" endtime="20241127 12:36:56.576"/>
</try>
<msg timestamp="20241127 12:36:56.576" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.486" endtime="20241127 12:36:56.576"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.581" endtime="20241127 12:36:56.581"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.581" endtime="20241127 12:36:56.582"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.580" endtime="20241127 12:36:56.582"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.580" endtime="20241127 12:36:56.582"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.578" endtime="20241127 12:36:56.582"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.485" endtime="20241127 12:36:56.583"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.609" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:36:56.598" endtime="20241127 12:36:56.610"/>
</kw>
<msg timestamp="20241127 12:36:56.610" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.598" endtime="20241127 12:36:56.610"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.610" endtime="20241127 12:36:56.610"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.598" endtime="20241127 12:36:56.610"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.611" endtime="20241127 12:36:56.611"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.611" endtime="20241127 12:36:56.611"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.610" endtime="20241127 12:36:56.611"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.597" endtime="20241127 12:36:56.612"/>
</try>
<msg timestamp="20241127 12:36:56.612" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.597" endtime="20241127 12:36:56.612"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.612" endtime="20241127 12:36:56.613"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.595" endtime="20241127 12:36:56.613"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.613" endtime="20241127 12:36:56.613"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.613" endtime="20241127 12:36:56.613"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.595" endtime="20241127 12:36:56.614"/>
</try>
<msg timestamp="20241127 12:36:56.614" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.594" endtime="20241127 12:36:56.614"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.620" endtime="20241127 12:36:56.620"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.620" endtime="20241127 12:36:56.621"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.619" endtime="20241127 12:36:56.621"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.619" endtime="20241127 12:36:56.621"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.617" endtime="20241127 12:36:56.621"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.593" endtime="20241127 12:36:56.622"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:36:56.657" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:36:56.657" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:36:56.623" endtime="20241127 12:36:56.658"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:36:56.658" endtime="20241127 12:36:56.658"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.622" endtime="20241127 12:36:56.658"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.659" endtime="20241127 12:36:56.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.659" endtime="20241127 12:36:56.659"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.658" endtime="20241127 12:36:56.659"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.622" endtime="20241127 12:36:56.659"/>
</try>
<msg timestamp="20241127 12:36:56.660" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:36:56.590" endtime="20241127 12:36:56.660"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.663" endtime="20241127 12:36:56.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.664" endtime="20241127 12:36:56.664"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.663" endtime="20241127 12:36:56.664"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.663" endtime="20241127 12:36:56.664"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.662" endtime="20241127 12:36:56.665"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.588" endtime="20241127 12:36:56.665"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.665" endtime="20241127 12:36:56.665"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.665" endtime="20241127 12:36:56.666"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.588" endtime="20241127 12:36:56.666"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.587" endtime="20241127 12:36:56.666"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.679" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241127 12:36:56.672" endtime="20241127 12:36:56.680"/>
</kw>
<msg timestamp="20241127 12:36:56.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.672" endtime="20241127 12:36:56.680"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.680" endtime="20241127 12:36:56.680"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.672" endtime="20241127 12:36:56.680"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.681" endtime="20241127 12:36:56.681"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.681" endtime="20241127 12:36:56.681"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.680" endtime="20241127 12:36:56.681"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.672" endtime="20241127 12:36:56.682"/>
</try>
<msg timestamp="20241127 12:36:56.682" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.671" endtime="20241127 12:36:56.682"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.682" endtime="20241127 12:36:56.682"/>
</return>
<msg timestamp="20241127 12:36:56.683" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.669" endtime="20241127 12:36:56.683"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.687" endtime="20241127 12:36:56.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.688" endtime="20241127 12:36:56.688"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.687" endtime="20241127 12:36:56.688"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.687" endtime="20241127 12:36:56.688"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.685" endtime="20241127 12:36:56.688"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.668" endtime="20241127 12:36:56.689"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.481" endtime="20241127 12:36:56.689"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.720" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241127 12:36:56.697" endtime="20241127 12:36:56.720"/>
</kw>
<msg timestamp="20241127 12:36:56.720" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.697" endtime="20241127 12:36:56.720"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.720" endtime="20241127 12:36:56.721"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.696" endtime="20241127 12:36:56.721"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.721" endtime="20241127 12:36:56.721"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.722" endtime="20241127 12:36:56.722"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.721" endtime="20241127 12:36:56.722"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.696" endtime="20241127 12:36:56.722"/>
</try>
<msg timestamp="20241127 12:36:56.722" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.695" endtime="20241127 12:36:56.722"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.722" endtime="20241127 12:36:56.723"/>
</return>
<msg timestamp="20241127 12:36:56.723" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.693" endtime="20241127 12:36:56.723"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.728" endtime="20241127 12:36:56.728"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.728" endtime="20241127 12:36:56.728"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.727" endtime="20241127 12:36:56.728"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.727" endtime="20241127 12:36:56.728"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.725" endtime="20241127 12:36:56.729"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.692" endtime="20241127 12:36:56.729"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:56.730" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:36:56.729" endtime="20241127 12:36:56.730"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.732" endtime="20241127 12:36:56.732"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.734" endtime="20241127 12:36:56.735"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.732" endtime="20241127 12:36:56.735"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:56.735" endtime="20241127 12:36:56.736"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.735" endtime="20241127 12:36:56.736"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.731" endtime="20241127 12:36:56.736"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:36:56.737" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241127 12:36:56.737" endtime="20241127 12:36:56.780"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.736" endtime="20241127 12:36:56.780"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.781" endtime="20241127 12:36:56.781"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.781" endtime="20241127 12:36:56.781"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.780" endtime="20241127 12:36:56.781"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.736" endtime="20241127 12:36:56.781"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.731" endtime="20241127 12:36:56.782"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.730" endtime="20241127 12:36:56.782"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.730" endtime="20241127 12:36:56.782"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.782" endtime="20241127 12:36:56.782"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.782" endtime="20241127 12:36:56.782"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.730" endtime="20241127 12:36:56.782"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.480" endtime="20241127 12:36:56.783"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.783" endtime="20241127 12:36:56.784"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.783" endtime="20241127 12:36:56.784"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.783" endtime="20241127 12:36:56.784"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.475" endtime="20241127 12:36:56.784"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.786" endtime="20241127 12:36:56.786"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.784" endtime="20241127 12:36:56.786"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.788" endtime="20241127 12:36:56.788"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.789" endtime="20241127 12:36:56.789"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.788" endtime="20241127 12:36:56.789"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.789" endtime="20241127 12:36:56.789"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.789" endtime="20241127 12:36:56.789"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.788" endtime="20241127 12:36:56.789"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.786" endtime="20241127 12:36:56.790"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:56.797" endtime="20241127 12:36:56.797"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.800" endtime="20241127 12:36:56.801"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.790" endtime="20241127 12:36:56.801"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.803" endtime="20241127 12:36:56.803"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.804" endtime="20241127 12:36:56.804"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.803" endtime="20241127 12:36:56.804"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.804" endtime="20241127 12:36:56.804"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.804" endtime="20241127 12:36:56.805"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.803" endtime="20241127 12:36:56.805"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.801" endtime="20241127 12:36:56.805"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:56.812" endtime="20241127 12:36:56.813"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.816" endtime="20241127 12:36:56.816"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.805" endtime="20241127 12:36:56.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.819" endtime="20241127 12:36:56.819"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.819" endtime="20241127 12:36:56.820"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.819" endtime="20241127 12:36:56.820"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.820" endtime="20241127 12:36:56.820"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.820" endtime="20241127 12:36:56.820"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.819" endtime="20241127 12:36:56.820"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.817" endtime="20241127 12:36:56.821"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.823" endtime="20241127 12:36:56.823"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.821" endtime="20241127 12:36:56.823"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.831" endtime="20241127 12:36:56.831"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.831" endtime="20241127 12:36:56.832"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.824" endtime="20241127 12:36:56.832"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.443" endtime="20241127 12:36:56.832"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.832" endtime="20241127 12:36:56.833"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:36:56.833" endtime="20241127 12:36:56.833"/>
</return>
<msg timestamp="20241127 12:36:56.833" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:36:56.442" endtime="20241127 12:36:56.833"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.835" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:36:56.835" endtime="20241127 12:36:56.835"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.836" endtime="20241127 12:36:56.836"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.837" endtime="20241127 12:36:56.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.837" endtime="20241127 12:36:56.837"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.838" endtime="20241127 12:36:56.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.838" endtime="20241127 12:36:56.838"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.839" endtime="20241127 12:36:56.839"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.839" endtime="20241127 12:36:56.839"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.839" endtime="20241127 12:36:56.839"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.841" endtime="20241127 12:36:56.841"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.843" endtime="20241127 12:36:56.843"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:56.844" endtime="20241127 12:36:56.844"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.844" endtime="20241127 12:36:56.845"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.844" endtime="20241127 12:36:56.845"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.845" endtime="20241127 12:36:56.846"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.846" endtime="20241127 12:36:56.846"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.845" endtime="20241127 12:36:56.846"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.845" endtime="20241127 12:36:56.846"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.847" endtime="20241127 12:36:56.847"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.847" endtime="20241127 12:36:56.847"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.847" endtime="20241127 12:36:56.847"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.847" endtime="20241127 12:36:56.847"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.844" endtime="20241127 12:36:56.848"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.844" endtime="20241127 12:36:56.848"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:56.848" endtime="20241127 12:36:56.848"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.848" endtime="20241127 12:36:56.848"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.848" endtime="20241127 12:36:56.848"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.849" endtime="20241127 12:36:56.849"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.849" endtime="20241127 12:36:56.849"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.849" endtime="20241127 12:36:56.850"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.850" endtime="20241127 12:36:56.850"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.850" endtime="20241127 12:36:56.850"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.850" endtime="20241127 12:36:56.850"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.850" endtime="20241127 12:36:56.851"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.848" endtime="20241127 12:36:56.851"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:56.848" endtime="20241127 12:36:56.851"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:56.836" endtime="20241127 12:36:56.851"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:36:56.835" endtime="20241127 12:36:56.851"/>
</for>
<msg timestamp="20241127 12:36:56.851" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:36:56.834" endtime="20241127 12:36:56.851"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.852" endtime="20241127 12:36:56.852"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:56.860" endtime="20241127 12:36:56.860"/>
</kw>
<msg timestamp="20241127 12:36:56.860" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.859" endtime="20241127 12:36:56.860"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.861" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241127 12:36:56.861" endtime="20241127 12:36:56.861"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.862" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.862" endtime="20241127 12:36:56.863"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.862" endtime="20241127 12:36:56.863"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.863" endtime="20241127 12:36:56.863"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.863" endtime="20241127 12:36:56.863"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.862" endtime="20241127 12:36:56.863"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.861" endtime="20241127 12:36:56.863"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.860" endtime="20241127 12:36:56.863"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:56.864" endtime="20241127 12:36:56.864"/>
</return>
<msg timestamp="20241127 12:36:56.864" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.858" endtime="20241127 12:36:56.864"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.865" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241127 12:36:56.865" endtime="20241127 12:36:56.865"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.864" endtime="20241127 12:36:56.865"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.865" endtime="20241127 12:36:56.866"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.865" endtime="20241127 12:36:56.866"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.864" endtime="20241127 12:36:56.866"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:56.868" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '416', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241127 12:36:56.866" endtime="20241127 12:36:56.869"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:56.871" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "416", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241127 12:36:56.870" endtime="20241127 12:36:56.871"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:56.879" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:56.879" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:56.871" endtime="20241127 12:36:56.879"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.879" endtime="20241127 12:36:56.880"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:56.880" endtime="20241127 12:36:56.880"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.869" endtime="20241127 12:36:56.881"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.853" endtime="20241127 12:36:56.881"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:36:56.882" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:36:56.881" endtime="20241127 12:36:56.882"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.437" endtime="20241127 12:36:56.882"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.882" endtime="20241127 12:36:56.882"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.883" endtime="20241127 12:36:56.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.883" endtime="20241127 12:36:56.883"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.882" endtime="20241127 12:36:56.883"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.437" endtime="20241127 12:36:56.883"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.437" endtime="20241127 12:36:56.883"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.886" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241127 12:36:56.885" endtime="20241127 12:36:56.886"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:56.887" endtime="20241127 12:36:56.888"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:36:56.889" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241127 12:36:56.888" endtime="20241127 12:36:56.889"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.890" endtime="20241127 12:36:56.890"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.890" endtime="20241127 12:36:56.891"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.889" endtime="20241127 12:36:56.891"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.889" endtime="20241127 12:36:56.891"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:56.892" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:36:56.892" endtime="20241127 12:36:56.892"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.893" endtime="20241127 12:36:56.893"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.893" endtime="20241127 12:36:56.893"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:56.894" endtime="20241127 12:36:56.894"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.893" endtime="20241127 12:36:56.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.897" endtime="20241127 12:36:56.897"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.894" endtime="20241127 12:36:56.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.900" endtime="20241127 12:36:56.900"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.904" endtime="20241127 12:36:56.904"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.897" endtime="20241127 12:36:56.904"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.906" endtime="20241127 12:36:56.906"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.904" endtime="20241127 12:36:56.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.910" endtime="20241127 12:36:56.910"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.906" endtime="20241127 12:36:56.910"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.929" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:36:56.922" endtime="20241127 12:36:56.930"/>
</kw>
<msg timestamp="20241127 12:36:56.930" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.921" endtime="20241127 12:36:56.930"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.930" endtime="20241127 12:36:56.930"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.921" endtime="20241127 12:36:56.930"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.931" endtime="20241127 12:36:56.931"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.931" endtime="20241127 12:36:56.931"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.930" endtime="20241127 12:36:56.931"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.921" endtime="20241127 12:36:56.931"/>
</try>
<msg timestamp="20241127 12:36:56.932" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.920" endtime="20241127 12:36:56.932"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.932" endtime="20241127 12:36:56.932"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.919" endtime="20241127 12:36:56.932"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.932" endtime="20241127 12:36:56.932"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.932" endtime="20241127 12:36:56.933"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.918" endtime="20241127 12:36:56.933"/>
</try>
<msg timestamp="20241127 12:36:56.933" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.918" endtime="20241127 12:36:56.933"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.936" endtime="20241127 12:36:56.938"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.938" endtime="20241127 12:36:56.938"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.936" endtime="20241127 12:36:56.938"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.936" endtime="20241127 12:36:56.938"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.935" endtime="20241127 12:36:56.938"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.917" endtime="20241127 12:36:56.938"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:56.957" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:36:56.949" endtime="20241127 12:36:56.957"/>
</kw>
<msg timestamp="20241127 12:36:56.958" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.948" endtime="20241127 12:36:56.958"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.958" endtime="20241127 12:36:56.958"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.948" endtime="20241127 12:36:56.958"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.959" endtime="20241127 12:36:56.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.959" endtime="20241127 12:36:56.959"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.958" endtime="20241127 12:36:56.959"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.948" endtime="20241127 12:36:56.959"/>
</try>
<msg timestamp="20241127 12:36:56.960" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.947" endtime="20241127 12:36:56.960"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:56.960" endtime="20241127 12:36:56.960"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.946" endtime="20241127 12:36:56.960"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:36:56.960" endtime="20241127 12:36:56.960"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:56.960" endtime="20241127 12:36:56.960"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.946" endtime="20241127 12:36:56.960"/>
</try>
<msg timestamp="20241127 12:36:56.961" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.946" endtime="20241127 12:36:56.961"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.964" endtime="20241127 12:36:56.964"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.964" endtime="20241127 12:36:56.964"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.964" endtime="20241127 12:36:56.964"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.963" endtime="20241127 12:36:56.965"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.962" endtime="20241127 12:36:56.965"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.945" endtime="20241127 12:36:56.965"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:36:56.980" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:36:56.980" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:36:56.966" endtime="20241127 12:36:56.980"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:36:56.980" endtime="20241127 12:36:56.980"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.965" endtime="20241127 12:36:56.980"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.981" endtime="20241127 12:36:56.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.981" endtime="20241127 12:36:56.981"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.981" endtime="20241127 12:36:56.981"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.965" endtime="20241127 12:36:56.982"/>
</try>
<msg timestamp="20241127 12:36:56.982" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:36:56.942" endtime="20241127 12:36:56.982"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.985" endtime="20241127 12:36:56.985"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.985" endtime="20241127 12:36:56.985"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.985" endtime="20241127 12:36:56.985"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.985" endtime="20241127 12:36:56.985"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.983" endtime="20241127 12:36:56.985"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.941" endtime="20241127 12:36:56.985"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:56.987" endtime="20241127 12:36:56.987"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:56.987" endtime="20241127 12:36:56.987"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.940" endtime="20241127 12:36:56.987"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.940" endtime="20241127 12:36:56.987"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:57.001" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241127 12:36:56.993" endtime="20241127 12:36:57.001"/>
</kw>
<msg timestamp="20241127 12:36:57.001" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.993" endtime="20241127 12:36:57.001"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.001" endtime="20241127 12:36:57.002"/>
</return>
<status status="PASS" starttime="20241127 12:36:56.993" endtime="20241127 12:36:57.002"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.003" endtime="20241127 12:36:57.003"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.003" endtime="20241127 12:36:57.003"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.002" endtime="20241127 12:36:57.003"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.993" endtime="20241127 12:36:57.003"/>
</try>
<msg timestamp="20241127 12:36:57.004" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.992" endtime="20241127 12:36:57.004"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.004" endtime="20241127 12:36:57.004"/>
</return>
<msg timestamp="20241127 12:36:57.004" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:36:56.990" endtime="20241127 12:36:57.004"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.007" endtime="20241127 12:36:57.008"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.008" endtime="20241127 12:36:57.008"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.007" endtime="20241127 12:36:57.008"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.007" endtime="20241127 12:36:57.008"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.006" endtime="20241127 12:36:57.008"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.990" endtime="20241127 12:36:57.009"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.914" endtime="20241127 12:36:57.009"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:57.032" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241127 12:36:57.015" endtime="20241127 12:36:57.032"/>
</kw>
<msg timestamp="20241127 12:36:57.033" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.014" endtime="20241127 12:36:57.033"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.033" endtime="20241127 12:36:57.033"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.014" endtime="20241127 12:36:57.033"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.034" endtime="20241127 12:36:57.034"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.034" endtime="20241127 12:36:57.034"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.033" endtime="20241127 12:36:57.034"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.014" endtime="20241127 12:36:57.034"/>
</try>
<msg timestamp="20241127 12:36:57.035" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.014" endtime="20241127 12:36:57.035"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.035" endtime="20241127 12:36:57.035"/>
</return>
<msg timestamp="20241127 12:36:57.035" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.012" endtime="20241127 12:36:57.035"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.039" endtime="20241127 12:36:57.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.040" endtime="20241127 12:36:57.040"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.039" endtime="20241127 12:36:57.040"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.039" endtime="20241127 12:36:57.040"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.037" endtime="20241127 12:36:57.040"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.011" endtime="20241127 12:36:57.041"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.041" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:36:57.041" endtime="20241127 12:36:57.041"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.044" endtime="20241127 12:36:57.044"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.046" endtime="20241127 12:36:57.046"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.043" endtime="20241127 12:36:57.046"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:57.047" endtime="20241127 12:36:57.047"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.046" endtime="20241127 12:36:57.047"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.043" endtime="20241127 12:36:57.047"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:36:57.048" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241127 12:36:57.048" endtime="20241127 12:36:57.075"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.048" endtime="20241127 12:36:57.075"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.075" endtime="20241127 12:36:57.075"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.076" endtime="20241127 12:36:57.076"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.075" endtime="20241127 12:36:57.076"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.047" endtime="20241127 12:36:57.076"/>
</try>
<status status="PASS" starttime="20241127 12:36:57.042" endtime="20241127 12:36:57.076"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.042" endtime="20241127 12:36:57.076"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.042" endtime="20241127 12:36:57.076"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.077" endtime="20241127 12:36:57.077"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.076" endtime="20241127 12:36:57.077"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.041" endtime="20241127 12:36:57.077"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.913" endtime="20241127 12:36:57.077"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.078" endtime="20241127 12:36:57.078"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.077" endtime="20241127 12:36:57.078"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.077" endtime="20241127 12:36:57.078"/>
</if>
<status status="PASS" starttime="20241127 12:36:56.910" endtime="20241127 12:36:57.078"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.080" endtime="20241127 12:36:57.080"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.078" endtime="20241127 12:36:57.080"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.081" endtime="20241127 12:36:57.081"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.082" endtime="20241127 12:36:57.082"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.082" endtime="20241127 12:36:57.082"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.082" endtime="20241127 12:36:57.082"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.082" endtime="20241127 12:36:57.082"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.081" endtime="20241127 12:36:57.083"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.080" endtime="20241127 12:36:57.083"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:57.089" endtime="20241127 12:36:57.089"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.093" endtime="20241127 12:36:57.093"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.083" endtime="20241127 12:36:57.093"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.094" endtime="20241127 12:36:57.094"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.095" endtime="20241127 12:36:57.095"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.095" endtime="20241127 12:36:57.095"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.095" endtime="20241127 12:36:57.095"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.095" endtime="20241127 12:36:57.095"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.094" endtime="20241127 12:36:57.096"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.093" endtime="20241127 12:36:57.096"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:57.102" endtime="20241127 12:36:57.102"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.106" endtime="20241127 12:36:57.106"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.096" endtime="20241127 12:36:57.106"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.107" endtime="20241127 12:36:57.107"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.108" endtime="20241127 12:36:57.108"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.108" endtime="20241127 12:36:57.108"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.108" endtime="20241127 12:36:57.108"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.108" endtime="20241127 12:36:57.109"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.108" endtime="20241127 12:36:57.109"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.106" endtime="20241127 12:36:57.109"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.111" endtime="20241127 12:36:57.111"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.109" endtime="20241127 12:36:57.111"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.119" endtime="20241127 12:36:57.119"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.120" endtime="20241127 12:36:57.120"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.111" endtime="20241127 12:36:57.120"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.892" endtime="20241127 12:36:57.120"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.120" endtime="20241127 12:36:57.121"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:36:57.121" endtime="20241127 12:36:57.121"/>
</return>
<msg timestamp="20241127 12:36:57.121" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:36:56.891" endtime="20241127 12:36:57.121"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.123" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241127 12:36:57.122" endtime="20241127 12:36:57.123"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.123" endtime="20241127 12:36:57.123"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.124" endtime="20241127 12:36:57.124"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.124" endtime="20241127 12:36:57.124"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.124" endtime="20241127 12:36:57.124"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.124" endtime="20241127 12:36:57.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.125" endtime="20241127 12:36:57.125"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.125" endtime="20241127 12:36:57.125"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.125" endtime="20241127 12:36:57.125"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.127" endtime="20241127 12:36:57.127"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.128" endtime="20241127 12:36:57.128"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.129"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.129"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.129"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.130" endtime="20241127 12:36:57.130"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.130" endtime="20241127 12:36:57.130"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.130"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.130"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.131" endtime="20241127 12:36:57.131"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.131" endtime="20241127 12:36:57.131"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.131" endtime="20241127 12:36:57.131"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.130" endtime="20241127 12:36:57.131"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.131"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.129" endtime="20241127 12:36:57.131"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.132"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.132"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.132"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.133" endtime="20241127 12:36:57.133"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.133"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.133"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.133" endtime="20241127 12:36:57.133"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.133" endtime="20241127 12:36:57.134"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.133" endtime="20241127 12:36:57.134"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.133" endtime="20241127 12:36:57.134"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.134"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.132" endtime="20241127 12:36:57.134"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.123" endtime="20241127 12:36:57.134"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:36:57.123" endtime="20241127 12:36:57.134"/>
</for>
<msg timestamp="20241127 12:36:57.135" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:36:57.121" endtime="20241127 12:36:57.135"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.135" endtime="20241127 12:36:57.136"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:57.141" endtime="20241127 12:36:57.141"/>
</kw>
<msg timestamp="20241127 12:36:57.141" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.140" endtime="20241127 12:36:57.141"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.142" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241127 12:36:57.142" endtime="20241127 12:36:57.142"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.143" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.143" endtime="20241127 12:36:57.143"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.142" endtime="20241127 12:36:57.143"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.143" endtime="20241127 12:36:57.143"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.143" endtime="20241127 12:36:57.144"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.142" endtime="20241127 12:36:57.144"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.141" endtime="20241127 12:36:57.144"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.141" endtime="20241127 12:36:57.144"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:57.144" endtime="20241127 12:36:57.144"/>
</return>
<msg timestamp="20241127 12:36:57.144" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.140" endtime="20241127 12:36:57.144"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.145" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241127 12:36:57.145" endtime="20241127 12:36:57.145"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.145" endtime="20241127 12:36:57.145"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.146" endtime="20241127 12:36:57.146"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.145" endtime="20241127 12:36:57.146"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.145" endtime="20241127 12:36:57.146"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.147" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '417', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241127 12:36:57.146" endtime="20241127 12:36:57.147"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:57.149" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "417", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241127 12:36:57.149" endtime="20241127 12:36:57.149"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:57.171" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:57.171" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:57.149" endtime="20241127 12:36:57.171"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.171" endtime="20241127 12:36:57.172"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:57.172" endtime="20241127 12:36:57.172"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.148" endtime="20241127 12:36:57.173"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.136" endtime="20241127 12:36:57.173"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:36:57.174" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:36:57.174" endtime="20241127 12:36:57.174"/>
</kw>
<status status="PASS" starttime="20241127 12:36:56.884" endtime="20241127 12:36:57.174"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.175" endtime="20241127 12:36:57.175"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.175" endtime="20241127 12:36:57.175"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.175" endtime="20241127 12:36:57.175"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.174" endtime="20241127 12:36:57.175"/>
</branch>
<status status="PASS" starttime="20241127 12:36:56.884" endtime="20241127 12:36:57.176"/>
</try>
<status status="PASS" starttime="20241127 12:36:56.884" endtime="20241127 12:36:57.176"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.177" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241127 12:36:57.176" endtime="20241127 12:36:57.177"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.177" endtime="20241127 12:36:57.178"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:36:57.179" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241127 12:36:57.178" endtime="20241127 12:36:57.179"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.179" endtime="20241127 12:36:57.180"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.180" endtime="20241127 12:36:57.180"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.179" endtime="20241127 12:36:57.180"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.179" endtime="20241127 12:36:57.180"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.181" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:36:57.181" endtime="20241127 12:36:57.181"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.182" endtime="20241127 12:36:57.182"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.182" endtime="20241127 12:36:57.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.182" endtime="20241127 12:36:57.182"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.182" endtime="20241127 12:36:57.183"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:57.207" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241127 12:36:57.196" endtime="20241127 12:36:57.208"/>
</kw>
<msg timestamp="20241127 12:36:57.208" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.196" endtime="20241127 12:36:57.208"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.208" endtime="20241127 12:36:57.208"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.196" endtime="20241127 12:36:57.208"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.209" endtime="20241127 12:36:57.209"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.209" endtime="20241127 12:36:57.209"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.208" endtime="20241127 12:36:57.209"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.196" endtime="20241127 12:36:57.209"/>
</try>
<msg timestamp="20241127 12:36:57.210" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.195" endtime="20241127 12:36:57.210"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.210" endtime="20241127 12:36:57.210"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.194" endtime="20241127 12:36:57.210"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.210" endtime="20241127 12:36:57.210"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.210" endtime="20241127 12:36:57.210"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.194" endtime="20241127 12:36:57.210"/>
</try>
<msg timestamp="20241127 12:36:57.211" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.193" endtime="20241127 12:36:57.211"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.214" endtime="20241127 12:36:57.214"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.214" endtime="20241127 12:36:57.215"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.214" endtime="20241127 12:36:57.215"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.213" endtime="20241127 12:36:57.215"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.212" endtime="20241127 12:36:57.215"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.192" endtime="20241127 12:36:57.215"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:57.228" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241127 12:36:57.221" endtime="20241127 12:36:57.228"/>
</kw>
<msg timestamp="20241127 12:36:57.228" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.221" endtime="20241127 12:36:57.228"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.228" endtime="20241127 12:36:57.229"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.220" endtime="20241127 12:36:57.229"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.229" endtime="20241127 12:36:57.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.229" endtime="20241127 12:36:57.230"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.229" endtime="20241127 12:36:57.230"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.220" endtime="20241127 12:36:57.230"/>
</try>
<msg timestamp="20241127 12:36:57.230" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.220" endtime="20241127 12:36:57.230"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.230" endtime="20241127 12:36:57.230"/>
</return>
<msg timestamp="20241127 12:36:57.231" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.218" endtime="20241127 12:36:57.231"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.234" endtime="20241127 12:36:57.234"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.234" endtime="20241127 12:36:57.234"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.234" endtime="20241127 12:36:57.234"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.233" endtime="20241127 12:36:57.234"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.232" endtime="20241127 12:36:57.235"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.217" endtime="20241127 12:36:57.235"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:36:57.258" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241127 12:36:57.241" endtime="20241127 12:36:57.258"/>
</kw>
<msg timestamp="20241127 12:36:57.258" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.240" endtime="20241127 12:36:57.258"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.258" endtime="20241127 12:36:57.259"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.240" endtime="20241127 12:36:57.259"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.259" endtime="20241127 12:36:57.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.259" endtime="20241127 12:36:57.260"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.259" endtime="20241127 12:36:57.260"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.240" endtime="20241127 12:36:57.260"/>
</try>
<msg timestamp="20241127 12:36:57.260" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.239" endtime="20241127 12:36:57.260"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:36:57.260" endtime="20241127 12:36:57.260"/>
</return>
<msg timestamp="20241127 12:36:57.261" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.238" endtime="20241127 12:36:57.261"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.263" endtime="20241127 12:36:57.264"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.264" endtime="20241127 12:36:57.264"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.263" endtime="20241127 12:36:57.264"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.263" endtime="20241127 12:36:57.264"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.262" endtime="20241127 12:36:57.264"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.237" endtime="20241127 12:36:57.264"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.189" endtime="20241127 12:36:57.265"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.265" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:36:57.265" endtime="20241127 12:36:57.265"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.267" endtime="20241127 12:36:57.267"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.267" endtime="20241127 12:36:57.267"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:57.268" endtime="20241127 12:36:57.268"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.267" endtime="20241127 12:36:57.268"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.267" endtime="20241127 12:36:57.268"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:36:57.269" endtime="20241127 12:36:57.314"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.269" endtime="20241127 12:36:57.314"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.315" endtime="20241127 12:36:57.315"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.315" endtime="20241127 12:36:57.315"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.315" endtime="20241127 12:36:57.315"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.268" endtime="20241127 12:36:57.316"/>
</try>
<status status="PASS" starttime="20241127 12:36:57.266" endtime="20241127 12:36:57.316"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.266" endtime="20241127 12:36:57.316"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.265" endtime="20241127 12:36:57.316"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.316" endtime="20241127 12:36:57.316"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.316" endtime="20241127 12:36:57.316"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.265" endtime="20241127 12:36:57.316"/>
</try>
<status status="PASS" starttime="20241127 12:36:57.186" endtime="20241127 12:36:57.316"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.183" endtime="20241127 12:36:57.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.319" endtime="20241127 12:36:57.319"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.322" endtime="20241127 12:36:57.322"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.316" endtime="20241127 12:36:57.322"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.323" endtime="20241127 12:36:57.323"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.322" endtime="20241127 12:36:57.323"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.327" endtime="20241127 12:36:57.327"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.323" endtime="20241127 12:36:57.327"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.329" endtime="20241127 12:36:57.329"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.330" endtime="20241127 12:36:57.330"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.330" endtime="20241127 12:36:57.330"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.329" endtime="20241127 12:36:57.330"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.327" endtime="20241127 12:36:57.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.332" endtime="20241127 12:36:57.332"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.330" endtime="20241127 12:36:57.332"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.333" endtime="20241127 12:36:57.333"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.334" endtime="20241127 12:36:57.334"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.333" endtime="20241127 12:36:57.334"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.335" endtime="20241127 12:36:57.335"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.334" endtime="20241127 12:36:57.335"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.333" endtime="20241127 12:36:57.335"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.332" endtime="20241127 12:36:57.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:57.342" endtime="20241127 12:36:57.342"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.345" endtime="20241127 12:36:57.346"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.335" endtime="20241127 12:36:57.346"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.347" endtime="20241127 12:36:57.347"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.348" endtime="20241127 12:36:57.348"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.347" endtime="20241127 12:36:57.348"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.348" endtime="20241127 12:36:57.348"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.348" endtime="20241127 12:36:57.348"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.347" endtime="20241127 12:36:57.348"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.346" endtime="20241127 12:36:57.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:36:57.355" endtime="20241127 12:36:57.355"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.359" endtime="20241127 12:36:57.359"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.349" endtime="20241127 12:36:57.359"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.360" endtime="20241127 12:36:57.360"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.361" endtime="20241127 12:36:57.361"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.360" endtime="20241127 12:36:57.361"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.361" endtime="20241127 12:36:57.361"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.361" endtime="20241127 12:36:57.361"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.360" endtime="20241127 12:36:57.361"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.359" endtime="20241127 12:36:57.362"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.364" endtime="20241127 12:36:57.364"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.362" endtime="20241127 12:36:57.364"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.371" endtime="20241127 12:36:57.371"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.371" endtime="20241127 12:36:57.371"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.364" endtime="20241127 12:36:57.371"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.181" endtime="20241127 12:36:57.371"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.371" endtime="20241127 12:36:57.373"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:36:57.373" endtime="20241127 12:36:57.373"/>
</return>
<msg timestamp="20241127 12:36:57.373" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:36:57.180" endtime="20241127 12:36:57.373"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.374" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241127 12:36:57.374" endtime="20241127 12:36:57.375"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.375" endtime="20241127 12:36:57.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.375" endtime="20241127 12:36:57.375"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.376" endtime="20241127 12:36:57.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.376" endtime="20241127 12:36:57.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.376" endtime="20241127 12:36:57.376"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.376" endtime="20241127 12:36:57.377"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.377" endtime="20241127 12:36:57.377"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.377" endtime="20241127 12:36:57.377"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.378" endtime="20241127 12:36:57.379"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.380"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.381"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.381"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.381"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.381" endtime="20241127 12:36:57.381"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.381" endtime="20241127 12:36:57.381"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.381" endtime="20241127 12:36:57.381"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.381" endtime="20241127 12:36:57.382"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.382" endtime="20241127 12:36:57.382"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.382" endtime="20241127 12:36:57.382"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.382" endtime="20241127 12:36:57.382"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.382" endtime="20241127 12:36:57.382"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.383"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.380" endtime="20241127 12:36:57.383"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.383"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.383"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.383"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.384" endtime="20241127 12:36:57.384"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.384"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.384"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.384" endtime="20241127 12:36:57.384"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:36:57.384" endtime="20241127 12:36:57.384"/>
</return>
<status status="NOT RUN" starttime="20241127 12:36:57.384" endtime="20241127 12:36:57.385"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.384" endtime="20241127 12:36:57.385"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.385"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:36:57.383" endtime="20241127 12:36:57.385"/>
</if>
<status status="NOT RUN" starttime="20241127 12:36:57.375" endtime="20241127 12:36:57.385"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:36:57.375" endtime="20241127 12:36:57.385"/>
</for>
<msg timestamp="20241127 12:36:57.385" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:36:57.373" endtime="20241127 12:36:57.385"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.385" endtime="20241127 12:36:57.385"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:36:57.390" endtime="20241127 12:36:57.390"/>
</kw>
<msg timestamp="20241127 12:36:57.390" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.390" endtime="20241127 12:36:57.390"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.391" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241127 12:36:57.391" endtime="20241127 12:36:57.391"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.392" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.392" endtime="20241127 12:36:57.392"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.392" endtime="20241127 12:36:57.392"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.393" endtime="20241127 12:36:57.393"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.393" endtime="20241127 12:36:57.393"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.392" endtime="20241127 12:36:57.393"/>
</if>
<status status="PASS" starttime="20241127 12:36:57.391" endtime="20241127 12:36:57.393"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.391" endtime="20241127 12:36:57.393"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:36:57.393" endtime="20241127 12:36:57.393"/>
</return>
<msg timestamp="20241127 12:36:57.394" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:36:57.389" endtime="20241127 12:36:57.394"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:36:57.395" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241127 12:36:57.394" endtime="20241127 12:36:57.395"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.394" endtime="20241127 12:36:57.395"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.395" endtime="20241127 12:36:57.395"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.395" endtime="20241127 12:36:57.395"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.394" endtime="20241127 12:36:57.396"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.397" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '415', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241127 12:36:57.396" endtime="20241127 12:36:57.397"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:57.398" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "415", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241127 12:36:57.398" endtime="20241127 12:36:57.398"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:57.422" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:57.423" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:57.399" endtime="20241127 12:36:57.423"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.423" endtime="20241127 12:36:57.424"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:57.424" endtime="20241127 12:36:57.424"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.397" endtime="20241127 12:36:57.425"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.385" endtime="20241127 12:36:57.425"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:36:57.425" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:36:57.425" endtime="20241127 12:36:57.426"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.176" endtime="20241127 12:36:57.426"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.426" endtime="20241127 12:36:57.426"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.426" endtime="20241127 12:36:57.426"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.427" endtime="20241127 12:36:57.427"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.426" endtime="20241127 12:36:57.427"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.176" endtime="20241127 12:36:57.427"/>
</try>
<status status="PASS" starttime="20241127 12:36:57.176" endtime="20241127 12:36:57.427"/>
</iter>
<status status="PASS" starttime="20241127 12:36:53.577" endtime="20241127 12:36:57.427"/>
</for>
<status status="PASS" starttime="20241127 12:36:53.577" endtime="20241127 12:36:57.427"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.577" endtime="20241127 12:36:57.427"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.430" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '104', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:36:57.429" endtime="20241127 12:36:57.430"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:57.431" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "104", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:36:57.431" endtime="20241127 12:36:57.432"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:57.439" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:57.440" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:57.432" endtime="20241127 12:36:57.440"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.440" endtime="20241127 12:36:57.441"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:57.441" endtime="20241127 12:36:57.441"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.430" endtime="20241127 12:36:57.441"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.427" endtime="20241127 12:36:57.442"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:57.442"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.442" endtime="20241127 12:36:57.442"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.442" endtime="20241127 12:36:57.443"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.443" endtime="20241127 12:36:57.443"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.442" endtime="20241127 12:36:57.443"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:57.443"/>
</try>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:57.443"/>
</iter>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:57.443"/>
</for>
<status status="PASS" starttime="20241127 12:36:53.565" endtime="20241127 12:36:57.443"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.563" endtime="20241127 12:36:57.444"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:36:57.446" level="INFO">${response_message} = {'testCaseRunId': '37', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:36:57.445" endtime="20241127 12:36:57.446"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:36:57.447" level="INFO">${json_response} = {"testCaseRunId": "37", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:36:57.447" endtime="20241127 12:36:57.447"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:36:57.455" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:36:57.455" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:36:57.448" endtime="20241127 12:36:57.455"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.456" endtime="20241127 12:36:57.456"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:36:57.457" endtime="20241127 12:36:57.457"/>
</return>
<status status="PASS" starttime="20241127 12:36:57.446" endtime="20241127 12:36:57.457"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.444" endtime="20241127 12:36:57.457"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.545" endtime="20241127 12:36:57.457"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.458" endtime="20241127 12:36:57.458"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:36:57.458" endtime="20241127 12:36:57.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.458" endtime="20241127 12:36:57.458"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.458" endtime="20241127 12:36:57.459"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.545" endtime="20241127 12:36:57.459"/>
</try>
<status status="PASS" starttime="20241127 12:36:53.525" endtime="20241127 12:36:57.459"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.459" endtime="20241127 12:36:57.459"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.459" endtime="20241127 12:36:57.459"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.524" endtime="20241127 12:36:57.459"/>
</if>
<status status="PASS" starttime="20241127 12:36:53.504" endtime="20241127 12:36:57.460"/>
</kw>
<status status="PASS" starttime="20241127 12:36:53.504" endtime="20241127 12:36:57.460"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.460" endtime="20241127 12:36:57.460"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.460" endtime="20241127 12:36:57.460"/>
</branch>
<status status="PASS" starttime="20241127 12:36:53.504" endtime="20241127 12:36:57.460"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241127 12:36:57.771" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241127 12:36:57.461" endtime="20241127 12:36:57.772"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.461" endtime="20241127 12:36:57.772"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:36:57.772" endtime="20241127 12:36:57.772"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:36:57.772" endtime="20241127 12:36:57.772"/>
</branch>
<status status="PASS" starttime="20241127 12:36:57.461" endtime="20241127 12:36:57.773"/>
</try>
<status status="PASS" starttime="20241127 12:36:57.461" endtime="20241127 12:36:57.773"/>
</kw>
<status status="PASS" starttime="20241127 12:36:19.314" endtime="20241127 12:36:57.773"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:36:57.774" endtime="20241127 12:36:57.774"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241127 12:41:05.237" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '38', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:11:05.194Z', 'createdAt': '2024-11-27T07:11:05.194Z', 'errorMes...</msg>
<status status="PASS" starttime="20241127 12:36:57.774" endtime="20241127 12:41:05.237"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241127 12:41:05.238" endtime="20241127 12:41:05.238"/>
</break>
<status status="NOT RUN" starttime="20241127 12:41:05.238" endtime="20241127 12:41:05.238"/>
</branch>
<status status="PASS" starttime="20241127 12:41:05.237" endtime="20241127 12:41:05.238"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241127 12:41:05.240" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\598830ed-c896-46b1-b7c3-1237b9c4216b"}</msg>
<msg timestamp="20241127 12:41:05.882" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\598830ed-c896-46b1-b7c3-1237b9c4216b"}</msg>
<status status="PASS" starttime="20241127 12:41:05.239" endtime="20241127 12:41:05.882"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241127 12:41:05.883" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241127 12:41:05.901" level="INFO">Successfully created context. </msg>
<msg timestamp="20241127 12:41:05.901" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241127 12:41:05.882" endtime="20241127 12:41:05.902"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241127 12:41:05.903" endtime="20241127 12:41:05.904"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:41:07.442" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241127 12:41:07.443" level="INFO">${page_id} = {'page_id': 'page=3394769c-ce68-47fd-8edb-3816f2117003', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:41:05.904" endtime="20241127 12:41:07.443"/>
</kw>
<status status="PASS" starttime="20241127 12:41:05.239" endtime="20241127 12:41:07.443"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:07.444" endtime="20241127 12:41:07.448"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:07.451" endtime="20241127 12:41:07.451"/>
</kw>
<msg timestamp="20241127 12:41:07.452" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.451" endtime="20241127 12:41:07.452"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.453" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241127 12:41:07.452" endtime="20241127 12:41:07.453"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.454" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.454" endtime="20241127 12:41:07.454"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.454" endtime="20241127 12:41:07.454"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.455" endtime="20241127 12:41:07.455"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.454" endtime="20241127 12:41:07.455"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.453" endtime="20241127 12:41:07.455"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.452" endtime="20241127 12:41:07.455"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.452" endtime="20241127 12:41:07.455"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:07.455" endtime="20241127 12:41:07.455"/>
</return>
<msg timestamp="20241127 12:41:07.455" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.450" endtime="20241127 12:41:07.455"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.456" endtime="20241127 12:41:07.456"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241127 12:41:07.456" endtime="20241127 12:41:07.456"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:07.456" endtime="20241127 12:41:07.456"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.455" endtime="20241127 12:41:07.456"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:07.458" endtime="20241127 12:41:07.459"/>
</kw>
<msg timestamp="20241127 12:41:07.459" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.458" endtime="20241127 12:41:07.459"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.459" level="INFO">${values} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:41:07.459" endtime="20241127 12:41:07.460"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.460" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.460" endtime="20241127 12:41:07.460"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.460" endtime="20241127 12:41:07.460"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.460" endtime="20241127 12:41:07.460"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.460" endtime="20241127 12:41:07.460"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.460" endtime="20241127 12:41:07.461"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.459" endtime="20241127 12:41:07.461"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.459" endtime="20241127 12:41:07.461"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:07.461" endtime="20241127 12:41:07.461"/>
</return>
<msg timestamp="20241127 12:41:07.461" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.458" endtime="20241127 12:41:07.461"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:07.463" endtime="20241127 12:41:07.463"/>
</kw>
<msg timestamp="20241127 12:41:07.463" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.463" endtime="20241127 12:41:07.463"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.464" level="INFO">${values} = {'id': '38', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:11:05.194Z', 'createdAt': '2024-11-27T07:11:05.194Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:41:07.464" endtime="20241127 12:41:07.464"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.464" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.464" endtime="20241127 12:41:07.464"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.464" endtime="20241127 12:41:07.465"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.465" endtime="20241127 12:41:07.465"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.465" endtime="20241127 12:41:07.465"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.464" endtime="20241127 12:41:07.465"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.463" endtime="20241127 12:41:07.465"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.463" endtime="20241127 12:41:07.465"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:07.465" endtime="20241127 12:41:07.465"/>
</return>
<msg timestamp="20241127 12:41:07.465" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.462" endtime="20241127 12:41:07.465"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.466" endtime="20241127 12:41:07.466"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.466" endtime="20241127 12:41:07.466"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.465" endtime="20241127 12:41:07.466"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.466" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:41:07.466" endtime="20241127 12:41:07.466"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.467" level="INFO">${testCaseRun} = {'id': '38', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:11:05.194Z', 'createdAt': '2024-11-27T07:11:05.194Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:41:07.467" endtime="20241127 12:41:07.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.468" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241127 12:41:07.468" endtime="20241127 12:41:07.468"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:07.468" endtime="20241127 12:41:07.469"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:07.471" endtime="20241127 12:41:07.471"/>
</kw>
<msg timestamp="20241127 12:41:07.472" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.471" endtime="20241127 12:41:07.472"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.472" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241127 12:41:07.472" endtime="20241127 12:41:07.472"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.473" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.473" endtime="20241127 12:41:07.473"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.473" endtime="20241127 12:41:07.473"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.473" endtime="20241127 12:41:07.473"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.473" endtime="20241127 12:41:07.473"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.472" endtime="20241127 12:41:07.473"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.472" endtime="20241127 12:41:07.473"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.472" endtime="20241127 12:41:07.473"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:07.473" endtime="20241127 12:41:07.474"/>
</return>
<msg timestamp="20241127 12:41:07.474" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.470" endtime="20241127 12:41:07.474"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:07.474" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '38', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241127 12:41:07.474" endtime="20241127 12:41:07.474"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:07.475" level="INFO">${json_response} = {"testCaseRunId": "38", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241127 12:41:07.475" endtime="20241127 12:41:07.475"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:07.504" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:07.504" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:07.475" endtime="20241127 12:41:07.504"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:07.505" endtime="20241127 12:41:07.505"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:07.505" endtime="20241127 12:41:07.505"/>
</return>
<status status="PASS" starttime="20241127 12:41:07.474" endtime="20241127 12:41:07.506"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:07.507" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241127 12:41:07.506" endtime="20241127 12:41:07.507"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.508" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241127 12:41:07.507" endtime="20241127 12:41:07.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:07.508" endtime="20241127 12:41:07.509"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:07.511" endtime="20241127 12:41:07.511"/>
</kw>
<msg timestamp="20241127 12:41:07.512" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.511" endtime="20241127 12:41:07.512"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.512" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241127 12:41:07.512" endtime="20241127 12:41:07.512"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.513" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.513" endtime="20241127 12:41:07.513"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.513" endtime="20241127 12:41:07.513"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.513" endtime="20241127 12:41:07.513"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.513" endtime="20241127 12:41:07.514"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.512" endtime="20241127 12:41:07.514"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.512" endtime="20241127 12:41:07.514"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.512" endtime="20241127 12:41:07.514"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:07.514" endtime="20241127 12:41:07.514"/>
</return>
<msg timestamp="20241127 12:41:07.514" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:07.511" endtime="20241127 12:41:07.514"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.515" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241127 12:41:07.515" endtime="20241127 12:41:07.515"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:07.515" endtime="20241127 12:41:07.516"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:41:07.516" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241127 12:41:07.516" endtime="20241127 12:41:07.516"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.517" endtime="20241127 12:41:07.517"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:07.517" endtime="20241127 12:41:07.517"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:07.516" endtime="20241127 12:41:07.517"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.516" endtime="20241127 12:41:07.517"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:07.518" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:41:07.518" endtime="20241127 12:41:07.518"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:41:09.845" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241127 12:41:09.845" level="INFO">${page_id} = {'page_id': 'page=9138d103-fc96-4d72-86ad-073406643086', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:41:07.519" endtime="20241127 12:41:09.845"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241127 12:41:09.847" level="INFO">Switching to page {'page_id': 'page=9138d103-fc96-4d72-86ad-073406643086', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241127 12:41:09.907" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=4068af99-a9bd-4c93-8319-f5a7e9cd9e75",
    "contexts": [
      {
        "type": "context",
        "id": "context=3589744b-9d53-45e6-9763-99458f732d9d",
        "activePage": "page=9138d103-fc96-4d72-86ad-073406643086",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=3394769c-ce68-47fd-8edb-3816f2117003",
            "timestamp": 1732691466.151
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=9138d103-fc96-4d72-86ad-073406643086",
            "timestamp": 1732691467.56
          }
        ]
      }
    ],
    "activeContext": "context=3589744b-9d53-45e6-9763-99458f732d9d",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241127 12:41:09.911" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241127 12:41:09.845" endtime="20241127 12:41:09.911"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.518" endtime="20241127 12:41:09.911"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.518" endtime="20241127 12:41:09.912"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:09.912" endtime="20241127 12:41:09.912"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.912" endtime="20241127 12:41:09.912"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.914" endtime="20241127 12:41:09.914"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.912" endtime="20241127 12:41:09.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.916" endtime="20241127 12:41:09.916"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.918" endtime="20241127 12:41:09.919"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.914" endtime="20241127 12:41:09.919"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.920" endtime="20241127 12:41:09.920"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.919" endtime="20241127 12:41:09.920"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.923" endtime="20241127 12:41:09.923"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.920" endtime="20241127 12:41:09.923"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.925" endtime="20241127 12:41:09.925"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.925" endtime="20241127 12:41:09.926"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.925" endtime="20241127 12:41:09.926"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.925" endtime="20241127 12:41:09.926"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.923" endtime="20241127 12:41:09.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.927" endtime="20241127 12:41:09.928"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.926" endtime="20241127 12:41:09.928"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.930" endtime="20241127 12:41:09.930"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.931" endtime="20241127 12:41:09.931"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.931" endtime="20241127 12:41:09.931"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.931" endtime="20241127 12:41:09.931"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.931" endtime="20241127 12:41:09.932"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.930" endtime="20241127 12:41:09.932"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.928" endtime="20241127 12:41:09.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:09.940" endtime="20241127 12:41:09.941"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.946" endtime="20241127 12:41:09.946"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.932" endtime="20241127 12:41:09.946"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.947" endtime="20241127 12:41:09.948"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.948"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.948"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.948"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.948"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.948"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.946" endtime="20241127 12:41:09.948"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:09.954" endtime="20241127 12:41:09.954"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.958" endtime="20241127 12:41:09.958"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.948" endtime="20241127 12:41:09.958"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.959" endtime="20241127 12:41:09.959"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.959" endtime="20241127 12:41:09.959"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.959" endtime="20241127 12:41:09.959"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.960" endtime="20241127 12:41:09.960"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.960" endtime="20241127 12:41:09.960"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.959" endtime="20241127 12:41:09.960"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.958" endtime="20241127 12:41:09.960"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.962" endtime="20241127 12:41:09.962"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.960" endtime="20241127 12:41:09.962"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:41:09.971" endtime="20241127 12:41:09.971"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.972" endtime="20241127 12:41:09.972"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.962" endtime="20241127 12:41:09.972"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.518" endtime="20241127 12:41:09.972"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:09.973" endtime="20241127 12:41:09.973"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:41:09.973" endtime="20241127 12:41:09.974"/>
</return>
<msg timestamp="20241127 12:41:09.974" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:41:07.517" endtime="20241127 12:41:09.974"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:09.975" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241127 12:41:09.975" endtime="20241127 12:41:09.975"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.976" endtime="20241127 12:41:09.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.976" endtime="20241127 12:41:09.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.976" endtime="20241127 12:41:09.976"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.976" endtime="20241127 12:41:09.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.977" endtime="20241127 12:41:09.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.977" endtime="20241127 12:41:09.977"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.977" endtime="20241127 12:41:09.977"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.977" endtime="20241127 12:41:09.977"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.979" endtime="20241127 12:41:09.979"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.981" endtime="20241127 12:41:09.981"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:09.984" endtime="20241127 12:41:09.985"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:09.984" endtime="20241127 12:41:09.985"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.984" endtime="20241127 12:41:09.985"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.985" endtime="20241127 12:41:09.985"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:09.985" endtime="20241127 12:41:09.985"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:09.985" endtime="20241127 12:41:09.986"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.985" endtime="20241127 12:41:09.986"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.986" endtime="20241127 12:41:09.986"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:09.986" endtime="20241127 12:41:09.986"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:09.986" endtime="20241127 12:41:09.986"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.986" endtime="20241127 12:41:09.986"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.982" endtime="20241127 12:41:09.986"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.982" endtime="20241127 12:41:09.986"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.987"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.988" endtime="20241127 12:41:09.988"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:09.988" endtime="20241127 12:41:09.988"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:09.988" endtime="20241127 12:41:09.988"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.988" endtime="20241127 12:41:09.988"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.987" endtime="20241127 12:41:09.988"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.986" endtime="20241127 12:41:09.988"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.976" endtime="20241127 12:41:09.988"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:41:09.975" endtime="20241127 12:41:09.988"/>
</for>
<msg timestamp="20241127 12:41:09.989" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:41:09.974" endtime="20241127 12:41:09.989"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:09.989" endtime="20241127 12:41:09.989"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:41:09.995" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241127 12:41:09.995" endtime="20241127 12:41:09.996"/>
</kw>
<msg timestamp="20241127 12:41:09.996" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:41:09.995" endtime="20241127 12:41:09.996"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.996" endtime="20241127 12:41:09.996"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.997" endtime="20241127 12:41:09.997"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.996" endtime="20241127 12:41:09.997"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.997" endtime="20241127 12:41:09.997"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.997" endtime="20241127 12:41:09.997"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:09.996" endtime="20241127 12:41:09.997"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:09.996" endtime="20241127 12:41:09.997"/>
</branch>
<status status="PASS" starttime="20241127 12:41:09.996" endtime="20241127 12:41:09.997"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:09.997" endtime="20241127 12:41:09.997"/>
</return>
<msg timestamp="20241127 12:41:09.998" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241127 12:41:09.994" endtime="20241127 12:41:09.998"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:09.998" endtime="20241127 12:41:09.998"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:09.998" endtime="20241127 12:41:09.999"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.000" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241127 12:41:09.999" endtime="20241127 12:41:10.001"/>
</kw>
<status status="PASS" starttime="20241127 12:41:09.999" endtime="20241127 12:41:10.001"/>
</branch>
<status status="PASS" starttime="20241127 12:41:09.998" endtime="20241127 12:41:10.001"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.002" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '418', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241127 12:41:10.001" endtime="20241127 12:41:10.002"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.003" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "418", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241127 12:41:10.003" endtime="20241127 12:41:10.003"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.010" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.011" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.003" endtime="20241127 12:41:10.011"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.011" endtime="20241127 12:41:10.012"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.012" endtime="20241127 12:41:10.012"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.003" endtime="20241127 12:41:10.013"/>
</kw>
<status status="PASS" starttime="20241127 12:41:09.989" endtime="20241127 12:41:10.013"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:41:10.013" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:41:10.013" endtime="20241127 12:41:10.013"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.515" endtime="20241127 12:41:10.014"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.014" endtime="20241127 12:41:10.014"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.014" endtime="20241127 12:41:10.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.014" endtime="20241127 12:41:10.014"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.014" endtime="20241127 12:41:10.015"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.515" endtime="20241127 12:41:10.015"/>
</try>
<status status="PASS" starttime="20241127 12:41:07.515" endtime="20241127 12:41:10.015"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.016" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241127 12:41:10.016" endtime="20241127 12:41:10.016"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.016" endtime="20241127 12:41:10.017"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:41:10.018" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241127 12:41:10.017" endtime="20241127 12:41:10.018"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.020" endtime="20241127 12:41:10.020"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.021" endtime="20241127 12:41:10.021"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.020" endtime="20241127 12:41:10.021"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.018" endtime="20241127 12:41:10.021"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.023" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:41:10.022" endtime="20241127 12:41:10.023"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.023" endtime="20241127 12:41:10.024"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.023" endtime="20241127 12:41:10.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.024" endtime="20241127 12:41:10.024"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.024" endtime="20241127 12:41:10.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.029" endtime="20241127 12:41:10.029"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.025" endtime="20241127 12:41:10.029"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.031" endtime="20241127 12:41:10.032"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.034" endtime="20241127 12:41:10.034"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.029" endtime="20241127 12:41:10.034"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.036" endtime="20241127 12:41:10.036"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.034" endtime="20241127 12:41:10.036"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.040" endtime="20241127 12:41:10.040"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.037" endtime="20241127 12:41:10.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.077" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:41:10.057" endtime="20241127 12:41:10.077"/>
</kw>
<msg timestamp="20241127 12:41:10.077" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.056" endtime="20241127 12:41:10.077"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.077" endtime="20241127 12:41:10.077"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.055" endtime="20241127 12:41:10.078"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.078" endtime="20241127 12:41:10.078"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.078" endtime="20241127 12:41:10.078"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.078" endtime="20241127 12:41:10.078"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.054" endtime="20241127 12:41:10.078"/>
</try>
<msg timestamp="20241127 12:41:10.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.052" endtime="20241127 12:41:10.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.079" endtime="20241127 12:41:10.079"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.051" endtime="20241127 12:41:10.079"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.079" endtime="20241127 12:41:10.079"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.079" endtime="20241127 12:41:10.079"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.050" endtime="20241127 12:41:10.079"/>
</try>
<msg timestamp="20241127 12:41:10.079" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.050" endtime="20241127 12:41:10.079"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.082" endtime="20241127 12:41:10.082"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.082" endtime="20241127 12:41:10.084"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.082" endtime="20241127 12:41:10.084"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.082" endtime="20241127 12:41:10.084"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.081" endtime="20241127 12:41:10.084"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.049" endtime="20241127 12:41:10.084"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.101" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:41:10.094" endtime="20241127 12:41:10.102"/>
</kw>
<msg timestamp="20241127 12:41:10.102" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.094" endtime="20241127 12:41:10.102"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.102" endtime="20241127 12:41:10.102"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.094" endtime="20241127 12:41:10.102"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.102" endtime="20241127 12:41:10.102"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.103" endtime="20241127 12:41:10.103"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.102" endtime="20241127 12:41:10.103"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.094" endtime="20241127 12:41:10.103"/>
</try>
<msg timestamp="20241127 12:41:10.103" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.093" endtime="20241127 12:41:10.103"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.104" endtime="20241127 12:41:10.104"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.091" endtime="20241127 12:41:10.104"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.104" endtime="20241127 12:41:10.104"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.104" endtime="20241127 12:41:10.104"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.091" endtime="20241127 12:41:10.104"/>
</try>
<msg timestamp="20241127 12:41:10.105" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.090" endtime="20241127 12:41:10.105"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.107" endtime="20241127 12:41:10.107"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.107" endtime="20241127 12:41:10.107"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.107" endtime="20241127 12:41:10.108"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.107" endtime="20241127 12:41:10.108"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.106" endtime="20241127 12:41:10.108"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.090" endtime="20241127 12:41:10.108"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:41:10.154" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:41:10.154" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:41:10.108" endtime="20241127 12:41:10.154"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:41:10.154" endtime="20241127 12:41:10.154"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.108" endtime="20241127 12:41:10.154"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.155" endtime="20241127 12:41:10.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.155" endtime="20241127 12:41:10.155"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.154" endtime="20241127 12:41:10.155"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.108" endtime="20241127 12:41:10.155"/>
</try>
<msg timestamp="20241127 12:41:10.156" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:41:10.088" endtime="20241127 12:41:10.156"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.160" endtime="20241127 12:41:10.160"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.160" endtime="20241127 12:41:10.161"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.160" endtime="20241127 12:41:10.161"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.159" endtime="20241127 12:41:10.161"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.158" endtime="20241127 12:41:10.161"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.087" endtime="20241127 12:41:10.161"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.162" endtime="20241127 12:41:10.162"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.161" endtime="20241127 12:41:10.162"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.087" endtime="20241127 12:41:10.162"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.087" endtime="20241127 12:41:10.163"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.183" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241127 12:41:10.169" endtime="20241127 12:41:10.183"/>
</kw>
<msg timestamp="20241127 12:41:10.183" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.169" endtime="20241127 12:41:10.183"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.183" endtime="20241127 12:41:10.184"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.169" endtime="20241127 12:41:10.184"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.184" endtime="20241127 12:41:10.184"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.185" endtime="20241127 12:41:10.185"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.184" endtime="20241127 12:41:10.185"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.168" endtime="20241127 12:41:10.185"/>
</try>
<msg timestamp="20241127 12:41:10.186" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.168" endtime="20241127 12:41:10.186"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.186" endtime="20241127 12:41:10.186"/>
</return>
<msg timestamp="20241127 12:41:10.186" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.166" endtime="20241127 12:41:10.186"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.190" endtime="20241127 12:41:10.190"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.190" endtime="20241127 12:41:10.190"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.190" endtime="20241127 12:41:10.190"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.190" endtime="20241127 12:41:10.191"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.188" endtime="20241127 12:41:10.191"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.166" endtime="20241127 12:41:10.191"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.045" endtime="20241127 12:41:10.191"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.209" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241127 12:41:10.197" endtime="20241127 12:41:10.209"/>
</kw>
<msg timestamp="20241127 12:41:10.209" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.197" endtime="20241127 12:41:10.209"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.209" endtime="20241127 12:41:10.210"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.197" endtime="20241127 12:41:10.210"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.210" endtime="20241127 12:41:10.210"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.210" endtime="20241127 12:41:10.210"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.210" endtime="20241127 12:41:10.210"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.196" endtime="20241127 12:41:10.210"/>
</try>
<msg timestamp="20241127 12:41:10.211" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.196" endtime="20241127 12:41:10.211"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.211" endtime="20241127 12:41:10.211"/>
</return>
<msg timestamp="20241127 12:41:10.211" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.195" endtime="20241127 12:41:10.211"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.213" endtime="20241127 12:41:10.213"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.213" endtime="20241127 12:41:10.214"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.213" endtime="20241127 12:41:10.214"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.213" endtime="20241127 12:41:10.214"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.212" endtime="20241127 12:41:10.214"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.194" endtime="20241127 12:41:10.214"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.214" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:41:10.214" endtime="20241127 12:41:10.214"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.216" endtime="20241127 12:41:10.216"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.218" endtime="20241127 12:41:10.218"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.216" endtime="20241127 12:41:10.218"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.218" endtime="20241127 12:41:10.218"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.218" endtime="20241127 12:41:10.218"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.216" endtime="20241127 12:41:10.218"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:41:10.219" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241127 12:41:10.219" endtime="20241127 12:41:10.243"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.219" endtime="20241127 12:41:10.243"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.244" endtime="20241127 12:41:10.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.244" endtime="20241127 12:41:10.244"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.244" endtime="20241127 12:41:10.244"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.219" endtime="20241127 12:41:10.244"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.215" endtime="20241127 12:41:10.244"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.215" endtime="20241127 12:41:10.244"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.215" endtime="20241127 12:41:10.245"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.245" endtime="20241127 12:41:10.245"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.245" endtime="20241127 12:41:10.245"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.214" endtime="20241127 12:41:10.245"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.043" endtime="20241127 12:41:10.245"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.245" endtime="20241127 12:41:10.246"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.245" endtime="20241127 12:41:10.246"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.245" endtime="20241127 12:41:10.246"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.041" endtime="20241127 12:41:10.246"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.247" endtime="20241127 12:41:10.247"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.246" endtime="20241127 12:41:10.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.248"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.248"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.248"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.249"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.249"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.248" endtime="20241127 12:41:10.249"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.247" endtime="20241127 12:41:10.249"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.253" endtime="20241127 12:41:10.253"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.256" endtime="20241127 12:41:10.256"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.249" endtime="20241127 12:41:10.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.257"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.257"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.257"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.258"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.258"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.257" endtime="20241127 12:41:10.258"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.256" endtime="20241127 12:41:10.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.262" endtime="20241127 12:41:10.262"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.264" endtime="20241127 12:41:10.265"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.258" endtime="20241127 12:41:10.265"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.266" endtime="20241127 12:41:10.266"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.266" endtime="20241127 12:41:10.266"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.266" endtime="20241127 12:41:10.266"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.267" endtime="20241127 12:41:10.267"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.266" endtime="20241127 12:41:10.267"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.266" endtime="20241127 12:41:10.267"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.265" endtime="20241127 12:41:10.267"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.269" endtime="20241127 12:41:10.269"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.267" endtime="20241127 12:41:10.269"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.274" endtime="20241127 12:41:10.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.275" endtime="20241127 12:41:10.275"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.269" endtime="20241127 12:41:10.275"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.023" endtime="20241127 12:41:10.275"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.275" endtime="20241127 12:41:10.276"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:41:10.276" endtime="20241127 12:41:10.276"/>
</return>
<msg timestamp="20241127 12:41:10.276" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:41:10.021" endtime="20241127 12:41:10.276"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.277" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:41:10.277" endtime="20241127 12:41:10.277"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.279" endtime="20241127 12:41:10.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.279" endtime="20241127 12:41:10.279"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.279" endtime="20241127 12:41:10.279"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.280" endtime="20241127 12:41:10.280"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.281" endtime="20241127 12:41:10.281"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.282"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.281" endtime="20241127 12:41:10.282"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.281" endtime="20241127 12:41:10.282"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.282"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.282"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.282"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.282"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.283"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.283"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.283"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.282" endtime="20241127 12:41:10.283"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.281" endtime="20241127 12:41:10.283"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.281" endtime="20241127 12:41:10.283"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.283"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.283"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.283"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.284" endtime="20241127 12:41:10.284"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.284" endtime="20241127 12:41:10.284"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.284"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.285" endtime="20241127 12:41:10.285"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.285" endtime="20241127 12:41:10.285"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.284" endtime="20241127 12:41:10.285"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.284" endtime="20241127 12:41:10.285"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.285"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.283" endtime="20241127 12:41:10.285"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.278" endtime="20241127 12:41:10.286"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:41:10.277" endtime="20241127 12:41:10.286"/>
</for>
<msg timestamp="20241127 12:41:10.287" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:41:10.276" endtime="20241127 12:41:10.287"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.288" endtime="20241127 12:41:10.289"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.292" endtime="20241127 12:41:10.293"/>
</kw>
<msg timestamp="20241127 12:41:10.293" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.292" endtime="20241127 12:41:10.293"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.293" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241127 12:41:10.293" endtime="20241127 12:41:10.293"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.294" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.294" endtime="20241127 12:41:10.294"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.294" endtime="20241127 12:41:10.294"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.294" endtime="20241127 12:41:10.295"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.294" endtime="20241127 12:41:10.295"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.294" endtime="20241127 12:41:10.295"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.293" endtime="20241127 12:41:10.295"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.293" endtime="20241127 12:41:10.295"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:10.295" endtime="20241127 12:41:10.295"/>
</return>
<msg timestamp="20241127 12:41:10.295" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.292" endtime="20241127 12:41:10.295"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.296" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241127 12:41:10.296" endtime="20241127 12:41:10.296"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.295" endtime="20241127 12:41:10.296"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.296" endtime="20241127 12:41:10.296"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.296" endtime="20241127 12:41:10.296"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.295" endtime="20241127 12:41:10.296"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.297" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '419', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241127 12:41:10.296" endtime="20241127 12:41:10.297"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.298" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "419", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241127 12:41:10.298" endtime="20241127 12:41:10.298"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.303" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.303" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.298" endtime="20241127 12:41:10.303"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.303" endtime="20241127 12:41:10.304"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.304" endtime="20241127 12:41:10.304"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.297" endtime="20241127 12:41:10.305"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.289" endtime="20241127 12:41:10.305"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:41:10.305" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:41:10.305" endtime="20241127 12:41:10.305"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.015" endtime="20241127 12:41:10.305"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.307"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.307"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.307"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.305" endtime="20241127 12:41:10.307"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.015" endtime="20241127 12:41:10.307"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.015" endtime="20241127 12:41:10.307"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.307" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.307"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.308"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:41:10.308" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241127 12:41:10.308" endtime="20241127 12:41:10.308"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.309" endtime="20241127 12:41:10.309"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.309" endtime="20241127 12:41:10.309"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.309" endtime="20241127 12:41:10.310"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.309" endtime="20241127 12:41:10.310"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.311" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:41:10.311" endtime="20241127 12:41:10.311"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.312" endtime="20241127 12:41:10.312"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.311" endtime="20241127 12:41:10.312"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.312" endtime="20241127 12:41:10.314"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.312" endtime="20241127 12:41:10.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.316" endtime="20241127 12:41:10.316"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.314" endtime="20241127 12:41:10.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.320" endtime="20241127 12:41:10.320"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.323" endtime="20241127 12:41:10.323"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.316" endtime="20241127 12:41:10.323"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.325" endtime="20241127 12:41:10.325"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.323" endtime="20241127 12:41:10.325"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.330" endtime="20241127 12:41:10.330"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.326" endtime="20241127 12:41:10.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.352" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:41:10.345" endtime="20241127 12:41:10.352"/>
</kw>
<msg timestamp="20241127 12:41:10.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.344" endtime="20241127 12:41:10.352"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.352" endtime="20241127 12:41:10.352"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.344" endtime="20241127 12:41:10.352"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.353" endtime="20241127 12:41:10.353"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.353" endtime="20241127 12:41:10.353"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.352" endtime="20241127 12:41:10.353"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.343" endtime="20241127 12:41:10.353"/>
</try>
<msg timestamp="20241127 12:41:10.354" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.342" endtime="20241127 12:41:10.354"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.354" endtime="20241127 12:41:10.354"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.340" endtime="20241127 12:41:10.354"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.354" endtime="20241127 12:41:10.355"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.354" endtime="20241127 12:41:10.355"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.340" endtime="20241127 12:41:10.355"/>
</try>
<msg timestamp="20241127 12:41:10.355" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.339" endtime="20241127 12:41:10.355"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.359" endtime="20241127 12:41:10.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.360" endtime="20241127 12:41:10.360"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.359" endtime="20241127 12:41:10.360"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.359" endtime="20241127 12:41:10.360"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.357" endtime="20241127 12:41:10.360"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.338" endtime="20241127 12:41:10.360"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.373" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:41:10.368" endtime="20241127 12:41:10.374"/>
</kw>
<msg timestamp="20241127 12:41:10.374" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.368" endtime="20241127 12:41:10.374"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.374" endtime="20241127 12:41:10.374"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.368" endtime="20241127 12:41:10.374"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.374" endtime="20241127 12:41:10.374"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.375" endtime="20241127 12:41:10.375"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.374" endtime="20241127 12:41:10.375"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.368" endtime="20241127 12:41:10.375"/>
</try>
<msg timestamp="20241127 12:41:10.375" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.367" endtime="20241127 12:41:10.375"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.375" endtime="20241127 12:41:10.375"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.366" endtime="20241127 12:41:10.375"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.376" endtime="20241127 12:41:10.376"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.375" endtime="20241127 12:41:10.376"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.366" endtime="20241127 12:41:10.376"/>
</try>
<msg timestamp="20241127 12:41:10.376" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.366" endtime="20241127 12:41:10.376"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.379" endtime="20241127 12:41:10.379"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.379" endtime="20241127 12:41:10.379"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.378" endtime="20241127 12:41:10.379"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.378" endtime="20241127 12:41:10.379"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.377" endtime="20241127 12:41:10.379"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.365" endtime="20241127 12:41:10.379"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:41:10.390" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:41:10.390" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:41:10.380" endtime="20241127 12:41:10.390"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:41:10.390" endtime="20241127 12:41:10.390"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.380" endtime="20241127 12:41:10.390"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.391" endtime="20241127 12:41:10.391"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.391" endtime="20241127 12:41:10.391"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.390" endtime="20241127 12:41:10.391"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.379" endtime="20241127 12:41:10.391"/>
</try>
<msg timestamp="20241127 12:41:10.392" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:41:10.363" endtime="20241127 12:41:10.392"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.396" endtime="20241127 12:41:10.396"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.396" endtime="20241127 12:41:10.396"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.395" endtime="20241127 12:41:10.396"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.395" endtime="20241127 12:41:10.396"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.394" endtime="20241127 12:41:10.397"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.362" endtime="20241127 12:41:10.397"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.398" endtime="20241127 12:41:10.398"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.397" endtime="20241127 12:41:10.398"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.362" endtime="20241127 12:41:10.398"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.362" endtime="20241127 12:41:10.398"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.408" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241127 12:41:10.402" endtime="20241127 12:41:10.408"/>
</kw>
<msg timestamp="20241127 12:41:10.408" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.402" endtime="20241127 12:41:10.408"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.408" endtime="20241127 12:41:10.408"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.402" endtime="20241127 12:41:10.408"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.409" endtime="20241127 12:41:10.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.409" endtime="20241127 12:41:10.409"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.409" endtime="20241127 12:41:10.409"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.402" endtime="20241127 12:41:10.409"/>
</try>
<msg timestamp="20241127 12:41:10.409" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.401" endtime="20241127 12:41:10.409"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.410" endtime="20241127 12:41:10.410"/>
</return>
<msg timestamp="20241127 12:41:10.410" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.400" endtime="20241127 12:41:10.410"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.412" endtime="20241127 12:41:10.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.412" endtime="20241127 12:41:10.412"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.412" endtime="20241127 12:41:10.412"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.412" endtime="20241127 12:41:10.412"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.411" endtime="20241127 12:41:10.413"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.400" endtime="20241127 12:41:10.413"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.335" endtime="20241127 12:41:10.413"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.432" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241127 12:41:10.418" endtime="20241127 12:41:10.432"/>
</kw>
<msg timestamp="20241127 12:41:10.432" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.418" endtime="20241127 12:41:10.434"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.434" endtime="20241127 12:41:10.434"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.418" endtime="20241127 12:41:10.434"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.434" endtime="20241127 12:41:10.434"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.435" endtime="20241127 12:41:10.435"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.434" endtime="20241127 12:41:10.435"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.418" endtime="20241127 12:41:10.435"/>
</try>
<msg timestamp="20241127 12:41:10.435" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.417" endtime="20241127 12:41:10.435"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.435" endtime="20241127 12:41:10.435"/>
</return>
<msg timestamp="20241127 12:41:10.436" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.416" endtime="20241127 12:41:10.436"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.438" endtime="20241127 12:41:10.438"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.438" endtime="20241127 12:41:10.438"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.438" endtime="20241127 12:41:10.438"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.438" endtime="20241127 12:41:10.438"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.437" endtime="20241127 12:41:10.439"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.415" endtime="20241127 12:41:10.439"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.439" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:41:10.439" endtime="20241127 12:41:10.439"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.441" endtime="20241127 12:41:10.441"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.442" endtime="20241127 12:41:10.442"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.440" endtime="20241127 12:41:10.442"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.443" endtime="20241127 12:41:10.443"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.443" endtime="20241127 12:41:10.443"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.440" endtime="20241127 12:41:10.443"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:41:10.444" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241127 12:41:10.444" endtime="20241127 12:41:10.462"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.443" endtime="20241127 12:41:10.463"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.463" endtime="20241127 12:41:10.463"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.463" endtime="20241127 12:41:10.463"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.463" endtime="20241127 12:41:10.463"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.443" endtime="20241127 12:41:10.463"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.440" endtime="20241127 12:41:10.463"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.439" endtime="20241127 12:41:10.464"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.439" endtime="20241127 12:41:10.464"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.464" endtime="20241127 12:41:10.464"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.464" endtime="20241127 12:41:10.464"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.439" endtime="20241127 12:41:10.464"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.334" endtime="20241127 12:41:10.464"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.464" endtime="20241127 12:41:10.465"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.464" endtime="20241127 12:41:10.465"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.464" endtime="20241127 12:41:10.465"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.330" endtime="20241127 12:41:10.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.467" endtime="20241127 12:41:10.467"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.465" endtime="20241127 12:41:10.467"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.469"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.469"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.469"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.469"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.470"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.469" endtime="20241127 12:41:10.470"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.467" endtime="20241127 12:41:10.470"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.474" endtime="20241127 12:41:10.474"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.477" endtime="20241127 12:41:10.477"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.470" endtime="20241127 12:41:10.477"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.478" endtime="20241127 12:41:10.478"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.478" endtime="20241127 12:41:10.478"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.478" endtime="20241127 12:41:10.478"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.479" endtime="20241127 12:41:10.479"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.478" endtime="20241127 12:41:10.479"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.478" endtime="20241127 12:41:10.479"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.477" endtime="20241127 12:41:10.479"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.485" endtime="20241127 12:41:10.485"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.488" endtime="20241127 12:41:10.488"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.479" endtime="20241127 12:41:10.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.489" endtime="20241127 12:41:10.490"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.490" endtime="20241127 12:41:10.490"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.490" endtime="20241127 12:41:10.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.490" endtime="20241127 12:41:10.490"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.490" endtime="20241127 12:41:10.490"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.490" endtime="20241127 12:41:10.490"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.488" endtime="20241127 12:41:10.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.492" endtime="20241127 12:41:10.493"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.491" endtime="20241127 12:41:10.493"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.499" endtime="20241127 12:41:10.499"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.500" endtime="20241127 12:41:10.500"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.493" endtime="20241127 12:41:10.500"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.311" endtime="20241127 12:41:10.500"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.501" endtime="20241127 12:41:10.502"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:41:10.502" endtime="20241127 12:41:10.502"/>
</return>
<msg timestamp="20241127 12:41:10.503" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:41:10.310" endtime="20241127 12:41:10.503"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.504" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241127 12:41:10.504" endtime="20241127 12:41:10.504"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.505" endtime="20241127 12:41:10.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.505" endtime="20241127 12:41:10.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.505" endtime="20241127 12:41:10.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.505" endtime="20241127 12:41:10.505"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.506" endtime="20241127 12:41:10.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.506" endtime="20241127 12:41:10.506"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.506" endtime="20241127 12:41:10.506"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.506" endtime="20241127 12:41:10.506"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.507" endtime="20241127 12:41:10.507"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.509"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.509"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.509"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.509"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.510"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.510" endtime="20241127 12:41:10.510"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.510"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.510"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.510" endtime="20241127 12:41:10.510"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.510" endtime="20241127 12:41:10.510"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.510" endtime="20241127 12:41:10.510"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.510" endtime="20241127 12:41:10.510"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.511"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.509" endtime="20241127 12:41:10.511"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.511" endtime="20241127 12:41:10.511"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.511" endtime="20241127 12:41:10.511"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.511" endtime="20241127 12:41:10.512"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.512" endtime="20241127 12:41:10.512"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.512" endtime="20241127 12:41:10.512"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.512" endtime="20241127 12:41:10.512"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.513" endtime="20241127 12:41:10.513"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.513" endtime="20241127 12:41:10.513"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.512" endtime="20241127 12:41:10.513"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.512" endtime="20241127 12:41:10.513"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.511" endtime="20241127 12:41:10.513"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.511" endtime="20241127 12:41:10.513"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.504" endtime="20241127 12:41:10.513"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:41:10.504" endtime="20241127 12:41:10.513"/>
</for>
<msg timestamp="20241127 12:41:10.513" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:41:10.503" endtime="20241127 12:41:10.514"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.514" endtime="20241127 12:41:10.514"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.520" endtime="20241127 12:41:10.520"/>
</kw>
<msg timestamp="20241127 12:41:10.520" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.519" endtime="20241127 12:41:10.520"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.521" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241127 12:41:10.521" endtime="20241127 12:41:10.521"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.522" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.522" endtime="20241127 12:41:10.522"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.522" endtime="20241127 12:41:10.523"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.523" endtime="20241127 12:41:10.523"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.523" endtime="20241127 12:41:10.523"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.521" endtime="20241127 12:41:10.523"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.521" endtime="20241127 12:41:10.523"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.520" endtime="20241127 12:41:10.523"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:10.524" endtime="20241127 12:41:10.524"/>
</return>
<msg timestamp="20241127 12:41:10.524" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.518" endtime="20241127 12:41:10.524"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.525" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241127 12:41:10.525" endtime="20241127 12:41:10.525"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.524" endtime="20241127 12:41:10.525"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.525" endtime="20241127 12:41:10.526"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.525" endtime="20241127 12:41:10.526"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.524" endtime="20241127 12:41:10.526"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.528" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '420', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241127 12:41:10.526" endtime="20241127 12:41:10.528"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.530" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "420", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241127 12:41:10.529" endtime="20241127 12:41:10.530"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.549" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.549" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.530" endtime="20241127 12:41:10.549"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.549" endtime="20241127 12:41:10.550"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.550" endtime="20241127 12:41:10.550"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.529" endtime="20241127 12:41:10.551"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.514" endtime="20241127 12:41:10.551"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:41:10.552" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:41:10.551" endtime="20241127 12:41:10.552"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.552"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.552" endtime="20241127 12:41:10.552"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.552" endtime="20241127 12:41:10.553"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.553" endtime="20241127 12:41:10.553"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.552" endtime="20241127 12:41:10.553"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.553"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.307" endtime="20241127 12:41:10.553"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.554" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241127 12:41:10.554" endtime="20241127 12:41:10.554"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.554" endtime="20241127 12:41:10.555"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:41:10.555" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241127 12:41:10.555" endtime="20241127 12:41:10.555"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.557" endtime="20241127 12:41:10.557"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.557" endtime="20241127 12:41:10.557"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.557" endtime="20241127 12:41:10.557"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.555" endtime="20241127 12:41:10.557"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.558" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:41:10.558" endtime="20241127 12:41:10.558"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.558" endtime="20241127 12:41:10.558"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.558" endtime="20241127 12:41:10.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.559" endtime="20241127 12:41:10.559"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.559" endtime="20241127 12:41:10.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.574" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241127 12:41:10.568" endtime="20241127 12:41:10.574"/>
</kw>
<msg timestamp="20241127 12:41:10.574" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.567" endtime="20241127 12:41:10.574"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.574" endtime="20241127 12:41:10.574"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.567" endtime="20241127 12:41:10.574"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.575" endtime="20241127 12:41:10.575"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.575" endtime="20241127 12:41:10.575"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.574" endtime="20241127 12:41:10.575"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.567" endtime="20241127 12:41:10.575"/>
</try>
<msg timestamp="20241127 12:41:10.576" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.566" endtime="20241127 12:41:10.576"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.576" endtime="20241127 12:41:10.576"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.564" endtime="20241127 12:41:10.576"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.576" endtime="20241127 12:41:10.576"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.576" endtime="20241127 12:41:10.577"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.564" endtime="20241127 12:41:10.577"/>
</try>
<msg timestamp="20241127 12:41:10.577" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.563" endtime="20241127 12:41:10.577"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.580" endtime="20241127 12:41:10.580"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.580" endtime="20241127 12:41:10.581"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.580" endtime="20241127 12:41:10.581"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.580" endtime="20241127 12:41:10.581"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.579" endtime="20241127 12:41:10.581"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.563" endtime="20241127 12:41:10.581"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.591" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241127 12:41:10.586" endtime="20241127 12:41:10.591"/>
</kw>
<msg timestamp="20241127 12:41:10.592" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.585" endtime="20241127 12:41:10.592"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.592" endtime="20241127 12:41:10.592"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.585" endtime="20241127 12:41:10.592"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.592" endtime="20241127 12:41:10.592"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.593" endtime="20241127 12:41:10.593"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.592" endtime="20241127 12:41:10.593"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.585" endtime="20241127 12:41:10.593"/>
</try>
<msg timestamp="20241127 12:41:10.594" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.585" endtime="20241127 12:41:10.594"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.594" endtime="20241127 12:41:10.594"/>
</return>
<msg timestamp="20241127 12:41:10.594" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.584" endtime="20241127 12:41:10.594"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.596" endtime="20241127 12:41:10.596"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.597" endtime="20241127 12:41:10.597"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.596" endtime="20241127 12:41:10.597"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.596" endtime="20241127 12:41:10.597"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.595" endtime="20241127 12:41:10.597"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.583" endtime="20241127 12:41:10.597"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:41:10.616" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241127 12:41:10.604" endtime="20241127 12:41:10.617"/>
</kw>
<msg timestamp="20241127 12:41:10.617" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.603" endtime="20241127 12:41:10.617"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.617" endtime="20241127 12:41:10.617"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.603" endtime="20241127 12:41:10.617"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.617" endtime="20241127 12:41:10.618"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.618" endtime="20241127 12:41:10.618"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.617" endtime="20241127 12:41:10.618"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.603" endtime="20241127 12:41:10.618"/>
</try>
<msg timestamp="20241127 12:41:10.618" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.602" endtime="20241127 12:41:10.618"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:41:10.618" endtime="20241127 12:41:10.618"/>
</return>
<msg timestamp="20241127 12:41:10.619" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.600" endtime="20241127 12:41:10.619"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.621" endtime="20241127 12:41:10.621"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.621" endtime="20241127 12:41:10.621"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.621" endtime="20241127 12:41:10.621"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.620" endtime="20241127 12:41:10.621"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.620" endtime="20241127 12:41:10.621"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.600" endtime="20241127 12:41:10.621"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.561" endtime="20241127 12:41:10.622"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.622" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:41:10.622" endtime="20241127 12:41:10.622"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.624" endtime="20241127 12:41:10.624"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.623" endtime="20241127 12:41:10.624"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.624" endtime="20241127 12:41:10.624"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.624" endtime="20241127 12:41:10.624"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.623" endtime="20241127 12:41:10.624"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:41:10.625" endtime="20241127 12:41:10.671"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.624" endtime="20241127 12:41:10.671"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.672" endtime="20241127 12:41:10.672"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.672" endtime="20241127 12:41:10.672"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.671" endtime="20241127 12:41:10.672"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.624" endtime="20241127 12:41:10.672"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.623" endtime="20241127 12:41:10.672"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.622" endtime="20241127 12:41:10.673"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.622" endtime="20241127 12:41:10.673"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.673" endtime="20241127 12:41:10.673"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.673" endtime="20241127 12:41:10.673"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.622" endtime="20241127 12:41:10.673"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.561" endtime="20241127 12:41:10.673"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.559" endtime="20241127 12:41:10.673"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.675" endtime="20241127 12:41:10.675"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.677" endtime="20241127 12:41:10.677"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.673" endtime="20241127 12:41:10.677"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.678" endtime="20241127 12:41:10.678"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.677" endtime="20241127 12:41:10.678"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.681" endtime="20241127 12:41:10.681"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.679" endtime="20241127 12:41:10.681"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.683" endtime="20241127 12:41:10.683"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.683" endtime="20241127 12:41:10.683"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.683" endtime="20241127 12:41:10.683"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.683" endtime="20241127 12:41:10.684"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.681" endtime="20241127 12:41:10.684"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.684" endtime="20241127 12:41:10.684"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.684" endtime="20241127 12:41:10.684"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.685" endtime="20241127 12:41:10.685"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.685" endtime="20241127 12:41:10.685"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.685" endtime="20241127 12:41:10.685"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.686" endtime="20241127 12:41:10.686"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.686" endtime="20241127 12:41:10.686"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.685" endtime="20241127 12:41:10.686"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.684" endtime="20241127 12:41:10.686"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.691" endtime="20241127 12:41:10.691"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.693" endtime="20241127 12:41:10.693"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.686" endtime="20241127 12:41:10.693"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.694" endtime="20241127 12:41:10.694"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.695"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.695"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.695"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.695"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.695"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.694" endtime="20241127 12:41:10.695"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:41:10.701" endtime="20241127 12:41:10.701"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.703" endtime="20241127 12:41:10.703"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.695" endtime="20241127 12:41:10.703"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.704" endtime="20241127 12:41:10.704"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.704" endtime="20241127 12:41:10.704"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.704" endtime="20241127 12:41:10.705"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.705" endtime="20241127 12:41:10.705"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.705" endtime="20241127 12:41:10.705"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.704" endtime="20241127 12:41:10.705"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.703" endtime="20241127 12:41:10.705"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.707" endtime="20241127 12:41:10.707"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.705" endtime="20241127 12:41:10.707"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.712" endtime="20241127 12:41:10.712"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.712" endtime="20241127 12:41:10.712"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.707" endtime="20241127 12:41:10.712"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.558" endtime="20241127 12:41:10.712"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.712" endtime="20241127 12:41:10.713"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:41:10.713" endtime="20241127 12:41:10.713"/>
</return>
<msg timestamp="20241127 12:41:10.713" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:41:10.557" endtime="20241127 12:41:10.713"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.714" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241127 12:41:10.714" endtime="20241127 12:41:10.714"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.715" endtime="20241127 12:41:10.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.715" endtime="20241127 12:41:10.715"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.716" endtime="20241127 12:41:10.716"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.716" endtime="20241127 12:41:10.716"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.716" endtime="20241127 12:41:10.716"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.716" endtime="20241127 12:41:10.716"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.717" endtime="20241127 12:41:10.717"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.717" endtime="20241127 12:41:10.717"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.718" endtime="20241127 12:41:10.718"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.719"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.719"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.719"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.719"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.720" endtime="20241127 12:41:10.720"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.720"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.719" endtime="20241127 12:41:10.721"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.721"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.722"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:41:10.722" endtime="20241127 12:41:10.722"/>
</return>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.722"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.722"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.722"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:41:10.721" endtime="20241127 12:41:10.722"/>
</if>
<status status="NOT RUN" starttime="20241127 12:41:10.715" endtime="20241127 12:41:10.722"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:41:10.715" endtime="20241127 12:41:10.722"/>
</for>
<msg timestamp="20241127 12:41:10.722" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:41:10.713" endtime="20241127 12:41:10.722"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.722" endtime="20241127 12:41:10.723"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:41:10.726" endtime="20241127 12:41:10.726"/>
</kw>
<msg timestamp="20241127 12:41:10.726" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.726" endtime="20241127 12:41:10.726"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.727" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241127 12:41:10.727" endtime="20241127 12:41:10.727"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.728" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.727" endtime="20241127 12:41:10.728"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.727" endtime="20241127 12:41:10.728"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.728" endtime="20241127 12:41:10.728"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.728" endtime="20241127 12:41:10.728"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.727" endtime="20241127 12:41:10.728"/>
</if>
<status status="PASS" starttime="20241127 12:41:10.727" endtime="20241127 12:41:10.728"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.726" endtime="20241127 12:41:10.728"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:41:10.728" endtime="20241127 12:41:10.728"/>
</return>
<msg timestamp="20241127 12:41:10.728" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:41:10.725" endtime="20241127 12:41:10.728"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:41:10.729" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241127 12:41:10.729" endtime="20241127 12:41:10.729"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.729" endtime="20241127 12:41:10.729"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.729" endtime="20241127 12:41:10.729"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.729" endtime="20241127 12:41:10.729"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.729" endtime="20241127 12:41:10.730"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.730" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '421', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241127 12:41:10.730" endtime="20241127 12:41:10.730"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.731" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "421", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241127 12:41:10.731" endtime="20241127 12:41:10.731"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.766" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.767" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.731" endtime="20241127 12:41:10.767"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.767" endtime="20241127 12:41:10.768"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.768" endtime="20241127 12:41:10.768"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.730" endtime="20241127 12:41:10.768"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.723" endtime="20241127 12:41:10.768"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:41:10.769" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:41:10.768" endtime="20241127 12:41:10.769"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.554" endtime="20241127 12:41:10.769"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.769" endtime="20241127 12:41:10.769"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.769" endtime="20241127 12:41:10.769"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.770" endtime="20241127 12:41:10.770"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.769" endtime="20241127 12:41:10.770"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.553" endtime="20241127 12:41:10.770"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.553" endtime="20241127 12:41:10.770"/>
</iter>
<status status="PASS" starttime="20241127 12:41:07.514" endtime="20241127 12:41:10.770"/>
</for>
<status status="PASS" starttime="20241127 12:41:07.514" endtime="20241127 12:41:10.770"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.514" endtime="20241127 12:41:10.770"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.772" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '105', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:41:10.771" endtime="20241127 12:41:10.772"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.773" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "105", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:41:10.772" endtime="20241127 12:41:10.773"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.798" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.799" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.773" endtime="20241127 12:41:10.799"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.799" endtime="20241127 12:41:10.800"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.800" endtime="20241127 12:41:10.800"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.772" endtime="20241127 12:41:10.800"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.770" endtime="20241127 12:41:10.800"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.507" endtime="20241127 12:41:10.800"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.801" endtime="20241127 12:41:10.801"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.801" endtime="20241127 12:41:10.801"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.801" endtime="20241127 12:41:10.801"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.800" endtime="20241127 12:41:10.801"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.507" endtime="20241127 12:41:10.801"/>
</try>
<status status="PASS" starttime="20241127 12:41:07.507" endtime="20241127 12:41:10.802"/>
</iter>
<status status="PASS" starttime="20241127 12:41:07.507" endtime="20241127 12:41:10.802"/>
</for>
<status status="PASS" starttime="20241127 12:41:07.506" endtime="20241127 12:41:10.802"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.506" endtime="20241127 12:41:10.802"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:41:10.803" level="INFO">${response_message} = {'testCaseRunId': '38', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:41:10.803" endtime="20241127 12:41:10.803"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:41:10.805" level="INFO">${json_response} = {"testCaseRunId": "38", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:41:10.804" endtime="20241127 12:41:10.805"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:41:10.829" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:41:10.830" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:41:10.805" endtime="20241127 12:41:10.830"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:10.830" endtime="20241127 12:41:10.830"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:41:10.831" endtime="20241127 12:41:10.831"/>
</return>
<status status="PASS" starttime="20241127 12:41:10.804" endtime="20241127 12:41:10.831"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.802" endtime="20241127 12:41:10.831"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.469" endtime="20241127 12:41:10.831"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.832" endtime="20241127 12:41:10.832"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:41:10.832" endtime="20241127 12:41:10.832"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.832" endtime="20241127 12:41:10.832"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.832" endtime="20241127 12:41:10.832"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.469" endtime="20241127 12:41:10.832"/>
</try>
<status status="PASS" starttime="20241127 12:41:07.456" endtime="20241127 12:41:10.833"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.833" endtime="20241127 12:41:10.833"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.833" endtime="20241127 12:41:10.833"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.456" endtime="20241127 12:41:10.833"/>
</if>
<status status="PASS" starttime="20241127 12:41:07.444" endtime="20241127 12:41:10.833"/>
</kw>
<status status="PASS" starttime="20241127 12:41:07.443" endtime="20241127 12:41:10.833"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:10.834" endtime="20241127 12:41:10.834"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:10.833" endtime="20241127 12:41:10.834"/>
</branch>
<status status="PASS" starttime="20241127 12:41:07.443" endtime="20241127 12:41:10.834"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241127 12:41:11.055" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241127 12:41:10.835" endtime="20241127 12:41:11.055"/>
</kw>
<status status="PASS" starttime="20241127 12:41:10.835" endtime="20241127 12:41:11.055"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:41:11.056" endtime="20241127 12:41:11.056"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:41:11.056" endtime="20241127 12:41:11.056"/>
</branch>
<status status="PASS" starttime="20241127 12:41:10.835" endtime="20241127 12:41:11.056"/>
</try>
<status status="PASS" starttime="20241127 12:41:10.834" endtime="20241127 12:41:11.056"/>
</kw>
<status status="PASS" starttime="20241127 12:36:57.773" endtime="20241127 12:41:11.056"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:41:11.057" endtime="20241127 12:41:11.057"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241127 12:50:59.847" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '39', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:20:59.754Z', 'createdAt': '2024-11-27T07:20:59.754Z', 'errorMes...</msg>
<status status="PASS" starttime="20241127 12:41:11.057" endtime="20241127 12:50:59.847"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241127 12:50:59.848" endtime="20241127 12:50:59.849"/>
</break>
<status status="NOT RUN" starttime="20241127 12:50:59.848" endtime="20241127 12:50:59.849"/>
</branch>
<status status="PASS" starttime="20241127 12:50:59.848" endtime="20241127 12:50:59.849"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241127 12:50:59.850" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\0a5cdb1b-204a-4608-8ebe-6d72fa418262"}</msg>
<msg timestamp="20241127 12:51:00.266" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\0a5cdb1b-204a-4608-8ebe-6d72fa418262"}</msg>
<status status="PASS" starttime="20241127 12:50:59.850" endtime="20241127 12:51:00.267"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241127 12:51:00.268" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241127 12:51:00.282" level="INFO">Successfully created context. </msg>
<msg timestamp="20241127 12:51:00.282" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241127 12:51:00.267" endtime="20241127 12:51:00.282"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241127 12:51:00.283" endtime="20241127 12:51:00.284"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:51:01.339" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241127 12:51:01.339" level="INFO">${page_id} = {'page_id': 'page=7e5c1358-b666-41e3-8f4b-1fea52aaf937', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:51:00.284" endtime="20241127 12:51:01.339"/>
</kw>
<status status="PASS" starttime="20241127 12:50:59.849" endtime="20241127 12:51:01.339"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:01.340" endtime="20241127 12:51:01.344"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:01.347" endtime="20241127 12:51:01.347"/>
</kw>
<msg timestamp="20241127 12:51:01.347" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.346" endtime="20241127 12:51:01.347"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.348" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241127 12:51:01.348" endtime="20241127 12:51:01.348"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.348" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.348" endtime="20241127 12:51:01.348"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.348" endtime="20241127 12:51:01.348"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.349" endtime="20241127 12:51:01.349"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.349" endtime="20241127 12:51:01.349"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.348" endtime="20241127 12:51:01.349"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.347" endtime="20241127 12:51:01.349"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.347" endtime="20241127 12:51:01.349"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:01.349" endtime="20241127 12:51:01.349"/>
</return>
<msg timestamp="20241127 12:51:01.349" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.346" endtime="20241127 12:51:01.349"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.350" endtime="20241127 12:51:01.350"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241127 12:51:01.350" endtime="20241127 12:51:01.350"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:01.350" endtime="20241127 12:51:01.350"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.350" endtime="20241127 12:51:01.350"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:01.353" endtime="20241127 12:51:01.353"/>
</kw>
<msg timestamp="20241127 12:51:01.353" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.352" endtime="20241127 12:51:01.353"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.354" level="INFO">${values} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:51:01.353" endtime="20241127 12:51:01.354"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.354" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.354" endtime="20241127 12:51:01.354"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.354" endtime="20241127 12:51:01.354"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.355" endtime="20241127 12:51:01.355"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.354" endtime="20241127 12:51:01.355"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.354" endtime="20241127 12:51:01.355"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.353" endtime="20241127 12:51:01.355"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.353" endtime="20241127 12:51:01.355"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:01.355" endtime="20241127 12:51:01.355"/>
</return>
<msg timestamp="20241127 12:51:01.355" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.352" endtime="20241127 12:51:01.355"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:01.357" endtime="20241127 12:51:01.357"/>
</kw>
<msg timestamp="20241127 12:51:01.357" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.357" endtime="20241127 12:51:01.358"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.358" level="INFO">${values} = {'id': '39', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:20:59.754Z', 'createdAt': '2024-11-27T07:20:59.754Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.358"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.359" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.359"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.359"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.359" endtime="20241127 12:51:01.359"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.359" endtime="20241127 12:51:01.359"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.359"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.359"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.358" endtime="20241127 12:51:01.359"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:01.359" endtime="20241127 12:51:01.359"/>
</return>
<msg timestamp="20241127 12:51:01.360" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.357" endtime="20241127 12:51:01.360"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.360" endtime="20241127 12:51:01.360"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.360" endtime="20241127 12:51:01.360"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.360" endtime="20241127 12:51:01.360"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.361" level="INFO">${testCase} = {'id': '1', 'name': 'Login positive', 'projectId': '1', 'createdAt': '2024-11-25T08:02:17.965Z', 'updatedAt': '2024-11-25T08:02:17.965Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '202...</msg>
<status status="PASS" starttime="20241127 12:51:01.360" endtime="20241127 12:51:01.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.361" level="INFO">${testCaseRun} = {'id': '39', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:20:59.754Z', 'createdAt': '2024-11-27T07:20:59.754Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:51:01.361" endtime="20241127 12:51:01.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.362" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241127 12:51:01.361" endtime="20241127 12:51:01.362"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:01.362" endtime="20241127 12:51:01.363"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:01.366" endtime="20241127 12:51:01.366"/>
</kw>
<msg timestamp="20241127 12:51:01.367" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.366" endtime="20241127 12:51:01.367"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.367" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241127 12:51:01.367" endtime="20241127 12:51:01.367"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.368" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.368" endtime="20241127 12:51:01.368"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.368" endtime="20241127 12:51:01.368"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.368" endtime="20241127 12:51:01.368"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.368" endtime="20241127 12:51:01.368"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.367" endtime="20241127 12:51:01.368"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.367" endtime="20241127 12:51:01.368"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.367" endtime="20241127 12:51:01.368"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:01.368" endtime="20241127 12:51:01.369"/>
</return>
<msg timestamp="20241127 12:51:01.369" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.365" endtime="20241127 12:51:01.369"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:01.369" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '39', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241127 12:51:01.369" endtime="20241127 12:51:01.369"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:01.370" level="INFO">${json_response} = {"testCaseRunId": "39", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241127 12:51:01.370" endtime="20241127 12:51:01.370"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:01.415" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:01.415" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:01.370" endtime="20241127 12:51:01.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:01.415" endtime="20241127 12:51:01.416"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:01.416" endtime="20241127 12:51:01.416"/>
</return>
<status status="PASS" starttime="20241127 12:51:01.369" endtime="20241127 12:51:01.417"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:01.417" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241127 12:51:01.417" endtime="20241127 12:51:01.417"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:02:18.060Z', 'updatedAt': '2024-11-25T08:02:18.060Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.419" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241127 12:51:01.418" endtime="20241127 12:51:01.419"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:01.419" endtime="20241127 12:51:01.419"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:01.422" endtime="20241127 12:51:01.422"/>
</kw>
<msg timestamp="20241127 12:51:01.422" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.421" endtime="20241127 12:51:01.422"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.423" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241127 12:51:01.422" endtime="20241127 12:51:01.423"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.423" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.423" endtime="20241127 12:51:01.423"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.423" endtime="20241127 12:51:01.423"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.423" endtime="20241127 12:51:01.424"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.423" endtime="20241127 12:51:01.424"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.423" endtime="20241127 12:51:01.424"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.422" endtime="20241127 12:51:01.424"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.422" endtime="20241127 12:51:01.424"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:01.424" endtime="20241127 12:51:01.424"/>
</return>
<msg timestamp="20241127 12:51:01.424" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:01.421" endtime="20241127 12:51:01.424"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.425" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241127 12:51:01.425" endtime="20241127 12:51:01.425"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:01.425" endtime="20241127 12:51:01.426"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:01.426" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241127 12:51:01.426" endtime="20241127 12:51:01.426"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.427" endtime="20241127 12:51:01.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:01.427" endtime="20241127 12:51:01.427"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:01.426" endtime="20241127 12:51:01.427"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.426" endtime="20241127 12:51:01.427"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:01.427" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:01.427" endtime="20241127 12:51:01.427"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:51:04.407" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241127 12:51:04.407" level="INFO">${page_id} = {'page_id': 'page=fc760b72-d4fd-467f-8997-6ea1a7d62dfc', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:51:01.430" endtime="20241127 12:51:04.407"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241127 12:51:04.408" level="INFO">Switching to page {'page_id': 'page=fc760b72-d4fd-467f-8997-6ea1a7d62dfc', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241127 12:51:04.468" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=d389777a-7021-4c12-9c81-1f1aa2e8cb94",
    "contexts": [
      {
        "type": "context",
        "id": "context=8f10f29f-d544-4057-a43b-649b171e0008",
        "activePage": "page=fc760b72-d4fd-467f-8997-6ea1a7d62dfc",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=7e5c1358-b666-41e3-8f4b-1fea52aaf937",
            "timestamp": 1732692060.448
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=fc760b72-d4fd-467f-8997-6ea1a7d62dfc",
            "timestamp": 1732692061.47
          }
        ]
      }
    ],
    "activeContext": "context=8f10f29f-d544-4057-a43b-649b171e0008",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241127 12:51:04.473" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241127 12:51:04.407" endtime="20241127 12:51:04.473"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.428" endtime="20241127 12:51:04.473"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.428" endtime="20241127 12:51:04.473"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.473" endtime="20241127 12:51:04.474"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.473" endtime="20241127 12:51:04.474"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.475" endtime="20241127 12:51:04.475"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.474" endtime="20241127 12:51:04.476"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.478" endtime="20241127 12:51:04.478"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.480" endtime="20241127 12:51:04.480"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.476" endtime="20241127 12:51:04.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.481" endtime="20241127 12:51:04.481"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.480" endtime="20241127 12:51:04.481"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.483" endtime="20241127 12:51:04.484"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.481" endtime="20241127 12:51:04.484"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.486" endtime="20241127 12:51:04.486"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.486" endtime="20241127 12:51:04.487"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.486" endtime="20241127 12:51:04.487"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.486" endtime="20241127 12:51:04.487"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.484" endtime="20241127 12:51:04.487"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.488" endtime="20241127 12:51:04.489"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.487" endtime="20241127 12:51:04.489"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.490" endtime="20241127 12:51:04.490"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.491" endtime="20241127 12:51:04.491"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.491" endtime="20241127 12:51:04.491"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.492" endtime="20241127 12:51:04.492"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.492" endtime="20241127 12:51:04.493"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.491" endtime="20241127 12:51:04.493"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.489" endtime="20241127 12:51:04.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:04.500" endtime="20241127 12:51:04.500"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.505" endtime="20241127 12:51:04.506"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.493" endtime="20241127 12:51:04.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.508" endtime="20241127 12:51:04.509"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.510" endtime="20241127 12:51:04.511"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.510" endtime="20241127 12:51:04.511"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.511" endtime="20241127 12:51:04.511"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.511" endtime="20241127 12:51:04.511"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.510" endtime="20241127 12:51:04.512"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.506" endtime="20241127 12:51:04.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:04.518" endtime="20241127 12:51:04.518"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.521" endtime="20241127 12:51:04.522"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.512" endtime="20241127 12:51:04.522"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.523" endtime="20241127 12:51:04.523"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.523" endtime="20241127 12:51:04.524"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.523" endtime="20241127 12:51:04.524"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.524" endtime="20241127 12:51:04.524"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.524" endtime="20241127 12:51:04.524"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.523" endtime="20241127 12:51:04.524"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.522" endtime="20241127 12:51:04.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.526" endtime="20241127 12:51:04.526"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.524" endtime="20241127 12:51:04.526"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.535" endtime="20241127 12:51:04.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.535" endtime="20241127 12:51:04.535"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.526" endtime="20241127 12:51:04.535"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.427" endtime="20241127 12:51:04.535"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.536" endtime="20241127 12:51:04.536"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:04.536" endtime="20241127 12:51:04.536"/>
</return>
<msg timestamp="20241127 12:51:04.537" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:01.427" endtime="20241127 12:51:04.537"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.538" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241127 12:51:04.538" endtime="20241127 12:51:04.538"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.538" endtime="20241127 12:51:04.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.539" endtime="20241127 12:51:04.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.539" endtime="20241127 12:51:04.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.539" endtime="20241127 12:51:04.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.540" endtime="20241127 12:51:04.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.540" endtime="20241127 12:51:04.540"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.540" endtime="20241127 12:51:04.540"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.540" endtime="20241127 12:51:04.540"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.541" endtime="20241127 12:51:04.542"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.545" endtime="20241127 12:51:04.545"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:04.546" endtime="20241127 12:51:04.546"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.545" endtime="20241127 12:51:04.546"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.545" endtime="20241127 12:51:04.546"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.546" endtime="20241127 12:51:04.546"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.546" endtime="20241127 12:51:04.546"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.546" endtime="20241127 12:51:04.547"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.546" endtime="20241127 12:51:04.547"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.547" endtime="20241127 12:51:04.547"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.547" endtime="20241127 12:51:04.547"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.547" endtime="20241127 12:51:04.547"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.547" endtime="20241127 12:51:04.547"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.545" endtime="20241127 12:51:04.547"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.545" endtime="20241127 12:51:04.547"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.548"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.548"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.548"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.549" endtime="20241127 12:51:04.549"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.549"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.549"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.549" endtime="20241127 12:51:04.549"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.550" endtime="20241127 12:51:04.550"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.549" endtime="20241127 12:51:04.550"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.549" endtime="20241127 12:51:04.550"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.550"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.548" endtime="20241127 12:51:04.550"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.538" endtime="20241127 12:51:04.550"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:51:04.538" endtime="20241127 12:51:04.550"/>
</for>
<msg timestamp="20241127 12:51:04.550" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:04.537" endtime="20241127 12:51:04.551"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.551" endtime="20241127 12:51:04.551"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:04.556" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241127 12:51:04.555" endtime="20241127 12:51:04.556"/>
</kw>
<msg timestamp="20241127 12:51:04.557" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:04.555" endtime="20241127 12:51:04.557"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.557" endtime="20241127 12:51:04.557"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.558" endtime="20241127 12:51:04.558"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.557" endtime="20241127 12:51:04.558"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.558" endtime="20241127 12:51:04.559"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.558" endtime="20241127 12:51:04.559"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.557" endtime="20241127 12:51:04.559"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.557" endtime="20241127 12:51:04.559"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.557" endtime="20241127 12:51:04.559"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:04.559" endtime="20241127 12:51:04.559"/>
</return>
<msg timestamp="20241127 12:51:04.559" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:04.554" endtime="20241127 12:51:04.559"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.560" endtime="20241127 12:51:04.561"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.560" endtime="20241127 12:51:04.561"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.562" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241127 12:51:04.561" endtime="20241127 12:51:04.562"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.561" endtime="20241127 12:51:04.562"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.560" endtime="20241127 12:51:04.562"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:04.563" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '422', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241127 12:51:04.562" endtime="20241127 12:51:04.563"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:04.564" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "422", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241127 12:51:04.563" endtime="20241127 12:51:04.564"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:04.569" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:04.569" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:04.564" endtime="20241127 12:51:04.569"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.569" endtime="20241127 12:51:04.570"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:04.570" endtime="20241127 12:51:04.570"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.563" endtime="20241127 12:51:04.571"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.551" endtime="20241127 12:51:04.571"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:04.572" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:04.571" endtime="20241127 12:51:04.572"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.425" endtime="20241127 12:51:04.572"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.572" endtime="20241127 12:51:04.572"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.572" endtime="20241127 12:51:04.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.573" endtime="20241127 12:51:04.573"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.572" endtime="20241127 12:51:04.573"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.425" endtime="20241127 12:51:04.573"/>
</try>
<status status="PASS" starttime="20241127 12:51:01.425" endtime="20241127 12:51:04.573"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.574" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241127 12:51:04.574" endtime="20241127 12:51:04.574"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.575" endtime="20241127 12:51:04.575"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:04.576" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241127 12:51:04.575" endtime="20241127 12:51:04.576"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.577" endtime="20241127 12:51:04.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.577" endtime="20241127 12:51:04.579"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.577" endtime="20241127 12:51:04.579"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.576" endtime="20241127 12:51:04.579"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.580" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:04.580" endtime="20241127 12:51:04.580"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.580" endtime="20241127 12:51:04.581"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.580" endtime="20241127 12:51:04.581"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.581" endtime="20241127 12:51:04.581"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.581" endtime="20241127 12:51:04.581"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.585" endtime="20241127 12:51:04.585"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.582" endtime="20241127 12:51:04.585"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.588" endtime="20241127 12:51:04.588"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.591" endtime="20241127 12:51:04.591"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.585" endtime="20241127 12:51:04.591"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.592" endtime="20241127 12:51:04.592"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.591" endtime="20241127 12:51:04.592"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.597" endtime="20241127 12:51:04.597"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.593" endtime="20241127 12:51:04.597"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.634" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:04.613" endtime="20241127 12:51:04.634"/>
</kw>
<msg timestamp="20241127 12:51:04.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.611" endtime="20241127 12:51:04.634"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.634" endtime="20241127 12:51:04.634"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.611" endtime="20241127 12:51:04.634"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.635" endtime="20241127 12:51:04.635"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.635" endtime="20241127 12:51:04.635"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.634" endtime="20241127 12:51:04.635"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.610" endtime="20241127 12:51:04.635"/>
</try>
<msg timestamp="20241127 12:51:04.635" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.609" endtime="20241127 12:51:04.635"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.635" endtime="20241127 12:51:04.636"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.607" endtime="20241127 12:51:04.636"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.636" endtime="20241127 12:51:04.636"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.636" endtime="20241127 12:51:04.636"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.607" endtime="20241127 12:51:04.636"/>
</try>
<msg timestamp="20241127 12:51:04.637" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.606" endtime="20241127 12:51:04.637"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.640" endtime="20241127 12:51:04.640"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.640" endtime="20241127 12:51:04.641"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.640" endtime="20241127 12:51:04.641"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.640" endtime="20241127 12:51:04.641"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.638" endtime="20241127 12:51:04.641"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.605" endtime="20241127 12:51:04.641"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.658" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:04.652" endtime="20241127 12:51:04.658"/>
</kw>
<msg timestamp="20241127 12:51:04.658" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.651" endtime="20241127 12:51:04.658"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.658" endtime="20241127 12:51:04.658"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.651" endtime="20241127 12:51:04.658"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.659" endtime="20241127 12:51:04.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.659" endtime="20241127 12:51:04.659"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.658" endtime="20241127 12:51:04.659"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.651" endtime="20241127 12:51:04.659"/>
</try>
<msg timestamp="20241127 12:51:04.659" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.650" endtime="20241127 12:51:04.659"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.660" endtime="20241127 12:51:04.660"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.649" endtime="20241127 12:51:04.660"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.660" endtime="20241127 12:51:04.660"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.660" endtime="20241127 12:51:04.660"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.649" endtime="20241127 12:51:04.660"/>
</try>
<msg timestamp="20241127 12:51:04.660" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.649" endtime="20241127 12:51:04.660"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.663" endtime="20241127 12:51:04.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.664" endtime="20241127 12:51:04.664"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.663" endtime="20241127 12:51:04.664"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.663" endtime="20241127 12:51:04.664"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.662" endtime="20241127 12:51:04.664"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.648" endtime="20241127 12:51:04.664"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:04.729" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:51:04.729" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:04.665" endtime="20241127 12:51:04.729"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:04.730" endtime="20241127 12:51:04.730"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.665" endtime="20241127 12:51:04.730"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.732" endtime="20241127 12:51:04.732"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.732" endtime="20241127 12:51:04.732"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.730" endtime="20241127 12:51:04.733"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.664" endtime="20241127 12:51:04.733"/>
</try>
<msg timestamp="20241127 12:51:04.733" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:04.645" endtime="20241127 12:51:04.733"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.737" endtime="20241127 12:51:04.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.737" endtime="20241127 12:51:04.737"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.736" endtime="20241127 12:51:04.738"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.736" endtime="20241127 12:51:04.738"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.735" endtime="20241127 12:51:04.738"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.644" endtime="20241127 12:51:04.738"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.738" endtime="20241127 12:51:04.739"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.738" endtime="20241127 12:51:04.739"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.644" endtime="20241127 12:51:04.739"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.644" endtime="20241127 12:51:04.739"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.751" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:04.745" endtime="20241127 12:51:04.751"/>
</kw>
<msg timestamp="20241127 12:51:04.752" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.745" endtime="20241127 12:51:04.752"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.752" endtime="20241127 12:51:04.752"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.744" endtime="20241127 12:51:04.752"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.752" endtime="20241127 12:51:04.752"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.752" endtime="20241127 12:51:04.752"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.752" endtime="20241127 12:51:04.753"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.744" endtime="20241127 12:51:04.753"/>
</try>
<msg timestamp="20241127 12:51:04.753" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.744" endtime="20241127 12:51:04.753"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.753" endtime="20241127 12:51:04.753"/>
</return>
<msg timestamp="20241127 12:51:04.753" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.742" endtime="20241127 12:51:04.753"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.755" endtime="20241127 12:51:04.756"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.756" endtime="20241127 12:51:04.756"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.755" endtime="20241127 12:51:04.756"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.755" endtime="20241127 12:51:04.756"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.754" endtime="20241127 12:51:04.756"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.741" endtime="20241127 12:51:04.756"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.602" endtime="20241127 12:51:04.756"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.773" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241127 12:51:04.761" endtime="20241127 12:51:04.773"/>
</kw>
<msg timestamp="20241127 12:51:04.773" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.761" endtime="20241127 12:51:04.773"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.773" endtime="20241127 12:51:04.773"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.761" endtime="20241127 12:51:04.773"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.774" endtime="20241127 12:51:04.774"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.774" endtime="20241127 12:51:04.774"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.774" endtime="20241127 12:51:04.774"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.761" endtime="20241127 12:51:04.774"/>
</try>
<msg timestamp="20241127 12:51:04.774" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.760" endtime="20241127 12:51:04.775"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.775" endtime="20241127 12:51:04.775"/>
</return>
<msg timestamp="20241127 12:51:04.775" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.759" endtime="20241127 12:51:04.775"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.777" endtime="20241127 12:51:04.777"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.778" endtime="20241127 12:51:04.778"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.777" endtime="20241127 12:51:04.778"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.777" endtime="20241127 12:51:04.778"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.776" endtime="20241127 12:51:04.778"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.758" endtime="20241127 12:51:04.778"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:04.779" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:04.778" endtime="20241127 12:51:04.779"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.780" endtime="20241127 12:51:04.780"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.782" endtime="20241127 12:51:04.782"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.780" endtime="20241127 12:51:04.782"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:04.782" endtime="20241127 12:51:04.783"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.782" endtime="20241127 12:51:04.783"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.780" endtime="20241127 12:51:04.783"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:51:04.784" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241127 12:51:04.783" endtime="20241127 12:51:04.811"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.783" endtime="20241127 12:51:04.811"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.811" endtime="20241127 12:51:04.811"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.812" endtime="20241127 12:51:04.812"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.811" endtime="20241127 12:51:04.812"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.783" endtime="20241127 12:51:04.812"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.779" endtime="20241127 12:51:04.812"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.779" endtime="20241127 12:51:04.812"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.779" endtime="20241127 12:51:04.812"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.812" endtime="20241127 12:51:04.812"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.812" endtime="20241127 12:51:04.812"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.779" endtime="20241127 12:51:04.812"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.601" endtime="20241127 12:51:04.813"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.813" endtime="20241127 12:51:04.813"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.813" endtime="20241127 12:51:04.813"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.813" endtime="20241127 12:51:04.813"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.597" endtime="20241127 12:51:04.813"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.815" endtime="20241127 12:51:04.815"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.814" endtime="20241127 12:51:04.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.816" endtime="20241127 12:51:04.816"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.817" endtime="20241127 12:51:04.817"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.816" endtime="20241127 12:51:04.817"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.817" endtime="20241127 12:51:04.817"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.817" endtime="20241127 12:51:04.817"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.816" endtime="20241127 12:51:04.817"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.815" endtime="20241127 12:51:04.817"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:04.821" endtime="20241127 12:51:04.821"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.824" endtime="20241127 12:51:04.824"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.817" endtime="20241127 12:51:04.824"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.825" endtime="20241127 12:51:04.825"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.826" endtime="20241127 12:51:04.826"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.825" endtime="20241127 12:51:04.826"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.826" endtime="20241127 12:51:04.826"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.826" endtime="20241127 12:51:04.826"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.825" endtime="20241127 12:51:04.826"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.824" endtime="20241127 12:51:04.826"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:04.831" endtime="20241127 12:51:04.831"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.834" endtime="20241127 12:51:04.834"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.826" endtime="20241127 12:51:04.834"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.835" endtime="20241127 12:51:04.836"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.836" endtime="20241127 12:51:04.836"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.836" endtime="20241127 12:51:04.836"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.836" endtime="20241127 12:51:04.836"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.836" endtime="20241127 12:51:04.836"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.836" endtime="20241127 12:51:04.837"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.834" endtime="20241127 12:51:04.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.839" endtime="20241127 12:51:04.839"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.837" endtime="20241127 12:51:04.839"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.846" endtime="20241127 12:51:04.846"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.846" endtime="20241127 12:51:04.846"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.839" endtime="20241127 12:51:04.846"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.580" endtime="20241127 12:51:04.846"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.847" endtime="20241127 12:51:04.847"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:04.847" endtime="20241127 12:51:04.847"/>
</return>
<msg timestamp="20241127 12:51:04.848" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:04.579" endtime="20241127 12:51:04.848"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.850" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:04.849" endtime="20241127 12:51:04.850"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.851" endtime="20241127 12:51:04.851"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.851" endtime="20241127 12:51:04.851"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.851" endtime="20241127 12:51:04.851"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.852" endtime="20241127 12:51:04.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.852" endtime="20241127 12:51:04.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.852" endtime="20241127 12:51:04.852"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.853" endtime="20241127 12:51:04.853"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.853" endtime="20241127 12:51:04.853"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.855" endtime="20241127 12:51:04.855"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.856"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.856"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.856"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.856"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.857"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.857" endtime="20241127 12:51:04.857"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.858"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.856" endtime="20241127 12:51:04.858"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.858"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.858"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.858"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.859" endtime="20241127 12:51:04.859"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.859"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.859"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.860" endtime="20241127 12:51:04.860"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.860" endtime="20241127 12:51:04.860"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.859" endtime="20241127 12:51:04.860"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.859" endtime="20241127 12:51:04.860"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.860"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:04.858" endtime="20241127 12:51:04.860"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:04.850" endtime="20241127 12:51:04.860"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:51:04.850" endtime="20241127 12:51:04.860"/>
</for>
<msg timestamp="20241127 12:51:04.861" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:04.848" endtime="20241127 12:51:04.861"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.861" endtime="20241127 12:51:04.862"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:04.867" endtime="20241127 12:51:04.868"/>
</kw>
<msg timestamp="20241127 12:51:04.868" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.866" endtime="20241127 12:51:04.868"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.869" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241127 12:51:04.869" endtime="20241127 12:51:04.869"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.870" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.870" endtime="20241127 12:51:04.870"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.870" endtime="20241127 12:51:04.870"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.871" endtime="20241127 12:51:04.871"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.871" endtime="20241127 12:51:04.871"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.870" endtime="20241127 12:51:04.871"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.868" endtime="20241127 12:51:04.871"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.868" endtime="20241127 12:51:04.871"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:04.871" endtime="20241127 12:51:04.871"/>
</return>
<msg timestamp="20241127 12:51:04.872" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.865" endtime="20241127 12:51:04.872"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.872" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241127 12:51:04.872" endtime="20241127 12:51:04.872"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.872" endtime="20241127 12:51:04.872"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.873" endtime="20241127 12:51:04.873"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.873" endtime="20241127 12:51:04.873"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.872" endtime="20241127 12:51:04.873"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:04.874" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '423', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241127 12:51:04.873" endtime="20241127 12:51:04.874"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:04.876" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "423", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241127 12:51:04.876" endtime="20241127 12:51:04.877"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:04.882" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:04.882" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:04.877" endtime="20241127 12:51:04.883"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.883" endtime="20241127 12:51:04.884"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:04.884" endtime="20241127 12:51:04.884"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.875" endtime="20241127 12:51:04.885"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.862" endtime="20241127 12:51:04.885"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:04.885" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:04.885" endtime="20241127 12:51:04.885"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.573" endtime="20241127 12:51:04.886"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.886" endtime="20241127 12:51:04.886"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.886" endtime="20241127 12:51:04.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.887" endtime="20241127 12:51:04.887"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.886" endtime="20241127 12:51:04.887"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.573" endtime="20241127 12:51:04.887"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.573" endtime="20241127 12:51:04.887"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.888" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241127 12:51:04.887" endtime="20241127 12:51:04.888"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:04.888" endtime="20241127 12:51:04.888"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:04.889" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241127 12:51:04.888" endtime="20241127 12:51:04.889"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.889" endtime="20241127 12:51:04.889"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.889" endtime="20241127 12:51:04.889"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.889" endtime="20241127 12:51:04.889"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.889" endtime="20241127 12:51:04.889"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:04.890" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:51:04.890" endtime="20241127 12:51:04.890"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.890" endtime="20241127 12:51:04.891"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.890" endtime="20241127 12:51:04.891"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:04.891" endtime="20241127 12:51:04.891"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.891" endtime="20241127 12:51:04.891"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.893" endtime="20241127 12:51:04.893"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.891" endtime="20241127 12:51:04.893"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.895" endtime="20241127 12:51:04.895"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.896" endtime="20241127 12:51:04.897"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.893" endtime="20241127 12:51:04.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.898" endtime="20241127 12:51:04.898"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.897" endtime="20241127 12:51:04.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.902" endtime="20241127 12:51:04.902"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.898" endtime="20241127 12:51:04.902"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.921" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:04.915" endtime="20241127 12:51:04.921"/>
</kw>
<msg timestamp="20241127 12:51:04.921" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.915" endtime="20241127 12:51:04.921"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.921" endtime="20241127 12:51:04.921"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.915" endtime="20241127 12:51:04.921"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.922" endtime="20241127 12:51:04.922"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.922" endtime="20241127 12:51:04.922"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.922" endtime="20241127 12:51:04.922"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.914" endtime="20241127 12:51:04.922"/>
</try>
<msg timestamp="20241127 12:51:04.922" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.914" endtime="20241127 12:51:04.922"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.923" endtime="20241127 12:51:04.923"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.912" endtime="20241127 12:51:04.923"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.923" endtime="20241127 12:51:04.923"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.923" endtime="20241127 12:51:04.923"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.912" endtime="20241127 12:51:04.923"/>
</try>
<msg timestamp="20241127 12:51:04.923" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.911" endtime="20241127 12:51:04.923"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.926" endtime="20241127 12:51:04.926"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.926" endtime="20241127 12:51:04.927"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.926" endtime="20241127 12:51:04.927"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.926" endtime="20241127 12:51:04.927"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.924" endtime="20241127 12:51:04.927"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.910" endtime="20241127 12:51:04.927"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.940" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:04.936" endtime="20241127 12:51:04.940"/>
</kw>
<msg timestamp="20241127 12:51:04.940" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.935" endtime="20241127 12:51:04.940"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.940" endtime="20241127 12:51:04.940"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.935" endtime="20241127 12:51:04.940"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.941" endtime="20241127 12:51:04.941"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.941" endtime="20241127 12:51:04.941"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.941" endtime="20241127 12:51:04.941"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.935" endtime="20241127 12:51:04.941"/>
</try>
<msg timestamp="20241127 12:51:04.942" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.935" endtime="20241127 12:51:04.942"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.942" endtime="20241127 12:51:04.942"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.934" endtime="20241127 12:51:04.942"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:04.942" endtime="20241127 12:51:04.942"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:04.942" endtime="20241127 12:51:04.942"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.934" endtime="20241127 12:51:04.942"/>
</try>
<msg timestamp="20241127 12:51:04.943" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.933" endtime="20241127 12:51:04.943"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.945" endtime="20241127 12:51:04.945"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.945" endtime="20241127 12:51:04.945"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.945" endtime="20241127 12:51:04.945"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.945" endtime="20241127 12:51:04.945"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.944" endtime="20241127 12:51:04.946"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.933" endtime="20241127 12:51:04.946"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:04.955" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:51:04.955" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:04.946" endtime="20241127 12:51:04.956"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:04.956" endtime="20241127 12:51:04.956"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.946" endtime="20241127 12:51:04.956"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.956" endtime="20241127 12:51:04.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.956" endtime="20241127 12:51:04.957"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.956" endtime="20241127 12:51:04.957"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.946" endtime="20241127 12:51:04.957"/>
</try>
<msg timestamp="20241127 12:51:04.957" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:04.930" endtime="20241127 12:51:04.957"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.960" endtime="20241127 12:51:04.960"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.960" endtime="20241127 12:51:04.960"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.960" endtime="20241127 12:51:04.960"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.960" endtime="20241127 12:51:04.961"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.958" endtime="20241127 12:51:04.961"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.929" endtime="20241127 12:51:04.961"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.961" endtime="20241127 12:51:04.961"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.961" endtime="20241127 12:51:04.961"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.929" endtime="20241127 12:51:04.961"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.929" endtime="20241127 12:51:04.961"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.971" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:04.966" endtime="20241127 12:51:04.971"/>
</kw>
<msg timestamp="20241127 12:51:04.971" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.966" endtime="20241127 12:51:04.971"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.971" endtime="20241127 12:51:04.972"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.966" endtime="20241127 12:51:04.972"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.972" endtime="20241127 12:51:04.972"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.972" endtime="20241127 12:51:04.972"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.972" endtime="20241127 12:51:04.972"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.965" endtime="20241127 12:51:04.972"/>
</try>
<msg timestamp="20241127 12:51:04.973" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.965" endtime="20241127 12:51:04.973"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.973" endtime="20241127 12:51:04.973"/>
</return>
<msg timestamp="20241127 12:51:04.973" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.964" endtime="20241127 12:51:04.973"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.975" endtime="20241127 12:51:04.975"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.975" endtime="20241127 12:51:04.975"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.975" endtime="20241127 12:51:04.975"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.975" endtime="20241127 12:51:04.975"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.974" endtime="20241127 12:51:04.976"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.963" endtime="20241127 12:51:04.976"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.907" endtime="20241127 12:51:04.976"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:04.990" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241127 12:51:04.980" endtime="20241127 12:51:04.990"/>
</kw>
<msg timestamp="20241127 12:51:04.991" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.979" endtime="20241127 12:51:04.991"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.991" endtime="20241127 12:51:04.991"/>
</return>
<status status="PASS" starttime="20241127 12:51:04.979" endtime="20241127 12:51:04.991"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.991" endtime="20241127 12:51:04.991"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.992" endtime="20241127 12:51:04.992"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.991" endtime="20241127 12:51:04.992"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.979" endtime="20241127 12:51:04.992"/>
</try>
<msg timestamp="20241127 12:51:04.992" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.979" endtime="20241127 12:51:04.992"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:04.992" endtime="20241127 12:51:04.992"/>
</return>
<msg timestamp="20241127 12:51:04.993" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:51:04.978" endtime="20241127 12:51:04.993"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.996" endtime="20241127 12:51:04.996"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.996" endtime="20241127 12:51:04.996"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.995" endtime="20241127 12:51:04.996"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.995" endtime="20241127 12:51:04.996"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.994" endtime="20241127 12:51:04.996"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.977" endtime="20241127 12:51:04.996"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:04.997" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:04.997" endtime="20241127 12:51:04.997"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:51:04.998" endtime="20241127 12:51:04.998"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.000" endtime="20241127 12:51:05.000"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:04.998" endtime="20241127 12:51:05.000"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:05.000" endtime="20241127 12:51:05.001"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.000" endtime="20241127 12:51:05.001"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.998" endtime="20241127 12:51:05.001"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:51:05.002" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241127 12:51:05.001" endtime="20241127 12:51:05.021"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.001" endtime="20241127 12:51:05.021"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.021" endtime="20241127 12:51:05.021"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.022" endtime="20241127 12:51:05.022"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.021" endtime="20241127 12:51:05.022"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.001" endtime="20241127 12:51:05.022"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.998" endtime="20241127 12:51:05.022"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.997" endtime="20241127 12:51:05.022"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.997" endtime="20241127 12:51:05.022"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.022" endtime="20241127 12:51:05.022"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.022" endtime="20241127 12:51:05.022"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.997" endtime="20241127 12:51:05.022"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.906" endtime="20241127 12:51:05.023"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.023" endtime="20241127 12:51:05.023"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.023" endtime="20241127 12:51:05.023"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.023" endtime="20241127 12:51:05.023"/>
</if>
<status status="PASS" starttime="20241127 12:51:04.902" endtime="20241127 12:51:05.023"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.024" endtime="20241127 12:51:05.024"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.023" endtime="20241127 12:51:05.024"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.025" endtime="20241127 12:51:05.025"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.026" endtime="20241127 12:51:05.026"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.025" endtime="20241127 12:51:05.026"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.026" endtime="20241127 12:51:05.026"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.026" endtime="20241127 12:51:05.026"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.025" endtime="20241127 12:51:05.026"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.024" endtime="20241127 12:51:05.026"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:05.031" endtime="20241127 12:51:05.031"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.034" endtime="20241127 12:51:05.034"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.026" endtime="20241127 12:51:05.034"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.035" endtime="20241127 12:51:05.035"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.036" endtime="20241127 12:51:05.036"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.036" endtime="20241127 12:51:05.036"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.036" endtime="20241127 12:51:05.036"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.036" endtime="20241127 12:51:05.036"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.035" endtime="20241127 12:51:05.036"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.034" endtime="20241127 12:51:05.036"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:05.042" endtime="20241127 12:51:05.042"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.045" endtime="20241127 12:51:05.045"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.037" endtime="20241127 12:51:05.045"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.046" endtime="20241127 12:51:05.046"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.047" endtime="20241127 12:51:05.047"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.046" endtime="20241127 12:51:05.047"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.047" endtime="20241127 12:51:05.047"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.047" endtime="20241127 12:51:05.047"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.046" endtime="20241127 12:51:05.047"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.045" endtime="20241127 12:51:05.047"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.049" endtime="20241127 12:51:05.049"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.047" endtime="20241127 12:51:05.049"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.055" endtime="20241127 12:51:05.055"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.055" endtime="20241127 12:51:05.055"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.049" endtime="20241127 12:51:05.055"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.890" endtime="20241127 12:51:05.055"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.056" endtime="20241127 12:51:05.056"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:05.056" endtime="20241127 12:51:05.056"/>
</return>
<msg timestamp="20241127 12:51:05.056" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:51:04.890" endtime="20241127 12:51:05.056"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.057" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241127 12:51:05.057" endtime="20241127 12:51:05.057"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.058" endtime="20241127 12:51:05.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.058" endtime="20241127 12:51:05.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.058" endtime="20241127 12:51:05.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.059" endtime="20241127 12:51:05.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.059" endtime="20241127 12:51:05.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.059" endtime="20241127 12:51:05.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.059" endtime="20241127 12:51:05.059"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.060" endtime="20241127 12:51:05.060"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.061" endtime="20241127 12:51:05.061"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.062"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.062"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.062"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.062"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.063"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.063" endtime="20241127 12:51:05.064"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.064"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.062" endtime="20241127 12:51:05.064"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.064"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.064"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.064"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.064"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.064"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.065"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.065" endtime="20241127 12:51:05.065"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.065" endtime="20241127 12:51:05.065"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.065" endtime="20241127 12:51:05.065"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.065" endtime="20241127 12:51:05.065"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.065"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.064" endtime="20241127 12:51:05.065"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.058" endtime="20241127 12:51:05.065"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:51:05.057" endtime="20241127 12:51:05.065"/>
</for>
<msg timestamp="20241127 12:51:05.065" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:05.056" endtime="20241127 12:51:05.065"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.066" endtime="20241127 12:51:05.066"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:05.070" endtime="20241127 12:51:05.070"/>
</kw>
<msg timestamp="20241127 12:51:05.070" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.069" endtime="20241127 12:51:05.070"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.071" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241127 12:51:05.070" endtime="20241127 12:51:05.071"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.071" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.071" endtime="20241127 12:51:05.071"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.071" endtime="20241127 12:51:05.071"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.072" endtime="20241127 12:51:05.072"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.071" endtime="20241127 12:51:05.072"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.071" endtime="20241127 12:51:05.072"/>
</if>
<status status="PASS" starttime="20241127 12:51:05.070" endtime="20241127 12:51:05.072"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.070" endtime="20241127 12:51:05.072"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:05.072" endtime="20241127 12:51:05.072"/>
</return>
<msg timestamp="20241127 12:51:05.072" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.069" endtime="20241127 12:51:05.072"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.073" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241127 12:51:05.073" endtime="20241127 12:51:05.073"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.072" endtime="20241127 12:51:05.073"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.073" endtime="20241127 12:51:05.073"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.073" endtime="20241127 12:51:05.073"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.072" endtime="20241127 12:51:05.073"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:05.074" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '424', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241127 12:51:05.073" endtime="20241127 12:51:05.074"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:05.075" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "424", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241127 12:51:05.075" endtime="20241127 12:51:05.075"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:05.127" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:05.127" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:05.076" endtime="20241127 12:51:05.127"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.127" endtime="20241127 12:51:05.128"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:05.128" endtime="20241127 12:51:05.128"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.074" endtime="20241127 12:51:05.129"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.066" endtime="20241127 12:51:05.129"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:05.129" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:05.129" endtime="20241127 12:51:05.129"/>
</kw>
<status status="PASS" starttime="20241127 12:51:04.887" endtime="20241127 12:51:05.129"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.130" endtime="20241127 12:51:05.130"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.130" endtime="20241127 12:51:05.130"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.130" endtime="20241127 12:51:05.130"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.130" endtime="20241127 12:51:05.130"/>
</branch>
<status status="PASS" starttime="20241127 12:51:04.887" endtime="20241127 12:51:05.130"/>
</try>
<status status="PASS" starttime="20241127 12:51:04.887" endtime="20241127 12:51:05.131"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.131" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241127 12:51:05.131" endtime="20241127 12:51:05.131"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.132" endtime="20241127 12:51:05.132"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:05.133" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241127 12:51:05.132" endtime="20241127 12:51:05.133"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.133" endtime="20241127 12:51:05.133"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.134" endtime="20241127 12:51:05.134"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.133" endtime="20241127 12:51:05.134"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.133" endtime="20241127 12:51:05.134"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.135" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:05.135" endtime="20241127 12:51:05.135"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.135" endtime="20241127 12:51:05.135"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.135" endtime="20241127 12:51:05.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.136" endtime="20241127 12:51:05.136"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.136" endtime="20241127 12:51:05.136"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:05.149" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:05.143" endtime="20241127 12:51:05.149"/>
</kw>
<msg timestamp="20241127 12:51:05.149" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.142" endtime="20241127 12:51:05.149"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.149" endtime="20241127 12:51:05.149"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.142" endtime="20241127 12:51:05.149"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.150" endtime="20241127 12:51:05.150"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.150" endtime="20241127 12:51:05.150"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.149" endtime="20241127 12:51:05.150"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.142" endtime="20241127 12:51:05.150"/>
</try>
<msg timestamp="20241127 12:51:05.150" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.142" endtime="20241127 12:51:05.150"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.151" endtime="20241127 12:51:05.151"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.141" endtime="20241127 12:51:05.151"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.151" endtime="20241127 12:51:05.151"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.151" endtime="20241127 12:51:05.151"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.141" endtime="20241127 12:51:05.151"/>
</try>
<msg timestamp="20241127 12:51:05.151" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.140" endtime="20241127 12:51:05.151"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.153" endtime="20241127 12:51:05.153"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.153" endtime="20241127 12:51:05.153"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.153" endtime="20241127 12:51:05.153"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.153" endtime="20241127 12:51:05.153"/>
</if>
<status status="PASS" starttime="20241127 12:51:05.152" endtime="20241127 12:51:05.154"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.140" endtime="20241127 12:51:05.154"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:05.162" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:05.157" endtime="20241127 12:51:05.163"/>
</kw>
<msg timestamp="20241127 12:51:05.163" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.157" endtime="20241127 12:51:05.163"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.163" endtime="20241127 12:51:05.163"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.157" endtime="20241127 12:51:05.163"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.163" endtime="20241127 12:51:05.163"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.163" endtime="20241127 12:51:05.164"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.163" endtime="20241127 12:51:05.164"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.157" endtime="20241127 12:51:05.164"/>
</try>
<msg timestamp="20241127 12:51:05.164" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.157" endtime="20241127 12:51:05.164"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.164" endtime="20241127 12:51:05.164"/>
</return>
<msg timestamp="20241127 12:51:05.164" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.155" endtime="20241127 12:51:05.164"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.166" endtime="20241127 12:51:05.166"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.166" endtime="20241127 12:51:05.166"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.166" endtime="20241127 12:51:05.167"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.166" endtime="20241127 12:51:05.167"/>
</if>
<status status="PASS" starttime="20241127 12:51:05.165" endtime="20241127 12:51:05.167"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.155" endtime="20241127 12:51:05.167"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:05.182" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241127 12:51:05.170" endtime="20241127 12:51:05.182"/>
</kw>
<msg timestamp="20241127 12:51:05.182" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.170" endtime="20241127 12:51:05.182"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.182" endtime="20241127 12:51:05.182"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.170" endtime="20241127 12:51:05.182"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.182" endtime="20241127 12:51:05.182"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.183" endtime="20241127 12:51:05.183"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.182" endtime="20241127 12:51:05.183"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.170" endtime="20241127 12:51:05.183"/>
</try>
<msg timestamp="20241127 12:51:05.183" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.170" endtime="20241127 12:51:05.183"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:05.183" endtime="20241127 12:51:05.183"/>
</return>
<msg timestamp="20241127 12:51:05.183" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.169" endtime="20241127 12:51:05.183"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.185" endtime="20241127 12:51:05.185"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.185" endtime="20241127 12:51:05.186"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.185" endtime="20241127 12:51:05.186"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.185" endtime="20241127 12:51:05.186"/>
</if>
<status status="PASS" starttime="20241127 12:51:05.184" endtime="20241127 12:51:05.186"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.168" endtime="20241127 12:51:05.186"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.138" endtime="20241127 12:51:05.186"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:05.186" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:05.186" endtime="20241127 12:51:05.186"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.188" endtime="20241127 12:51:05.188"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.188" endtime="20241127 12:51:05.188"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:05.188" endtime="20241127 12:51:05.188"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.188" endtime="20241127 12:51:05.188"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.187" endtime="20241127 12:51:05.189"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:51:05.189" endtime="20241127 12:51:05.230"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.189" endtime="20241127 12:51:05.230"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.230" endtime="20241127 12:51:05.230"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.230" endtime="20241127 12:51:05.231"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.230" endtime="20241127 12:51:05.231"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.189" endtime="20241127 12:51:05.231"/>
</try>
<status status="PASS" starttime="20241127 12:51:05.187" endtime="20241127 12:51:05.231"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.187" endtime="20241127 12:51:05.231"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.187" endtime="20241127 12:51:05.231"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.231" endtime="20241127 12:51:05.231"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.231" endtime="20241127 12:51:05.231"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.187" endtime="20241127 12:51:05.231"/>
</try>
<status status="PASS" starttime="20241127 12:51:05.137" endtime="20241127 12:51:05.231"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.136" endtime="20241127 12:51:05.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.233" endtime="20241127 12:51:05.233"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.235" endtime="20241127 12:51:05.235"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.232" endtime="20241127 12:51:05.235"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.236" endtime="20241127 12:51:05.236"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.235" endtime="20241127 12:51:05.236"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.238" endtime="20241127 12:51:05.238"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.236" endtime="20241127 12:51:05.238"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.240" endtime="20241127 12:51:05.240"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.240" endtime="20241127 12:51:05.240"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.240" endtime="20241127 12:51:05.240"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.240" endtime="20241127 12:51:05.240"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.238" endtime="20241127 12:51:05.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.241" endtime="20241127 12:51:05.242"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.241" endtime="20241127 12:51:05.242"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.242" endtime="20241127 12:51:05.242"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.243" endtime="20241127 12:51:05.243"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.242" endtime="20241127 12:51:05.243"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.243" endtime="20241127 12:51:05.243"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.243" endtime="20241127 12:51:05.243"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.242" endtime="20241127 12:51:05.243"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.242" endtime="20241127 12:51:05.243"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:05.247" endtime="20241127 12:51:05.247"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.250" endtime="20241127 12:51:05.250"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.243" endtime="20241127 12:51:05.250"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.251" endtime="20241127 12:51:05.251"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.250" endtime="20241127 12:51:05.251"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:05.255" endtime="20241127 12:51:05.256"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.258" endtime="20241127 12:51:05.258"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.252" endtime="20241127 12:51:05.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.259" endtime="20241127 12:51:05.259"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.259" endtime="20241127 12:51:05.259"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.259" endtime="20241127 12:51:05.259"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.260" endtime="20241127 12:51:05.260"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.259" endtime="20241127 12:51:05.260"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.259" endtime="20241127 12:51:05.260"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.258" endtime="20241127 12:51:05.260"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.261" endtime="20241127 12:51:05.262"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.260" endtime="20241127 12:51:05.262"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.266" endtime="20241127 12:51:05.266"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.267" endtime="20241127 12:51:05.267"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.262" endtime="20241127 12:51:05.267"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.135" endtime="20241127 12:51:05.267"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.267" endtime="20241127 12:51:05.267"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:05.267" endtime="20241127 12:51:05.268"/>
</return>
<msg timestamp="20241127 12:51:05.268" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:05.134" endtime="20241127 12:51:05.268"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.269" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241127 12:51:05.268" endtime="20241127 12:51:05.269"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.269" endtime="20241127 12:51:05.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.269" endtime="20241127 12:51:05.269"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.270"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.270"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.270" endtime="20241127 12:51:05.271"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.271" endtime="20241127 12:51:05.272"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.272" endtime="20241127 12:51:05.273"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.273"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.273"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.273"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.274"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.274"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.274"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.274"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.274"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.274"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.274"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.274"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.274"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.273" endtime="20241127 12:51:05.274"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:05.275" endtime="20241127 12:51:05.275"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.275" endtime="20241127 12:51:05.275"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.275"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.276" endtime="20241127 12:51:05.276"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.275" endtime="20241127 12:51:05.276"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.275" endtime="20241127 12:51:05.276"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.276" endtime="20241127 12:51:05.276"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:05.276" endtime="20241127 12:51:05.276"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:05.276" endtime="20241127 12:51:05.276"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.276" endtime="20241127 12:51:05.276"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.276"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:05.274" endtime="20241127 12:51:05.276"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:05.269" endtime="20241127 12:51:05.276"/>
</iter>
<status status="NOT RUN" starttime="20241127 12:51:05.269" endtime="20241127 12:51:05.276"/>
</for>
<msg timestamp="20241127 12:51:05.277" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:05.268" endtime="20241127 12:51:05.277"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.277" endtime="20241127 12:51:05.278"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:05.281" endtime="20241127 12:51:05.282"/>
</kw>
<msg timestamp="20241127 12:51:05.282" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.281" endtime="20241127 12:51:05.282"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.283" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241127 12:51:05.282" endtime="20241127 12:51:05.283"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.283" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.283" endtime="20241127 12:51:05.283"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.283" endtime="20241127 12:51:05.283"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.283" endtime="20241127 12:51:05.284"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.283" endtime="20241127 12:51:05.284"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.283" endtime="20241127 12:51:05.284"/>
</if>
<status status="PASS" starttime="20241127 12:51:05.282" endtime="20241127 12:51:05.284"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.282" endtime="20241127 12:51:05.284"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:05.284" endtime="20241127 12:51:05.284"/>
</return>
<msg timestamp="20241127 12:51:05.284" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:05.281" endtime="20241127 12:51:05.284"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:05.285" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241127 12:51:05.285" endtime="20241127 12:51:05.285"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.284" endtime="20241127 12:51:05.285"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.285" endtime="20241127 12:51:05.286"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.285" endtime="20241127 12:51:05.286"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.284" endtime="20241127 12:51:05.286"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:05.287" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '425', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241127 12:51:05.286" endtime="20241127 12:51:05.287"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:05.288" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "425", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241127 12:51:05.288" endtime="20241127 12:51:05.288"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:05.294" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:05.295" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:05.288" endtime="20241127 12:51:05.295"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.295" endtime="20241127 12:51:05.296"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:05.296" endtime="20241127 12:51:05.296"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.287" endtime="20241127 12:51:05.296"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.278" endtime="20241127 12:51:05.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:05.297" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:05.297" endtime="20241127 12:51:05.297"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.131" endtime="20241127 12:51:05.297"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.298" endtime="20241127 12:51:05.298"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.298" endtime="20241127 12:51:05.298"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.298" endtime="20241127 12:51:05.298"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.297" endtime="20241127 12:51:05.298"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.131" endtime="20241127 12:51:05.298"/>
</try>
<status status="PASS" starttime="20241127 12:51:05.131" endtime="20241127 12:51:05.298"/>
</iter>
<status status="PASS" starttime="20241127 12:51:01.424" endtime="20241127 12:51:05.298"/>
</for>
<status status="PASS" starttime="20241127 12:51:01.424" endtime="20241127 12:51:05.299"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.424" endtime="20241127 12:51:05.299"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:05.301" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '106', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:51:05.300" endtime="20241127 12:51:05.301"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:05.302" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "106", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:51:05.302" endtime="20241127 12:51:05.302"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:05.329" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:05.329" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:05.302" endtime="20241127 12:51:05.329"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.329" endtime="20241127 12:51:05.330"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:05.330" endtime="20241127 12:51:05.330"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.301" endtime="20241127 12:51:05.330"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.299" endtime="20241127 12:51:05.330"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.418" endtime="20241127 12:51:05.330"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.331" endtime="20241127 12:51:05.331"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.331" endtime="20241127 12:51:05.331"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.331" endtime="20241127 12:51:05.331"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.330" endtime="20241127 12:51:05.331"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.418" endtime="20241127 12:51:05.331"/>
</try>
<status status="PASS" starttime="20241127 12:51:01.418" endtime="20241127 12:51:05.331"/>
</iter>
<status status="PASS" starttime="20241127 12:51:01.417" endtime="20241127 12:51:05.331"/>
</for>
<status status="PASS" starttime="20241127 12:51:01.417" endtime="20241127 12:51:05.331"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.417" endtime="20241127 12:51:05.332"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:05.333" level="INFO">${response_message} = {'testCaseRunId': '39', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:51:05.333" endtime="20241127 12:51:05.333"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:05.334" level="INFO">${json_response} = {"testCaseRunId": "39", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:51:05.334" endtime="20241127 12:51:05.334"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:05.339" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:05.340" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:05.334" endtime="20241127 12:51:05.340"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.340" endtime="20241127 12:51:05.340"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:05.341" endtime="20241127 12:51:05.341"/>
</return>
<status status="PASS" starttime="20241127 12:51:05.333" endtime="20241127 12:51:05.341"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.332" endtime="20241127 12:51:05.341"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.363" endtime="20241127 12:51:05.341"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.342" endtime="20241127 12:51:05.342"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:05.342" endtime="20241127 12:51:05.343"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.343" endtime="20241127 12:51:05.343"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.341" endtime="20241127 12:51:05.343"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.363" endtime="20241127 12:51:05.343"/>
</try>
<status status="PASS" starttime="20241127 12:51:01.350" endtime="20241127 12:51:05.343"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.343" endtime="20241127 12:51:05.344"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.343" endtime="20241127 12:51:05.344"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.350" endtime="20241127 12:51:05.344"/>
</if>
<status status="PASS" starttime="20241127 12:51:01.340" endtime="20241127 12:51:05.344"/>
</kw>
<status status="PASS" starttime="20241127 12:51:01.339" endtime="20241127 12:51:05.344"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.344" endtime="20241127 12:51:05.344"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.344" endtime="20241127 12:51:05.344"/>
</branch>
<status status="PASS" starttime="20241127 12:51:01.339" endtime="20241127 12:51:05.345"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241127 12:51:05.572" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241127 12:51:05.345" endtime="20241127 12:51:05.572"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.345" endtime="20241127 12:51:05.572"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:05.572" endtime="20241127 12:51:05.573"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:05.572" endtime="20241127 12:51:05.573"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.345" endtime="20241127 12:51:05.573"/>
</try>
<status status="PASS" starttime="20241127 12:51:05.345" endtime="20241127 12:51:05.573"/>
</kw>
<status status="PASS" starttime="20241127 12:41:11.056" endtime="20241127 12:51:05.573"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:05.574" endtime="20241127 12:51:05.574"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241127 12:51:05.593" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '40', 'testCaseId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:21:03.947Z', 'createdAt': '2024-11-27T07:21:03.947Z', 'errorMes...</msg>
<status status="PASS" starttime="20241127 12:51:05.574" endtime="20241127 12:51:05.593"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241127 12:51:05.594" endtime="20241127 12:51:05.594"/>
</break>
<status status="NOT RUN" starttime="20241127 12:51:05.594" endtime="20241127 12:51:05.595"/>
</branch>
<status status="PASS" starttime="20241127 12:51:05.594" endtime="20241127 12:51:05.595"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241127 12:51:05.599" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\d5580e52-7a41-49be-b3bc-cf2b2bf66f92"}</msg>
<msg timestamp="20241127 12:51:06.014" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\d5580e52-7a41-49be-b3bc-cf2b2bf66f92"}</msg>
<status status="PASS" starttime="20241127 12:51:05.597" endtime="20241127 12:51:06.014"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241127 12:51:06.015" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241127 12:51:06.034" level="INFO">Successfully created context. </msg>
<msg timestamp="20241127 12:51:06.034" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241127 12:51:06.014" endtime="20241127 12:51:06.034"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241127 12:51:06.035" endtime="20241127 12:51:06.036"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:51:07.462" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241127 12:51:07.463" level="INFO">${page_id} = {'page_id': 'page=a9c10354-e2c5-4ad8-a5f9-509593d73ef5', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:51:06.036" endtime="20241127 12:51:07.463"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.595" endtime="20241127 12:51:07.463"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:07.464" endtime="20241127 12:51:07.475"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:07.478" endtime="20241127 12:51:07.478"/>
</kw>
<msg timestamp="20241127 12:51:07.478" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.477" endtime="20241127 12:51:07.478"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.479" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241127 12:51:07.479" endtime="20241127 12:51:07.479"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.479" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.479" endtime="20241127 12:51:07.480"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.479" endtime="20241127 12:51:07.480"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.480" endtime="20241127 12:51:07.480"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.480" endtime="20241127 12:51:07.480"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.479" endtime="20241127 12:51:07.480"/>
</if>
<status status="PASS" starttime="20241127 12:51:07.478" endtime="20241127 12:51:07.480"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.478" endtime="20241127 12:51:07.480"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:07.480" endtime="20241127 12:51:07.480"/>
</return>
<msg timestamp="20241127 12:51:07.480" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.477" endtime="20241127 12:51:07.480"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.481" endtime="20241127 12:51:07.481"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241127 12:51:07.481" endtime="20241127 12:51:07.481"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:07.481" endtime="20241127 12:51:07.481"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.481" endtime="20241127 12:51:07.481"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:07.484" endtime="20241127 12:51:07.484"/>
</kw>
<msg timestamp="20241127 12:51:07.484" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.484" endtime="20241127 12:51:07.484"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.485" level="INFO">${values} = {'id': '2', 'name': 'Validate profile information', 'projectId': '1', 'createdAt': '2024-11-25T08:09:08.717Z', 'updatedAt': '2024-11-25T10:32:49.327Z', 'project': {'id': '1', 'name': 'IAssistant', 'cr...</msg>
<status status="PASS" starttime="20241127 12:51:07.485" endtime="20241127 12:51:07.485"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.486" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.485" endtime="20241127 12:51:07.486"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.485" endtime="20241127 12:51:07.486"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.486" endtime="20241127 12:51:07.486"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.486" endtime="20241127 12:51:07.486"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.485" endtime="20241127 12:51:07.486"/>
</if>
<status status="PASS" starttime="20241127 12:51:07.484" endtime="20241127 12:51:07.486"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.484" endtime="20241127 12:51:07.486"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:07.486" endtime="20241127 12:51:07.486"/>
</return>
<msg timestamp="20241127 12:51:07.487" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.483" endtime="20241127 12:51:07.487"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:07.489" endtime="20241127 12:51:07.489"/>
</kw>
<msg timestamp="20241127 12:51:07.490" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.489" endtime="20241127 12:51:07.490"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.491" level="INFO">${values} = {'id': '40', 'testCaseId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:21:03.947Z', 'createdAt': '2024-11-27T07:21:03.947Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:51:07.491" endtime="20241127 12:51:07.491"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.492" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.491" endtime="20241127 12:51:07.492"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.491" endtime="20241127 12:51:07.492"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.492" endtime="20241127 12:51:07.492"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.492" endtime="20241127 12:51:07.492"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.491" endtime="20241127 12:51:07.492"/>
</if>
<status status="PASS" starttime="20241127 12:51:07.490" endtime="20241127 12:51:07.492"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.490" endtime="20241127 12:51:07.492"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:07.492" endtime="20241127 12:51:07.492"/>
</return>
<msg timestamp="20241127 12:51:07.493" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.488" endtime="20241127 12:51:07.493"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.493" endtime="20241127 12:51:07.493"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.493" endtime="20241127 12:51:07.493"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.493" endtime="20241127 12:51:07.493"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.494" level="INFO">${testCase} = {'id': '2', 'name': 'Validate profile information', 'projectId': '1', 'createdAt': '2024-11-25T08:09:08.717Z', 'updatedAt': '2024-11-25T10:32:49.327Z', 'project': {'id': '1', 'name': 'IAssistant', 'cr...</msg>
<status status="PASS" starttime="20241127 12:51:07.494" endtime="20241127 12:51:07.494"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.495" level="INFO">${testCaseRun} = {'id': '40', 'testCaseId': '2', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-27T07:21:03.947Z', 'createdAt': '2024-11-27T07:21:03.947Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241127 12:51:07.494" endtime="20241127 12:51:07.495"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.496" level="INFO">${assertions} = [{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarge...</msg>
<status status="PASS" starttime="20241127 12:51:07.495" endtime="20241127 12:51:07.496"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:07.496" endtime="20241127 12:51:07.497"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:07.501" endtime="20241127 12:51:07.502"/>
</kw>
<msg timestamp="20241127 12:51:07.502" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.501" endtime="20241127 12:51:07.502"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.503" level="INFO">${values} = [{'id': '2', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:09:08.930Z', 'updatedAt': '2024-11-25T10:32:49.370Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241127 12:51:07.502" endtime="20241127 12:51:07.503"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.503" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.503" endtime="20241127 12:51:07.503"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.503" endtime="20241127 12:51:07.503"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.504" endtime="20241127 12:51:07.504"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.504" endtime="20241127 12:51:07.504"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.503" endtime="20241127 12:51:07.504"/>
</if>
<status status="PASS" starttime="20241127 12:51:07.502" endtime="20241127 12:51:07.504"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.502" endtime="20241127 12:51:07.504"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:07.504" endtime="20241127 12:51:07.504"/>
</return>
<msg timestamp="20241127 12:51:07.505" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.500" endtime="20241127 12:51:07.505"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:07.505" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '40', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241127 12:51:07.505" endtime="20241127 12:51:07.505"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:07.507" level="INFO">${json_response} = {"testCaseRunId": "40", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241127 12:51:07.506" endtime="20241127 12:51:07.507"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:07.561" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:07.561" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:07.507" endtime="20241127 12:51:07.562"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:07.562" endtime="20241127 12:51:07.562"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:07.562" endtime="20241127 12:51:07.563"/>
</return>
<status status="PASS" starttime="20241127 12:51:07.506" endtime="20241127 12:51:07.563"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:07.564" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241127 12:51:07.563" endtime="20241127 12:51:07.564"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '2', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:09:08.930Z', 'updatedAt': '2024-11-25T10:32:49.370Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.566" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241127 12:51:07.565" endtime="20241127 12:51:07.566"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:07.567" endtime="20241127 12:51:07.568"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:07.575" endtime="20241127 12:51:07.575"/>
</kw>
<msg timestamp="20241127 12:51:07.575" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.574" endtime="20241127 12:51:07.575"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.576" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241127 12:51:07.576" endtime="20241127 12:51:07.576"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.577" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.577" endtime="20241127 12:51:07.577"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.577" endtime="20241127 12:51:07.577"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.577" endtime="20241127 12:51:07.578"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.577" endtime="20241127 12:51:07.578"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.577" endtime="20241127 12:51:07.578"/>
</if>
<status status="PASS" starttime="20241127 12:51:07.576" endtime="20241127 12:51:07.578"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.576" endtime="20241127 12:51:07.578"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:07.578" endtime="20241127 12:51:07.578"/>
</return>
<msg timestamp="20241127 12:51:07.578" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:07.572" endtime="20241127 12:51:07.578"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.579" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241127 12:51:07.579" endtime="20241127 12:51:07.579"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:07.580" endtime="20241127 12:51:07.581"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:07.581" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241127 12:51:07.581" endtime="20241127 12:51:07.581"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.582" endtime="20241127 12:51:07.582"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:07.582" endtime="20241127 12:51:07.582"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:07.581" endtime="20241127 12:51:07.582"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.581" endtime="20241127 12:51:07.582"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:07.583" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:07.583" endtime="20241127 12:51:07.583"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241127 12:51:10.423" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241127 12:51:10.424" level="INFO">${page_id} = {'page_id': 'page=307c36b5-de29-4106-a683-111dac8e19fe', 'video_path': ''}</msg>
<status status="PASS" starttime="20241127 12:51:07.584" endtime="20241127 12:51:10.424"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241127 12:51:10.425" level="INFO">Switching to page {'page_id': 'page=307c36b5-de29-4106-a683-111dac8e19fe', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241127 12:51:10.489" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=c15bcf3d-02fa-475d-b6ee-fe2f1742225b",
    "contexts": [
      {
        "type": "context",
        "id": "context=fdfeaf31-88d6-4223-8694-f8fd0cda532c",
        "activePage": "page=307c36b5-de29-4106-a683-111dac8e19fe",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=a9c10354-e2c5-4ad8-a5f9-509593d73ef5",
            "timestamp": 1732692066.206
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=307c36b5-de29-4106-a683-111dac8e19fe",
            "timestamp": 1732692067.628
          }
        ]
      }
    ],
    "activeContext": "context=fdfeaf31-88d6-4223-8694-f8fd0cda532c",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241127 12:51:10.493" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241127 12:51:10.424" endtime="20241127 12:51:10.493"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.583" endtime="20241127 12:51:10.494"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.583" endtime="20241127 12:51:10.494"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.494" endtime="20241127 12:51:10.494"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.494" endtime="20241127 12:51:10.494"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.496" endtime="20241127 12:51:10.496"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.494" endtime="20241127 12:51:10.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.498" endtime="20241127 12:51:10.498"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.500" endtime="20241127 12:51:10.500"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.496" endtime="20241127 12:51:10.500"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.501" endtime="20241127 12:51:10.501"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.500" endtime="20241127 12:51:10.501"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.505" endtime="20241127 12:51:10.505"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.501" endtime="20241127 12:51:10.505"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.509" endtime="20241127 12:51:10.509"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.510" endtime="20241127 12:51:10.510"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.509" endtime="20241127 12:51:10.510"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.509" endtime="20241127 12:51:10.510"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.505" endtime="20241127 12:51:10.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.512" endtime="20241127 12:51:10.512"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.510" endtime="20241127 12:51:10.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.514" endtime="20241127 12:51:10.514"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.515" endtime="20241127 12:51:10.515"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.515" endtime="20241127 12:51:10.515"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.516" endtime="20241127 12:51:10.516"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.516" endtime="20241127 12:51:10.516"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.515" endtime="20241127 12:51:10.516"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.512" endtime="20241127 12:51:10.516"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:10.524" endtime="20241127 12:51:10.525"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.531" endtime="20241127 12:51:10.531"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.517" endtime="20241127 12:51:10.531"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.533" endtime="20241127 12:51:10.533"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.533" endtime="20241127 12:51:10.533"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.533" endtime="20241127 12:51:10.533"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.534" endtime="20241127 12:51:10.534"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.534" endtime="20241127 12:51:10.534"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.533" endtime="20241127 12:51:10.534"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.531" endtime="20241127 12:51:10.534"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:10.540" endtime="20241127 12:51:10.540"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.543" endtime="20241127 12:51:10.543"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.534" endtime="20241127 12:51:10.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.544" endtime="20241127 12:51:10.544"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.545" endtime="20241127 12:51:10.545"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.544" endtime="20241127 12:51:10.545"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.545" endtime="20241127 12:51:10.545"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.545" endtime="20241127 12:51:10.545"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.544" endtime="20241127 12:51:10.545"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.543" endtime="20241127 12:51:10.545"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.547" endtime="20241127 12:51:10.547"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.545" endtime="20241127 12:51:10.547"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.554" endtime="20241127 12:51:10.554"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.554" endtime="20241127 12:51:10.555"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.547" endtime="20241127 12:51:10.555"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.583" endtime="20241127 12:51:10.555"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.555" endtime="20241127 12:51:10.556"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:10.556" endtime="20241127 12:51:10.556"/>
</return>
<msg timestamp="20241127 12:51:10.557" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:07.582" endtime="20241127 12:51:10.557"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.558" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241127 12:51:10.558" endtime="20241127 12:51:10.558"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.559" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:10.559" endtime="20241127 12:51:10.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.560" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:10.560" endtime="20241127 12:51:10.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.561" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.561" endtime="20241127 12:51:10.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.561" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:10.561" endtime="20241127 12:51:10.561"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.562" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.562" endtime="20241127 12:51:10.562"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.563" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:10.562" endtime="20241127 12:51:10.563"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.564" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:10.563" endtime="20241127 12:51:10.564"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.565" endtime="20241127 12:51:10.566"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.569" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.568" endtime="20241127 12:51:10.569"/>
</kw>
<msg timestamp="20241127 12:51:10.569" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.568" endtime="20241127 12:51:10.569"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.570"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.570"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.570"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.571"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.571"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.570" endtime="20241127 12:51:10.571"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.569" endtime="20241127 12:51:10.571"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.569" endtime="20241127 12:51:10.571"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.571" endtime="20241127 12:51:10.571"/>
</return>
<msg timestamp="20241127 12:51:10.572" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.567" endtime="20241127 12:51:10.572"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.575" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.574" endtime="20241127 12:51:10.575"/>
</kw>
<msg timestamp="20241127 12:51:10.575" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.574" endtime="20241127 12:51:10.575"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.576" endtime="20241127 12:51:10.576"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.577" endtime="20241127 12:51:10.577"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.576" endtime="20241127 12:51:10.577"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.577" endtime="20241127 12:51:10.577"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.577" endtime="20241127 12:51:10.577"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.576" endtime="20241127 12:51:10.578"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.576" endtime="20241127 12:51:10.578"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.575" endtime="20241127 12:51:10.578"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.578" endtime="20241127 12:51:10.578"/>
</return>
<msg timestamp="20241127 12:51:10.579" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.573" endtime="20241127 12:51:10.579"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.580" endtime="20241127 12:51:10.580"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.579" endtime="20241127 12:51:10.580"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.579" endtime="20241127 12:51:10.580"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.580" endtime="20241127 12:51:10.581"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.581" endtime="20241127 12:51:10.581"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.580" endtime="20241127 12:51:10.581"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.580" endtime="20241127 12:51:10.581"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.581" endtime="20241127 12:51:10.582"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.582" endtime="20241127 12:51:10.582"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.581" endtime="20241127 12:51:10.582"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.581" endtime="20241127 12:51:10.582"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.579" endtime="20241127 12:51:10.582"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.579" endtime="20241127 12:51:10.582"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.584" endtime="20241127 12:51:10.584"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.583" endtime="20241127 12:51:10.584"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.583" endtime="20241127 12:51:10.584"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.585" endtime="20241127 12:51:10.585"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.584" endtime="20241127 12:51:10.585"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.584" endtime="20241127 12:51:10.585"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.585" endtime="20241127 12:51:10.586"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.586" endtime="20241127 12:51:10.586"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.585" endtime="20241127 12:51:10.586"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.585" endtime="20241127 12:51:10.586"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.583" endtime="20241127 12:51:10.586"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.583" endtime="20241127 12:51:10.586"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.559" endtime="20241127 12:51:10.586"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.588" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:10.587" endtime="20241127 12:51:10.588"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.589" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:10.588" endtime="20241127 12:51:10.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.589" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.589" endtime="20241127 12:51:10.589"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.590" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:10.589" endtime="20241127 12:51:10.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.590" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.590" endtime="20241127 12:51:10.590"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.591" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:10.590" endtime="20241127 12:51:10.591"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.591" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:10.591" endtime="20241127 12:51:10.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.591" endtime="20241127 12:51:10.592"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.595" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.594" endtime="20241127 12:51:10.595"/>
</kw>
<msg timestamp="20241127 12:51:10.595" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.594" endtime="20241127 12:51:10.595"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.596" endtime="20241127 12:51:10.596"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.595" endtime="20241127 12:51:10.597"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.595" endtime="20241127 12:51:10.597"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.597" endtime="20241127 12:51:10.597"/>
</return>
<msg timestamp="20241127 12:51:10.597" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.593" endtime="20241127 12:51:10.597"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.601" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:2::flowActionSequenceId:3'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.600" endtime="20241127 12:51:10.601"/>
</kw>
<msg timestamp="20241127 12:51:10.601" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.599" endtime="20241127 12:51:10.601"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.602" endtime="20241127 12:51:10.602"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.602" endtime="20241127 12:51:10.602"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.602" endtime="20241127 12:51:10.602"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.603" endtime="20241127 12:51:10.603"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.602" endtime="20241127 12:51:10.603"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.602" endtime="20241127 12:51:10.603"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.601" endtime="20241127 12:51:10.603"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.601" endtime="20241127 12:51:10.603"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.603" endtime="20241127 12:51:10.603"/>
</return>
<msg timestamp="20241127 12:51:10.603" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.599" endtime="20241127 12:51:10.603"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.605" endtime="20241127 12:51:10.605"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.605" endtime="20241127 12:51:10.605"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.605" endtime="20241127 12:51:10.605"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.606" endtime="20241127 12:51:10.606"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.606" endtime="20241127 12:51:10.606"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.605" endtime="20241127 12:51:10.606"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.605" endtime="20241127 12:51:10.606"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.607" endtime="20241127 12:51:10.607"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.607" endtime="20241127 12:51:10.607"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.606" endtime="20241127 12:51:10.607"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.606" endtime="20241127 12:51:10.607"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.604" endtime="20241127 12:51:10.607"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.604" endtime="20241127 12:51:10.607"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.609" endtime="20241127 12:51:10.609"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.608" endtime="20241127 12:51:10.609"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.608" endtime="20241127 12:51:10.609"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.609" endtime="20241127 12:51:10.609"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.609" endtime="20241127 12:51:10.610"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.609" endtime="20241127 12:51:10.610"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.610" endtime="20241127 12:51:10.610"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.610" endtime="20241127 12:51:10.610"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.610" endtime="20241127 12:51:10.610"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.610" endtime="20241127 12:51:10.610"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.608" endtime="20241127 12:51:10.610"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.608" endtime="20241127 12:51:10.610"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.587" endtime="20241127 12:51:10.611"/>
</iter>
<status status="PASS" starttime="20241127 12:51:10.559" endtime="20241127 12:51:10.611"/>
</for>
<msg timestamp="20241127 12:51:10.611" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:10.557" endtime="20241127 12:51:10.611"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.611" endtime="20241127 12:51:10.612"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.618" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.618" endtime="20241127 12:51:10.619"/>
</kw>
<msg timestamp="20241127 12:51:10.619" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.617" endtime="20241127 12:51:10.619"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.620" endtime="20241127 12:51:10.620"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.620" endtime="20241127 12:51:10.620"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.620" endtime="20241127 12:51:10.620"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.621" endtime="20241127 12:51:10.621"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.620" endtime="20241127 12:51:10.621"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.620" endtime="20241127 12:51:10.621"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.619" endtime="20241127 12:51:10.621"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.619" endtime="20241127 12:51:10.621"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.621" endtime="20241127 12:51:10.622"/>
</return>
<msg timestamp="20241127 12:51:10.622" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.616" endtime="20241127 12:51:10.622"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.623" endtime="20241127 12:51:10.623"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.623" endtime="20241127 12:51:10.623"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.624" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241127 12:51:10.623" endtime="20241127 12:51:10.624"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.623" endtime="20241127 12:51:10.624"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.622" endtime="20241127 12:51:10.624"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:10.626" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '426', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241127 12:51:10.625" endtime="20241127 12:51:10.626"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:10.627" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "426", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241127 12:51:10.626" endtime="20241127 12:51:10.627"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:10.632" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:10.632" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:10.627" endtime="20241127 12:51:10.632"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.632" endtime="20241127 12:51:10.633"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:10.633" endtime="20241127 12:51:10.633"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.626" endtime="20241127 12:51:10.634"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.612" endtime="20241127 12:51:10.634"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:10.634" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:10.634" endtime="20241127 12:51:10.635"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.579" endtime="20241127 12:51:10.635"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.635" endtime="20241127 12:51:10.635"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.636" endtime="20241127 12:51:10.636"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.636" endtime="20241127 12:51:10.636"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.635" endtime="20241127 12:51:10.637"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.579" endtime="20241127 12:51:10.637"/>
</try>
<status status="PASS" starttime="20241127 12:51:07.579" endtime="20241127 12:51:10.637"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.639" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241127 12:51:10.638" endtime="20241127 12:51:10.639"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.640" endtime="20241127 12:51:10.640"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:10.642" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241127 12:51:10.641" endtime="20241127 12:51:10.642"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.642" endtime="20241127 12:51:10.643"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.643" endtime="20241127 12:51:10.643"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.642" endtime="20241127 12:51:10.643"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.642" endtime="20241127 12:51:10.643"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.644" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:10.644" endtime="20241127 12:51:10.644"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.644" endtime="20241127 12:51:10.644"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.644" endtime="20241127 12:51:10.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.645" endtime="20241127 12:51:10.645"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.645" endtime="20241127 12:51:10.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.647" endtime="20241127 12:51:10.648"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.645" endtime="20241127 12:51:10.648"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.650" endtime="20241127 12:51:10.650"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.654" endtime="20241127 12:51:10.654"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.648" endtime="20241127 12:51:10.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.656" endtime="20241127 12:51:10.656"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.655" endtime="20241127 12:51:10.656"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.659" endtime="20241127 12:51:10.659"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.656" endtime="20241127 12:51:10.659"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:10.747" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:10.674" endtime="20241127 12:51:10.747"/>
</kw>
<msg timestamp="20241127 12:51:10.748" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.673" endtime="20241127 12:51:10.748"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.748" endtime="20241127 12:51:10.748"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.673" endtime="20241127 12:51:10.748"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.748" endtime="20241127 12:51:10.748"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.749" endtime="20241127 12:51:10.749"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.748" endtime="20241127 12:51:10.749"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.673" endtime="20241127 12:51:10.749"/>
</try>
<msg timestamp="20241127 12:51:10.749" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.672" endtime="20241127 12:51:10.749"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.749" endtime="20241127 12:51:10.749"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.669" endtime="20241127 12:51:10.749"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.750" endtime="20241127 12:51:10.750"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.750" endtime="20241127 12:51:10.750"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.668" endtime="20241127 12:51:10.750"/>
</try>
<msg timestamp="20241127 12:51:10.751" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.668" endtime="20241127 12:51:10.751"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.753" endtime="20241127 12:51:10.754"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.754" endtime="20241127 12:51:10.754"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.753" endtime="20241127 12:51:10.754"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.753" endtime="20241127 12:51:10.754"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.752" endtime="20241127 12:51:10.754"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.667" endtime="20241127 12:51:10.755"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:10.773" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:10.767" endtime="20241127 12:51:10.773"/>
</kw>
<msg timestamp="20241127 12:51:10.774" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.766" endtime="20241127 12:51:10.774"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.774" endtime="20241127 12:51:10.774"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.765" endtime="20241127 12:51:10.774"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.775" endtime="20241127 12:51:10.775"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.775" endtime="20241127 12:51:10.775"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.774" endtime="20241127 12:51:10.775"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.765" endtime="20241127 12:51:10.775"/>
</try>
<msg timestamp="20241127 12:51:10.775" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.764" endtime="20241127 12:51:10.775"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.776" endtime="20241127 12:51:10.776"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.762" endtime="20241127 12:51:10.776"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.776" endtime="20241127 12:51:10.776"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.776" endtime="20241127 12:51:10.776"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.762" endtime="20241127 12:51:10.776"/>
</try>
<msg timestamp="20241127 12:51:10.776" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.761" endtime="20241127 12:51:10.776"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.780" endtime="20241127 12:51:10.780"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.780" endtime="20241127 12:51:10.780"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.780" endtime="20241127 12:51:10.781"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.779" endtime="20241127 12:51:10.781"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.778" endtime="20241127 12:51:10.781"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.761" endtime="20241127 12:51:10.781"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:10.799" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:51:10.800" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:10.782" endtime="20241127 12:51:10.800"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:10.800" endtime="20241127 12:51:10.800"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.781" endtime="20241127 12:51:10.800"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.800" endtime="20241127 12:51:10.801"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.801" endtime="20241127 12:51:10.801"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.800" endtime="20241127 12:51:10.801"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.781" endtime="20241127 12:51:10.801"/>
</try>
<msg timestamp="20241127 12:51:10.801" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:10.758" endtime="20241127 12:51:10.801"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.804" endtime="20241127 12:51:10.804"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.804" endtime="20241127 12:51:10.804"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.804" endtime="20241127 12:51:10.805"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.804" endtime="20241127 12:51:10.805"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.802" endtime="20241127 12:51:10.805"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.757" endtime="20241127 12:51:10.805"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.805" endtime="20241127 12:51:10.805"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.805" endtime="20241127 12:51:10.805"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.757" endtime="20241127 12:51:10.805"/>
</try>
<status status="PASS" starttime="20241127 12:51:10.757" endtime="20241127 12:51:10.806"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:10.815" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:10.810" endtime="20241127 12:51:10.815"/>
</kw>
<msg timestamp="20241127 12:51:10.815" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.810" endtime="20241127 12:51:10.816"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.816" endtime="20241127 12:51:10.816"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.810" endtime="20241127 12:51:10.816"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.816" endtime="20241127 12:51:10.816"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.816" endtime="20241127 12:51:10.816"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.816" endtime="20241127 12:51:10.817"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.810" endtime="20241127 12:51:10.817"/>
</try>
<msg timestamp="20241127 12:51:10.817" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.809" endtime="20241127 12:51:10.817"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.817" endtime="20241127 12:51:10.817"/>
</return>
<msg timestamp="20241127 12:51:10.817" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.808" endtime="20241127 12:51:10.817"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.819" endtime="20241127 12:51:10.820"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.820" endtime="20241127 12:51:10.820"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.819" endtime="20241127 12:51:10.820"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.819" endtime="20241127 12:51:10.820"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.818" endtime="20241127 12:51:10.820"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.808" endtime="20241127 12:51:10.820"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.663" endtime="20241127 12:51:10.820"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:10.836" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241127 12:51:10.825" endtime="20241127 12:51:10.837"/>
</kw>
<msg timestamp="20241127 12:51:10.837" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.825" endtime="20241127 12:51:10.837"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.837" endtime="20241127 12:51:10.837"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.825" endtime="20241127 12:51:10.837"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.837" endtime="20241127 12:51:10.837"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.838" endtime="20241127 12:51:10.838"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.837" endtime="20241127 12:51:10.838"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.825" endtime="20241127 12:51:10.838"/>
</try>
<msg timestamp="20241127 12:51:10.838" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.824" endtime="20241127 12:51:10.838"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:10.838" endtime="20241127 12:51:10.838"/>
</return>
<msg timestamp="20241127 12:51:10.838" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.823" endtime="20241127 12:51:10.838"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.840" endtime="20241127 12:51:10.841"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.841" endtime="20241127 12:51:10.841"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.840" endtime="20241127 12:51:10.841"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.840" endtime="20241127 12:51:10.841"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.839" endtime="20241127 12:51:10.841"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.822" endtime="20241127 12:51:10.841"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:10.842" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:10.841" endtime="20241127 12:51:10.842"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.843" endtime="20241127 12:51:10.843"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.845" endtime="20241127 12:51:10.845"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.843" endtime="20241127 12:51:10.846"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.846" endtime="20241127 12:51:10.846"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.846" endtime="20241127 12:51:10.846"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.843" endtime="20241127 12:51:10.846"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:51:10.847" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241127 12:51:10.847" endtime="20241127 12:51:10.886"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.846" endtime="20241127 12:51:10.886"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.886" endtime="20241127 12:51:10.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.887" endtime="20241127 12:51:10.887"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.886" endtime="20241127 12:51:10.887"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.846" endtime="20241127 12:51:10.887"/>
</try>
<status status="PASS" starttime="20241127 12:51:10.843" endtime="20241127 12:51:10.887"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.842" endtime="20241127 12:51:10.888"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.842" endtime="20241127 12:51:10.888"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.888" endtime="20241127 12:51:10.888"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.888" endtime="20241127 12:51:10.888"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.842" endtime="20241127 12:51:10.888"/>
</try>
<status status="PASS" starttime="20241127 12:51:10.662" endtime="20241127 12:51:10.889"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.889" endtime="20241127 12:51:10.889"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.889" endtime="20241127 12:51:10.889"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.889" endtime="20241127 12:51:10.889"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.660" endtime="20241127 12:51:10.889"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.890" endtime="20241127 12:51:10.890"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.889" endtime="20241127 12:51:10.891"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.891" endtime="20241127 12:51:10.892"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.892" endtime="20241127 12:51:10.892"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.892" endtime="20241127 12:51:10.892"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.892" endtime="20241127 12:51:10.892"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.892" endtime="20241127 12:51:10.892"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.892" endtime="20241127 12:51:10.892"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.891" endtime="20241127 12:51:10.893"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:10.897" endtime="20241127 12:51:10.897"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.900" endtime="20241127 12:51:10.900"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.893" endtime="20241127 12:51:10.900"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.902" endtime="20241127 12:51:10.902"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.902" endtime="20241127 12:51:10.902"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.902" endtime="20241127 12:51:10.903"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.903" endtime="20241127 12:51:10.903"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.903" endtime="20241127 12:51:10.903"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.902" endtime="20241127 12:51:10.903"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.900" endtime="20241127 12:51:10.903"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:10.911" endtime="20241127 12:51:10.911"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.914" endtime="20241127 12:51:10.914"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.904" endtime="20241127 12:51:10.914"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.915" endtime="20241127 12:51:10.915"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.916" endtime="20241127 12:51:10.916"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.915" endtime="20241127 12:51:10.916"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.916" endtime="20241127 12:51:10.916"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.916" endtime="20241127 12:51:10.916"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.915" endtime="20241127 12:51:10.916"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.914" endtime="20241127 12:51:10.917"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.919" endtime="20241127 12:51:10.919"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.917" endtime="20241127 12:51:10.919"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:10.926" endtime="20241127 12:51:10.926"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.927" endtime="20241127 12:51:10.927"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.919" endtime="20241127 12:51:10.927"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.644" endtime="20241127 12:51:10.927"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.927" endtime="20241127 12:51:10.928"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:10.928" endtime="20241127 12:51:10.928"/>
</return>
<msg timestamp="20241127 12:51:10.928" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:10.643" endtime="20241127 12:51:10.928"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.929" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:10.929" endtime="20241127 12:51:10.929"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.930" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:10.930" endtime="20241127 12:51:10.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.930" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:10.930" endtime="20241127 12:51:10.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.931" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.931" endtime="20241127 12:51:10.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.931" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:10.931" endtime="20241127 12:51:10.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.932" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.931" endtime="20241127 12:51:10.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.932" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:10.932" endtime="20241127 12:51:10.932"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.932" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:10.932" endtime="20241127 12:51:10.933"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.933" endtime="20241127 12:51:10.933"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.935" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.935" endtime="20241127 12:51:10.935"/>
</kw>
<msg timestamp="20241127 12:51:10.935" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.935" endtime="20241127 12:51:10.936"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.936"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.936"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.936"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.937" endtime="20241127 12:51:10.937"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.937"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.937"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.937"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.936" endtime="20241127 12:51:10.937"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.937" endtime="20241127 12:51:10.937"/>
</return>
<msg timestamp="20241127 12:51:10.937" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.934" endtime="20241127 12:51:10.937"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.941" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.940" endtime="20241127 12:51:10.941"/>
</kw>
<msg timestamp="20241127 12:51:10.942" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.940" endtime="20241127 12:51:10.942"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.942" endtime="20241127 12:51:10.942"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.943" endtime="20241127 12:51:10.943"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.943" endtime="20241127 12:51:10.943"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.943" endtime="20241127 12:51:10.943"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.943" endtime="20241127 12:51:10.943"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.942" endtime="20241127 12:51:10.943"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.942" endtime="20241127 12:51:10.944"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.942" endtime="20241127 12:51:10.944"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.944" endtime="20241127 12:51:10.944"/>
</return>
<msg timestamp="20241127 12:51:10.944" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.939" endtime="20241127 12:51:10.944"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.945"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.946"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.946" endtime="20241127 12:51:10.946"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.946" endtime="20241127 12:51:10.946"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.946" endtime="20241127 12:51:10.946"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.946" endtime="20241127 12:51:10.946"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.945" endtime="20241127 12:51:10.946"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.944" endtime="20241127 12:51:10.946"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.947" endtime="20241127 12:51:10.947"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.946" endtime="20241127 12:51:10.947"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.930" endtime="20241127 12:51:10.947"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.948" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:10.948" endtime="20241127 12:51:10.948"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.949" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:10.948" endtime="20241127 12:51:10.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.949" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.949" endtime="20241127 12:51:10.949"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.950" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:10.949" endtime="20241127 12:51:10.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.950" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.950" endtime="20241127 12:51:10.950"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.950" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:10.950" endtime="20241127 12:51:10.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.951" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:10.951" endtime="20241127 12:51:10.951"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.951" endtime="20241127 12:51:10.951"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:10.955" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:10.954" endtime="20241127 12:51:10.955"/>
</kw>
<msg timestamp="20241127 12:51:10.955" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.954" endtime="20241127 12:51:10.955"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.956"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.956"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.956"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.957" endtime="20241127 12:51:10.957"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.957" endtime="20241127 12:51:10.957"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.957"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.957"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.956" endtime="20241127 12:51:10.957"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.957" endtime="20241127 12:51:10.957"/>
</return>
<msg timestamp="20241127 12:51:10.957" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:10.953" endtime="20241127 12:51:10.957"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.959" endtime="20241127 12:51:10.960"/>
</kw>
<msg timestamp="20241127 12:51:10.960" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.959" endtime="20241127 12:51:10.960"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.961" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:10.960" endtime="20241127 12:51:10.961"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.961" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.961" endtime="20241127 12:51:10.961"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.961" endtime="20241127 12:51:10.961"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.962" endtime="20241127 12:51:10.962"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.961" endtime="20241127 12:51:10.962"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.961" endtime="20241127 12:51:10.962"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.960" endtime="20241127 12:51:10.962"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.960" endtime="20241127 12:51:10.962"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.962" endtime="20241127 12:51:10.962"/>
</return>
<msg timestamp="20241127 12:51:10.962" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.959" endtime="20241127 12:51:10.962"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.963"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.963"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.963"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.964"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.964" endtime="20241127 12:51:10.964"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.964"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.964"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.964" endtime="20241127 12:51:10.964"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.964" endtime="20241127 12:51:10.964"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.964" endtime="20241127 12:51:10.964"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:10.964" endtime="20241127 12:51:10.964"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:10.963" endtime="20241127 12:51:10.964"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.962" endtime="20241127 12:51:10.965"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:10.965" endtime="20241127 12:51:10.965"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.965" endtime="20241127 12:51:10.965"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.965" endtime="20241127 12:51:10.966"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.966" endtime="20241127 12:51:10.966"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.966" endtime="20241127 12:51:10.966"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.966" endtime="20241127 12:51:10.966"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.967" endtime="20241127 12:51:10.967"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:10.967" endtime="20241127 12:51:10.967"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:10.966" endtime="20241127 12:51:10.967"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.966" endtime="20241127 12:51:10.967"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.965" endtime="20241127 12:51:10.967"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.965" endtime="20241127 12:51:10.967"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.948" endtime="20241127 12:51:10.967"/>
</iter>
<status status="PASS" starttime="20241127 12:51:10.929" endtime="20241127 12:51:10.967"/>
</for>
<msg timestamp="20241127 12:51:10.967" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:10.928" endtime="20241127 12:51:10.967"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:10.968" endtime="20241127 12:51:10.968"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:10.972" endtime="20241127 12:51:10.972"/>
</kw>
<msg timestamp="20241127 12:51:10.972" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.971" endtime="20241127 12:51:10.972"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.973" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241127 12:51:10.972" endtime="20241127 12:51:10.973"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.973" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.973" endtime="20241127 12:51:10.973"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.973" endtime="20241127 12:51:10.973"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.974" endtime="20241127 12:51:10.974"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.974" endtime="20241127 12:51:10.974"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.973" endtime="20241127 12:51:10.974"/>
</if>
<status status="PASS" starttime="20241127 12:51:10.972" endtime="20241127 12:51:10.974"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.972" endtime="20241127 12:51:10.974"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:10.974" endtime="20241127 12:51:10.974"/>
</return>
<msg timestamp="20241127 12:51:10.974" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:10.971" endtime="20241127 12:51:10.974"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:10.975" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241127 12:51:10.975" endtime="20241127 12:51:10.975"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.975" endtime="20241127 12:51:10.975"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:10.975" endtime="20241127 12:51:10.975"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:10.975" endtime="20241127 12:51:10.975"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.975" endtime="20241127 12:51:10.976"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:10.977" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '428', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241127 12:51:10.976" endtime="20241127 12:51:10.977"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:10.978" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "428", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241127 12:51:10.977" endtime="20241127 12:51:10.978"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:11.008" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:11.008" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:10.978" endtime="20241127 12:51:11.008"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.009" endtime="20241127 12:51:11.010"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:11.010" endtime="20241127 12:51:11.010"/>
</return>
<status status="PASS" starttime="20241127 12:51:10.977" endtime="20241127 12:51:11.011"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.968" endtime="20241127 12:51:11.011"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:11.012" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:11.011" endtime="20241127 12:51:11.012"/>
</kw>
<status status="PASS" starttime="20241127 12:51:10.638" endtime="20241127 12:51:11.012"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.012" endtime="20241127 12:51:11.012"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.012" endtime="20241127 12:51:11.013"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.013" endtime="20241127 12:51:11.013"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.012" endtime="20241127 12:51:11.013"/>
</branch>
<status status="PASS" starttime="20241127 12:51:10.637" endtime="20241127 12:51:11.013"/>
</try>
<status status="PASS" starttime="20241127 12:51:10.637" endtime="20241127 12:51:11.013"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.014" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241127 12:51:11.014" endtime="20241127 12:51:11.014"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.014" endtime="20241127 12:51:11.015"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:11.015" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241127 12:51:11.015" endtime="20241127 12:51:11.015"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.016" endtime="20241127 12:51:11.016"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.016" endtime="20241127 12:51:11.016"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.015" endtime="20241127 12:51:11.016"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.015" endtime="20241127 12:51:11.016"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.017" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:51:11.017" endtime="20241127 12:51:11.017"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.017" endtime="20241127 12:51:11.017"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.017" endtime="20241127 12:51:11.017"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.018" endtime="20241127 12:51:11.018"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.017" endtime="20241127 12:51:11.018"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.019" endtime="20241127 12:51:11.019"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.018" endtime="20241127 12:51:11.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.021" endtime="20241127 12:51:11.021"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.023" endtime="20241127 12:51:11.023"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.019" endtime="20241127 12:51:11.023"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.025" endtime="20241127 12:51:11.025"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.024" endtime="20241127 12:51:11.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.028" endtime="20241127 12:51:11.028"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.025" endtime="20241127 12:51:11.028"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.043" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:11.037" endtime="20241127 12:51:11.043"/>
</kw>
<msg timestamp="20241127 12:51:11.044" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.036" endtime="20241127 12:51:11.044"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.044" endtime="20241127 12:51:11.044"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.035" endtime="20241127 12:51:11.044"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.045" endtime="20241127 12:51:11.045"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.045" endtime="20241127 12:51:11.046"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.045" endtime="20241127 12:51:11.046"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.035" endtime="20241127 12:51:11.046"/>
</try>
<msg timestamp="20241127 12:51:11.046" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.035" endtime="20241127 12:51:11.046"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.046" endtime="20241127 12:51:11.046"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.034" endtime="20241127 12:51:11.046"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.046" endtime="20241127 12:51:11.046"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.046" endtime="20241127 12:51:11.046"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.034" endtime="20241127 12:51:11.046"/>
</try>
<msg timestamp="20241127 12:51:11.047" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.033" endtime="20241127 12:51:11.047"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.049" endtime="20241127 12:51:11.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.050" endtime="20241127 12:51:11.050"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.049" endtime="20241127 12:51:11.050"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.049" endtime="20241127 12:51:11.050"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.048" endtime="20241127 12:51:11.050"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.032" endtime="20241127 12:51:11.050"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.064" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:11.059" endtime="20241127 12:51:11.064"/>
</kw>
<msg timestamp="20241127 12:51:11.064" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.059" endtime="20241127 12:51:11.064"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.064" endtime="20241127 12:51:11.064"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.058" endtime="20241127 12:51:11.064"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.065" endtime="20241127 12:51:11.065"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.065" endtime="20241127 12:51:11.065"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.064" endtime="20241127 12:51:11.065"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.058" endtime="20241127 12:51:11.065"/>
</try>
<msg timestamp="20241127 12:51:11.065" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.058" endtime="20241127 12:51:11.065"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.065" endtime="20241127 12:51:11.065"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.057" endtime="20241127 12:51:11.065"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.066" endtime="20241127 12:51:11.066"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.065" endtime="20241127 12:51:11.066"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.057" endtime="20241127 12:51:11.066"/>
</try>
<msg timestamp="20241127 12:51:11.066" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.057" endtime="20241127 12:51:11.066"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.068" endtime="20241127 12:51:11.068"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.068" endtime="20241127 12:51:11.068"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.068" endtime="20241127 12:51:11.068"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.068" endtime="20241127 12:51:11.068"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.067" endtime="20241127 12:51:11.068"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.056" endtime="20241127 12:51:11.069"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:11.077" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241127 12:51:11.077" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:11.069" endtime="20241127 12:51:11.077"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:11.077" endtime="20241127 12:51:11.077"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.069" endtime="20241127 12:51:11.077"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.078" endtime="20241127 12:51:11.078"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.078" endtime="20241127 12:51:11.078"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.077" endtime="20241127 12:51:11.078"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.069" endtime="20241127 12:51:11.078"/>
</try>
<msg timestamp="20241127 12:51:11.078" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241127 12:51:11.054" endtime="20241127 12:51:11.078"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.080" endtime="20241127 12:51:11.080"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.081" endtime="20241127 12:51:11.081"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.080" endtime="20241127 12:51:11.081"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.080" endtime="20241127 12:51:11.081"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.079" endtime="20241127 12:51:11.081"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.052" endtime="20241127 12:51:11.081"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.081" endtime="20241127 12:51:11.081"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.081" endtime="20241127 12:51:11.081"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.052" endtime="20241127 12:51:11.082"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.052" endtime="20241127 12:51:11.082"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.093" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:11.086" endtime="20241127 12:51:11.093"/>
</kw>
<msg timestamp="20241127 12:51:11.093" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.086" endtime="20241127 12:51:11.093"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.093" endtime="20241127 12:51:11.093"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.085" endtime="20241127 12:51:11.093"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.094" endtime="20241127 12:51:11.094"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.094" endtime="20241127 12:51:11.094"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.093" endtime="20241127 12:51:11.094"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.085" endtime="20241127 12:51:11.094"/>
</try>
<msg timestamp="20241127 12:51:11.094" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.085" endtime="20241127 12:51:11.094"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.095" endtime="20241127 12:51:11.095"/>
</return>
<msg timestamp="20241127 12:51:11.095" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.084" endtime="20241127 12:51:11.095"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.097" endtime="20241127 12:51:11.097"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.098" endtime="20241127 12:51:11.098"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.097" endtime="20241127 12:51:11.098"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.097" endtime="20241127 12:51:11.098"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.096" endtime="20241127 12:51:11.098"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.083" endtime="20241127 12:51:11.098"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.030" endtime="20241127 12:51:11.098"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.116" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241127 12:51:11.104" endtime="20241127 12:51:11.116"/>
</kw>
<msg timestamp="20241127 12:51:11.117" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.104" endtime="20241127 12:51:11.117"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.117" endtime="20241127 12:51:11.117"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.103" endtime="20241127 12:51:11.117"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.117" endtime="20241127 12:51:11.117"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.118" endtime="20241127 12:51:11.118"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.117" endtime="20241127 12:51:11.118"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.103" endtime="20241127 12:51:11.118"/>
</try>
<msg timestamp="20241127 12:51:11.118" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.103" endtime="20241127 12:51:11.118"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.118" endtime="20241127 12:51:11.118"/>
</return>
<msg timestamp="20241127 12:51:11.118" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.101" endtime="20241127 12:51:11.118"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.121" endtime="20241127 12:51:11.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.121" endtime="20241127 12:51:11.121"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.120" endtime="20241127 12:51:11.121"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.120" endtime="20241127 12:51:11.121"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.119" endtime="20241127 12:51:11.121"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.100" endtime="20241127 12:51:11.121"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:11.122" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:11.122" endtime="20241127 12:51:11.122"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.124" endtime="20241127 12:51:11.124"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.126" endtime="20241127 12:51:11.126"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.123" endtime="20241127 12:51:11.126"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.126" endtime="20241127 12:51:11.126"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.126" endtime="20241127 12:51:11.126"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.123" endtime="20241127 12:51:11.126"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241127 12:51:11.127" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241127 12:51:11.127" endtime="20241127 12:51:11.146"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.127" endtime="20241127 12:51:11.146"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.146" endtime="20241127 12:51:11.146"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.147" endtime="20241127 12:51:11.147"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.146" endtime="20241127 12:51:11.147"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.127" endtime="20241127 12:51:11.147"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.123" endtime="20241127 12:51:11.147"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.122" endtime="20241127 12:51:11.147"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.122" endtime="20241127 12:51:11.147"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.147" endtime="20241127 12:51:11.147"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.147" endtime="20241127 12:51:11.147"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.122" endtime="20241127 12:51:11.147"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.030" endtime="20241127 12:51:11.148"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.148" endtime="20241127 12:51:11.148"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.148" endtime="20241127 12:51:11.148"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.148" endtime="20241127 12:51:11.148"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.028" endtime="20241127 12:51:11.148"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.149" endtime="20241127 12:51:11.149"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.148" endtime="20241127 12:51:11.149"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.150" endtime="20241127 12:51:11.150"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.151" endtime="20241127 12:51:11.151"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.150" endtime="20241127 12:51:11.151"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.151" endtime="20241127 12:51:11.151"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.151" endtime="20241127 12:51:11.151"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.150" endtime="20241127 12:51:11.151"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.149" endtime="20241127 12:51:11.151"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:11.157" endtime="20241127 12:51:11.157"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.160" endtime="20241127 12:51:11.160"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.151" endtime="20241127 12:51:11.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.161" endtime="20241127 12:51:11.161"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.161" endtime="20241127 12:51:11.162"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.161" endtime="20241127 12:51:11.162"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.162" endtime="20241127 12:51:11.162"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.162" endtime="20241127 12:51:11.162"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.161" endtime="20241127 12:51:11.162"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.160" endtime="20241127 12:51:11.162"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:11.167" endtime="20241127 12:51:11.167"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.170" endtime="20241127 12:51:11.170"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.162" endtime="20241127 12:51:11.170"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.172"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.172"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.172"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.173"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.173"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.172" endtime="20241127 12:51:11.173"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.171" endtime="20241127 12:51:11.173"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.175" endtime="20241127 12:51:11.175"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.173" endtime="20241127 12:51:11.175"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.181" endtime="20241127 12:51:11.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.181" endtime="20241127 12:51:11.181"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.175" endtime="20241127 12:51:11.181"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.017" endtime="20241127 12:51:11.181"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.181" endtime="20241127 12:51:11.183"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:11.183" endtime="20241127 12:51:11.183"/>
</return>
<msg timestamp="20241127 12:51:11.183" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241127 12:51:11.016" endtime="20241127 12:51:11.183"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.184" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241127 12:51:11.184" endtime="20241127 12:51:11.184"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.185" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:11.185" endtime="20241127 12:51:11.185"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.186" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:11.185" endtime="20241127 12:51:11.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.186" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.186" endtime="20241127 12:51:11.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.186" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:11.186" endtime="20241127 12:51:11.186"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.187" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.186" endtime="20241127 12:51:11.187"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.188" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:11.187" endtime="20241127 12:51:11.188"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.188" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:11.188" endtime="20241127 12:51:11.188"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.188" endtime="20241127 12:51:11.188"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.191" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.191" endtime="20241127 12:51:11.191"/>
</kw>
<msg timestamp="20241127 12:51:11.191" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.190" endtime="20241127 12:51:11.191"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.192"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.192"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.192"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.193"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.193"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.193"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.192" endtime="20241127 12:51:11.193"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.191" endtime="20241127 12:51:11.193"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.193" endtime="20241127 12:51:11.193"/>
</return>
<msg timestamp="20241127 12:51:11.193" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.190" endtime="20241127 12:51:11.193"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.196" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.195" endtime="20241127 12:51:11.196"/>
</kw>
<msg timestamp="20241127 12:51:11.196" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.195" endtime="20241127 12:51:11.196"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.196" endtime="20241127 12:51:11.197"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.197" endtime="20241127 12:51:11.197"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.197" endtime="20241127 12:51:11.197"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.197" endtime="20241127 12:51:11.197"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.197" endtime="20241127 12:51:11.197"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.197" endtime="20241127 12:51:11.197"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.196" endtime="20241127 12:51:11.197"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.196" endtime="20241127 12:51:11.197"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.198"/>
</return>
<msg timestamp="20241127 12:51:11.198" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.194" endtime="20241127 12:51:11.198"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.198"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.199"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.199"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.199"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.199"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.199"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.199"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.200"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.200"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.200"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.199" endtime="20241127 12:51:11.200"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.200"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.198" endtime="20241127 12:51:11.200"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.201"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.201"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.201"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.201"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.201"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.201"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.202"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.202" endtime="20241127 12:51:11.202"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.202"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.201" endtime="20241127 12:51:11.202"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.202"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.200" endtime="20241127 12:51:11.202"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.185" endtime="20241127 12:51:11.202"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.203" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:11.202" endtime="20241127 12:51:11.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.203" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:11.203" endtime="20241127 12:51:11.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.204" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.203" endtime="20241127 12:51:11.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.204" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:11.204" endtime="20241127 12:51:11.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.205" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.205" endtime="20241127 12:51:11.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.205" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:11.205" endtime="20241127 12:51:11.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.206" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:11.206" endtime="20241127 12:51:11.206"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.206" endtime="20241127 12:51:11.207"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.209" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.209" endtime="20241127 12:51:11.209"/>
</kw>
<msg timestamp="20241127 12:51:11.209" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.208" endtime="20241127 12:51:11.209"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.210"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.210" endtime="20241127 12:51:11.211"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.209" endtime="20241127 12:51:11.211"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.211" endtime="20241127 12:51:11.211"/>
</return>
<msg timestamp="20241127 12:51:11.211" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.208" endtime="20241127 12:51:11.211"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.213" endtime="20241127 12:51:11.213"/>
</kw>
<msg timestamp="20241127 12:51:11.213" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.212" endtime="20241127 12:51:11.213"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.214" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:11.213" endtime="20241127 12:51:11.214"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.214" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.214" endtime="20241127 12:51:11.214"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.214" endtime="20241127 12:51:11.214"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.215" endtime="20241127 12:51:11.215"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.214" endtime="20241127 12:51:11.215"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.214" endtime="20241127 12:51:11.215"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.213" endtime="20241127 12:51:11.215"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.213" endtime="20241127 12:51:11.215"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.215" endtime="20241127 12:51:11.215"/>
</return>
<msg timestamp="20241127 12:51:11.215" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.212" endtime="20241127 12:51:11.215"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.216"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.216"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.216"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.216"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.216"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.217"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.217"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.217" endtime="20241127 12:51:11.217"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.217" endtime="20241127 12:51:11.217"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.217" endtime="20241127 12:51:11.217"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.217" endtime="20241127 12:51:11.217"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.216" endtime="20241127 12:51:11.217"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.215" endtime="20241127 12:51:11.217"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.218"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.218"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.218"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.219" endtime="20241127 12:51:11.219"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.219"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.219"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.219" endtime="20241127 12:51:11.219"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.219" endtime="20241127 12:51:11.219"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.219" endtime="20241127 12:51:11.219"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.219" endtime="20241127 12:51:11.219"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.218" endtime="20241127 12:51:11.219"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.217" endtime="20241127 12:51:11.219"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.202" endtime="20241127 12:51:11.220"/>
</iter>
<status status="PASS" starttime="20241127 12:51:11.185" endtime="20241127 12:51:11.220"/>
</for>
<msg timestamp="20241127 12:51:11.220" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:11.183" endtime="20241127 12:51:11.220"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.220" endtime="20241127 12:51:11.221"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.225" endtime="20241127 12:51:11.225"/>
</kw>
<msg timestamp="20241127 12:51:11.225" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.225" endtime="20241127 12:51:11.225"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.226" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241127 12:51:11.226" endtime="20241127 12:51:11.226"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.227" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.226" endtime="20241127 12:51:11.227"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.226" endtime="20241127 12:51:11.227"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.227" endtime="20241127 12:51:11.227"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.227" endtime="20241127 12:51:11.227"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.226" endtime="20241127 12:51:11.227"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.226" endtime="20241127 12:51:11.227"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.225" endtime="20241127 12:51:11.227"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.227" endtime="20241127 12:51:11.227"/>
</return>
<msg timestamp="20241127 12:51:11.228" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.224" endtime="20241127 12:51:11.228"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.228" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241127 12:51:11.228" endtime="20241127 12:51:11.228"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.228" endtime="20241127 12:51:11.228"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.229" endtime="20241127 12:51:11.229"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.228" endtime="20241127 12:51:11.229"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.228" endtime="20241127 12:51:11.229"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:11.230" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '427', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241127 12:51:11.229" endtime="20241127 12:51:11.230"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:11.231" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "427", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241127 12:51:11.230" endtime="20241127 12:51:11.231"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:11.236" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:11.236" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:11.231" endtime="20241127 12:51:11.236"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.237" endtime="20241127 12:51:11.238"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:11.239" endtime="20241127 12:51:11.239"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.230" endtime="20241127 12:51:11.239"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.221" endtime="20241127 12:51:11.239"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:11.240" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:11.240" endtime="20241127 12:51:11.240"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.014" endtime="20241127 12:51:11.240"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.241" endtime="20241127 12:51:11.241"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.241" endtime="20241127 12:51:11.241"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.241" endtime="20241127 12:51:11.241"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.240" endtime="20241127 12:51:11.241"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.014" endtime="20241127 12:51:11.241"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.014" endtime="20241127 12:51:11.241"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.242" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241127 12:51:11.242" endtime="20241127 12:51:11.242"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.243" endtime="20241127 12:51:11.243"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:11.244" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241127 12:51:11.244" endtime="20241127 12:51:11.244"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.245" endtime="20241127 12:51:11.245"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.245" endtime="20241127 12:51:11.245"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.245" endtime="20241127 12:51:11.245"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.244" endtime="20241127 12:51:11.246"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.246" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:11.246" endtime="20241127 12:51:11.246"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.247" endtime="20241127 12:51:11.247"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.247" endtime="20241127 12:51:11.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.247" endtime="20241127 12:51:11.247"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.247" endtime="20241127 12:51:11.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.260" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:11.255" endtime="20241127 12:51:11.260"/>
</kw>
<msg timestamp="20241127 12:51:11.260" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.255" endtime="20241127 12:51:11.260"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.260" endtime="20241127 12:51:11.260"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.255" endtime="20241127 12:51:11.260"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.260" endtime="20241127 12:51:11.261"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.261" endtime="20241127 12:51:11.261"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.260" endtime="20241127 12:51:11.261"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.255" endtime="20241127 12:51:11.261"/>
</try>
<msg timestamp="20241127 12:51:11.261" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.254" endtime="20241127 12:51:11.261"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.261" endtime="20241127 12:51:11.261"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.253" endtime="20241127 12:51:11.261"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.261" endtime="20241127 12:51:11.262"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.261" endtime="20241127 12:51:11.262"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.253" endtime="20241127 12:51:11.262"/>
</try>
<msg timestamp="20241127 12:51:11.262" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.252" endtime="20241127 12:51:11.262"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.264" endtime="20241127 12:51:11.264"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.264" endtime="20241127 12:51:11.264"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.264" endtime="20241127 12:51:11.264"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.263" endtime="20241127 12:51:11.264"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.263" endtime="20241127 12:51:11.264"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.252" endtime="20241127 12:51:11.264"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.273" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:11.268" endtime="20241127 12:51:11.273"/>
</kw>
<msg timestamp="20241127 12:51:11.273" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.268" endtime="20241127 12:51:11.273"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.274" endtime="20241127 12:51:11.274"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.268" endtime="20241127 12:51:11.274"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.274" endtime="20241127 12:51:11.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.274" endtime="20241127 12:51:11.274"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.274" endtime="20241127 12:51:11.274"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.268" endtime="20241127 12:51:11.274"/>
</try>
<msg timestamp="20241127 12:51:11.275" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.267" endtime="20241127 12:51:11.275"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.275" endtime="20241127 12:51:11.275"/>
</return>
<msg timestamp="20241127 12:51:11.275" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.266" endtime="20241127 12:51:11.275"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.277" endtime="20241127 12:51:11.277"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.277" endtime="20241127 12:51:11.277"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.277" endtime="20241127 12:51:11.277"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.277" endtime="20241127 12:51:11.277"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.276" endtime="20241127 12:51:11.278"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.266" endtime="20241127 12:51:11.278"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:11.294" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241127 12:51:11.282" endtime="20241127 12:51:11.294"/>
</kw>
<msg timestamp="20241127 12:51:11.294" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.282" endtime="20241127 12:51:11.294"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.294" endtime="20241127 12:51:11.294"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.281" endtime="20241127 12:51:11.294"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.295" endtime="20241127 12:51:11.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.295" endtime="20241127 12:51:11.295"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.295" endtime="20241127 12:51:11.295"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.281" endtime="20241127 12:51:11.295"/>
</try>
<msg timestamp="20241127 12:51:11.295" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.281" endtime="20241127 12:51:11.295"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:11.295" endtime="20241127 12:51:11.296"/>
</return>
<msg timestamp="20241127 12:51:11.296" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.280" endtime="20241127 12:51:11.296"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.298" endtime="20241127 12:51:11.298"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.298" endtime="20241127 12:51:11.298"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.297" endtime="20241127 12:51:11.298"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.297" endtime="20241127 12:51:11.298"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.297" endtime="20241127 12:51:11.298"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.279" endtime="20241127 12:51:11.298"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.250" endtime="20241127 12:51:11.298"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:11.299" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:11.299" endtime="20241127 12:51:11.299"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.300" endtime="20241127 12:51:11.300"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.300" endtime="20241127 12:51:11.300"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.301" endtime="20241127 12:51:11.301"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.300" endtime="20241127 12:51:11.301"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.300" endtime="20241127 12:51:11.301"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:51:11.301" endtime="20241127 12:51:11.344"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.301" endtime="20241127 12:51:11.344"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.344" endtime="20241127 12:51:11.345"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.345" endtime="20241127 12:51:11.345"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.344" endtime="20241127 12:51:11.345"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.301" endtime="20241127 12:51:11.345"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.300" endtime="20241127 12:51:11.345"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.299" endtime="20241127 12:51:11.345"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.299" endtime="20241127 12:51:11.345"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.345" endtime="20241127 12:51:11.346"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.345" endtime="20241127 12:51:11.346"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.299" endtime="20241127 12:51:11.346"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.249" endtime="20241127 12:51:11.346"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.248" endtime="20241127 12:51:11.346"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.347" endtime="20241127 12:51:11.347"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.349" endtime="20241127 12:51:11.349"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.346" endtime="20241127 12:51:11.349"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.350" endtime="20241127 12:51:11.350"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.349" endtime="20241127 12:51:11.350"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.352" endtime="20241127 12:51:11.353"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.350" endtime="20241127 12:51:11.353"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.354" endtime="20241127 12:51:11.354"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.355" endtime="20241127 12:51:11.355"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.355" endtime="20241127 12:51:11.355"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.355" endtime="20241127 12:51:11.355"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.353" endtime="20241127 12:51:11.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.356" endtime="20241127 12:51:11.356"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.355" endtime="20241127 12:51:11.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.357" endtime="20241127 12:51:11.357"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.358" endtime="20241127 12:51:11.358"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.357" endtime="20241127 12:51:11.358"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.358" endtime="20241127 12:51:11.358"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.358" endtime="20241127 12:51:11.358"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.357" endtime="20241127 12:51:11.358"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.356" endtime="20241127 12:51:11.358"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:11.363" endtime="20241127 12:51:11.363"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.366" endtime="20241127 12:51:11.366"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.358" endtime="20241127 12:51:11.366"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.367" endtime="20241127 12:51:11.367"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.367" endtime="20241127 12:51:11.367"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.367" endtime="20241127 12:51:11.367"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.368" endtime="20241127 12:51:11.368"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.368" endtime="20241127 12:51:11.368"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.367" endtime="20241127 12:51:11.368"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.366" endtime="20241127 12:51:11.368"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:11.373" endtime="20241127 12:51:11.374"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.376" endtime="20241127 12:51:11.376"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.368" endtime="20241127 12:51:11.376"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.377" endtime="20241127 12:51:11.378"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.378" endtime="20241127 12:51:11.378"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.378" endtime="20241127 12:51:11.378"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.378" endtime="20241127 12:51:11.378"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.378" endtime="20241127 12:51:11.378"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.378" endtime="20241127 12:51:11.379"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.376" endtime="20241127 12:51:11.379"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.381" endtime="20241127 12:51:11.381"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.379" endtime="20241127 12:51:11.381"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.386" endtime="20241127 12:51:11.386"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.386" endtime="20241127 12:51:11.387"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.381" endtime="20241127 12:51:11.387"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.247" endtime="20241127 12:51:11.387"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.387" endtime="20241127 12:51:11.388"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:11.388" endtime="20241127 12:51:11.388"/>
</return>
<msg timestamp="20241127 12:51:11.388" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:11.246" endtime="20241127 12:51:11.388"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.389" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241127 12:51:11.389" endtime="20241127 12:51:11.389"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.390" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:11.390" endtime="20241127 12:51:11.390"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.391" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:11.390" endtime="20241127 12:51:11.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.391" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.391" endtime="20241127 12:51:11.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.391" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:11.391" endtime="20241127 12:51:11.391"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.392" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.392" endtime="20241127 12:51:11.392"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.392" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:11.392" endtime="20241127 12:51:11.392"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.393" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:11.393" endtime="20241127 12:51:11.393"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.393" endtime="20241127 12:51:11.393"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.396" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.395" endtime="20241127 12:51:11.396"/>
</kw>
<msg timestamp="20241127 12:51:11.396" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.395" endtime="20241127 12:51:11.396"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.397"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.397"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.397"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.397"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.398"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.397" endtime="20241127 12:51:11.398"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.396" endtime="20241127 12:51:11.398"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.396" endtime="20241127 12:51:11.398"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.398" endtime="20241127 12:51:11.398"/>
</return>
<msg timestamp="20241127 12:51:11.398" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.395" endtime="20241127 12:51:11.398"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.401" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.400" endtime="20241127 12:51:11.401"/>
</kw>
<msg timestamp="20241127 12:51:11.401" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.400" endtime="20241127 12:51:11.401"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.402" endtime="20241127 12:51:11.402"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.401" endtime="20241127 12:51:11.403"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.401" endtime="20241127 12:51:11.403"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.403" endtime="20241127 12:51:11.403"/>
</return>
<msg timestamp="20241127 12:51:11.403" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.399" endtime="20241127 12:51:11.403"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.404"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.404"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.404"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.404"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.404"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.406"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.404" endtime="20241127 12:51:11.406"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.403" endtime="20241127 12:51:11.406"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.403" endtime="20241127 12:51:11.406"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.406"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.407" endtime="20241127 12:51:11.407"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.407"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.407"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.407" endtime="20241127 12:51:11.407"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.407" endtime="20241127 12:51:11.407"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.407" endtime="20241127 12:51:11.407"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.407" endtime="20241127 12:51:11.407"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.408"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.406" endtime="20241127 12:51:11.408"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.390" endtime="20241127 12:51:11.408"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.408" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:11.408" endtime="20241127 12:51:11.408"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.409" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:11.409" endtime="20241127 12:51:11.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.409" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.409" endtime="20241127 12:51:11.409"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.411" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:11.409" endtime="20241127 12:51:11.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.411" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.411" endtime="20241127 12:51:11.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.411" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:11.411" endtime="20241127 12:51:11.411"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.411" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:11.411" endtime="20241127 12:51:11.411"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.411" endtime="20241127 12:51:11.412"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:11.414" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:11.414" endtime="20241127 12:51:11.414"/>
</kw>
<msg timestamp="20241127 12:51:11.414" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.413" endtime="20241127 12:51:11.414"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.415"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.415"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.415"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.416" endtime="20241127 12:51:11.416"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.416"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.416"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.415" endtime="20241127 12:51:11.416"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.414" endtime="20241127 12:51:11.416"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.416" endtime="20241127 12:51:11.416"/>
</return>
<msg timestamp="20241127 12:51:11.416" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:11.413" endtime="20241127 12:51:11.416"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.418" endtime="20241127 12:51:11.419"/>
</kw>
<msg timestamp="20241127 12:51:11.419" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.418" endtime="20241127 12:51:11.419"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.420" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:11.420" endtime="20241127 12:51:11.420"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.421" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.421" endtime="20241127 12:51:11.421"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.420" endtime="20241127 12:51:11.421"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.421" endtime="20241127 12:51:11.421"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.421" endtime="20241127 12:51:11.421"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.420" endtime="20241127 12:51:11.421"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.420" endtime="20241127 12:51:11.421"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.419" endtime="20241127 12:51:11.422"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.422" endtime="20241127 12:51:11.422"/>
</return>
<msg timestamp="20241127 12:51:11.422" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.418" endtime="20241127 12:51:11.422"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.423" endtime="20241127 12:51:11.423"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.422" endtime="20241127 12:51:11.423"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.422" endtime="20241127 12:51:11.423"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.423" endtime="20241127 12:51:11.423"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.423" endtime="20241127 12:51:11.423"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.423" endtime="20241127 12:51:11.424"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.423" endtime="20241127 12:51:11.424"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.424" endtime="20241127 12:51:11.424"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.424" endtime="20241127 12:51:11.424"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.424" endtime="20241127 12:51:11.424"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.424" endtime="20241127 12:51:11.424"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.422" endtime="20241127 12:51:11.424"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.422" endtime="20241127 12:51:11.424"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.425"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.425"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.425"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.425"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.425"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.426"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.426" endtime="20241127 12:51:11.426"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:11.426" endtime="20241127 12:51:11.426"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:11.426" endtime="20241127 12:51:11.426"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:11.426" endtime="20241127 12:51:11.426"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:11.425" endtime="20241127 12:51:11.426"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.424" endtime="20241127 12:51:11.426"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.408" endtime="20241127 12:51:11.426"/>
</iter>
<status status="PASS" starttime="20241127 12:51:11.390" endtime="20241127 12:51:11.426"/>
</for>
<msg timestamp="20241127 12:51:11.427" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:11.388" endtime="20241127 12:51:11.427"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.427" endtime="20241127 12:51:11.427"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.431" endtime="20241127 12:51:11.431"/>
</kw>
<msg timestamp="20241127 12:51:11.431" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.431" endtime="20241127 12:51:11.431"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.432" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241127 12:51:11.432" endtime="20241127 12:51:11.432"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.432" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.432" endtime="20241127 12:51:11.432"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.432" endtime="20241127 12:51:11.433"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.433" endtime="20241127 12:51:11.433"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.433" endtime="20241127 12:51:11.433"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.432" endtime="20241127 12:51:11.433"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.431" endtime="20241127 12:51:11.433"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.431" endtime="20241127 12:51:11.433"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.433" endtime="20241127 12:51:11.433"/>
</return>
<msg timestamp="20241127 12:51:11.433" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.430" endtime="20241127 12:51:11.433"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.434" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241127 12:51:11.434" endtime="20241127 12:51:11.434"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.434" endtime="20241127 12:51:11.434"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.434" endtime="20241127 12:51:11.434"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.434" endtime="20241127 12:51:11.434"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.433" endtime="20241127 12:51:11.434"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:11.435" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '429', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241127 12:51:11.434" endtime="20241127 12:51:11.435"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:11.436" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "429", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241127 12:51:11.436" endtime="20241127 12:51:11.436"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:11.457" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:11.458" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:11.437" endtime="20241127 12:51:11.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.458" endtime="20241127 12:51:11.459"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:11.459" endtime="20241127 12:51:11.460"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.436" endtime="20241127 12:51:11.461"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.427" endtime="20241127 12:51:11.461"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:11.462" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:11.461" endtime="20241127 12:51:11.462"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.242" endtime="20241127 12:51:11.462"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.462" endtime="20241127 12:51:11.462"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.463" endtime="20241127 12:51:11.463"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.463" endtime="20241127 12:51:11.463"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.462" endtime="20241127 12:51:11.463"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.242" endtime="20241127 12:51:11.464"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.242" endtime="20241127 12:51:11.464"/>
</iter>
<status status="PASS" starttime="20241127 12:51:07.578" endtime="20241127 12:51:11.464"/>
</for>
<status status="PASS" starttime="20241127 12:51:07.578" endtime="20241127 12:51:11.464"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.578" endtime="20241127 12:51:11.464"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:11.467" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '107', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:51:11.466" endtime="20241127 12:51:11.467"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:11.468" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "107", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:51:11.467" endtime="20241127 12:51:11.468"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:11.479" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:11.479" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:11.470" endtime="20241127 12:51:11.479"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.479" endtime="20241127 12:51:11.480"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:11.480" endtime="20241127 12:51:11.480"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.467" endtime="20241127 12:51:11.481"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.464" endtime="20241127 12:51:11.481"/>
</kw>
<status status="PASS" starttime="20241127 12:51:07.565" endtime="20241127 12:51:11.481"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.481" endtime="20241127 12:51:11.481"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.481" endtime="20241127 12:51:11.482"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.482" endtime="20241127 12:51:11.482"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.481" endtime="20241127 12:51:11.482"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.565" endtime="20241127 12:51:11.482"/>
</try>
<status status="PASS" starttime="20241127 12:51:07.565" endtime="20241127 12:51:11.482"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:09:08.930Z', 'updatedAt': '2024-11-25T10:32:49.374Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'projectI...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.483" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241127 12:51:11.483" endtime="20241127 12:51:11.483"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.483" endtime="20241127 12:51:11.484"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:11.488" endtime="20241127 12:51:11.488"/>
</kw>
<msg timestamp="20241127 12:51:11.488" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.487" endtime="20241127 12:51:11.488"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.489" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241127 12:51:11.488" endtime="20241127 12:51:11.489"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.490" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.489" endtime="20241127 12:51:11.490"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.489" endtime="20241127 12:51:11.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.490" endtime="20241127 12:51:11.490"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.490" endtime="20241127 12:51:11.490"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.489" endtime="20241127 12:51:11.490"/>
</if>
<status status="PASS" starttime="20241127 12:51:11.488" endtime="20241127 12:51:11.490"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.488" endtime="20241127 12:51:11.490"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:11.490" endtime="20241127 12:51:11.490"/>
</return>
<msg timestamp="20241127 12:51:11.491" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.487" endtime="20241127 12:51:11.491"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.492" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241127 12:51:11.492" endtime="20241127 12:51:11.492"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:11.492" endtime="20241127 12:51:11.492"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:11.493" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241127 12:51:11.493" endtime="20241127 12:51:11.493"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.493" endtime="20241127 12:51:11.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:11.493" endtime="20241127 12:51:11.494"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.493" endtime="20241127 12:51:11.494"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.493" endtime="20241127 12:51:11.494"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:11.494" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:11.494" endtime="20241127 12:51:11.494"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.495" endtime="20241127 12:51:11.495"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.495" endtime="20241127 12:51:11.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:11.495" endtime="20241127 12:51:11.495"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:11.495" endtime="20241127 12:51:11.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:12.150" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241127 12:51:11.501" endtime="20241127 12:51:12.150"/>
</kw>
<msg timestamp="20241127 12:51:12.151" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.501" endtime="20241127 12:51:12.151"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.151" endtime="20241127 12:51:12.151"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.501" endtime="20241127 12:51:12.151"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.152" endtime="20241127 12:51:12.152"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.152" endtime="20241127 12:51:12.152"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.151" endtime="20241127 12:51:12.153"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.501" endtime="20241127 12:51:12.153"/>
</try>
<msg timestamp="20241127 12:51:12.153" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.501" endtime="20241127 12:51:12.153"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.153" endtime="20241127 12:51:12.154"/>
</return>
<status status="PASS" starttime="20241127 12:51:11.500" endtime="20241127 12:51:12.154"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.154" endtime="20241127 12:51:12.154"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.154" endtime="20241127 12:51:12.154"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.500" endtime="20241127 12:51:12.154"/>
</try>
<msg timestamp="20241127 12:51:12.155" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:11.499" endtime="20241127 12:51:12.155"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.159" endtime="20241127 12:51:12.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.159" endtime="20241127 12:51:12.159"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.159" endtime="20241127 12:51:12.160"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.158" endtime="20241127 12:51:12.160"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.157" endtime="20241127 12:51:12.160"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.499" endtime="20241127 12:51:12.160"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:12.197" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241127 12:51:12.166" endtime="20241127 12:51:12.197"/>
</kw>
<msg timestamp="20241127 12:51:12.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.165" endtime="20241127 12:51:12.197"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.197" endtime="20241127 12:51:12.197"/>
</return>
<status status="PASS" starttime="20241127 12:51:12.165" endtime="20241127 12:51:12.197"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.198" endtime="20241127 12:51:12.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.198" endtime="20241127 12:51:12.198"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.197" endtime="20241127 12:51:12.198"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.165" endtime="20241127 12:51:12.198"/>
</try>
<msg timestamp="20241127 12:51:12.198" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.164" endtime="20241127 12:51:12.198"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.198" endtime="20241127 12:51:12.198"/>
</return>
<msg timestamp="20241127 12:51:12.199" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.163" endtime="20241127 12:51:12.199"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.201" endtime="20241127 12:51:12.201"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.201" endtime="20241127 12:51:12.201"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.201" endtime="20241127 12:51:12.201"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.201" endtime="20241127 12:51:12.201"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.200" endtime="20241127 12:51:12.202"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.162" endtime="20241127 12:51:12.202"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:12.221" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241127 12:51:12.207" endtime="20241127 12:51:12.221"/>
</kw>
<msg timestamp="20241127 12:51:12.222" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.206" endtime="20241127 12:51:12.222"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.222" endtime="20241127 12:51:12.222"/>
</return>
<status status="PASS" starttime="20241127 12:51:12.206" endtime="20241127 12:51:12.222"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.222" endtime="20241127 12:51:12.222"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.223" endtime="20241127 12:51:12.223"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.222" endtime="20241127 12:51:12.223"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.206" endtime="20241127 12:51:12.223"/>
</try>
<msg timestamp="20241127 12:51:12.223" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.206" endtime="20241127 12:51:12.223"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:12.223" endtime="20241127 12:51:12.223"/>
</return>
<msg timestamp="20241127 12:51:12.224" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.204" endtime="20241127 12:51:12.224"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.226" endtime="20241127 12:51:12.226"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.226" endtime="20241127 12:51:12.226"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.226" endtime="20241127 12:51:12.226"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.226" endtime="20241127 12:51:12.226"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.225" endtime="20241127 12:51:12.226"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.204" endtime="20241127 12:51:12.227"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.498" endtime="20241127 12:51:12.227"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:12.227" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:12.227" endtime="20241127 12:51:12.227"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.229" endtime="20241127 12:51:12.229"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.229" endtime="20241127 12:51:12.229"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:12.229" endtime="20241127 12:51:12.229"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.229" endtime="20241127 12:51:12.230"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.228" endtime="20241127 12:51:12.230"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:51:12.230" endtime="20241127 12:51:12.626"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.230" endtime="20241127 12:51:12.627"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.627" endtime="20241127 12:51:12.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.627" endtime="20241127 12:51:12.627"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.627" endtime="20241127 12:51:12.628"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.230" endtime="20241127 12:51:12.628"/>
</try>
<status status="PASS" starttime="20241127 12:51:12.228" endtime="20241127 12:51:12.628"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.228" endtime="20241127 12:51:12.628"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.227" endtime="20241127 12:51:12.628"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.628" endtime="20241127 12:51:12.629"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.628" endtime="20241127 12:51:12.629"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.227" endtime="20241127 12:51:12.629"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.497" endtime="20241127 12:51:12.629"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.495" endtime="20241127 12:51:12.629"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.632" endtime="20241127 12:51:12.632"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.635" endtime="20241127 12:51:12.635"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.629" endtime="20241127 12:51:12.635"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.638" endtime="20241127 12:51:12.638"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.635" endtime="20241127 12:51:12.639"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.642" endtime="20241127 12:51:12.643"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.639" endtime="20241127 12:51:12.643"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.645" endtime="20241127 12:51:12.645"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.645" endtime="20241127 12:51:12.645"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.645" endtime="20241127 12:51:12.646"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.645" endtime="20241127 12:51:12.646"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.643" endtime="20241127 12:51:12.646"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.647" endtime="20241127 12:51:12.647"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.646" endtime="20241127 12:51:12.647"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.649" endtime="20241127 12:51:12.649"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.649" endtime="20241127 12:51:12.649"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.649" endtime="20241127 12:51:12.649"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.650" endtime="20241127 12:51:12.650"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.649" endtime="20241127 12:51:12.650"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.649" endtime="20241127 12:51:12.650"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.647" endtime="20241127 12:51:12.650"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:12.656" endtime="20241127 12:51:12.657"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.663" endtime="20241127 12:51:12.663"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.650" endtime="20241127 12:51:12.663"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.665" endtime="20241127 12:51:12.665"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.666" endtime="20241127 12:51:12.666"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.666" endtime="20241127 12:51:12.666"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.667" endtime="20241127 12:51:12.667"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.666" endtime="20241127 12:51:12.667"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.666" endtime="20241127 12:51:12.667"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.663" endtime="20241127 12:51:12.667"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:12.674" endtime="20241127 12:51:12.674"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.678" endtime="20241127 12:51:12.679"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.667" endtime="20241127 12:51:12.679"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.681" endtime="20241127 12:51:12.681"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.681" endtime="20241127 12:51:12.682"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.681" endtime="20241127 12:51:12.682"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.682" endtime="20241127 12:51:12.683"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.682" endtime="20241127 12:51:12.683"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.681" endtime="20241127 12:51:12.683"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.679" endtime="20241127 12:51:12.683"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.687" endtime="20241127 12:51:12.687"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.683" endtime="20241127 12:51:12.687"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:12.696" endtime="20241127 12:51:12.696"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.696" endtime="20241127 12:51:12.696"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.687" endtime="20241127 12:51:12.696"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.494" endtime="20241127 12:51:12.696"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:12.697" endtime="20241127 12:51:12.697"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:12.697" endtime="20241127 12:51:12.698"/>
</return>
<msg timestamp="20241127 12:51:12.698" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:11.494" endtime="20241127 12:51:12.698"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.699" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241127 12:51:12.699" endtime="20241127 12:51:12.699"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.700" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:12.700" endtime="20241127 12:51:12.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.700" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:12.700" endtime="20241127 12:51:12.701"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.701" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.701" endtime="20241127 12:51:12.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.702" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:12.702" endtime="20241127 12:51:12.703"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.704" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.703" endtime="20241127 12:51:12.704"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.705" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:12.704" endtime="20241127 12:51:12.705"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.706" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:12.705" endtime="20241127 12:51:12.706"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:12.706" endtime="20241127 12:51:12.707"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:12.712" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:12.711" endtime="20241127 12:51:12.712"/>
</kw>
<msg timestamp="20241127 12:51:12.712" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.711" endtime="20241127 12:51:12.712"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.713" endtime="20241127 12:51:12.713"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.713" endtime="20241127 12:51:12.713"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.713" endtime="20241127 12:51:12.714"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.714" endtime="20241127 12:51:12.714"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.714" endtime="20241127 12:51:12.714"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.713" endtime="20241127 12:51:12.714"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.712" endtime="20241127 12:51:12.715"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.712" endtime="20241127 12:51:12.715"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:12.715" endtime="20241127 12:51:12.715"/>
</return>
<msg timestamp="20241127 12:51:12.715" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.709" endtime="20241127 12:51:12.715"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:12.723" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:12.722" endtime="20241127 12:51:12.723"/>
</kw>
<msg timestamp="20241127 12:51:12.723" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.721" endtime="20241127 12:51:12.723"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.724" endtime="20241127 12:51:12.724"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.725" endtime="20241127 12:51:12.725"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.724" endtime="20241127 12:51:12.725"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.725" endtime="20241127 12:51:12.725"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.725" endtime="20241127 12:51:12.725"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.724" endtime="20241127 12:51:12.725"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.724" endtime="20241127 12:51:12.725"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.723" endtime="20241127 12:51:12.725"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:12.725" endtime="20241127 12:51:12.726"/>
</return>
<msg timestamp="20241127 12:51:12.726" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.718" endtime="20241127 12:51:12.726"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.727"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.727"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.726" endtime="20241127 12:51:12.727"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.727"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.727"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.727"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.727" endtime="20241127 12:51:12.728"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.728" endtime="20241127 12:51:12.728"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.728" endtime="20241127 12:51:12.728"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.728" endtime="20241127 12:51:12.728"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.728" endtime="20241127 12:51:12.728"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.726" endtime="20241127 12:51:12.728"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.726" endtime="20241127 12:51:12.728"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:12.729" endtime="20241127 12:51:12.729"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.729" endtime="20241127 12:51:12.729"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.729" endtime="20241127 12:51:12.730"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.730" endtime="20241127 12:51:12.730"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.730" endtime="20241127 12:51:12.730"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.730" endtime="20241127 12:51:12.730"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.731" endtime="20241127 12:51:12.731"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.731" endtime="20241127 12:51:12.731"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.730" endtime="20241127 12:51:12.731"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.730" endtime="20241127 12:51:12.731"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.729" endtime="20241127 12:51:12.731"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.729" endtime="20241127 12:51:12.731"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.700" endtime="20241127 12:51:12.731"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.733" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:12.732" endtime="20241127 12:51:12.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.734" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:12.733" endtime="20241127 12:51:12.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.734" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.734" endtime="20241127 12:51:12.734"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.735" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:12.735" endtime="20241127 12:51:12.736"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.737" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.736" endtime="20241127 12:51:12.737"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.738" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:12.738" endtime="20241127 12:51:12.738"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.740" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:12.740" endtime="20241127 12:51:12.740"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:12.741" endtime="20241127 12:51:12.742"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:12.747" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:12.746" endtime="20241127 12:51:12.747"/>
</kw>
<msg timestamp="20241127 12:51:12.747" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.745" endtime="20241127 12:51:12.747"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.748" endtime="20241127 12:51:12.748"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.749" endtime="20241127 12:51:12.749"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.749" endtime="20241127 12:51:12.750"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.750" endtime="20241127 12:51:12.751"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.750" endtime="20241127 12:51:12.751"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.749" endtime="20241127 12:51:12.751"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.748" endtime="20241127 12:51:12.751"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.747" endtime="20241127 12:51:12.751"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:12.751" endtime="20241127 12:51:12.752"/>
</return>
<msg timestamp="20241127 12:51:12.753" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:12.744" endtime="20241127 12:51:12.753"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:12.756" endtime="20241127 12:51:12.757"/>
</kw>
<msg timestamp="20241127 12:51:12.757" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.756" endtime="20241127 12:51:12.757"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.759" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:12.758" endtime="20241127 12:51:12.759"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.761" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.760" endtime="20241127 12:51:12.761"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.760" endtime="20241127 12:51:12.761"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.762" endtime="20241127 12:51:12.762"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.761" endtime="20241127 12:51:12.762"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.759" endtime="20241127 12:51:12.763"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.758" endtime="20241127 12:51:12.763"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.757" endtime="20241127 12:51:12.763"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:12.764" endtime="20241127 12:51:12.764"/>
</return>
<msg timestamp="20241127 12:51:12.764" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.755" endtime="20241127 12:51:12.764"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:12.772" endtime="20241127 12:51:12.773"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.772" endtime="20241127 12:51:12.773"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.772" endtime="20241127 12:51:12.773"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.774" endtime="20241127 12:51:12.774"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.774" endtime="20241127 12:51:12.774"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.773" endtime="20241127 12:51:12.774"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.773" endtime="20241127 12:51:12.774"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.775" endtime="20241127 12:51:12.775"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.775" endtime="20241127 12:51:12.775"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.775" endtime="20241127 12:51:12.776"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.775" endtime="20241127 12:51:12.776"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.765" endtime="20241127 12:51:12.776"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.764" endtime="20241127 12:51:12.776"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:12.777" endtime="20241127 12:51:12.777"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.777" endtime="20241127 12:51:12.778"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.777" endtime="20241127 12:51:12.778"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.778" endtime="20241127 12:51:12.779"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.778" endtime="20241127 12:51:12.779"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.778" endtime="20241127 12:51:12.779"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.780" endtime="20241127 12:51:12.780"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:12.780" endtime="20241127 12:51:12.780"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:12.780" endtime="20241127 12:51:12.781"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:12.780" endtime="20241127 12:51:12.781"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:12.777" endtime="20241127 12:51:12.785"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.776" endtime="20241127 12:51:12.786"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.732" endtime="20241127 12:51:12.787"/>
</iter>
<status status="PASS" starttime="20241127 12:51:12.699" endtime="20241127 12:51:12.787"/>
</for>
<msg timestamp="20241127 12:51:12.787" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:12.698" endtime="20241127 12:51:12.787"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:12.788" endtime="20241127 12:51:12.791"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:12.801" endtime="20241127 12:51:12.802"/>
</kw>
<msg timestamp="20241127 12:51:12.802" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.801" endtime="20241127 12:51:12.802"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.804" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241127 12:51:12.803" endtime="20241127 12:51:12.804"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.806" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.805" endtime="20241127 12:51:12.806"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.805" endtime="20241127 12:51:12.806"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.806" endtime="20241127 12:51:12.807"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.806" endtime="20241127 12:51:12.807"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.805" endtime="20241127 12:51:12.807"/>
</if>
<status status="PASS" starttime="20241127 12:51:12.803" endtime="20241127 12:51:12.807"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.803" endtime="20241127 12:51:12.807"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:12.807" endtime="20241127 12:51:12.808"/>
</return>
<msg timestamp="20241127 12:51:12.808" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.800" endtime="20241127 12:51:12.808"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.812" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241127 12:51:12.811" endtime="20241127 12:51:12.812"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.811" endtime="20241127 12:51:12.812"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.812" endtime="20241127 12:51:12.812"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.812" endtime="20241127 12:51:12.813"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.810" endtime="20241127 12:51:12.813"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:12.815" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '432', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241127 12:51:12.813" endtime="20241127 12:51:12.815"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:12.818" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "432", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241127 12:51:12.817" endtime="20241127 12:51:12.818"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:12.842" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:12.842" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:12.818" endtime="20241127 12:51:12.842"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:12.843" endtime="20241127 12:51:12.857"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:12.858" endtime="20241127 12:51:12.858"/>
</return>
<status status="PASS" starttime="20241127 12:51:12.816" endtime="20241127 12:51:12.858"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.791" endtime="20241127 12:51:12.859"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:12.860" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:12.859" endtime="20241127 12:51:12.860"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:12.860"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.860" endtime="20241127 12:51:12.860"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:12.861" endtime="20241127 12:51:12.861"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.861" endtime="20241127 12:51:12.861"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.860" endtime="20241127 12:51:12.862"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:12.862"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:12.862"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.864" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241127 12:51:12.863" endtime="20241127 12:51:12.864"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:12.864" endtime="20241127 12:51:12.865"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:12.866" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241127 12:51:12.865" endtime="20241127 12:51:12.866"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.867" endtime="20241127 12:51:12.867"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:12.868" endtime="20241127 12:51:12.868"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.866" endtime="20241127 12:51:12.868"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.866" endtime="20241127 12:51:12.868"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:12.870" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:12.869" endtime="20241127 12:51:12.870"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:12.871" endtime="20241127 12:51:12.871"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.871" endtime="20241127 12:51:12.871"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:12.872" endtime="20241127 12:51:12.872"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:12.872" endtime="20241127 12:51:12.872"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:13.026" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241127 12:51:12.889" endtime="20241127 12:51:13.027"/>
</kw>
<msg timestamp="20241127 12:51:13.027" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.888" endtime="20241127 12:51:13.027"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.027" endtime="20241127 12:51:13.027"/>
</return>
<status status="PASS" starttime="20241127 12:51:12.888" endtime="20241127 12:51:13.028"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.028" endtime="20241127 12:51:13.028"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.029" endtime="20241127 12:51:13.029"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.028" endtime="20241127 12:51:13.029"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.888" endtime="20241127 12:51:13.029"/>
</try>
<msg timestamp="20241127 12:51:13.030" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.887" endtime="20241127 12:51:13.030"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.030" endtime="20241127 12:51:13.030"/>
</return>
<status status="PASS" starttime="20241127 12:51:12.884" endtime="20241127 12:51:13.030"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.030" endtime="20241127 12:51:13.030"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.030" endtime="20241127 12:51:13.030"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.884" endtime="20241127 12:51:13.031"/>
</try>
<msg timestamp="20241127 12:51:13.031" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:12.883" endtime="20241127 12:51:13.031"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.034" endtime="20241127 12:51:13.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.035" endtime="20241127 12:51:13.035"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.034" endtime="20241127 12:51:13.035"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.034" endtime="20241127 12:51:13.035"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.032" endtime="20241127 12:51:13.036"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.881" endtime="20241127 12:51:13.036"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:13.064" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241127 12:51:13.044" endtime="20241127 12:51:13.065"/>
</kw>
<msg timestamp="20241127 12:51:13.065" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.044" endtime="20241127 12:51:13.065"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.065" endtime="20241127 12:51:13.065"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.043" endtime="20241127 12:51:13.065"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.065" endtime="20241127 12:51:13.066"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.066" endtime="20241127 12:51:13.066"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.065" endtime="20241127 12:51:13.066"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.043" endtime="20241127 12:51:13.066"/>
</try>
<msg timestamp="20241127 12:51:13.066" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.043" endtime="20241127 12:51:13.066"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.066" endtime="20241127 12:51:13.066"/>
</return>
<msg timestamp="20241127 12:51:13.067" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.040" endtime="20241127 12:51:13.067"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.069" endtime="20241127 12:51:13.070"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.070" endtime="20241127 12:51:13.070"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.069" endtime="20241127 12:51:13.070"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.069" endtime="20241127 12:51:13.070"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.068" endtime="20241127 12:51:13.070"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.039" endtime="20241127 12:51:13.070"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:13.087" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241127 12:51:13.075" endtime="20241127 12:51:13.087"/>
</kw>
<msg timestamp="20241127 12:51:13.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.075" endtime="20241127 12:51:13.088"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.088" endtime="20241127 12:51:13.088"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.075" endtime="20241127 12:51:13.088"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.088" endtime="20241127 12:51:13.088"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.089" endtime="20241127 12:51:13.089"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.088" endtime="20241127 12:51:13.089"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.075" endtime="20241127 12:51:13.089"/>
</try>
<msg timestamp="20241127 12:51:13.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.074" endtime="20241127 12:51:13.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.089" endtime="20241127 12:51:13.089"/>
</return>
<msg timestamp="20241127 12:51:13.089" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.073" endtime="20241127 12:51:13.089"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.092" endtime="20241127 12:51:13.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.092" endtime="20241127 12:51:13.092"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.091" endtime="20241127 12:51:13.092"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.091" endtime="20241127 12:51:13.092"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.090" endtime="20241127 12:51:13.092"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.072" endtime="20241127 12:51:13.092"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.877" endtime="20241127 12:51:13.093"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.093" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241127 12:51:13.093" endtime="20241127 12:51:13.093"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.095" endtime="20241127 12:51:13.095"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.094" endtime="20241127 12:51:13.095"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.095" endtime="20241127 12:51:13.095"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.095" endtime="20241127 12:51:13.095"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.094" endtime="20241127 12:51:13.096"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241127 12:51:13.096" endtime="20241127 12:51:13.237"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.096" endtime="20241127 12:51:13.237"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.238" endtime="20241127 12:51:13.238"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.238" endtime="20241127 12:51:13.238"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.237" endtime="20241127 12:51:13.238"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.096" endtime="20241127 12:51:13.238"/>
</try>
<status status="PASS" starttime="20241127 12:51:13.094" endtime="20241127 12:51:13.239"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.093" endtime="20241127 12:51:13.239"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.093" endtime="20241127 12:51:13.239"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.239" endtime="20241127 12:51:13.239"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.239" endtime="20241127 12:51:13.239"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.093" endtime="20241127 12:51:13.239"/>
</try>
<status status="PASS" starttime="20241127 12:51:12.876" endtime="20241127 12:51:13.239"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.872" endtime="20241127 12:51:13.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.242" endtime="20241127 12:51:13.242"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.244" endtime="20241127 12:51:13.244"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.240" endtime="20241127 12:51:13.244"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.246" endtime="20241127 12:51:13.246"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.244" endtime="20241127 12:51:13.246"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.252" endtime="20241127 12:51:13.252"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.246" endtime="20241127 12:51:13.252"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.254" endtime="20241127 12:51:13.254"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.255" endtime="20241127 12:51:13.255"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.255" endtime="20241127 12:51:13.255"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.255" endtime="20241127 12:51:13.255"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.252" endtime="20241127 12:51:13.255"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.258" endtime="20241127 12:51:13.258"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.255" endtime="20241127 12:51:13.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.259" endtime="20241127 12:51:13.260"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.260" endtime="20241127 12:51:13.260"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.260" endtime="20241127 12:51:13.260"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.260" endtime="20241127 12:51:13.260"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.260" endtime="20241127 12:51:13.261"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.260" endtime="20241127 12:51:13.261"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.258" endtime="20241127 12:51:13.261"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.267" endtime="20241127 12:51:13.267"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.272" endtime="20241127 12:51:13.272"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.261" endtime="20241127 12:51:13.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.275" endtime="20241127 12:51:13.275"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.276" endtime="20241127 12:51:13.276"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.275" endtime="20241127 12:51:13.276"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.276" endtime="20241127 12:51:13.276"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.276" endtime="20241127 12:51:13.277"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.275" endtime="20241127 12:51:13.277"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.272" endtime="20241127 12:51:13.277"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.287" endtime="20241127 12:51:13.287"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.292" endtime="20241127 12:51:13.292"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.277" endtime="20241127 12:51:13.292"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.293" endtime="20241127 12:51:13.293"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.293" endtime="20241127 12:51:13.293"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.293" endtime="20241127 12:51:13.293"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.294" endtime="20241127 12:51:13.294"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.294" endtime="20241127 12:51:13.294"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.293" endtime="20241127 12:51:13.294"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.292" endtime="20241127 12:51:13.294"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.296" endtime="20241127 12:51:13.296"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.294" endtime="20241127 12:51:13.296"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.301" endtime="20241127 12:51:13.302"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.302" endtime="20241127 12:51:13.302"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.296" endtime="20241127 12:51:13.302"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.870" endtime="20241127 12:51:13.302"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.302" endtime="20241127 12:51:13.303"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:13.303" endtime="20241127 12:51:13.303"/>
</return>
<msg timestamp="20241127 12:51:13.304" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:12.868" endtime="20241127 12:51:13.304"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.305" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241127 12:51:13.305" endtime="20241127 12:51:13.305"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.306" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:13.305" endtime="20241127 12:51:13.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.306" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:13.306" endtime="20241127 12:51:13.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.307" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.306" endtime="20241127 12:51:13.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.307" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:13.307" endtime="20241127 12:51:13.307"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.308" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.308" endtime="20241127 12:51:13.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.309" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.309" endtime="20241127 12:51:13.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.310" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:13.309" endtime="20241127 12:51:13.310"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.310" endtime="20241127 12:51:13.311"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.314" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.313" endtime="20241127 12:51:13.314"/>
</kw>
<msg timestamp="20241127 12:51:13.314" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.313" endtime="20241127 12:51:13.314"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.315" endtime="20241127 12:51:13.315"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.315" endtime="20241127 12:51:13.315"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.315" endtime="20241127 12:51:13.315"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.316" endtime="20241127 12:51:13.316"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.316" endtime="20241127 12:51:13.316"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.315" endtime="20241127 12:51:13.316"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.314" endtime="20241127 12:51:13.316"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.314" endtime="20241127 12:51:13.316"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.316" endtime="20241127 12:51:13.317"/>
</return>
<msg timestamp="20241127 12:51:13.317" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.312" endtime="20241127 12:51:13.317"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.322" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.321" endtime="20241127 12:51:13.322"/>
</kw>
<msg timestamp="20241127 12:51:13.322" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.321" endtime="20241127 12:51:13.322"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.323" endtime="20241127 12:51:13.323"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.323" endtime="20241127 12:51:13.323"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.323" endtime="20241127 12:51:13.323"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.324" endtime="20241127 12:51:13.324"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.323" endtime="20241127 12:51:13.324"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.323" endtime="20241127 12:51:13.324"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.322" endtime="20241127 12:51:13.324"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.322" endtime="20241127 12:51:13.324"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.324" endtime="20241127 12:51:13.324"/>
</return>
<msg timestamp="20241127 12:51:13.324" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.320" endtime="20241127 12:51:13.324"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.325"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.325"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.325"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.326"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.326"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.326"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.326"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.326"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.326"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.327"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.326" endtime="20241127 12:51:13.327"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.327"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.325" endtime="20241127 12:51:13.327"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.327" endtime="20241127 12:51:13.327"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.327" endtime="20241127 12:51:13.327"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.327" endtime="20241127 12:51:13.328"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.328"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.328"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.328"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.328"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.329"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.329"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.328" endtime="20241127 12:51:13.329"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.327" endtime="20241127 12:51:13.329"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.327" endtime="20241127 12:51:13.329"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.305" endtime="20241127 12:51:13.329"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.330" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:13.329" endtime="20241127 12:51:13.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.330" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:13.330" endtime="20241127 12:51:13.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.331" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.331" endtime="20241127 12:51:13.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.331" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:13.331" endtime="20241127 12:51:13.331"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.332" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.332" endtime="20241127 12:51:13.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.332" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:13.332" endtime="20241127 12:51:13.332"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.333" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:13.333" endtime="20241127 12:51:13.333"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.333" endtime="20241127 12:51:13.333"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.337" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.337" endtime="20241127 12:51:13.338"/>
</kw>
<msg timestamp="20241127 12:51:13.338" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.336" endtime="20241127 12:51:13.338"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.338" endtime="20241127 12:51:13.338"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.339" endtime="20241127 12:51:13.339"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.339" endtime="20241127 12:51:13.339"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.339" endtime="20241127 12:51:13.339"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.339" endtime="20241127 12:51:13.339"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.338" endtime="20241127 12:51:13.340"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.338" endtime="20241127 12:51:13.340"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.338" endtime="20241127 12:51:13.340"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.340" endtime="20241127 12:51:13.340"/>
</return>
<msg timestamp="20241127 12:51:13.341" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.335" endtime="20241127 12:51:13.341"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.344" endtime="20241127 12:51:13.344"/>
</kw>
<msg timestamp="20241127 12:51:13.344" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.343" endtime="20241127 12:51:13.344"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.345" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.345" endtime="20241127 12:51:13.345"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.346" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.346" endtime="20241127 12:51:13.346"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.346" endtime="20241127 12:51:13.346"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.347" endtime="20241127 12:51:13.347"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.346" endtime="20241127 12:51:13.347"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.346" endtime="20241127 12:51:13.347"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.345" endtime="20241127 12:51:13.347"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.345" endtime="20241127 12:51:13.347"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.347" endtime="20241127 12:51:13.347"/>
</return>
<msg timestamp="20241127 12:51:13.347" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.343" endtime="20241127 12:51:13.347"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.348"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.348"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.348"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.349"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.349"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.349"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.349"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.349"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.349"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.350"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.349" endtime="20241127 12:51:13.350"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.348" endtime="20241127 12:51:13.350"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.347" endtime="20241127 12:51:13.350"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.350" endtime="20241127 12:51:13.350"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.350" endtime="20241127 12:51:13.350"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.350" endtime="20241127 12:51:13.351"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.352" endtime="20241127 12:51:13.352"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.352" endtime="20241127 12:51:13.352"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.352" endtime="20241127 12:51:13.352"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.353" endtime="20241127 12:51:13.353"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.353" endtime="20241127 12:51:13.353"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.352" endtime="20241127 12:51:13.353"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.352" endtime="20241127 12:51:13.353"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.350" endtime="20241127 12:51:13.354"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.350" endtime="20241127 12:51:13.354"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.329" endtime="20241127 12:51:13.354"/>
</iter>
<status status="PASS" starttime="20241127 12:51:13.305" endtime="20241127 12:51:13.354"/>
</for>
<msg timestamp="20241127 12:51:13.354" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241127 12:51:13.304" endtime="20241127 12:51:13.355"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.355" endtime="20241127 12:51:13.356"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.360" endtime="20241127 12:51:13.360"/>
</kw>
<msg timestamp="20241127 12:51:13.361" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.360" endtime="20241127 12:51:13.361"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.362" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241127 12:51:13.361" endtime="20241127 12:51:13.362"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.364" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.363" endtime="20241127 12:51:13.364"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.363" endtime="20241127 12:51:13.364"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.364" endtime="20241127 12:51:13.364"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.364" endtime="20241127 12:51:13.364"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.362" endtime="20241127 12:51:13.364"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.361" endtime="20241127 12:51:13.364"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.361" endtime="20241127 12:51:13.365"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.365" endtime="20241127 12:51:13.365"/>
</return>
<msg timestamp="20241127 12:51:13.365" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.359" endtime="20241127 12:51:13.365"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.367" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241127 12:51:13.366" endtime="20241127 12:51:13.367"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.366" endtime="20241127 12:51:13.367"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.367" endtime="20241127 12:51:13.368"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.367" endtime="20241127 12:51:13.368"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.365" endtime="20241127 12:51:13.368"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.370" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '433', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241127 12:51:13.369" endtime="20241127 12:51:13.370"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.371" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "433", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241127 12:51:13.371" endtime="20241127 12:51:13.371"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.378" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.378" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.371" endtime="20241127 12:51:13.378"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.379" endtime="20241127 12:51:13.380"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.380" endtime="20241127 12:51:13.380"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.370" endtime="20241127 12:51:13.380"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.356" endtime="20241127 12:51:13.380"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:13.381" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:13.381" endtime="20241127 12:51:13.381"/>
</kw>
<status status="PASS" starttime="20241127 12:51:12.863" endtime="20241127 12:51:13.382"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.382" endtime="20241127 12:51:13.382"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.382" endtime="20241127 12:51:13.382"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.382" endtime="20241127 12:51:13.383"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.382" endtime="20241127 12:51:13.383"/>
</branch>
<status status="PASS" starttime="20241127 12:51:12.862" endtime="20241127 12:51:13.383"/>
</try>
<status status="PASS" starttime="20241127 12:51:12.862" endtime="20241127 12:51:13.383"/>
</iter>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:13.383"/>
</for>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:13.384"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.491" endtime="20241127 12:51:13.384"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.388" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '108', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241127 12:51:13.386" endtime="20241127 12:51:13.388"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.389" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "108", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241127 12:51:13.389" endtime="20241127 12:51:13.390"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.421" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.421" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.390" endtime="20241127 12:51:13.421"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.421" endtime="20241127 12:51:13.422"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.422" endtime="20241127 12:51:13.422"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.388" endtime="20241127 12:51:13.423"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.384" endtime="20241127 12:51:13.423"/>
</kw>
<status status="PASS" starttime="20241127 12:51:11.483" endtime="20241127 12:51:13.423"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.424" endtime="20241127 12:51:13.424"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.424" endtime="20241127 12:51:13.425"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.425" endtime="20241127 12:51:13.425"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.423" endtime="20241127 12:51:13.425"/>
</branch>
<status status="PASS" starttime="20241127 12:51:11.482" endtime="20241127 12:51:13.426"/>
</try>
<status status="PASS" starttime="20241127 12:51:11.482" endtime="20241127 12:51:13.426"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '4', 'testCaseId': '2', 'flowId': '3', 'order': 2, 'createdAt': '2024-11-25T08:09:08.930Z', 'updatedAt': '2024-11-25T10:32:49.368Z', 'flow': {'id': '3', 'name': 'Get profile information', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.428" level="INFO">${flow} = {'id': '3', 'name': 'Get profile information', 'projectId': '1', 'createdAt': '2024-11-25T08:07:40.870Z', 'updatedAt': '2024-11-25T10:25:46.163Z', 'flowActionSequences': [{'id': '7', 'actionId': '7', ...</msg>
<status status="PASS" starttime="20241127 12:51:13.427" endtime="20241127 12:51:13.428"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.428" endtime="20241127 12:51:13.429"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.435" endtime="20241127 12:51:13.435"/>
</kw>
<msg timestamp="20241127 12:51:13.436" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.434" endtime="20241127 12:51:13.436"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.437" level="INFO">${values} = [{'id': '7', 'actionId': '7', 'flowId': '3', 'order': 0, 'createdAt': '2024-11-25T08:07:40.951Z', 'updatedAt': '2024-11-25T10:25:46.100Z', 'action': {'id': '7', 'name': 'Get email', 'type': 'GET_TEXT'...</msg>
<status status="PASS" starttime="20241127 12:51:13.437" endtime="20241127 12:51:13.437"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.439" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.438" endtime="20241127 12:51:13.439"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.438" endtime="20241127 12:51:13.439"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.439" endtime="20241127 12:51:13.440"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.439" endtime="20241127 12:51:13.440"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.437" endtime="20241127 12:51:13.440"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.436" endtime="20241127 12:51:13.440"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.436" endtime="20241127 12:51:13.440"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.440" endtime="20241127 12:51:13.441"/>
</return>
<msg timestamp="20241127 12:51:13.441" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.433" endtime="20241127 12:51:13.441"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '7', 'actionId': '7', 'flowId': '3', 'order': 0, 'createdAt': '2024-11-25T08:07:40.951Z', 'updatedAt': '2024-11-25T10:25:46.100Z', 'action': {'id': '7', 'name': 'Get email', 'type': 'GET_TEXT',...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.443" level="INFO">${action} = {'id': '7', 'name': 'Get email', 'type': 'GET_TEXT', 'selectorI': '6', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:07:12.218Z', 'updatedAt': '2024-11-25T08:07:12.218Z...</msg>
<status status="PASS" starttime="20241127 12:51:13.443" endtime="20241127 12:51:13.443"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.443" endtime="20241127 12:51:13.444"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:13.445" level="INFO">${input} = {'id': '8', 'actionId': '7', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:07:12.407Z', 'updatedAt': '2024-11-25T08:07:12.407Z'}</msg>
<status status="PASS" starttime="20241127 12:51:13.444" endtime="20241127 12:51:13.445"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.445" endtime="20241127 12:51:13.445"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.446" endtime="20241127 12:51:13.446"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.445" endtime="20241127 12:51:13.446"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.445" endtime="20241127 12:51:13.446"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.447" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.447"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.447"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.447"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.447"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.447"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.449" endtime="20241127 12:51:13.450"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.450"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.453" endtime="20241127 12:51:13.453"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.455" endtime="20241127 12:51:13.455"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.450" endtime="20241127 12:51:13.455"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.457" endtime="20241127 12:51:13.457"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.456" endtime="20241127 12:51:13.457"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.460" endtime="20241127 12:51:13.461"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.457" endtime="20241127 12:51:13.461"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.463" endtime="20241127 12:51:13.463"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.464" endtime="20241127 12:51:13.464"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.463" endtime="20241127 12:51:13.464"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.463" endtime="20241127 12:51:13.464"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.461" endtime="20241127 12:51:13.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.466" endtime="20241127 12:51:13.466"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.465" endtime="20241127 12:51:13.467"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.468" endtime="20241127 12:51:13.468"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.469" endtime="20241127 12:51:13.469"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.469" endtime="20241127 12:51:13.469"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.469" endtime="20241127 12:51:13.469"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.469" endtime="20241127 12:51:13.469"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.469" endtime="20241127 12:51:13.469"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.467" endtime="20241127 12:51:13.470"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.476" endtime="20241127 12:51:13.476"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.480" endtime="20241127 12:51:13.480"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.470" endtime="20241127 12:51:13.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.483" endtime="20241127 12:51:13.483"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.484" endtime="20241127 12:51:13.484"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.483" endtime="20241127 12:51:13.484"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.485" endtime="20241127 12:51:13.485"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.485" endtime="20241127 12:51:13.485"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.483" endtime="20241127 12:51:13.485"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.481" endtime="20241127 12:51:13.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.493" endtime="20241127 12:51:13.493"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.496" endtime="20241127 12:51:13.496"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.487" endtime="20241127 12:51:13.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.498" endtime="20241127 12:51:13.498"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.498" endtime="20241127 12:51:13.498"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.498" endtime="20241127 12:51:13.498"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.499" endtime="20241127 12:51:13.499"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.498" endtime="20241127 12:51:13.499"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.498" endtime="20241127 12:51:13.499"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.497" endtime="20241127 12:51:13.499"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:13.512" level="INFO">Waited for Element with selector //p[text()="EMAIL"]//following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241127 12:51:13.507" endtime="20241127 12:51:13.512"/>
</kw>
<msg timestamp="20241127 12:51:13.512" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.506" endtime="20241127 12:51:13.512"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.512" endtime="20241127 12:51:13.512"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.506" endtime="20241127 12:51:13.512"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.513" endtime="20241127 12:51:13.513"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.513" endtime="20241127 12:51:13.513"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.512" endtime="20241127 12:51:13.513"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.506" endtime="20241127 12:51:13.513"/>
</try>
<msg timestamp="20241127 12:51:13.513" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.506" endtime="20241127 12:51:13.513"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.514" endtime="20241127 12:51:13.514"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.504" endtime="20241127 12:51:13.514"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.514" endtime="20241127 12:51:13.514"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.514" endtime="20241127 12:51:13.514"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.504" endtime="20241127 12:51:13.514"/>
</try>
<msg timestamp="20241127 12:51:13.514" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.504" endtime="20241127 12:51:13.514"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.517" endtime="20241127 12:51:13.517"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.517" endtime="20241127 12:51:13.517"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.516" endtime="20241127 12:51:13.517"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.516" endtime="20241127 12:51:13.517"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.515" endtime="20241127 12:51:13.517"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.504" endtime="20241127 12:51:13.517"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:13.526" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241127 12:51:13.526" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.518" endtime="20241127 12:51:13.526"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:13.526" endtime="20241127 12:51:13.526"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.518" endtime="20241127 12:51:13.526"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.527" endtime="20241127 12:51:13.527"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.527" endtime="20241127 12:51:13.527"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.526" endtime="20241127 12:51:13.527"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.517" endtime="20241127 12:51:13.527"/>
</try>
<msg timestamp="20241127 12:51:13.527" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.501" endtime="20241127 12:51:13.527"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.499" endtime="20241127 12:51:13.527"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.532" endtime="20241127 12:51:13.533"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.533" endtime="20241127 12:51:13.533"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.527" endtime="20241127 12:51:13.533"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.447" endtime="20241127 12:51:13.533"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.533" endtime="20241127 12:51:13.534"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:13.534" endtime="20241127 12:51:13.534"/>
</return>
<msg timestamp="20241127 12:51:13.534" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.446" endtime="20241127 12:51:13.534"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.536" level="INFO">${key} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:13.535" endtime="20241127 12:51:13.536"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.536" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:13.536" endtime="20241127 12:51:13.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.537" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:13.536" endtime="20241127 12:51:13.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.537" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.537" endtime="20241127 12:51:13.537"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.538" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:13.537" endtime="20241127 12:51:13.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.538" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.538" endtime="20241127 12:51:13.538"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.539" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.538" endtime="20241127 12:51:13.539"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.539" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:13.539" endtime="20241127 12:51:13.539"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.539" endtime="20241127 12:51:13.540"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.542" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:4::flowActionSequenceId:8'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.541" endtime="20241127 12:51:13.542"/>
</kw>
<msg timestamp="20241127 12:51:13.542" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.541" endtime="20241127 12:51:13.542"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.543"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.543"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.543"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.544" endtime="20241127 12:51:13.544"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.544"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.544"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.543" endtime="20241127 12:51:13.544"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.542" endtime="20241127 12:51:13.544"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.544" endtime="20241127 12:51:13.544"/>
</return>
<msg timestamp="20241127 12:51:13.544" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.541" endtime="20241127 12:51:13.544"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.547" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.546" endtime="20241127 12:51:13.547"/>
</kw>
<msg timestamp="20241127 12:51:13.547" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.546" endtime="20241127 12:51:13.547"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.548" endtime="20241127 12:51:13.548"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.548" endtime="20241127 12:51:13.548"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.548" endtime="20241127 12:51:13.549"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.549" endtime="20241127 12:51:13.549"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.549" endtime="20241127 12:51:13.549"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.548" endtime="20241127 12:51:13.549"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.548" endtime="20241127 12:51:13.549"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.547" endtime="20241127 12:51:13.549"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.549" endtime="20241127 12:51:13.549"/>
</return>
<msg timestamp="20241127 12:51:13.550" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.546" endtime="20241127 12:51:13.550"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.550" endtime="20241127 12:51:13.551"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.550" endtime="20241127 12:51:13.551"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.550" endtime="20241127 12:51:13.551"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.551" endtime="20241127 12:51:13.551"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.551" endtime="20241127 12:51:13.552"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.551" endtime="20241127 12:51:13.552"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.551" endtime="20241127 12:51:13.552"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.552" endtime="20241127 12:51:13.552"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.552" endtime="20241127 12:51:13.552"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.552" endtime="20241127 12:51:13.552"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.552" endtime="20241127 12:51:13.552"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.550" endtime="20241127 12:51:13.552"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.550" endtime="20241127 12:51:13.552"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.553"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.553"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.553"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.554" endtime="20241127 12:51:13.554"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.554"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.554"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.554" endtime="20241127 12:51:13.554"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.554" endtime="20241127 12:51:13.554"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.554" endtime="20241127 12:51:13.554"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.554" endtime="20241127 12:51:13.554"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.554"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.553" endtime="20241127 12:51:13.554"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.536" endtime="20241127 12:51:13.555"/>
</iter>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:2::flowActionSequenceId:3', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.555" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241127 12:51:13.555" endtime="20241127 12:51:13.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.556" level="INFO">${target} = testCaseFlowSequenceId:2::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241127 12:51:13.555" endtime="20241127 12:51:13.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.556" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.556" endtime="20241127 12:51:13.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.556" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:13.556" endtime="20241127 12:51:13.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.557" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.557" endtime="20241127 12:51:13.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.557" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241127 12:51:13.557" endtime="20241127 12:51:13.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.558" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241127 12:51:13.558" endtime="20241127 12:51:13.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.558" endtime="20241127 12:51:13.558"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.560" endtime="20241127 12:51:13.561"/>
</kw>
<msg timestamp="20241127 12:51:13.561" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.560" endtime="20241127 12:51:13.561"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.562" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.561" endtime="20241127 12:51:13.562"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.562" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.562" endtime="20241127 12:51:13.562"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.562" endtime="20241127 12:51:13.562"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.563" endtime="20241127 12:51:13.563"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.563" endtime="20241127 12:51:13.563"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.562" endtime="20241127 12:51:13.563"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.561" endtime="20241127 12:51:13.563"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.561" endtime="20241127 12:51:13.563"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.563" endtime="20241127 12:51:13.563"/>
</return>
<msg timestamp="20241127 12:51:13.563" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.560" endtime="20241127 12:51:13.563"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.565" endtime="20241127 12:51:13.566"/>
</kw>
<msg timestamp="20241127 12:51:13.566" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.565" endtime="20241127 12:51:13.566"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.567" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.566" endtime="20241127 12:51:13.567"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.568" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.567" endtime="20241127 12:51:13.568"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.567" endtime="20241127 12:51:13.568"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.569" endtime="20241127 12:51:13.569"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.568" endtime="20241127 12:51:13.569"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.567" endtime="20241127 12:51:13.569"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.566" endtime="20241127 12:51:13.569"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.566" endtime="20241127 12:51:13.569"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.569" endtime="20241127 12:51:13.569"/>
</return>
<msg timestamp="20241127 12:51:13.569" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.565" endtime="20241127 12:51:13.569"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.570" endtime="20241127 12:51:13.570"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.570" endtime="20241127 12:51:13.571"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.570" endtime="20241127 12:51:13.571"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.571" endtime="20241127 12:51:13.571"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.571" endtime="20241127 12:51:13.572"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.571" endtime="20241127 12:51:13.572"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.571" endtime="20241127 12:51:13.572"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} != ${target}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241127 12:51:13.574" endtime="20241127 12:51:13.574"/>
</kw>
<return>
<value>Assertion passed: ${source} == ${target}</value>
<status status="PASS" starttime="20241127 12:51:13.575" endtime="20241127 12:51:13.575"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.573" endtime="20241127 12:51:13.575"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} == ${target}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.575" endtime="20241127 12:51:13.575"/>
</kw>
<return>
<value>Assertion passed: ${source} != ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.575" endtime="20241127 12:51:13.576"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.575" endtime="20241127 12:51:13.576"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'CONTAINS'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.579" endtime="20241127 12:51:13.579"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${source} contains ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.580" endtime="20241127 12:51:13.580"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.579" endtime="20241127 12:51:13.580"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.579" endtime="20241127 12:51:13.580"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} does not contain ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.580" endtime="20241127 12:51:13.580"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.576" endtime="20241127 12:51:13.580"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_CONTAINS_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.584" endtime="20241127 12:51:13.584"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${target} contains ${source}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.584" endtime="20241127 12:51:13.584"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.584" endtime="20241127 12:51:13.585"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.584" endtime="20241127 12:51:13.585"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} does not contain ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.585" endtime="20241127 12:51:13.585"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.581" endtime="20241127 12:51:13.585"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_CONTAIN'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.587" endtime="20241127 12:51:13.587"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} contains ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.587" endtime="20241127 12:51:13.587"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.587" endtime="20241127 12:51:13.587"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.587" endtime="20241127 12:51:13.588"/>
</if>
<return>
<value>Assertion passed: ${source} does not contain ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.588" endtime="20241127 12:51:13.588"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.585" endtime="20241127 12:51:13.588"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_SHOULD_NOT_CONTAIN_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.590" endtime="20241127 12:51:13.590"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} contains ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.590" endtime="20241127 12:51:13.590"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.590" endtime="20241127 12:51:13.590"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.590" endtime="20241127 12:51:13.590"/>
</if>
<return>
<value>Assertion passed: ${target} does not contain (${source})</value>
<status status="NOT RUN" starttime="20241127 12:51:13.590" endtime="20241127 12:51:13.591"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.588" endtime="20241127 12:51:13.591"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.573" endtime="20241127 12:51:13.591"/>
</if>
<msg timestamp="20241127 12:51:13.591" level="INFO">${message} = Assertion passed: bharani@ideas2it.com == bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.572" endtime="20241127 12:51:13.591"/>
</kw>
<return>
<value>${message}</value>
<status status="PASS" starttime="20241127 12:51:13.591" endtime="20241127 12:51:13.591"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.572" endtime="20241127 12:51:13.591"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.572" endtime="20241127 12:51:13.591"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.570" endtime="20241127 12:51:13.592"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.570" endtime="20241127 12:51:13.592"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.592"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.592"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.592"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.593" endtime="20241127 12:51:13.593"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.593"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.593"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.593" endtime="20241127 12:51:13.593"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.593" endtime="20241127 12:51:13.593"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.593" endtime="20241127 12:51:13.593"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.593" endtime="20241127 12:51:13.593"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.594"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.592" endtime="20241127 12:51:13.594"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.555" endtime="20241127 12:51:13.594"/>
</iter>
<status status="PASS" starttime="20241127 12:51:13.536" endtime="20241127 12:51:13.594"/>
</for>
<msg timestamp="20241127 12:51:13.594" level="INFO">${assertion_message} = Assertion passed: bharani@ideas2it.com == bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241127 12:51:13.535" endtime="20241127 12:51:13.594"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.594" endtime="20241127 12:51:13.595"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.602" endtime="20241127 12:51:13.603"/>
</kw>
<msg timestamp="20241127 12:51:13.603" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.602" endtime="20241127 12:51:13.603"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.604" level="INFO">${values} = {'id': '6', 'name': 'Email', 'xpath': '//p[text()="EMAIL"]//following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T08:07:10.780Z', 'updatedAt': '2024-11-25T08:07:10.780Z'}</msg>
<status status="PASS" starttime="20241127 12:51:13.604" endtime="20241127 12:51:13.604"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.605" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.605" endtime="20241127 12:51:13.606"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.605" endtime="20241127 12:51:13.606"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.606" endtime="20241127 12:51:13.606"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.606" endtime="20241127 12:51:13.606"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.604" endtime="20241127 12:51:13.606"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.603" endtime="20241127 12:51:13.607"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.603" endtime="20241127 12:51:13.607"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.607" endtime="20241127 12:51:13.607"/>
</return>
<msg timestamp="20241127 12:51:13.607" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.600" endtime="20241127 12:51:13.607"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.609" level="INFO">${xpath} = //p[text()="EMAIL"]//following-sibling::p</msg>
<status status="PASS" starttime="20241127 12:51:13.608" endtime="20241127 12:51:13.609"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.608" endtime="20241127 12:51:13.609"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.609" endtime="20241127 12:51:13.609"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.609" endtime="20241127 12:51:13.610"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.608" endtime="20241127 12:51:13.610"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.612" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '430', 'status': 'COMPLETED', 'actionName': 'Get email', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="EMAIL"]//following-sibling::p', 'inputValue': '', 'errorM...</msg>
<status status="PASS" starttime="20241127 12:51:13.610" endtime="20241127 12:51:13.612"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.613" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "430", "status": "COMPLETED", "actionName": "Get email", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"EMAIL\"]//following-sibling::p", "inputValue": "", "erro...</msg>
<status status="PASS" starttime="20241127 12:51:13.613" endtime="20241127 12:51:13.613"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.622" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.623" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.614" endtime="20241127 12:51:13.623"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.623" endtime="20241127 12:51:13.623"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.623" endtime="20241127 12:51:13.623"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.612" endtime="20241127 12:51:13.624"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.595" endtime="20241127 12:51:13.624"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241127 12:51:13.626" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241127 12:51:13.626" endtime="20241127 12:51:13.626"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.442" endtime="20241127 12:51:13.626"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.626" endtime="20241127 12:51:13.626"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.626" endtime="20241127 12:51:13.627"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.627" endtime="20241127 12:51:13.627"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.626" endtime="20241127 12:51:13.627"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.442" endtime="20241127 12:51:13.627"/>
</try>
<status status="PASS" starttime="20241127 12:51:13.442" endtime="20241127 12:51:13.628"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '8', 'actionId': '8', 'flowId': '3', 'order': 1, 'createdAt': '2024-11-25T10:25:46.076Z', 'updatedAt': '2024-11-25T10:25:46.076Z', 'action': {'id': '8', 'name': 'Get experience', 'type': 'GET_T...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.630" level="INFO">${action} = {'id': '8', 'name': 'Get experience', 'type': 'GET_TEXT', 'selectorI': '7', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:25:14.016Z', 'updatedAt': '2024-11-25T10:25:14...</msg>
<status status="PASS" starttime="20241127 12:51:13.629" endtime="20241127 12:51:13.630"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.630" endtime="20241127 12:51:13.631"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241127 12:51:13.632" level="INFO">${input} = {'id': '9', 'actionId': '8', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:25:14.213Z', 'updatedAt': '2024-11-25T10:25:14.213Z'}</msg>
<status status="PASS" starttime="20241127 12:51:13.631" endtime="20241127 12:51:13.632"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.633" endtime="20241127 12:51:13.633"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.633" endtime="20241127 12:51:13.634"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.632" endtime="20241127 12:51:13.635"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.632" endtime="20241127 12:51:13.635"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.636" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241127 12:51:13.636" endtime="20241127 12:51:13.636"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.637" endtime="20241127 12:51:13.637"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.637" endtime="20241127 12:51:13.637"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.638" endtime="20241127 12:51:13.638"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.638" endtime="20241127 12:51:13.638"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.642" endtime="20241127 12:51:13.642"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.638" endtime="20241127 12:51:13.642"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.646" endtime="20241127 12:51:13.646"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.649" endtime="20241127 12:51:13.650"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.642" endtime="20241127 12:51:13.650"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.653" endtime="20241127 12:51:13.653"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.650" endtime="20241127 12:51:13.653"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.658" endtime="20241127 12:51:13.658"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.653" endtime="20241127 12:51:13.659"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.662" endtime="20241127 12:51:13.663"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.664" endtime="20241127 12:51:13.664"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.663" endtime="20241127 12:51:13.664"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.663" endtime="20241127 12:51:13.664"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.659" endtime="20241127 12:51:13.664"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.665" endtime="20241127 12:51:13.666"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.664" endtime="20241127 12:51:13.666"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.668" endtime="20241127 12:51:13.668"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.668" endtime="20241127 12:51:13.668"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.668" endtime="20241127 12:51:13.668"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.669" endtime="20241127 12:51:13.669"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.668" endtime="20241127 12:51:13.669"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.668" endtime="20241127 12:51:13.669"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.666" endtime="20241127 12:51:13.669"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.676" endtime="20241127 12:51:13.676"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.681" endtime="20241127 12:51:13.681"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.669" endtime="20241127 12:51:13.681"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.683" endtime="20241127 12:51:13.683"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.683" endtime="20241127 12:51:13.683"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.683" endtime="20241127 12:51:13.684"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.685" endtime="20241127 12:51:13.685"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.685" endtime="20241127 12:51:13.685"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.683" endtime="20241127 12:51:13.685"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.681" endtime="20241127 12:51:13.685"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241127 12:51:13.692" endtime="20241127 12:51:13.692"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.695" endtime="20241127 12:51:13.695"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.685" endtime="20241127 12:51:13.695"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.697" endtime="20241127 12:51:13.697"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.697" endtime="20241127 12:51:13.697"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.697" endtime="20241127 12:51:13.697"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.698" endtime="20241127 12:51:13.698"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.697" endtime="20241127 12:51:13.698"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.697" endtime="20241127 12:51:13.698"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.696" endtime="20241127 12:51:13.698"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241127 12:51:13.711" level="INFO">Waited for Element with selector //p[text()="TOTAL EXPERIENCE"]//following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241127 12:51:13.705" endtime="20241127 12:51:13.711"/>
</kw>
<msg timestamp="20241127 12:51:13.711" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.705" endtime="20241127 12:51:13.711"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.711" endtime="20241127 12:51:13.711"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.705" endtime="20241127 12:51:13.711"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.713" endtime="20241127 12:51:13.713"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.713" endtime="20241127 12:51:13.713"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.711" endtime="20241127 12:51:13.713"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.705" endtime="20241127 12:51:13.713"/>
</try>
<msg timestamp="20241127 12:51:13.713" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.704" endtime="20241127 12:51:13.713"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241127 12:51:13.714" endtime="20241127 12:51:13.714"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.704" endtime="20241127 12:51:13.714"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.714" endtime="20241127 12:51:13.714"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.714" endtime="20241127 12:51:13.714"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.704" endtime="20241127 12:51:13.714"/>
</try>
<msg timestamp="20241127 12:51:13.714" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.704" endtime="20241127 12:51:13.714"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.716" endtime="20241127 12:51:13.716"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.717" endtime="20241127 12:51:13.717"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.716" endtime="20241127 12:51:13.717"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.716" endtime="20241127 12:51:13.718"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.716" endtime="20241127 12:51:13.718"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.703" endtime="20241127 12:51:13.718"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241127 12:51:13.727" level="INFO">Property: '5 Years 6 Months'</msg>
<msg timestamp="20241127 12:51:13.728" level="INFO">${property} = 5 Years 6 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.718" endtime="20241127 12:51:13.728"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241127 12:51:13.728" endtime="20241127 12:51:13.728"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.718" endtime="20241127 12:51:13.728"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.728" endtime="20241127 12:51:13.728"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.729" endtime="20241127 12:51:13.729"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.728" endtime="20241127 12:51:13.729"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.718" endtime="20241127 12:51:13.729"/>
</try>
<msg timestamp="20241127 12:51:13.729" level="INFO">${value} = 5 Years 6 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.700" endtime="20241127 12:51:13.729"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.698" endtime="20241127 12:51:13.729"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.735" endtime="20241127 12:51:13.735"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.735" endtime="20241127 12:51:13.736"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.729" endtime="20241127 12:51:13.736"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.636" endtime="20241127 12:51:13.736"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.736" endtime="20241127 12:51:13.736"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241127 12:51:13.737" endtime="20241127 12:51:13.737"/>
</return>
<msg timestamp="20241127 12:51:13.737" level="INFO">${value} = 5 Years 6 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.635" endtime="20241127 12:51:13.737"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.739" level="INFO">${key} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:13.739" endtime="20241127 12:51:13.739"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '2', 'testCaseId': '2', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:4::flowActionSequenceId:8', 'target': None, 'customTargetValue': '5 Years 4 Months', 'useCustomTarget...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.740" level="INFO">${source} = testCaseFlowSequenceId:4::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241127 12:51:13.740" endtime="20241127 12:51:13.740"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.741" level="INFO">${target} = None</msg>
<status status="PASS" starttime="20241127 12:51:13.740" endtime="20241127 12:51:13.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.741" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.741" endtime="20241127 12:51:13.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.741" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241127 12:51:13.741" endtime="20241127 12:51:13.741"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.742" level="INFO">${useCustomTargetValue} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.742" endtime="20241127 12:51:13.742"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.742" level="INFO">${customTargetValue} = 5 Years 4 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.742" endtime="20241127 12:51:13.742"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.743" level="INFO">${errorMessage} = Experience incorrect</msg>
<status status="PASS" starttime="20241127 12:51:13.743" endtime="20241127 12:51:13.743"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.743" endtime="20241127 12:51:13.743"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.745" endtime="20241127 12:51:13.746"/>
</kw>
<msg timestamp="20241127 12:51:13.746" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.745" endtime="20241127 12:51:13.746"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.747" level="INFO">${values} = 5 Years 6 Months</msg>
<status status="PASS" starttime="20241127 12:51:13.746" endtime="20241127 12:51:13.747"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.747" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.747" endtime="20241127 12:51:13.747"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.747" endtime="20241127 12:51:13.747"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.748" endtime="20241127 12:51:13.748"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.747" endtime="20241127 12:51:13.748"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.747" endtime="20241127 12:51:13.748"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.746" endtime="20241127 12:51:13.748"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.746" endtime="20241127 12:51:13.748"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.748" endtime="20241127 12:51:13.748"/>
</return>
<msg timestamp="20241127 12:51:13.748" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.745" endtime="20241127 12:51:13.748"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241127 12:51:13.751" level="FAIL">Dictionary does not contain key 'None'.</msg>
<status status="FAIL" starttime="20241127 12:51:13.751" endtime="20241127 12:51:13.751"/>
</kw>
<msg timestamp="20241127 12:51:13.752" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.750" endtime="20241127 12:51:13.752"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.752"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.753"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.753"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.753" endtime="20241127 12:51:13.753"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.753" endtime="20241127 12:51:13.753"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.753"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.753"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.752" endtime="20241127 12:51:13.753"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.753" endtime="20241127 12:51:13.754"/>
</return>
<msg timestamp="20241127 12:51:13.754" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241127 12:51:13.750" endtime="20241127 12:51:13.754"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.755" endtime="20241127 12:51:13.755"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.754" endtime="20241127 12:51:13.755"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.754" endtime="20241127 12:51:13.755"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} != ${target}</arg>
<doc>Fails if the given objects are unequal.</doc>
<msg timestamp="20241127 12:51:13.757" level="FAIL">Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months</msg>
<status status="FAIL" starttime="20241127 12:51:13.756" endtime="20241127 12:51:13.757"/>
</kw>
<return>
<value>Assertion passed: ${source} == ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.757" endtime="20241127 12:51:13.757"/>
</return>
<status status="FAIL" starttime="20241127 12:51:13.756" endtime="20241127 12:51:13.757"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} == ${target}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.758" endtime="20241127 12:51:13.758"/>
</kw>
<return>
<value>Assertion passed: ${source} != ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.758" endtime="20241127 12:51:13.758"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.758" endtime="20241127 12:51:13.758"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'CONTAINS'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.760" endtime="20241127 12:51:13.760"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${source} contains ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.760" endtime="20241127 12:51:13.760"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.760" endtime="20241127 12:51:13.760"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.760" endtime="20241127 12:51:13.760"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} does not contain ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.761" endtime="20241127 12:51:13.761"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.758" endtime="20241127 12:51:13.761"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_CONTAINS_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.763" endtime="20241127 12:51:13.763"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${target} contains ${source}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.763" endtime="20241127 12:51:13.763"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.763" endtime="20241127 12:51:13.763"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.763" endtime="20241127 12:51:13.763"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} does not contain ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.763" endtime="20241127 12:51:13.764"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.761" endtime="20241127 12:51:13.764"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_CONTAIN'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.766" endtime="20241127 12:51:13.766"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} contains ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.766" endtime="20241127 12:51:13.766"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.766" endtime="20241127 12:51:13.766"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.766" endtime="20241127 12:51:13.766"/>
</if>
<return>
<value>Assertion passed: ${source} does not contain ${target}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.766" endtime="20241127 12:51:13.767"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.764" endtime="20241127 12:51:13.767"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_SHOULD_NOT_CONTAIN_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.769" endtime="20241127 12:51:13.769"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} contains ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.769" endtime="20241127 12:51:13.769"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.769" endtime="20241127 12:51:13.769"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.769" endtime="20241127 12:51:13.769"/>
</if>
<return>
<value>Assertion passed: ${target} does not contain (${source})</value>
<status status="NOT RUN" starttime="20241127 12:51:13.770" endtime="20241127 12:51:13.770"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.767" endtime="20241127 12:51:13.770"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.756" endtime="20241127 12:51:13.770"/>
</if>
<status status="FAIL" starttime="20241127 12:51:13.755" endtime="20241127 12:51:13.771"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.771" endtime="20241127 12:51:13.771"/>
</return>
<status status="FAIL" starttime="20241127 12:51:13.755" endtime="20241127 12:51:13.771"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.755" endtime="20241127 12:51:13.771"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.772" endtime="20241127 12:51:13.772"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.772" endtime="20241127 12:51:13.772"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.772" endtime="20241127 12:51:13.772"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.772" endtime="20241127 12:51:13.772"/>
</if>
<status status="FAIL" starttime="20241127 12:51:13.754" endtime="20241127 12:51:13.772"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.754" endtime="20241127 12:51:13.772"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.773"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.773"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.773"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.774" endtime="20241127 12:51:13.774"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.774"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.774"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.774" endtime="20241127 12:51:13.774"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241127 12:51:13.774" endtime="20241127 12:51:13.774"/>
</return>
<status status="NOT RUN" starttime="20241127 12:51:13.774" endtime="20241127 12:51:13.774"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.774" endtime="20241127 12:51:13.774"/>
</if>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.775"/>
</branch>
<status status="NOT RUN" starttime="20241127 12:51:13.773" endtime="20241127 12:51:13.775"/>
</if>
<status status="FAIL" starttime="20241127 12:51:13.740" endtime="20241127 12:51:13.775"/>
</iter>
<status status="FAIL" starttime="20241127 12:51:13.739" endtime="20241127 12:51:13.775"/>
</for>
<status status="FAIL" starttime="20241127 12:51:13.737" endtime="20241127 12:51:13.776"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.776" endtime="20241127 12:51:13.776"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.776" endtime="20241127 12:51:13.777"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.777" endtime="20241127 12:51:13.777"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.628" endtime="20241127 12:51:13.777"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.777" endtime="20241127 12:51:13.778"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241127 12:51:13.781" endtime="20241127 12:51:13.782"/>
</kw>
<msg timestamp="20241127 12:51:13.782" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.781" endtime="20241127 12:51:13.782"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.782" level="INFO">${values} = {'id': '7', 'name': 'Experience', 'xpath': '//p[text()="TOTAL EXPERIENCE"]//following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T10:25:09.578Z', 'updatedAt': '2024-11-25T10:25:09.578Z'}</msg>
<status status="PASS" starttime="20241127 12:51:13.782" endtime="20241127 12:51:13.782"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.783" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.783" endtime="20241127 12:51:13.783"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.783" endtime="20241127 12:51:13.783"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.784" endtime="20241127 12:51:13.784"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.783" endtime="20241127 12:51:13.784"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.783" endtime="20241127 12:51:13.784"/>
</if>
<status status="PASS" starttime="20241127 12:51:13.782" endtime="20241127 12:51:13.785"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.782" endtime="20241127 12:51:13.785"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241127 12:51:13.785" endtime="20241127 12:51:13.785"/>
</return>
<msg timestamp="20241127 12:51:13.785" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241127 12:51:13.781" endtime="20241127 12:51:13.785"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241127 12:51:13.786" level="INFO">${xpath} = //p[text()="TOTAL EXPERIENCE"]//following-sibling::p</msg>
<status status="PASS" starttime="20241127 12:51:13.786" endtime="20241127 12:51:13.786"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.785" endtime="20241127 12:51:13.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.786" endtime="20241127 12:51:13.786"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.786" endtime="20241127 12:51:13.786"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.785" endtime="20241127 12:51:13.786"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.787" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '431', 'status': 'FAILED', 'actionName': 'Get experience', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="TOTAL EXPERIENCE"]//following-sibling::p', 'inputValue'...</msg>
<status status="PASS" starttime="20241127 12:51:13.786" endtime="20241127 12:51:13.787"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.788" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "431", "status": "FAILED", "actionName": "Get experience", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"TOTAL EXPERIENCE\"]//following-sibling::p", "inputValu...</msg>
<status status="PASS" starttime="20241127 12:51:13.788" endtime="20241127 12:51:13.788"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.792" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.793" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.788" endtime="20241127 12:51:13.793"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.793" endtime="20241127 12:51:13.794"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.794" endtime="20241127 12:51:13.794"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.788" endtime="20241127 12:51:13.794"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.778" endtime="20241127 12:51:13.794"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.795" endtime="20241127 12:51:13.795"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241127 12:51:13.796" level="FAIL">Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months</msg>
<status status="FAIL" starttime="20241127 12:51:13.796" endtime="20241127 12:51:13.796"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.794" endtime="20241127 12:51:13.797"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.777" endtime="20241127 12:51:13.797"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.628" endtime="20241127 12:51:13.798"/>
</try>
<status status="FAIL" starttime="20241127 12:51:13.628" endtime="20241127 12:51:13.798"/>
</iter>
<status status="FAIL" starttime="20241127 12:51:13.442" endtime="20241127 12:51:13.798"/>
</for>
<status status="FAIL" starttime="20241127 12:51:13.441" endtime="20241127 12:51:13.799"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.441" endtime="20241127 12:51:13.799"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.799" endtime="20241127 12:51:13.799"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.426" endtime="20241127 12:51:13.799"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.799" endtime="20241127 12:51:13.800"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.801" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '109', 'status': 'FAILED', 'errorMessage': 'Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months'}</msg>
<status status="PASS" starttime="20241127 12:51:13.801" endtime="20241127 12:51:13.801"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.802" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "109", "status": "FAILED", "errorMessage": "Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months"}</msg>
<status status="PASS" starttime="20241127 12:51:13.802" endtime="20241127 12:51:13.802"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.807" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.807" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.802" endtime="20241127 12:51:13.807"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.807" endtime="20241127 12:51:13.808"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.808" endtime="20241127 12:51:13.808"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.801" endtime="20241127 12:51:13.808"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.800" endtime="20241127 12:51:13.808"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.809" endtime="20241127 12:51:13.809"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241127 12:51:13.810" level="FAIL">Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months</msg>
<status status="FAIL" starttime="20241127 12:51:13.810" endtime="20241127 12:51:13.810"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.809" endtime="20241127 12:51:13.811"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.799" endtime="20241127 12:51:13.811"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:13.426" endtime="20241127 12:51:13.811"/>
</try>
<status status="FAIL" starttime="20241127 12:51:13.426" endtime="20241127 12:51:13.812"/>
</iter>
<status status="FAIL" starttime="20241127 12:51:07.564" endtime="20241127 12:51:13.812"/>
</for>
<status status="FAIL" starttime="20241127 12:51:07.563" endtime="20241127 12:51:13.812"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:07.563" endtime="20241127 12:51:13.812"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241127 12:51:13.813" endtime="20241127 12:51:13.813"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:07.497" endtime="20241127 12:51:13.813"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.813" endtime="20241127 12:51:13.814"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241127 12:51:13.815" level="INFO">${response_message} = {'testCaseRunId': '40', 'status': 'FAIL', 'errorMessage': 'Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months'}</msg>
<status status="PASS" starttime="20241127 12:51:13.814" endtime="20241127 12:51:13.815"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241127 12:51:13.816" level="INFO">${json_response} = {"testCaseRunId": "40", "status": "FAIL", "errorMessage": "Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months"}</msg>
<status status="PASS" starttime="20241127 12:51:13.815" endtime="20241127 12:51:13.816"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241127 12:51:13.821" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241127 12:51:13.821" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241127 12:51:13.816" endtime="20241127 12:51:13.821"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.821" endtime="20241127 12:51:13.822"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241127 12:51:13.822" endtime="20241127 12:51:13.822"/>
</return>
<status status="PASS" starttime="20241127 12:51:13.815" endtime="20241127 12:51:13.822"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.814" endtime="20241127 12:51:13.822"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.823" endtime="20241127 12:51:13.824"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241127 12:51:13.824" level="FAIL">Experience incorrect: 5 Years 6 Months != 5 Years 4 Months: 5 Years 6 Months != 5 Years 4 Months</msg>
<status status="FAIL" starttime="20241127 12:51:13.824" endtime="20241127 12:51:13.825"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.823" endtime="20241127 12:51:13.825"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:13.813" endtime="20241127 12:51:13.826"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:07.497" endtime="20241127 12:51:13.826"/>
</try>
<status status="FAIL" starttime="20241127 12:51:07.482" endtime="20241127 12:51:13.826"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:13.826" endtime="20241127 12:51:13.826"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:13.826" endtime="20241127 12:51:13.827"/>
</branch>
<status status="FAIL" starttime="20241127 12:51:07.481" endtime="20241127 12:51:13.827"/>
</if>
<status status="FAIL" starttime="20241127 12:51:07.463" endtime="20241127 12:51:13.827"/>
</kw>
<status status="FAIL" starttime="20241127 12:51:07.463" endtime="20241127 12:51:13.828"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:13.828" endtime="20241127 12:51:13.828"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.828" endtime="20241127 12:51:13.828"/>
</branch>
<status status="PASS" starttime="20241127 12:51:07.463" endtime="20241127 12:51:13.828"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241127 12:51:14.060" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241127 12:51:13.829" endtime="20241127 12:51:14.061"/>
</kw>
<status status="PASS" starttime="20241127 12:51:13.829" endtime="20241127 12:51:14.061"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241127 12:51:14.061" endtime="20241127 12:51:14.061"/>
</kw>
<status status="NOT RUN" starttime="20241127 12:51:14.061" endtime="20241127 12:51:14.061"/>
</branch>
<status status="PASS" starttime="20241127 12:51:13.829" endtime="20241127 12:51:14.061"/>
</try>
<status status="PASS" starttime="20241127 12:51:13.829" endtime="20241127 12:51:14.062"/>
</kw>
<status status="PASS" starttime="20241127 12:51:05.573" endtime="20241127 12:51:14.062"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241127 12:51:14.062" endtime="20241127 12:51:14.063"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 09:24:30.903" level="INFO">KafkaError{code=_RESOLVE,val=-193,str="FindCoordinator response error: Local: Host resolution failure"}</msg>
<msg timestamp="20241128 09:24:30.914" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '41', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T03:54:30.579Z', 'createdAt': '2024-11-28T03:54:30.579Z', 'errorMes...</msg>
<status status="PASS" starttime="20241127 12:51:14.063" endtime="20241128 09:24:30.915"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 09:24:30.923" endtime="20241128 09:24:30.923"/>
</break>
<status status="NOT RUN" starttime="20241128 09:24:30.923" endtime="20241128 09:24:30.924"/>
</branch>
<status status="PASS" starttime="20241128 09:24:30.920" endtime="20241128 09:24:30.924"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 09:24:30.934" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\95d8cb66-c51c-4222-bc34-9f41ef883006"}</msg>
<msg timestamp="20241128 09:24:32.188" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\95d8cb66-c51c-4222-bc34-9f41ef883006"}</msg>
<status status="PASS" starttime="20241128 09:24:30.927" endtime="20241128 09:24:32.189"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 09:24:32.192" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 09:24:32.212" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 09:24:32.212" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 09:24:32.190" endtime="20241128 09:24:32.212"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 09:24:32.213" endtime="20241128 09:24:32.213"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:24:35.733" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 09:24:35.733" level="INFO">${page_id} = {'page_id': 'page=26f24095-bbb7-4525-9900-56b97ff8cd1c', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:24:32.214" endtime="20241128 09:24:35.734"/>
</kw>
<status status="PASS" starttime="20241128 09:24:30.925" endtime="20241128 09:24:35.734"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:35.735" endtime="20241128 09:24:35.744"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:35.748" endtime="20241128 09:24:35.748"/>
</kw>
<msg timestamp="20241128 09:24:35.748" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.747" endtime="20241128 09:24:35.748"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.749" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 09:24:35.749" endtime="20241128 09:24:35.749"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.750" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.750" endtime="20241128 09:24:35.750"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.750" endtime="20241128 09:24:35.750"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.750" endtime="20241128 09:24:35.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.750" endtime="20241128 09:24:35.751"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.749" endtime="20241128 09:24:35.751"/>
</if>
<status status="PASS" starttime="20241128 09:24:35.749" endtime="20241128 09:24:35.751"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.748" endtime="20241128 09:24:35.751"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:35.751" endtime="20241128 09:24:35.751"/>
</return>
<msg timestamp="20241128 09:24:35.751" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.746" endtime="20241128 09:24:35.751"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.752" endtime="20241128 09:24:35.752"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 09:24:35.752" endtime="20241128 09:24:35.752"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:35.751" endtime="20241128 09:24:35.752"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.751" endtime="20241128 09:24:35.752"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:35.754" endtime="20241128 09:24:35.756"/>
</kw>
<msg timestamp="20241128 09:24:35.757" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.754" endtime="20241128 09:24:35.757"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.759" level="INFO">${values} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-26T16:06:17.333...</msg>
<status status="PASS" starttime="20241128 09:24:35.758" endtime="20241128 09:24:35.759"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.759" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.759" endtime="20241128 09:24:35.759"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.759" endtime="20241128 09:24:35.759"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.760" endtime="20241128 09:24:35.760"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.759" endtime="20241128 09:24:35.760"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.759" endtime="20241128 09:24:35.760"/>
</if>
<status status="PASS" starttime="20241128 09:24:35.757" endtime="20241128 09:24:35.760"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.757" endtime="20241128 09:24:35.760"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:35.760" endtime="20241128 09:24:35.760"/>
</return>
<msg timestamp="20241128 09:24:35.760" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.754" endtime="20241128 09:24:35.760"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:35.762" endtime="20241128 09:24:35.763"/>
</kw>
<msg timestamp="20241128 09:24:35.763" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.762" endtime="20241128 09:24:35.763"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.763" level="INFO">${values} = {'id': '41', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T03:54:30.579Z', 'createdAt': '2024-11-28T03:54:30.579Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:24:35.763" endtime="20241128 09:24:35.763"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.764" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.764" endtime="20241128 09:24:35.764"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.764" endtime="20241128 09:24:35.764"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.764" endtime="20241128 09:24:35.764"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.764" endtime="20241128 09:24:35.765"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.763" endtime="20241128 09:24:35.765"/>
</if>
<status status="PASS" starttime="20241128 09:24:35.763" endtime="20241128 09:24:35.765"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.763" endtime="20241128 09:24:35.765"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:35.765" endtime="20241128 09:24:35.765"/>
</return>
<msg timestamp="20241128 09:24:35.765" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.762" endtime="20241128 09:24:35.765"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.765" endtime="20241128 09:24:35.766"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.765" endtime="20241128 09:24:35.766"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.765" endtime="20241128 09:24:35.766"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.766" level="INFO">${testCase} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-26T16:06:17.333...</msg>
<status status="PASS" starttime="20241128 09:24:35.766" endtime="20241128 09:24:35.766"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.767" level="INFO">${testCaseRun} = {'id': '41', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T03:54:30.579Z', 'createdAt': '2024-11-28T03:54:30.579Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:24:35.767" endtime="20241128 09:24:35.767"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.767" level="INFO">${assertions} = [{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custo...</msg>
<status status="PASS" starttime="20241128 09:24:35.767" endtime="20241128 09:24:35.767"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:35.767" endtime="20241128 09:24:35.769"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:35.772" endtime="20241128 09:24:35.772"/>
</kw>
<msg timestamp="20241128 09:24:35.772" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.771" endtime="20241128 09:24:35.772"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.774" level="INFO">${values} = [{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-26T16:06:17.357Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</msg>
<status status="PASS" starttime="20241128 09:24:35.772" endtime="20241128 09:24:35.774"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.775" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.774" endtime="20241128 09:24:35.775"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.774" endtime="20241128 09:24:35.775"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.775" endtime="20241128 09:24:35.775"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.775" endtime="20241128 09:24:35.775"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.774" endtime="20241128 09:24:35.775"/>
</if>
<status status="PASS" starttime="20241128 09:24:35.772" endtime="20241128 09:24:35.775"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.772" endtime="20241128 09:24:35.775"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:35.775" endtime="20241128 09:24:35.776"/>
</return>
<msg timestamp="20241128 09:24:35.776" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.771" endtime="20241128 09:24:35.776"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:35.776" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '41', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 09:24:35.776" endtime="20241128 09:24:35.776"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:35.777" level="INFO">${json_response} = {"testCaseRunId": "41", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 09:24:35.777" endtime="20241128 09:24:35.777"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:35.784" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:35.785" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:35.777" endtime="20241128 09:24:35.785"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:35.785" endtime="20241128 09:24:35.785"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:35.786" endtime="20241128 09:24:35.786"/>
</return>
<status status="PASS" starttime="20241128 09:24:35.777" endtime="20241128 09:24:35.786"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:35.787" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 09:24:35.787" endtime="20241128 09:24:35.787"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-26T16:06:17.357Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.788" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 09:24:35.788" endtime="20241128 09:24:35.788"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:35.789" endtime="20241128 09:24:35.789"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:35.793" endtime="20241128 09:24:35.793"/>
</kw>
<msg timestamp="20241128 09:24:35.793" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.793" endtime="20241128 09:24:35.793"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.794" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 09:24:35.794" endtime="20241128 09:24:35.795"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.795" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.795" endtime="20241128 09:24:35.795"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.795" endtime="20241128 09:24:35.795"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.796" endtime="20241128 09:24:35.796"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.795" endtime="20241128 09:24:35.796"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.795" endtime="20241128 09:24:35.796"/>
</if>
<status status="PASS" starttime="20241128 09:24:35.794" endtime="20241128 09:24:35.796"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.793" endtime="20241128 09:24:35.796"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:35.796" endtime="20241128 09:24:35.796"/>
</return>
<msg timestamp="20241128 09:24:35.796" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:35.792" endtime="20241128 09:24:35.796"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.797" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241128 09:24:35.797" endtime="20241128 09:24:35.797"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:35.798" endtime="20241128 09:24:35.798"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:35.799" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241128 09:24:35.798" endtime="20241128 09:24:35.799"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.799" endtime="20241128 09:24:35.799"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:35.799" endtime="20241128 09:24:35.800"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:35.799" endtime="20241128 09:24:35.800"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.799" endtime="20241128 09:24:35.800"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:35.800" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:24:35.800" endtime="20241128 09:24:35.800"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:24:40.885" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241128 09:24:40.885" level="INFO">${page_id} = {'page_id': 'page=2e8a46a1-3059-4f44-8cb4-1480cf5aed7a', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:24:35.802" endtime="20241128 09:24:40.885"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 09:24:40.887" level="INFO">Switching to page {'page_id': 'page=2e8a46a1-3059-4f44-8cb4-1480cf5aed7a', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 09:24:40.953" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=d37cf03b-5574-4f2b-8bc9-c974254e2860",
    "contexts": [
      {
        "type": "context",
        "id": "context=e23b6b03-8c6c-4b71-bace-cfa3ad2ca2ac",
        "activePage": "page=2e8a46a1-3059-4f44-8cb4-1480cf5aed7a",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=26f24095-bbb7-4525-9900-56b97ff8cd1c",
            "timestamp": 1732766072.41
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=2e8a46a1-3059-4f44-8cb4-1480cf5aed7a",
            "timestamp": 1732766075.851
          }
        ]
      }
    ],
    "activeContext": "context=e23b6b03-8c6c-4b71-bace-cfa3ad2ca2ac",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 09:24:40.957" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 09:24:40.886" endtime="20241128 09:24:40.957"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.801" endtime="20241128 09:24:40.958"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.801" endtime="20241128 09:24:40.958"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:40.958" endtime="20241128 09:24:40.958"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.958" endtime="20241128 09:24:40.958"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.960" endtime="20241128 09:24:40.960"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.958" endtime="20241128 09:24:40.960"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.962" endtime="20241128 09:24:40.962"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.964" endtime="20241128 09:24:40.964"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.960" endtime="20241128 09:24:40.964"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.965" endtime="20241128 09:24:40.965"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.964" endtime="20241128 09:24:40.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.969" endtime="20241128 09:24:40.970"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.965" endtime="20241128 09:24:40.970"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.973" endtime="20241128 09:24:40.973"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.974" endtime="20241128 09:24:40.974"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.973" endtime="20241128 09:24:40.974"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:40.973" endtime="20241128 09:24:40.974"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:40.970" endtime="20241128 09:24:40.975"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.977" endtime="20241128 09:24:40.977"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.975" endtime="20241128 09:24:40.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.979" endtime="20241128 09:24:40.980"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.980" endtime="20241128 09:24:40.980"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.980" endtime="20241128 09:24:40.981"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.981" endtime="20241128 09:24:40.981"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.981" endtime="20241128 09:24:40.981"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:40.980" endtime="20241128 09:24:40.981"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:40.977" endtime="20241128 09:24:40.982"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:40.992" endtime="20241128 09:24:40.992"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.995" endtime="20241128 09:24:40.995"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.982" endtime="20241128 09:24:40.995"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.996" endtime="20241128 09:24:40.996"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.997" endtime="20241128 09:24:40.997"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.996" endtime="20241128 09:24:40.997"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:40.997" endtime="20241128 09:24:40.997"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.997" endtime="20241128 09:24:40.997"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:40.996" endtime="20241128 09:24:40.997"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:40.995" endtime="20241128 09:24:40.997"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.004" endtime="20241128 09:24:41.004"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.007" endtime="20241128 09:24:41.008"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:40.997" endtime="20241128 09:24:41.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.009" endtime="20241128 09:24:41.009"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.010" endtime="20241128 09:24:41.010"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.009" endtime="20241128 09:24:41.010"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.010" endtime="20241128 09:24:41.010"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.010" endtime="20241128 09:24:41.010"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.009" endtime="20241128 09:24:41.011"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.008" endtime="20241128 09:24:41.011"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.014" endtime="20241128 09:24:41.014"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.011" endtime="20241128 09:24:41.015"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.023" endtime="20241128 09:24:41.023"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.023" endtime="20241128 09:24:41.023"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.015" endtime="20241128 09:24:41.023"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.801" endtime="20241128 09:24:41.023"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.024" endtime="20241128 09:24:41.024"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:41.024" endtime="20241128 09:24:41.024"/>
</return>
<msg timestamp="20241128 09:24:41.025" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:24:35.800" endtime="20241128 09:24:41.025"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.026" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 09:24:41.025" endtime="20241128 09:24:41.026"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.026" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:41.026" endtime="20241128 09:24:41.026"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.027" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:41.027" endtime="20241128 09:24:41.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.027" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.027" endtime="20241128 09:24:41.027"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.028" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:41.027" endtime="20241128 09:24:41.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.028" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.028" endtime="20241128 09:24:41.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.028" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:41.028" endtime="20241128 09:24:41.029"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.029" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:41.029" endtime="20241128 09:24:41.029"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.029" endtime="20241128 09:24:41.030"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.040" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.034" endtime="20241128 09:24:41.040"/>
</kw>
<msg timestamp="20241128 09:24:41.040" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.033" endtime="20241128 09:24:41.040"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.041"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.041"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.041"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.042"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.042"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.041" endtime="20241128 09:24:41.042"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.040" endtime="20241128 09:24:41.042"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.040" endtime="20241128 09:24:41.042"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.042" endtime="20241128 09:24:41.042"/>
</return>
<msg timestamp="20241128 09:24:41.042" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.032" endtime="20241128 09:24:41.042"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.045" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.044" endtime="20241128 09:24:41.045"/>
</kw>
<msg timestamp="20241128 09:24:41.045" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.044" endtime="20241128 09:24:41.045"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.045" endtime="20241128 09:24:41.046"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.046" endtime="20241128 09:24:41.046"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.046" endtime="20241128 09:24:41.046"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.046" endtime="20241128 09:24:41.046"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.046" endtime="20241128 09:24:41.046"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.046" endtime="20241128 09:24:41.046"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.045" endtime="20241128 09:24:41.047"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.045" endtime="20241128 09:24:41.047"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.047"/>
</return>
<msg timestamp="20241128 09:24:41.047" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.043" endtime="20241128 09:24:41.047"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.048"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.048"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.048"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.048" endtime="20241128 09:24:41.048"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.048" endtime="20241128 09:24:41.048"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.048" endtime="20241128 09:24:41.048"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.048" endtime="20241128 09:24:41.049"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.049" endtime="20241128 09:24:41.049"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.049" endtime="20241128 09:24:41.049"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.049" endtime="20241128 09:24:41.049"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.049" endtime="20241128 09:24:41.049"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.049"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.047" endtime="20241128 09:24:41.050"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.050" endtime="20241128 09:24:41.051"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.050" endtime="20241128 09:24:41.051"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.050" endtime="20241128 09:24:41.051"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.051" endtime="20241128 09:24:41.051"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.051" endtime="20241128 09:24:41.051"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.051" endtime="20241128 09:24:41.051"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.052" endtime="20241128 09:24:41.052"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.052" endtime="20241128 09:24:41.052"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.051" endtime="20241128 09:24:41.052"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.051" endtime="20241128 09:24:41.052"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.050" endtime="20241128 09:24:41.052"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.050" endtime="20241128 09:24:41.052"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.026" endtime="20241128 09:24:41.053"/>
</iter>
<status status="PASS" starttime="20241128 09:24:41.026" endtime="20241128 09:24:41.053"/>
</for>
<msg timestamp="20241128 09:24:41.053" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:41.025" endtime="20241128 09:24:41.053"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.054" endtime="20241128 09:24:41.054"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.058" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.057" endtime="20241128 09:24:41.058"/>
</kw>
<msg timestamp="20241128 09:24:41.058" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.057" endtime="20241128 09:24:41.058"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.059" endtime="20241128 09:24:41.059"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.058" endtime="20241128 09:24:41.059"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.058" endtime="20241128 09:24:41.059"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.060"/>
</return>
<msg timestamp="20241128 09:24:41.060" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.057" endtime="20241128 09:24:41.060"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.060"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.060"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.061" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.061"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.061"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.060" endtime="20241128 09:24:41.061"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.062" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '434', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241128 09:24:41.061" endtime="20241128 09:24:41.062"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:41.063" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "434", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241128 09:24:41.062" endtime="20241128 09:24:41.063"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:41.082" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:41.082" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:41.064" endtime="20241128 09:24:41.082"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.082" endtime="20241128 09:24:41.083"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:41.083" endtime="20241128 09:24:41.083"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.062" endtime="20241128 09:24:41.084"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.054" endtime="20241128 09:24:41.084"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:41.084" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:41.084" endtime="20241128 09:24:41.084"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.797" endtime="20241128 09:24:41.084"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.085" endtime="20241128 09:24:41.085"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.085" endtime="20241128 09:24:41.086"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.086" endtime="20241128 09:24:41.086"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.085" endtime="20241128 09:24:41.086"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.797" endtime="20241128 09:24:41.087"/>
</try>
<status status="PASS" starttime="20241128 09:24:35.797" endtime="20241128 09:24:41.087"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.089" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241128 09:24:41.088" endtime="20241128 09:24:41.089"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.089" endtime="20241128 09:24:41.090"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:41.091" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241128 09:24:41.091" endtime="20241128 09:24:41.091"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.092" endtime="20241128 09:24:41.093"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.093" endtime="20241128 09:24:41.093"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.092" endtime="20241128 09:24:41.093"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.092" endtime="20241128 09:24:41.093"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.095" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:24:41.094" endtime="20241128 09:24:41.095"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.096" endtime="20241128 09:24:41.096"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.095" endtime="20241128 09:24:41.096"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.099" endtime="20241128 09:24:41.099"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.098" endtime="20241128 09:24:41.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.106" endtime="20241128 09:24:41.106"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.100" endtime="20241128 09:24:41.106"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.110" endtime="20241128 09:24:41.110"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.113" endtime="20241128 09:24:41.113"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.107" endtime="20241128 09:24:41.113"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.115" endtime="20241128 09:24:41.115"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.114" endtime="20241128 09:24:41.115"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.118" endtime="20241128 09:24:41.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.115" endtime="20241128 09:24:41.119"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.154" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.132" endtime="20241128 09:24:41.154"/>
</kw>
<msg timestamp="20241128 09:24:41.155" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.132" endtime="20241128 09:24:41.155"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.155" endtime="20241128 09:24:41.155"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.131" endtime="20241128 09:24:41.155"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.155" endtime="20241128 09:24:41.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.156" endtime="20241128 09:24:41.156"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.155" endtime="20241128 09:24:41.156"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.131" endtime="20241128 09:24:41.156"/>
</try>
<msg timestamp="20241128 09:24:41.156" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.131" endtime="20241128 09:24:41.156"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.156" endtime="20241128 09:24:41.156"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.127" endtime="20241128 09:24:41.156"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.156" endtime="20241128 09:24:41.156"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.156" endtime="20241128 09:24:41.156"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.127" endtime="20241128 09:24:41.157"/>
</try>
<msg timestamp="20241128 09:24:41.157" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.127" endtime="20241128 09:24:41.157"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.159" endtime="20241128 09:24:41.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.159" endtime="20241128 09:24:41.159"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.159" endtime="20241128 09:24:41.159"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.159" endtime="20241128 09:24:41.159"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.158" endtime="20241128 09:24:41.159"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.126" endtime="20241128 09:24:41.160"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.175" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.169" endtime="20241128 09:24:41.176"/>
</kw>
<msg timestamp="20241128 09:24:41.176" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.169" endtime="20241128 09:24:41.176"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.176" endtime="20241128 09:24:41.176"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.168" endtime="20241128 09:24:41.176"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.177" endtime="20241128 09:24:41.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.178" endtime="20241128 09:24:41.178"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.176" endtime="20241128 09:24:41.178"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.168" endtime="20241128 09:24:41.178"/>
</try>
<msg timestamp="20241128 09:24:41.178" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.168" endtime="20241128 09:24:41.178"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.178" endtime="20241128 09:24:41.178"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.167" endtime="20241128 09:24:41.178"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.178" endtime="20241128 09:24:41.178"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.178" endtime="20241128 09:24:41.178"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.167" endtime="20241128 09:24:41.178"/>
</try>
<msg timestamp="20241128 09:24:41.179" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.167" endtime="20241128 09:24:41.179"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.181" endtime="20241128 09:24:41.181"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.181" endtime="20241128 09:24:41.181"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.181" endtime="20241128 09:24:41.181"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.181" endtime="20241128 09:24:41.181"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.180" endtime="20241128 09:24:41.182"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.166" endtime="20241128 09:24:41.182"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:24:41.243" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:24:41.243" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:41.182" endtime="20241128 09:24:41.243"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:24:41.243" endtime="20241128 09:24:41.243"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.182" endtime="20241128 09:24:41.243"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.244" endtime="20241128 09:24:41.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.244" endtime="20241128 09:24:41.244"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.243" endtime="20241128 09:24:41.244"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.182" endtime="20241128 09:24:41.244"/>
</try>
<msg timestamp="20241128 09:24:41.245" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:41.164" endtime="20241128 09:24:41.245"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.247" endtime="20241128 09:24:41.247"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.247" endtime="20241128 09:24:41.247"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.247" endtime="20241128 09:24:41.247"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.247" endtime="20241128 09:24:41.248"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.246" endtime="20241128 09:24:41.248"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.163" endtime="20241128 09:24:41.248"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.248" endtime="20241128 09:24:41.248"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.248" endtime="20241128 09:24:41.248"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.163" endtime="20241128 09:24:41.249"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.162" endtime="20241128 09:24:41.249"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.264" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241128 09:24:41.257" endtime="20241128 09:24:41.264"/>
</kw>
<msg timestamp="20241128 09:24:41.264" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.256" endtime="20241128 09:24:41.264"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.264" endtime="20241128 09:24:41.264"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.256" endtime="20241128 09:24:41.264"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.264" endtime="20241128 09:24:41.264"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.265" endtime="20241128 09:24:41.265"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.264" endtime="20241128 09:24:41.265"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.255" endtime="20241128 09:24:41.265"/>
</try>
<msg timestamp="20241128 09:24:41.265" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.254" endtime="20241128 09:24:41.265"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.265" endtime="20241128 09:24:41.265"/>
</return>
<msg timestamp="20241128 09:24:41.265" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.252" endtime="20241128 09:24:41.265"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.268" endtime="20241128 09:24:41.268"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.268" endtime="20241128 09:24:41.268"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.268" endtime="20241128 09:24:41.268"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.267" endtime="20241128 09:24:41.269"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.266" endtime="20241128 09:24:41.269"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.251" endtime="20241128 09:24:41.269"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.124" endtime="20241128 09:24:41.269"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.288" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241128 09:24:41.273" endtime="20241128 09:24:41.288"/>
</kw>
<msg timestamp="20241128 09:24:41.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.273" endtime="20241128 09:24:41.288"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.288" endtime="20241128 09:24:41.288"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.273" endtime="20241128 09:24:41.288"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.288" endtime="20241128 09:24:41.289"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.289" endtime="20241128 09:24:41.289"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.288" endtime="20241128 09:24:41.289"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.273" endtime="20241128 09:24:41.289"/>
</try>
<msg timestamp="20241128 09:24:41.289" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.272" endtime="20241128 09:24:41.289"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.289" endtime="20241128 09:24:41.289"/>
</return>
<msg timestamp="20241128 09:24:41.290" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.271" endtime="20241128 09:24:41.290"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.292" endtime="20241128 09:24:41.292"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.292" endtime="20241128 09:24:41.292"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.291" endtime="20241128 09:24:41.292"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.291" endtime="20241128 09:24:41.292"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.290" endtime="20241128 09:24:41.292"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.271" endtime="20241128 09:24:41.292"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.293" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:41.292" endtime="20241128 09:24:41.293"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.294" endtime="20241128 09:24:41.294"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.296" endtime="20241128 09:24:41.296"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.294" endtime="20241128 09:24:41.296"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.297" endtime="20241128 09:24:41.297"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.296" endtime="20241128 09:24:41.297"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.294" endtime="20241128 09:24:41.297"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:24:41.298" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 09:24:41.297" endtime="20241128 09:24:41.332"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.297" endtime="20241128 09:24:41.332"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.332" endtime="20241128 09:24:41.332"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.332" endtime="20241128 09:24:41.333"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.332" endtime="20241128 09:24:41.333"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.297" endtime="20241128 09:24:41.333"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.294" endtime="20241128 09:24:41.333"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.293" endtime="20241128 09:24:41.333"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.293" endtime="20241128 09:24:41.333"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.334" endtime="20241128 09:24:41.334"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.333" endtime="20241128 09:24:41.334"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.293" endtime="20241128 09:24:41.334"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.123" endtime="20241128 09:24:41.334"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.335" endtime="20241128 09:24:41.335"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.334" endtime="20241128 09:24:41.335"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.334" endtime="20241128 09:24:41.335"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.120" endtime="20241128 09:24:41.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.337" endtime="20241128 09:24:41.337"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.336" endtime="20241128 09:24:41.337"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.338"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.338"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.338"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.339"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.339"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.338" endtime="20241128 09:24:41.339"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.337" endtime="20241128 09:24:41.339"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.343" endtime="20241128 09:24:41.343"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.345" endtime="20241128 09:24:41.345"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.339" endtime="20241128 09:24:41.346"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.347" endtime="20241128 09:24:41.347"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.346" endtime="20241128 09:24:41.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.353" endtime="20241128 09:24:41.353"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.356" endtime="20241128 09:24:41.356"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.348" endtime="20241128 09:24:41.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.357" endtime="20241128 09:24:41.357"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.357" endtime="20241128 09:24:41.357"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.357" endtime="20241128 09:24:41.357"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.358" endtime="20241128 09:24:41.358"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.357" endtime="20241128 09:24:41.358"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.357" endtime="20241128 09:24:41.358"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.356" endtime="20241128 09:24:41.358"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.360" endtime="20241128 09:24:41.360"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.358" endtime="20241128 09:24:41.360"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.365" endtime="20241128 09:24:41.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.365" endtime="20241128 09:24:41.365"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.360" endtime="20241128 09:24:41.365"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.095" endtime="20241128 09:24:41.365"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.365" endtime="20241128 09:24:41.366"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:41.366" endtime="20241128 09:24:41.366"/>
</return>
<msg timestamp="20241128 09:24:41.366" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:24:41.094" endtime="20241128 09:24:41.366"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.367" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 09:24:41.367" endtime="20241128 09:24:41.367"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.368" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:41.368" endtime="20241128 09:24:41.368"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.369" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:41.368" endtime="20241128 09:24:41.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.369" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.369" endtime="20241128 09:24:41.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.369" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:41.369" endtime="20241128 09:24:41.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.370" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.370" endtime="20241128 09:24:41.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.370" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:41.370" endtime="20241128 09:24:41.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.371" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:41.370" endtime="20241128 09:24:41.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.371" endtime="20241128 09:24:41.371"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.373" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.373" endtime="20241128 09:24:41.373"/>
</kw>
<msg timestamp="20241128 09:24:41.373" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.372" endtime="20241128 09:24:41.373"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.374"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.374"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.374"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.374"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.375"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.375"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.374" endtime="20241128 09:24:41.375"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.373" endtime="20241128 09:24:41.375"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.375" endtime="20241128 09:24:41.375"/>
</return>
<msg timestamp="20241128 09:24:41.375" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.372" endtime="20241128 09:24:41.375"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.377" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.377" endtime="20241128 09:24:41.377"/>
</kw>
<msg timestamp="20241128 09:24:41.377" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.376" endtime="20241128 09:24:41.377"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.378"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.378"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.378"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.378"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.379"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.379"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.379"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.378" endtime="20241128 09:24:41.379"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.379" endtime="20241128 09:24:41.379"/>
</return>
<msg timestamp="20241128 09:24:41.379" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.376" endtime="20241128 09:24:41.379"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.380" endtime="20241128 09:24:41.380"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.379" endtime="20241128 09:24:41.380"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.379" endtime="20241128 09:24:41.380"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.380" endtime="20241128 09:24:41.380"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.380" endtime="20241128 09:24:41.380"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.380" endtime="20241128 09:24:41.380"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.380" endtime="20241128 09:24:41.381"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.381"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.381"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.381"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.381"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.379" endtime="20241128 09:24:41.381"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.379" endtime="20241128 09:24:41.381"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.382"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.382"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.383" endtime="20241128 09:24:41.383"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.383"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.382" endtime="20241128 09:24:41.383"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.383"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.381" endtime="20241128 09:24:41.383"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.367" endtime="20241128 09:24:41.383"/>
</iter>
<status status="PASS" starttime="20241128 09:24:41.367" endtime="20241128 09:24:41.383"/>
</for>
<msg timestamp="20241128 09:24:41.383" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:41.366" endtime="20241128 09:24:41.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.383" endtime="20241128 09:24:41.384"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.387" endtime="20241128 09:24:41.388"/>
</kw>
<msg timestamp="20241128 09:24:41.388" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.387" endtime="20241128 09:24:41.388"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.388" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.388" endtime="20241128 09:24:41.389"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.389" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.389" endtime="20241128 09:24:41.389"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.389" endtime="20241128 09:24:41.389"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.389" endtime="20241128 09:24:41.389"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.389" endtime="20241128 09:24:41.389"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.389" endtime="20241128 09:24:41.390"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.388" endtime="20241128 09:24:41.390"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.388" endtime="20241128 09:24:41.390"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.390" endtime="20241128 09:24:41.390"/>
</return>
<msg timestamp="20241128 09:24:41.390" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.387" endtime="20241128 09:24:41.390"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.391" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241128 09:24:41.390" endtime="20241128 09:24:41.391"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.390" endtime="20241128 09:24:41.391"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.391" endtime="20241128 09:24:41.391"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.391" endtime="20241128 09:24:41.391"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.390" endtime="20241128 09:24:41.391"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.392" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '435', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241128 09:24:41.391" endtime="20241128 09:24:41.392"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:41.393" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "435", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241128 09:24:41.392" endtime="20241128 09:24:41.393"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:41.431" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:41.431" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:41.393" endtime="20241128 09:24:41.431"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.432" endtime="20241128 09:24:41.433"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:41.433" endtime="20241128 09:24:41.433"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.392" endtime="20241128 09:24:41.434"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.384" endtime="20241128 09:24:41.434"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:41.436" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:41.435" endtime="20241128 09:24:41.436"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.088" endtime="20241128 09:24:41.436"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.437" endtime="20241128 09:24:41.437"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.437" endtime="20241128 09:24:41.438"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.438" endtime="20241128 09:24:41.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.436" endtime="20241128 09:24:41.439"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.088" endtime="20241128 09:24:41.439"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.087" endtime="20241128 09:24:41.439"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.441" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241128 09:24:41.440" endtime="20241128 09:24:41.441"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.441" endtime="20241128 09:24:41.442"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:41.443" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.443" endtime="20241128 09:24:41.444"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.445" endtime="20241128 09:24:41.446"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.446" endtime="20241128 09:24:41.446"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.445" endtime="20241128 09:24:41.446"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.444" endtime="20241128 09:24:41.447"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.449" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:24:41.448" endtime="20241128 09:24:41.449"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.452" endtime="20241128 09:24:41.452"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.451" endtime="20241128 09:24:41.453"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.454" endtime="20241128 09:24:41.454"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.453" endtime="20241128 09:24:41.455"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.464" endtime="20241128 09:24:41.465"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.455" endtime="20241128 09:24:41.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.473" endtime="20241128 09:24:41.474"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.478" endtime="20241128 09:24:41.478"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.466" endtime="20241128 09:24:41.478"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.480" endtime="20241128 09:24:41.480"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.478" endtime="20241128 09:24:41.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.487" endtime="20241128 09:24:41.487"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.481" endtime="20241128 09:24:41.487"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.504" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.497" endtime="20241128 09:24:41.504"/>
</kw>
<msg timestamp="20241128 09:24:41.505" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.497" endtime="20241128 09:24:41.505"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.505" endtime="20241128 09:24:41.505"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.497" endtime="20241128 09:24:41.505"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.505" endtime="20241128 09:24:41.505"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.506" endtime="20241128 09:24:41.506"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.505" endtime="20241128 09:24:41.506"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.497" endtime="20241128 09:24:41.506"/>
</try>
<msg timestamp="20241128 09:24:41.506" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.496" endtime="20241128 09:24:41.506"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.506" endtime="20241128 09:24:41.506"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.495" endtime="20241128 09:24:41.507"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.507" endtime="20241128 09:24:41.507"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.507" endtime="20241128 09:24:41.507"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.495" endtime="20241128 09:24:41.507"/>
</try>
<msg timestamp="20241128 09:24:41.507" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.495" endtime="20241128 09:24:41.507"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.510" endtime="20241128 09:24:41.510"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.510" endtime="20241128 09:24:41.510"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.509" endtime="20241128 09:24:41.510"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.509" endtime="20241128 09:24:41.510"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.508" endtime="20241128 09:24:41.510"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.494" endtime="20241128 09:24:41.510"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.528" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.520" endtime="20241128 09:24:41.528"/>
</kw>
<msg timestamp="20241128 09:24:41.528" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.520" endtime="20241128 09:24:41.528"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.529" endtime="20241128 09:24:41.529"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.519" endtime="20241128 09:24:41.529"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.529" endtime="20241128 09:24:41.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.529" endtime="20241128 09:24:41.529"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.529" endtime="20241128 09:24:41.529"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.519" endtime="20241128 09:24:41.529"/>
</try>
<msg timestamp="20241128 09:24:41.530" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.518" endtime="20241128 09:24:41.530"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.530" endtime="20241128 09:24:41.530"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.517" endtime="20241128 09:24:41.530"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.530" endtime="20241128 09:24:41.530"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.530" endtime="20241128 09:24:41.530"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.517" endtime="20241128 09:24:41.530"/>
</try>
<msg timestamp="20241128 09:24:41.530" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.516" endtime="20241128 09:24:41.530"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.532" endtime="20241128 09:24:41.533"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.533" endtime="20241128 09:24:41.533"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.532" endtime="20241128 09:24:41.533"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.532" endtime="20241128 09:24:41.533"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.531" endtime="20241128 09:24:41.533"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.516" endtime="20241128 09:24:41.534"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:24:41.544" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:24:41.544" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:41.534" endtime="20241128 09:24:41.544"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:24:41.544" endtime="20241128 09:24:41.544"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.534" endtime="20241128 09:24:41.544"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.545" endtime="20241128 09:24:41.545"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.545" endtime="20241128 09:24:41.545"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.545" endtime="20241128 09:24:41.545"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.534" endtime="20241128 09:24:41.545"/>
</try>
<msg timestamp="20241128 09:24:41.545" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:41.514" endtime="20241128 09:24:41.545"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.547" endtime="20241128 09:24:41.548"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.548" endtime="20241128 09:24:41.548"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.547" endtime="20241128 09:24:41.548"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.547" endtime="20241128 09:24:41.548"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.546" endtime="20241128 09:24:41.548"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.513" endtime="20241128 09:24:41.548"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.549" endtime="20241128 09:24:41.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.548" endtime="20241128 09:24:41.549"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.513" endtime="20241128 09:24:41.549"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.512" endtime="20241128 09:24:41.549"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.558" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241128 09:24:41.554" endtime="20241128 09:24:41.558"/>
</kw>
<msg timestamp="20241128 09:24:41.559" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.553" endtime="20241128 09:24:41.559"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.559" endtime="20241128 09:24:41.559"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.553" endtime="20241128 09:24:41.559"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.559" endtime="20241128 09:24:41.559"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.559" endtime="20241128 09:24:41.559"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.559" endtime="20241128 09:24:41.559"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.553" endtime="20241128 09:24:41.560"/>
</try>
<msg timestamp="20241128 09:24:41.560" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.552" endtime="20241128 09:24:41.560"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.560" endtime="20241128 09:24:41.560"/>
</return>
<msg timestamp="20241128 09:24:41.560" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.551" endtime="20241128 09:24:41.560"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.562" endtime="20241128 09:24:41.562"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.562" endtime="20241128 09:24:41.562"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.562" endtime="20241128 09:24:41.562"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.562" endtime="20241128 09:24:41.563"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.561" endtime="20241128 09:24:41.563"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.550" endtime="20241128 09:24:41.563"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.492" endtime="20241128 09:24:41.563"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.578" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241128 09:24:41.566" endtime="20241128 09:24:41.578"/>
</kw>
<msg timestamp="20241128 09:24:41.578" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.566" endtime="20241128 09:24:41.578"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.578" endtime="20241128 09:24:41.579"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.566" endtime="20241128 09:24:41.579"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.579" endtime="20241128 09:24:41.579"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.579" endtime="20241128 09:24:41.579"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.579" endtime="20241128 09:24:41.579"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.566" endtime="20241128 09:24:41.579"/>
</try>
<msg timestamp="20241128 09:24:41.580" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.566" endtime="20241128 09:24:41.580"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.580" endtime="20241128 09:24:41.580"/>
</return>
<msg timestamp="20241128 09:24:41.580" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.565" endtime="20241128 09:24:41.580"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.582" endtime="20241128 09:24:41.582"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.582" endtime="20241128 09:24:41.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.582" endtime="20241128 09:24:41.582"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.582" endtime="20241128 09:24:41.582"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.581" endtime="20241128 09:24:41.583"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.564" endtime="20241128 09:24:41.583"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.583" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:41.583" endtime="20241128 09:24:41.583"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.586" endtime="20241128 09:24:41.586"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.588" endtime="20241128 09:24:41.588"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.586" endtime="20241128 09:24:41.588"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.589" endtime="20241128 09:24:41.589"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.588" endtime="20241128 09:24:41.589"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.585" endtime="20241128 09:24:41.589"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:24:41.590" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 09:24:41.589" endtime="20241128 09:24:41.611"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.589" endtime="20241128 09:24:41.611"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.611" endtime="20241128 09:24:41.611"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.611" endtime="20241128 09:24:41.611"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.611" endtime="20241128 09:24:41.612"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.589" endtime="20241128 09:24:41.612"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.585" endtime="20241128 09:24:41.612"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.583" endtime="20241128 09:24:41.612"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.583" endtime="20241128 09:24:41.612"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.612" endtime="20241128 09:24:41.612"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.612" endtime="20241128 09:24:41.612"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.583" endtime="20241128 09:24:41.612"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.491" endtime="20241128 09:24:41.612"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.613" endtime="20241128 09:24:41.613"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.613" endtime="20241128 09:24:41.613"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.613" endtime="20241128 09:24:41.613"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.488" endtime="20241128 09:24:41.613"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.614" endtime="20241128 09:24:41.614"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.613" endtime="20241128 09:24:41.614"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.615" endtime="20241128 09:24:41.616"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.616" endtime="20241128 09:24:41.616"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.616" endtime="20241128 09:24:41.616"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.616" endtime="20241128 09:24:41.617"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.616" endtime="20241128 09:24:41.617"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.616" endtime="20241128 09:24:41.617"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.614" endtime="20241128 09:24:41.617"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.625" endtime="20241128 09:24:41.625"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.627" endtime="20241128 09:24:41.628"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.617" endtime="20241128 09:24:41.628"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.629" endtime="20241128 09:24:41.629"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.630" endtime="20241128 09:24:41.630"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.629" endtime="20241128 09:24:41.630"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.630" endtime="20241128 09:24:41.630"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.630" endtime="20241128 09:24:41.630"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.629" endtime="20241128 09:24:41.630"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.628" endtime="20241128 09:24:41.630"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.637" endtime="20241128 09:24:41.637"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.639" endtime="20241128 09:24:41.640"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.630" endtime="20241128 09:24:41.640"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.641" endtime="20241128 09:24:41.641"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.640" endtime="20241128 09:24:41.641"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.643" endtime="20241128 09:24:41.643"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.642" endtime="20241128 09:24:41.643"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.648" endtime="20241128 09:24:41.648"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.648" endtime="20241128 09:24:41.648"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.643" endtime="20241128 09:24:41.648"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.450" endtime="20241128 09:24:41.648"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.648" endtime="20241128 09:24:41.649"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:41.649" endtime="20241128 09:24:41.649"/>
</return>
<msg timestamp="20241128 09:24:41.650" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:24:41.447" endtime="20241128 09:24:41.650"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.651" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 09:24:41.650" endtime="20241128 09:24:41.651"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.653" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:41.652" endtime="20241128 09:24:41.653"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.654" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:41.653" endtime="20241128 09:24:41.654"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.655" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.655" endtime="20241128 09:24:41.655"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.656" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:41.656" endtime="20241128 09:24:41.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.656" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.656" endtime="20241128 09:24:41.656"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.657" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:41.656" endtime="20241128 09:24:41.657"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.657" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:41.657" endtime="20241128 09:24:41.657"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.657" endtime="20241128 09:24:41.657"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.660" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.659" endtime="20241128 09:24:41.660"/>
</kw>
<msg timestamp="20241128 09:24:41.660" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.659" endtime="20241128 09:24:41.660"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.660" endtime="20241128 09:24:41.661"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.661" endtime="20241128 09:24:41.661"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.661" endtime="20241128 09:24:41.661"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.661" endtime="20241128 09:24:41.661"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.661" endtime="20241128 09:24:41.661"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.661" endtime="20241128 09:24:41.661"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.660" endtime="20241128 09:24:41.661"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.660" endtime="20241128 09:24:41.662"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.662" endtime="20241128 09:24:41.662"/>
</return>
<msg timestamp="20241128 09:24:41.662" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.659" endtime="20241128 09:24:41.662"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.664" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.664" endtime="20241128 09:24:41.665"/>
</kw>
<msg timestamp="20241128 09:24:41.665" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.663" endtime="20241128 09:24:41.665"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.665" endtime="20241128 09:24:41.665"/>
</return>
<msg timestamp="20241128 09:24:41.667" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.663" endtime="20241128 09:24:41.667"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.667"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.667"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.667"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.668" endtime="20241128 09:24:41.668"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.668" endtime="20241128 09:24:41.668"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.668"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.668"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.669" endtime="20241128 09:24:41.669"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.669" endtime="20241128 09:24:41.669"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.668" endtime="20241128 09:24:41.669"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.668" endtime="20241128 09:24:41.669"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.669"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.667" endtime="20241128 09:24:41.669"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.670"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.670"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.669" endtime="20241128 09:24:41.670"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.670"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.670"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.670"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.671" endtime="20241128 09:24:41.671"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.671" endtime="20241128 09:24:41.671"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.671"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.670" endtime="20241128 09:24:41.671"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.669" endtime="20241128 09:24:41.671"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.669" endtime="20241128 09:24:41.671"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.651" endtime="20241128 09:24:41.671"/>
</iter>
<status status="PASS" starttime="20241128 09:24:41.651" endtime="20241128 09:24:41.671"/>
</for>
<msg timestamp="20241128 09:24:41.671" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:41.650" endtime="20241128 09:24:41.672"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.672" endtime="20241128 09:24:41.672"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.676" endtime="20241128 09:24:41.676"/>
</kw>
<msg timestamp="20241128 09:24:41.676" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.676" endtime="20241128 09:24:41.676"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.677" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.677" endtime="20241128 09:24:41.677"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.678" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.677" endtime="20241128 09:24:41.678"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.677" endtime="20241128 09:24:41.678"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.678" endtime="20241128 09:24:41.678"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.678" endtime="20241128 09:24:41.678"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.677" endtime="20241128 09:24:41.678"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.676" endtime="20241128 09:24:41.678"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.676" endtime="20241128 09:24:41.678"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.678" endtime="20241128 09:24:41.678"/>
</return>
<msg timestamp="20241128 09:24:41.678" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.675" endtime="20241128 09:24:41.678"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.679" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241128 09:24:41.679" endtime="20241128 09:24:41.679"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.679" endtime="20241128 09:24:41.679"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.679" endtime="20241128 09:24:41.680"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.679" endtime="20241128 09:24:41.680"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.678" endtime="20241128 09:24:41.680"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.680" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '436', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241128 09:24:41.680" endtime="20241128 09:24:41.680"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:41.681" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "436", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241128 09:24:41.681" endtime="20241128 09:24:41.681"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:41.716" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:41.716" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:41.682" endtime="20241128 09:24:41.716"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.716" endtime="20241128 09:24:41.717"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:41.717" endtime="20241128 09:24:41.717"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.681" endtime="20241128 09:24:41.718"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.672" endtime="20241128 09:24:41.718"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:41.719" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:41.718" endtime="20241128 09:24:41.719"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.440" endtime="20241128 09:24:41.719"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.719" endtime="20241128 09:24:41.719"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.719" endtime="20241128 09:24:41.720"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.720" endtime="20241128 09:24:41.720"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.719" endtime="20241128 09:24:41.720"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.439" endtime="20241128 09:24:41.720"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.439" endtime="20241128 09:24:41.720"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.721" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241128 09:24:41.721" endtime="20241128 09:24:41.721"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.721" endtime="20241128 09:24:41.721"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:41.722" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.722" endtime="20241128 09:24:41.722"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.722" endtime="20241128 09:24:41.722"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.723" endtime="20241128 09:24:41.723"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.722" endtime="20241128 09:24:41.723"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.722" endtime="20241128 09:24:41.723"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.724" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:41.723" endtime="20241128 09:24:41.724"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.724" endtime="20241128 09:24:41.724"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.724" endtime="20241128 09:24:41.724"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.724" endtime="20241128 09:24:41.725"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.724" endtime="20241128 09:24:41.725"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.741" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.732" endtime="20241128 09:24:41.741"/>
</kw>
<msg timestamp="20241128 09:24:41.741" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.731" endtime="20241128 09:24:41.741"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.742" endtime="20241128 09:24:41.742"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.731" endtime="20241128 09:24:41.742"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.742" endtime="20241128 09:24:41.742"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.742" endtime="20241128 09:24:41.742"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.742" endtime="20241128 09:24:41.743"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.731" endtime="20241128 09:24:41.743"/>
</try>
<msg timestamp="20241128 09:24:41.743" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.731" endtime="20241128 09:24:41.743"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.743" endtime="20241128 09:24:41.743"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.730" endtime="20241128 09:24:41.743"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.743" endtime="20241128 09:24:41.743"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.743" endtime="20241128 09:24:41.743"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.730" endtime="20241128 09:24:41.743"/>
</try>
<msg timestamp="20241128 09:24:41.744" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.730" endtime="20241128 09:24:41.744"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.746" endtime="20241128 09:24:41.746"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.746" endtime="20241128 09:24:41.746"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.746" endtime="20241128 09:24:41.746"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.746" endtime="20241128 09:24:41.746"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.745" endtime="20241128 09:24:41.746"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.729" endtime="20241128 09:24:41.747"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.757" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 09:24:41.751" endtime="20241128 09:24:41.757"/>
</kw>
<msg timestamp="20241128 09:24:41.757" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.750" endtime="20241128 09:24:41.757"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.757" endtime="20241128 09:24:41.757"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.750" endtime="20241128 09:24:41.757"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.758" endtime="20241128 09:24:41.758"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.758" endtime="20241128 09:24:41.758"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.758" endtime="20241128 09:24:41.758"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.750" endtime="20241128 09:24:41.758"/>
</try>
<msg timestamp="20241128 09:24:41.758" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.749" endtime="20241128 09:24:41.758"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.759" endtime="20241128 09:24:41.759"/>
</return>
<msg timestamp="20241128 09:24:41.759" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.748" endtime="20241128 09:24:41.759"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.761" endtime="20241128 09:24:41.761"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.761" endtime="20241128 09:24:41.761"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.761" endtime="20241128 09:24:41.761"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.760" endtime="20241128 09:24:41.761"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.760" endtime="20241128 09:24:41.761"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.748" endtime="20241128 09:24:41.761"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:41.782" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:41.767" endtime="20241128 09:24:41.782"/>
</kw>
<msg timestamp="20241128 09:24:41.782" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.767" endtime="20241128 09:24:41.782"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.782" endtime="20241128 09:24:41.782"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.766" endtime="20241128 09:24:41.782"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.783" endtime="20241128 09:24:41.783"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.783" endtime="20241128 09:24:41.783"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.783" endtime="20241128 09:24:41.783"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.766" endtime="20241128 09:24:41.783"/>
</try>
<msg timestamp="20241128 09:24:41.783" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.765" endtime="20241128 09:24:41.783"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:41.783" endtime="20241128 09:24:41.784"/>
</return>
<msg timestamp="20241128 09:24:41.784" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.764" endtime="20241128 09:24:41.784"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.788" endtime="20241128 09:24:41.788"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.788" endtime="20241128 09:24:41.788"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.787" endtime="20241128 09:24:41.788"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.787" endtime="20241128 09:24:41.788"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.786" endtime="20241128 09:24:41.788"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.763" endtime="20241128 09:24:41.788"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.727" endtime="20241128 09:24:41.788"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.789" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:41.789" endtime="20241128 09:24:41.789"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.790" endtime="20241128 09:24:41.790"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.790" endtime="20241128 09:24:41.790"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.791" endtime="20241128 09:24:41.791"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.790" endtime="20241128 09:24:41.791"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.790" endtime="20241128 09:24:41.791"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:41.791" endtime="20241128 09:24:41.821"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.791" endtime="20241128 09:24:41.821"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.821" endtime="20241128 09:24:41.821"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.822" endtime="20241128 09:24:41.822"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.821" endtime="20241128 09:24:41.822"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.791" endtime="20241128 09:24:41.822"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.790" endtime="20241128 09:24:41.822"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.789" endtime="20241128 09:24:41.822"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.789" endtime="20241128 09:24:41.822"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.822" endtime="20241128 09:24:41.822"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.822" endtime="20241128 09:24:41.823"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.789" endtime="20241128 09:24:41.823"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.726" endtime="20241128 09:24:41.823"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.725" endtime="20241128 09:24:41.823"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.824" endtime="20241128 09:24:41.824"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.826" endtime="20241128 09:24:41.826"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.823" endtime="20241128 09:24:41.826"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.827" endtime="20241128 09:24:41.827"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.826" endtime="20241128 09:24:41.827"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.829" endtime="20241128 09:24:41.830"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.827" endtime="20241128 09:24:41.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.831" endtime="20241128 09:24:41.831"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.832" endtime="20241128 09:24:41.832"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.831" endtime="20241128 09:24:41.832"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.831" endtime="20241128 09:24:41.832"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.830" endtime="20241128 09:24:41.832"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.833" endtime="20241128 09:24:41.833"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.832" endtime="20241128 09:24:41.833"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.834" endtime="20241128 09:24:41.834"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.835" endtime="20241128 09:24:41.835"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.834" endtime="20241128 09:24:41.835"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.835" endtime="20241128 09:24:41.835"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.835" endtime="20241128 09:24:41.835"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.834" endtime="20241128 09:24:41.835"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.833" endtime="20241128 09:24:41.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.841" endtime="20241128 09:24:41.841"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.843" endtime="20241128 09:24:41.843"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.836" endtime="20241128 09:24:41.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.844" endtime="20241128 09:24:41.844"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.844" endtime="20241128 09:24:41.844"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.844" endtime="20241128 09:24:41.844"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.845" endtime="20241128 09:24:41.845"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.845" endtime="20241128 09:24:41.845"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.844" endtime="20241128 09:24:41.845"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.843" endtime="20241128 09:24:41.845"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:41.849" endtime="20241128 09:24:41.849"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.852" endtime="20241128 09:24:41.852"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.845" endtime="20241128 09:24:41.852"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.853" endtime="20241128 09:24:41.853"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.853" endtime="20241128 09:24:41.853"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.853" endtime="20241128 09:24:41.853"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.854" endtime="20241128 09:24:41.854"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.854" endtime="20241128 09:24:41.854"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.853" endtime="20241128 09:24:41.854"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.852" endtime="20241128 09:24:41.854"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.855" endtime="20241128 09:24:41.856"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.854" endtime="20241128 09:24:41.856"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.860" endtime="20241128 09:24:41.860"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.860" endtime="20241128 09:24:41.860"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.856" endtime="20241128 09:24:41.860"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.724" endtime="20241128 09:24:41.860"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.861" endtime="20241128 09:24:41.861"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:41.861" endtime="20241128 09:24:41.861"/>
</return>
<msg timestamp="20241128 09:24:41.861" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:41.723" endtime="20241128 09:24:41.861"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.862" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 09:24:41.862" endtime="20241128 09:24:41.862"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.863" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:41.862" endtime="20241128 09:24:41.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.863" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:41.863" endtime="20241128 09:24:41.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.863" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.863" endtime="20241128 09:24:41.863"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.864" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:41.863" endtime="20241128 09:24:41.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.864" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.864" endtime="20241128 09:24:41.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.864" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:41.864" endtime="20241128 09:24:41.864"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.865" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:41.865" endtime="20241128 09:24:41.865"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.865" endtime="20241128 09:24:41.865"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.868" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.867" endtime="20241128 09:24:41.868"/>
</kw>
<msg timestamp="20241128 09:24:41.868" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.867" endtime="20241128 09:24:41.868"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.868" endtime="20241128 09:24:41.868"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.869" endtime="20241128 09:24:41.869"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.868" endtime="20241128 09:24:41.869"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.869" endtime="20241128 09:24:41.869"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.869" endtime="20241128 09:24:41.869"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.868" endtime="20241128 09:24:41.869"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.868" endtime="20241128 09:24:41.869"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.868" endtime="20241128 09:24:41.869"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.869" endtime="20241128 09:24:41.869"/>
</return>
<msg timestamp="20241128 09:24:41.870" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.866" endtime="20241128 09:24:41.870"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:41.872" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:41.872" endtime="20241128 09:24:41.872"/>
</kw>
<msg timestamp="20241128 09:24:41.872" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.871" endtime="20241128 09:24:41.872"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.873"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.873" endtime="20241128 09:24:41.874"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.872" endtime="20241128 09:24:41.874"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.874" endtime="20241128 09:24:41.874"/>
</return>
<msg timestamp="20241128 09:24:41.874" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:41.871" endtime="20241128 09:24:41.874"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.874" endtime="20241128 09:24:41.875"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.874" endtime="20241128 09:24:41.875"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.875"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.876"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.876"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.875" endtime="20241128 09:24:41.876"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.874" endtime="20241128 09:24:41.876"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.874" endtime="20241128 09:24:41.876"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.876"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.876"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.876"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:41.877" endtime="20241128 09:24:41.877"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.877"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.876" endtime="20241128 09:24:41.877"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.862" endtime="20241128 09:24:41.877"/>
</iter>
<status status="PASS" starttime="20241128 09:24:41.862" endtime="20241128 09:24:41.878"/>
</for>
<msg timestamp="20241128 09:24:41.878" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:41.861" endtime="20241128 09:24:41.878"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.878" endtime="20241128 09:24:41.879"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.882" endtime="20241128 09:24:41.882"/>
</kw>
<msg timestamp="20241128 09:24:41.882" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.882" endtime="20241128 09:24:41.882"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.883" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.883" endtime="20241128 09:24:41.883"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.884" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.883" endtime="20241128 09:24:41.884"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.883" endtime="20241128 09:24:41.884"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.884" endtime="20241128 09:24:41.884"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.884" endtime="20241128 09:24:41.884"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.883" endtime="20241128 09:24:41.884"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.883" endtime="20241128 09:24:41.884"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.882" endtime="20241128 09:24:41.884"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.884" endtime="20241128 09:24:41.885"/>
</return>
<msg timestamp="20241128 09:24:41.885" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.881" endtime="20241128 09:24:41.885"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.886" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241128 09:24:41.885" endtime="20241128 09:24:41.886"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.885" endtime="20241128 09:24:41.886"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.886" endtime="20241128 09:24:41.886"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.886" endtime="20241128 09:24:41.886"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.885" endtime="20241128 09:24:41.886"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.887" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '437', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241128 09:24:41.887" endtime="20241128 09:24:41.887"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:41.888" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "437", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241128 09:24:41.888" endtime="20241128 09:24:41.888"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:41.908" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:41.908" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:41.888" endtime="20241128 09:24:41.909"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.909" endtime="20241128 09:24:41.909"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:41.910" endtime="20241128 09:24:41.910"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.888" endtime="20241128 09:24:41.910"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.879" endtime="20241128 09:24:41.910"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:41.911" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:41.911" endtime="20241128 09:24:41.911"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.720" endtime="20241128 09:24:41.911"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.911" endtime="20241128 09:24:41.911"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.911" endtime="20241128 09:24:41.912"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.912" endtime="20241128 09:24:41.912"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.911" endtime="20241128 09:24:41.912"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.720" endtime="20241128 09:24:41.912"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.720" endtime="20241128 09:24:41.912"/>
</iter>
<status status="PASS" starttime="20241128 09:24:35.797" endtime="20241128 09:24:41.912"/>
</for>
<status status="PASS" starttime="20241128 09:24:35.796" endtime="20241128 09:24:41.912"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.796" endtime="20241128 09:24:41.912"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:41.914" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '110', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:24:41.913" endtime="20241128 09:24:41.914"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:41.915" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "110", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:24:41.915" endtime="20241128 09:24:41.915"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:41.954" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:41.954" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:41.915" endtime="20241128 09:24:41.954"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.955" endtime="20241128 09:24:41.955"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:41.955" endtime="20241128 09:24:41.955"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.914" endtime="20241128 09:24:41.955"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.912" endtime="20241128 09:24:41.956"/>
</kw>
<status status="PASS" starttime="20241128 09:24:35.788" endtime="20241128 09:24:41.956"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.956" endtime="20241128 09:24:41.956"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.956" endtime="20241128 09:24:41.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.957" endtime="20241128 09:24:41.957"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.956" endtime="20241128 09:24:41.957"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.788" endtime="20241128 09:24:41.957"/>
</try>
<status status="PASS" starttime="20241128 09:24:35.788" endtime="20241128 09:24:41.957"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '15', 'testCaseId': '7', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-26T16:06:17.357Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'project...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.958" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241128 09:24:41.958" endtime="20241128 09:24:41.958"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.958" endtime="20241128 09:24:41.959"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:41.961" endtime="20241128 09:24:41.962"/>
</kw>
<msg timestamp="20241128 09:24:41.962" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.961" endtime="20241128 09:24:41.962"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.962" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241128 09:24:41.962" endtime="20241128 09:24:41.962"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.963" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.963" endtime="20241128 09:24:41.963"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.963" endtime="20241128 09:24:41.963"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.963" endtime="20241128 09:24:41.964"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.963" endtime="20241128 09:24:41.964"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.963" endtime="20241128 09:24:41.964"/>
</if>
<status status="PASS" starttime="20241128 09:24:41.962" endtime="20241128 09:24:41.964"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.962" endtime="20241128 09:24:41.964"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:41.964" endtime="20241128 09:24:41.964"/>
</return>
<msg timestamp="20241128 09:24:41.964" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.961" endtime="20241128 09:24:41.964"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.965" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241128 09:24:41.965" endtime="20241128 09:24:41.965"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:41.965" endtime="20241128 09:24:41.966"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:41.966" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241128 09:24:41.966" endtime="20241128 09:24:41.966"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.967" endtime="20241128 09:24:41.967"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:41.967" endtime="20241128 09:24:41.967"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.967" endtime="20241128 09:24:41.968"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.966" endtime="20241128 09:24:41.968"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:41.969" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:41.968" endtime="20241128 09:24:41.969"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.969" endtime="20241128 09:24:41.969"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.969" endtime="20241128 09:24:41.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:41.970" endtime="20241128 09:24:41.970"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:41.970" endtime="20241128 09:24:41.970"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:42.830" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241128 09:24:41.977" endtime="20241128 09:24:42.830"/>
</kw>
<msg timestamp="20241128 09:24:42.831" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.977" endtime="20241128 09:24:42.831"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.831" endtime="20241128 09:24:42.831"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.976" endtime="20241128 09:24:42.831"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.831" endtime="20241128 09:24:42.831"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.832" endtime="20241128 09:24:42.832"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.831" endtime="20241128 09:24:42.832"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.976" endtime="20241128 09:24:42.832"/>
</try>
<msg timestamp="20241128 09:24:42.832" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.976" endtime="20241128 09:24:42.832"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.832" endtime="20241128 09:24:42.832"/>
</return>
<status status="PASS" starttime="20241128 09:24:41.975" endtime="20241128 09:24:42.832"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:42.832" endtime="20241128 09:24:42.832"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:42.832" endtime="20241128 09:24:42.833"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.975" endtime="20241128 09:24:42.833"/>
</try>
<msg timestamp="20241128 09:24:42.833" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:41.975" endtime="20241128 09:24:42.833"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.837" endtime="20241128 09:24:42.837"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.837" endtime="20241128 09:24:42.837"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.836" endtime="20241128 09:24:42.837"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.836" endtime="20241128 09:24:42.837"/>
</if>
<status status="PASS" starttime="20241128 09:24:42.835" endtime="20241128 09:24:42.837"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.974" endtime="20241128 09:24:42.838"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:42.848" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241128 09:24:42.842" endtime="20241128 09:24:42.848"/>
</kw>
<msg timestamp="20241128 09:24:42.849" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.842" endtime="20241128 09:24:42.849"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.849" endtime="20241128 09:24:42.849"/>
</return>
<status status="PASS" starttime="20241128 09:24:42.842" endtime="20241128 09:24:42.849"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.850" endtime="20241128 09:24:42.850"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.850" endtime="20241128 09:24:42.851"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.849" endtime="20241128 09:24:42.851"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.842" endtime="20241128 09:24:42.851"/>
</try>
<msg timestamp="20241128 09:24:42.851" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.841" endtime="20241128 09:24:42.851"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.851" endtime="20241128 09:24:42.852"/>
</return>
<msg timestamp="20241128 09:24:42.852" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.840" endtime="20241128 09:24:42.852"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.854" endtime="20241128 09:24:42.854"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.855" endtime="20241128 09:24:42.855"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.854" endtime="20241128 09:24:42.855"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.854" endtime="20241128 09:24:42.855"/>
</if>
<status status="PASS" starttime="20241128 09:24:42.853" endtime="20241128 09:24:42.855"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.839" endtime="20241128 09:24:42.855"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:42.922" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:42.860" endtime="20241128 09:24:42.922"/>
</kw>
<msg timestamp="20241128 09:24:42.922" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.859" endtime="20241128 09:24:42.922"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.922" endtime="20241128 09:24:42.922"/>
</return>
<status status="PASS" starttime="20241128 09:24:42.859" endtime="20241128 09:24:42.922"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.923" endtime="20241128 09:24:42.923"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.923" endtime="20241128 09:24:42.923"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.923" endtime="20241128 09:24:42.923"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.859" endtime="20241128 09:24:42.923"/>
</try>
<msg timestamp="20241128 09:24:42.924" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.859" endtime="20241128 09:24:42.924"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:42.925" endtime="20241128 09:24:42.925"/>
</return>
<msg timestamp="20241128 09:24:42.926" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:42.857" endtime="20241128 09:24:42.926"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.929" endtime="20241128 09:24:42.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.929" endtime="20241128 09:24:42.929"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.929" endtime="20241128 09:24:42.930"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.929" endtime="20241128 09:24:42.930"/>
</if>
<status status="PASS" starttime="20241128 09:24:42.928" endtime="20241128 09:24:42.930"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.857" endtime="20241128 09:24:42.930"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.973" endtime="20241128 09:24:42.930"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:42.931" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:42.930" endtime="20241128 09:24:42.931"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:42.933" endtime="20241128 09:24:42.933"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:42.932" endtime="20241128 09:24:42.933"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:42.934" endtime="20241128 09:24:42.935"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.933" endtime="20241128 09:24:42.935"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.932" endtime="20241128 09:24:42.935"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:42.936" endtime="20241128 09:24:43.464"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.936" endtime="20241128 09:24:43.464"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.464" endtime="20241128 09:24:43.465"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.465" endtime="20241128 09:24:43.465"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.464" endtime="20241128 09:24:43.465"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.935" endtime="20241128 09:24:43.465"/>
</try>
<status status="PASS" starttime="20241128 09:24:42.932" endtime="20241128 09:24:43.465"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.931" endtime="20241128 09:24:43.465"/>
</kw>
<status status="PASS" starttime="20241128 09:24:42.931" endtime="20241128 09:24:43.466"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.467" endtime="20241128 09:24:43.467"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.466" endtime="20241128 09:24:43.467"/>
</branch>
<status status="PASS" starttime="20241128 09:24:42.931" endtime="20241128 09:24:43.467"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.972" endtime="20241128 09:24:43.468"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.970" endtime="20241128 09:24:43.468"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.470" endtime="20241128 09:24:43.470"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.472" endtime="20241128 09:24:43.472"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.468" endtime="20241128 09:24:43.472"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.473" endtime="20241128 09:24:43.473"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.472" endtime="20241128 09:24:43.473"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.475" endtime="20241128 09:24:43.475"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.473" endtime="20241128 09:24:43.475"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.477" endtime="20241128 09:24:43.477"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.478" endtime="20241128 09:24:43.478"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.477" endtime="20241128 09:24:43.478"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.477" endtime="20241128 09:24:43.478"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.475" endtime="20241128 09:24:43.478"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.480" endtime="20241128 09:24:43.480"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.478" endtime="20241128 09:24:43.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.481" endtime="20241128 09:24:43.481"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.481" endtime="20241128 09:24:43.482"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.481" endtime="20241128 09:24:43.482"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.482" endtime="20241128 09:24:43.482"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.482" endtime="20241128 09:24:43.482"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.481" endtime="20241128 09:24:43.482"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.480" endtime="20241128 09:24:43.482"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:43.488" endtime="20241128 09:24:43.488"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.491" endtime="20241128 09:24:43.491"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.482" endtime="20241128 09:24:43.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.493"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.493"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.493"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.493"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.493"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.493" endtime="20241128 09:24:43.494"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.491" endtime="20241128 09:24:43.494"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:43.498" endtime="20241128 09:24:43.498"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.501" endtime="20241128 09:24:43.501"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.494" endtime="20241128 09:24:43.501"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.502" endtime="20241128 09:24:43.502"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.502" endtime="20241128 09:24:43.502"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.502" endtime="20241128 09:24:43.502"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.503" endtime="20241128 09:24:43.503"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.503" endtime="20241128 09:24:43.503"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.502" endtime="20241128 09:24:43.503"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.501" endtime="20241128 09:24:43.503"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.504" endtime="20241128 09:24:43.505"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.503" endtime="20241128 09:24:43.505"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:43.509" endtime="20241128 09:24:43.509"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.509" endtime="20241128 09:24:43.509"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.505" endtime="20241128 09:24:43.509"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.969" endtime="20241128 09:24:43.509"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:43.510" endtime="20241128 09:24:43.511"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:43.511" endtime="20241128 09:24:43.511"/>
</return>
<msg timestamp="20241128 09:24:43.511" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:41.968" endtime="20241128 09:24:43.511"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.512" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241128 09:24:43.512" endtime="20241128 09:24:43.512"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.513" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:43.512" endtime="20241128 09:24:43.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.513" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:43.513" endtime="20241128 09:24:43.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.513" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.513" endtime="20241128 09:24:43.513"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.514" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:43.514" endtime="20241128 09:24:43.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.514" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.514" endtime="20241128 09:24:43.514"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.515" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:43.514" endtime="20241128 09:24:43.515"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.515" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:43.515" endtime="20241128 09:24:43.515"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:43.515" endtime="20241128 09:24:43.515"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:43.518" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:43.517" endtime="20241128 09:24:43.518"/>
</kw>
<msg timestamp="20241128 09:24:43.518" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.517" endtime="20241128 09:24:43.518"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.518" endtime="20241128 09:24:43.519"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.519"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.519"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.519"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.519"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.519"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.518" endtime="20241128 09:24:43.519"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.518" endtime="20241128 09:24:43.519"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:43.519" endtime="20241128 09:24:43.520"/>
</return>
<msg timestamp="20241128 09:24:43.520" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.516" endtime="20241128 09:24:43.520"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:43.522" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:43.521" endtime="20241128 09:24:43.522"/>
</kw>
<msg timestamp="20241128 09:24:43.522" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.521" endtime="20241128 09:24:43.522"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.522" endtime="20241128 09:24:43.522"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.522" endtime="20241128 09:24:43.523"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.522" endtime="20241128 09:24:43.523"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:43.523" endtime="20241128 09:24:43.523"/>
</return>
<msg timestamp="20241128 09:24:43.524" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:43.521" endtime="20241128 09:24:43.524"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.524"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.524"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.525"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.525"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.525" endtime="20241128 09:24:43.525"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.525"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.524" endtime="20241128 09:24:43.526"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.526"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.526"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.526"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.527"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.527"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.527"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.527" endtime="20241128 09:24:43.527"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:43.527" endtime="20241128 09:24:43.527"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.527" endtime="20241128 09:24:43.527"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:43.527" endtime="20241128 09:24:43.527"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.527"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.526" endtime="20241128 09:24:43.527"/>
</if>
<status status="PASS" starttime="20241128 09:24:43.512" endtime="20241128 09:24:43.527"/>
</iter>
<status status="PASS" starttime="20241128 09:24:43.512" endtime="20241128 09:24:43.527"/>
</for>
<msg timestamp="20241128 09:24:43.528" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:43.511" endtime="20241128 09:24:43.528"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:43.528" endtime="20241128 09:24:43.528"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:43.531" endtime="20241128 09:24:43.532"/>
</kw>
<msg timestamp="20241128 09:24:43.532" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.531" endtime="20241128 09:24:43.532"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.534" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241128 09:24:43.533" endtime="20241128 09:24:43.534"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.535" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.534" endtime="20241128 09:24:43.535"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.534" endtime="20241128 09:24:43.535"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.535" endtime="20241128 09:24:43.535"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.535" endtime="20241128 09:24:43.535"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.534" endtime="20241128 09:24:43.535"/>
</if>
<status status="PASS" starttime="20241128 09:24:43.533" endtime="20241128 09:24:43.535"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.532" endtime="20241128 09:24:43.536"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:43.536" endtime="20241128 09:24:43.536"/>
</return>
<msg timestamp="20241128 09:24:43.536" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.531" endtime="20241128 09:24:43.536"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.536" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241128 09:24:43.536" endtime="20241128 09:24:43.537"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.536" endtime="20241128 09:24:43.537"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.537" endtime="20241128 09:24:43.537"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.537" endtime="20241128 09:24:43.537"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.536" endtime="20241128 09:24:43.537"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:43.538" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '438', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 09:24:43.537" endtime="20241128 09:24:43.538"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:43.539" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "438", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 09:24:43.538" endtime="20241128 09:24:43.539"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:43.568" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:43.568" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:43.539" endtime="20241128 09:24:43.568"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:43.569" endtime="20241128 09:24:43.569"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:43.569" endtime="20241128 09:24:43.570"/>
</return>
<status status="PASS" starttime="20241128 09:24:43.538" endtime="20241128 09:24:43.570"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.528" endtime="20241128 09:24:43.570"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:43.571" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:43.571" endtime="20241128 09:24:43.571"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.965" endtime="20241128 09:24:43.571"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.571" endtime="20241128 09:24:43.571"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:43.572" endtime="20241128 09:24:43.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.572" endtime="20241128 09:24:43.572"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.571" endtime="20241128 09:24:43.572"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.965" endtime="20241128 09:24:43.572"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.965" endtime="20241128 09:24:43.572"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.573" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241128 09:24:43.573" endtime="20241128 09:24:43.573"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:43.573" endtime="20241128 09:24:43.574"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:43.575" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241128 09:24:43.574" endtime="20241128 09:24:43.575"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.575" endtime="20241128 09:24:43.576"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.576" endtime="20241128 09:24:43.576"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.575" endtime="20241128 09:24:43.576"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.575" endtime="20241128 09:24:43.576"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:43.578" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:43.577" endtime="20241128 09:24:43.578"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:43.580" endtime="20241128 09:24:43.580"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.579" endtime="20241128 09:24:43.580"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:43.580" endtime="20241128 09:24:43.580"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.580" endtime="20241128 09:24:43.580"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:43.646" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:43.594" endtime="20241128 09:24:43.646"/>
</kw>
<msg timestamp="20241128 09:24:43.646" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.594" endtime="20241128 09:24:43.646"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.646" endtime="20241128 09:24:43.646"/>
</return>
<status status="PASS" starttime="20241128 09:24:43.593" endtime="20241128 09:24:43.646"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.647" endtime="20241128 09:24:43.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.647" endtime="20241128 09:24:43.647"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.646" endtime="20241128 09:24:43.647"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.593" endtime="20241128 09:24:43.647"/>
</try>
<msg timestamp="20241128 09:24:43.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.592" endtime="20241128 09:24:43.648"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.648" endtime="20241128 09:24:43.648"/>
</return>
<status status="PASS" starttime="20241128 09:24:43.590" endtime="20241128 09:24:43.648"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:43.648" endtime="20241128 09:24:43.648"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:43.648" endtime="20241128 09:24:43.648"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.590" endtime="20241128 09:24:43.648"/>
</try>
<msg timestamp="20241128 09:24:43.649" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.589" endtime="20241128 09:24:43.649"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.654" endtime="20241128 09:24:43.655"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.655" endtime="20241128 09:24:43.655"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.654" endtime="20241128 09:24:43.655"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.654" endtime="20241128 09:24:43.655"/>
</if>
<status status="PASS" starttime="20241128 09:24:43.652" endtime="20241128 09:24:43.656"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.588" endtime="20241128 09:24:43.656"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:43.853" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241128 09:24:43.666" endtime="20241128 09:24:43.853"/>
</kw>
<msg timestamp="20241128 09:24:43.853" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.665" endtime="20241128 09:24:43.853"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.853" endtime="20241128 09:24:43.853"/>
</return>
<status status="PASS" starttime="20241128 09:24:43.664" endtime="20241128 09:24:43.853"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.854" endtime="20241128 09:24:43.854"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.854" endtime="20241128 09:24:43.854"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.853" endtime="20241128 09:24:43.854"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.664" endtime="20241128 09:24:43.854"/>
</try>
<msg timestamp="20241128 09:24:43.855" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.663" endtime="20241128 09:24:43.855"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.855" endtime="20241128 09:24:43.855"/>
</return>
<msg timestamp="20241128 09:24:43.855" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.661" endtime="20241128 09:24:43.856"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.858" endtime="20241128 09:24:43.858"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.859" endtime="20241128 09:24:43.859"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.858" endtime="20241128 09:24:43.859"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.858" endtime="20241128 09:24:43.859"/>
</if>
<status status="PASS" starttime="20241128 09:24:43.857" endtime="20241128 09:24:43.859"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.659" endtime="20241128 09:24:43.859"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:43.902" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:43.867" endtime="20241128 09:24:43.902"/>
</kw>
<msg timestamp="20241128 09:24:43.903" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.867" endtime="20241128 09:24:43.903"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.903" endtime="20241128 09:24:43.903"/>
</return>
<status status="PASS" starttime="20241128 09:24:43.867" endtime="20241128 09:24:43.903"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.903" endtime="20241128 09:24:43.903"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.904" endtime="20241128 09:24:43.904"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.903" endtime="20241128 09:24:43.904"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.866" endtime="20241128 09:24:43.904"/>
</try>
<msg timestamp="20241128 09:24:43.904" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.865" endtime="20241128 09:24:43.904"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:43.904" endtime="20241128 09:24:43.904"/>
</return>
<msg timestamp="20241128 09:24:43.905" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:43.863" endtime="20241128 09:24:43.905"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.907" endtime="20241128 09:24:43.907"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.907" endtime="20241128 09:24:43.907"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.907" endtime="20241128 09:24:43.907"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.907" endtime="20241128 09:24:43.907"/>
</if>
<status status="PASS" starttime="20241128 09:24:43.906" endtime="20241128 09:24:43.907"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.862" endtime="20241128 09:24:43.908"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.586" endtime="20241128 09:24:43.908"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:43.909" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:43.908" endtime="20241128 09:24:43.909"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:43.911" endtime="20241128 09:24:43.911"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:43.911" endtime="20241128 09:24:43.911"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:43.911" endtime="20241128 09:24:43.912"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.911" endtime="20241128 09:24:43.912"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.910" endtime="20241128 09:24:43.912"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:43.912" endtime="20241128 09:24:44.063"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.912" endtime="20241128 09:24:44.063"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.064" endtime="20241128 09:24:44.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.064" endtime="20241128 09:24:44.064"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.064" endtime="20241128 09:24:44.064"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.912" endtime="20241128 09:24:44.064"/>
</try>
<status status="PASS" starttime="20241128 09:24:43.910" endtime="20241128 09:24:44.065"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.909" endtime="20241128 09:24:44.065"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.909" endtime="20241128 09:24:44.065"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.065" endtime="20241128 09:24:44.066"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.065" endtime="20241128 09:24:44.066"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.909" endtime="20241128 09:24:44.066"/>
</try>
<status status="PASS" starttime="20241128 09:24:43.584" endtime="20241128 09:24:44.066"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.581" endtime="20241128 09:24:44.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.070" endtime="20241128 09:24:44.070"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.073" endtime="20241128 09:24:44.073"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.067" endtime="20241128 09:24:44.074"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.076" endtime="20241128 09:24:44.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.074" endtime="20241128 09:24:44.077"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.081" endtime="20241128 09:24:44.081"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.077" endtime="20241128 09:24:44.081"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.084" endtime="20241128 09:24:44.084"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.085" endtime="20241128 09:24:44.085"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.085" endtime="20241128 09:24:44.085"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.085" endtime="20241128 09:24:44.085"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.082" endtime="20241128 09:24:44.085"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.087" endtime="20241128 09:24:44.087"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.086" endtime="20241128 09:24:44.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.088" endtime="20241128 09:24:44.088"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.088" endtime="20241128 09:24:44.088"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.088" endtime="20241128 09:24:44.088"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.089" endtime="20241128 09:24:44.089"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.088" endtime="20241128 09:24:44.089"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.088" endtime="20241128 09:24:44.089"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.087" endtime="20241128 09:24:44.089"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.094" endtime="20241128 09:24:44.094"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.098" endtime="20241128 09:24:44.099"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.089" endtime="20241128 09:24:44.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.102" endtime="20241128 09:24:44.102"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.102" endtime="20241128 09:24:44.102"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.102" endtime="20241128 09:24:44.103"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.103" endtime="20241128 09:24:44.103"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.103" endtime="20241128 09:24:44.103"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.102" endtime="20241128 09:24:44.103"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.099" endtime="20241128 09:24:44.103"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.109" endtime="20241128 09:24:44.109"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.112" endtime="20241128 09:24:44.112"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.103" endtime="20241128 09:24:44.112"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.113" endtime="20241128 09:24:44.113"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.114" endtime="20241128 09:24:44.114"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.113" endtime="20241128 09:24:44.114"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.114" endtime="20241128 09:24:44.114"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.114" endtime="20241128 09:24:44.114"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.113" endtime="20241128 09:24:44.114"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.112" endtime="20241128 09:24:44.114"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.118" endtime="20241128 09:24:44.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.115" endtime="20241128 09:24:44.119"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.125" endtime="20241128 09:24:44.125"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.125" endtime="20241128 09:24:44.125"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.119" endtime="20241128 09:24:44.126"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.578" endtime="20241128 09:24:44.126"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.126" endtime="20241128 09:24:44.127"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:44.127" endtime="20241128 09:24:44.127"/>
</return>
<msg timestamp="20241128 09:24:44.127" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:43.577" endtime="20241128 09:24:44.127"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.128" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241128 09:24:44.128" endtime="20241128 09:24:44.128"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.129" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:44.128" endtime="20241128 09:24:44.129"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.129" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:44.129" endtime="20241128 09:24:44.129"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.129" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.129" endtime="20241128 09:24:44.129"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.130" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:44.130" endtime="20241128 09:24:44.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.130" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.130" endtime="20241128 09:24:44.130"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.131" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:44.130" endtime="20241128 09:24:44.131"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.131" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:44.131" endtime="20241128 09:24:44.131"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.131" endtime="20241128 09:24:44.131"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.137" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.137" endtime="20241128 09:24:44.137"/>
</kw>
<msg timestamp="20241128 09:24:44.138" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.136" endtime="20241128 09:24:44.138"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.138" endtime="20241128 09:24:44.138"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.139" endtime="20241128 09:24:44.139"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.138" endtime="20241128 09:24:44.139"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.139" endtime="20241128 09:24:44.139"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.139" endtime="20241128 09:24:44.139"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.138" endtime="20241128 09:24:44.139"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.138" endtime="20241128 09:24:44.140"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.138" endtime="20241128 09:24:44.140"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.140" endtime="20241128 09:24:44.140"/>
</return>
<msg timestamp="20241128 09:24:44.140" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.135" endtime="20241128 09:24:44.140"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.144" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.143" endtime="20241128 09:24:44.144"/>
</kw>
<msg timestamp="20241128 09:24:44.144" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.142" endtime="20241128 09:24:44.144"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.144" endtime="20241128 09:24:44.145"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.145" endtime="20241128 09:24:44.145"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.145" endtime="20241128 09:24:44.145"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.145" endtime="20241128 09:24:44.145"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.145" endtime="20241128 09:24:44.145"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.145" endtime="20241128 09:24:44.145"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.144" endtime="20241128 09:24:44.146"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.144" endtime="20241128 09:24:44.146"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.146"/>
</return>
<msg timestamp="20241128 09:24:44.146" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.142" endtime="20241128 09:24:44.146"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.147"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.147"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.147"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.147"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.147"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.147"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.147"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.147"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.148"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.148"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.147" endtime="20241128 09:24:44.148"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.148"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.146" endtime="20241128 09:24:44.148"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.148"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.148"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.148"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.150" endtime="20241128 09:24:44.150"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.149" endtime="20241128 09:24:44.150"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.149" endtime="20241128 09:24:44.151"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.151" endtime="20241128 09:24:44.151"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.151" endtime="20241128 09:24:44.151"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.151" endtime="20241128 09:24:44.151"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.151" endtime="20241128 09:24:44.152"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.152"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.148" endtime="20241128 09:24:44.152"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.128" endtime="20241128 09:24:44.152"/>
</iter>
<status status="PASS" starttime="20241128 09:24:44.128" endtime="20241128 09:24:44.152"/>
</for>
<msg timestamp="20241128 09:24:44.152" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:44.127" endtime="20241128 09:24:44.152"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.153" endtime="20241128 09:24:44.153"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.158" endtime="20241128 09:24:44.158"/>
</kw>
<msg timestamp="20241128 09:24:44.158" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.158" endtime="20241128 09:24:44.158"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.159" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241128 09:24:44.159" endtime="20241128 09:24:44.159"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.160" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.160" endtime="20241128 09:24:44.160"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.159" endtime="20241128 09:24:44.160"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.160" endtime="20241128 09:24:44.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.160" endtime="20241128 09:24:44.160"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.159" endtime="20241128 09:24:44.160"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.159" endtime="20241128 09:24:44.160"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.159" endtime="20241128 09:24:44.160"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.160" endtime="20241128 09:24:44.160"/>
</return>
<msg timestamp="20241128 09:24:44.161" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.157" endtime="20241128 09:24:44.161"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.161" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241128 09:24:44.161" endtime="20241128 09:24:44.161"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.161" endtime="20241128 09:24:44.162"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.162" endtime="20241128 09:24:44.162"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.162" endtime="20241128 09:24:44.162"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.161" endtime="20241128 09:24:44.162"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.163" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '439', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241128 09:24:44.162" endtime="20241128 09:24:44.163"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:44.168" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "439", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241128 09:24:44.164" endtime="20241128 09:24:44.168"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:44.213" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:44.213" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:44.169" endtime="20241128 09:24:44.213"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.213" endtime="20241128 09:24:44.214"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:44.214" endtime="20241128 09:24:44.214"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.164" endtime="20241128 09:24:44.214"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.154" endtime="20241128 09:24:44.215"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:44.216" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:44.215" endtime="20241128 09:24:44.216"/>
</kw>
<status status="PASS" starttime="20241128 09:24:43.573" endtime="20241128 09:24:44.216"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.218" endtime="20241128 09:24:44.218"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.218" endtime="20241128 09:24:44.218"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.218" endtime="20241128 09:24:44.218"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.217" endtime="20241128 09:24:44.218"/>
</branch>
<status status="PASS" starttime="20241128 09:24:43.573" endtime="20241128 09:24:44.218"/>
</try>
<status status="PASS" starttime="20241128 09:24:43.573" endtime="20241128 09:24:44.218"/>
</iter>
<status status="PASS" starttime="20241128 09:24:41.964" endtime="20241128 09:24:44.218"/>
</for>
<status status="PASS" starttime="20241128 09:24:41.964" endtime="20241128 09:24:44.219"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.964" endtime="20241128 09:24:44.219"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.222" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '111', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:24:44.221" endtime="20241128 09:24:44.222"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:44.225" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "111", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:24:44.224" endtime="20241128 09:24:44.225"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:44.251" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:44.251" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:44.226" endtime="20241128 09:24:44.251"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.252" endtime="20241128 09:24:44.253"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:44.254" endtime="20241128 09:24:44.254"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.223" endtime="20241128 09:24:44.255"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.219" endtime="20241128 09:24:44.255"/>
</kw>
<status status="PASS" starttime="20241128 09:24:41.958" endtime="20241128 09:24:44.255"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.256" endtime="20241128 09:24:44.256"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.256" endtime="20241128 09:24:44.256"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.256" endtime="20241128 09:24:44.256"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.255" endtime="20241128 09:24:44.257"/>
</branch>
<status status="PASS" starttime="20241128 09:24:41.958" endtime="20241128 09:24:44.257"/>
</try>
<status status="PASS" starttime="20241128 09:24:41.957" endtime="20241128 09:24:44.257"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '16', 'testCaseId': '7', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-26T16:06:17.357Z', 'flow': {'id': '4', 'name': 'Create vehicle', 'projectId': ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.261" level="INFO">${flow} = {'id': '4', 'name': 'Create vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:26.197Z', 'updatedAt': '2024-11-25T12:28:38.155Z', 'flowActionSequences': [{'id': '9', 'actionId': '9', 'flowId':...</msg>
<status status="PASS" starttime="20241128 09:24:44.260" endtime="20241128 09:24:44.261"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.261" endtime="20241128 09:24:44.262"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.269" endtime="20241128 09:24:44.270"/>
</kw>
<msg timestamp="20241128 09:24:44.270" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.268" endtime="20241128 09:24:44.270"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.271" level="INFO">${values} = [{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type...</msg>
<status status="PASS" starttime="20241128 09:24:44.271" endtime="20241128 09:24:44.271"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.273" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.272" endtime="20241128 09:24:44.273"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.272" endtime="20241128 09:24:44.273"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.273" endtime="20241128 09:24:44.274"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.273" endtime="20241128 09:24:44.274"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.272" endtime="20241128 09:24:44.274"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.270" endtime="20241128 09:24:44.274"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.270" endtime="20241128 09:24:44.274"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.274" endtime="20241128 09:24:44.274"/>
</return>
<msg timestamp="20241128 09:24:44.275" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.267" endtime="20241128 09:24:44.275"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.278" level="INFO">${action} = {'id': '9', 'name': 'Click Add vehicle icon', 'type': 'CLICK', 'selectorI': '8', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:44:11.329Z', 'updatedAt': '2024-11-25T10:...</msg>
<status status="PASS" starttime="20241128 09:24:44.277" endtime="20241128 09:24:44.278"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.278" endtime="20241128 09:24:44.279"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:44.279" level="INFO">${input} = {'id': '10', 'actionId': '9', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:44:11.572Z', 'updatedAt': '2024-11-25T10:44:11.572Z'}</msg>
<status status="PASS" starttime="20241128 09:24:44.279" endtime="20241128 09:24:44.279"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.279" endtime="20241128 09:24:44.280"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.280" endtime="20241128 09:24:44.280"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.279" endtime="20241128 09:24:44.280"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.279" endtime="20241128 09:24:44.280"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.281" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:44.281" endtime="20241128 09:24:44.281"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.281" endtime="20241128 09:24:44.282"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.281" endtime="20241128 09:24:44.282"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.284" endtime="20241128 09:24:44.284"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.283" endtime="20241128 09:24:44.284"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.362" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state attached</msg>
<status status="PASS" starttime="20241128 09:24:44.295" endtime="20241128 09:24:44.363"/>
</kw>
<msg timestamp="20241128 09:24:44.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.294" endtime="20241128 09:24:44.363"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.363" endtime="20241128 09:24:44.363"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.294" endtime="20241128 09:24:44.363"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.364" endtime="20241128 09:24:44.364"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.364" endtime="20241128 09:24:44.364"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.363" endtime="20241128 09:24:44.364"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.293" endtime="20241128 09:24:44.364"/>
</try>
<msg timestamp="20241128 09:24:44.364" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.293" endtime="20241128 09:24:44.365"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.365" endtime="20241128 09:24:44.365"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.291" endtime="20241128 09:24:44.365"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.365" endtime="20241128 09:24:44.365"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.365" endtime="20241128 09:24:44.365"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.291" endtime="20241128 09:24:44.365"/>
</try>
<msg timestamp="20241128 09:24:44.366" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.290" endtime="20241128 09:24:44.366"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.370" endtime="20241128 09:24:44.371"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.371" endtime="20241128 09:24:44.371"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.369" endtime="20241128 09:24:44.371"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.369" endtime="20241128 09:24:44.371"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.367" endtime="20241128 09:24:44.371"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.289" endtime="20241128 09:24:44.372"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.387" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state visible</msg>
<status status="PASS" starttime="20241128 09:24:44.377" endtime="20241128 09:24:44.387"/>
</kw>
<msg timestamp="20241128 09:24:44.388" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.376" endtime="20241128 09:24:44.388"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.388" endtime="20241128 09:24:44.388"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.376" endtime="20241128 09:24:44.388"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.388" endtime="20241128 09:24:44.388"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.389" endtime="20241128 09:24:44.389"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.388" endtime="20241128 09:24:44.389"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.376" endtime="20241128 09:24:44.389"/>
</try>
<msg timestamp="20241128 09:24:44.389" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.376" endtime="20241128 09:24:44.389"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.389" endtime="20241128 09:24:44.389"/>
</return>
<msg timestamp="20241128 09:24:44.389" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.374" endtime="20241128 09:24:44.389"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.391" endtime="20241128 09:24:44.391"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.392" endtime="20241128 09:24:44.392"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.391" endtime="20241128 09:24:44.392"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.391" endtime="20241128 09:24:44.392"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.390" endtime="20241128 09:24:44.392"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.373" endtime="20241128 09:24:44.392"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.408" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:44.397" endtime="20241128 09:24:44.408"/>
</kw>
<msg timestamp="20241128 09:24:44.409" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.396" endtime="20241128 09:24:44.409"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.409" endtime="20241128 09:24:44.409"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.396" endtime="20241128 09:24:44.409"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.409" endtime="20241128 09:24:44.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.409" endtime="20241128 09:24:44.409"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.409" endtime="20241128 09:24:44.410"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.396" endtime="20241128 09:24:44.410"/>
</try>
<msg timestamp="20241128 09:24:44.410" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.396" endtime="20241128 09:24:44.410"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.410" endtime="20241128 09:24:44.410"/>
</return>
<msg timestamp="20241128 09:24:44.410" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.394" endtime="20241128 09:24:44.410"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.413" endtime="20241128 09:24:44.413"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.413" endtime="20241128 09:24:44.413"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.412" endtime="20241128 09:24:44.413"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.412" endtime="20241128 09:24:44.413"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.411" endtime="20241128 09:24:44.413"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.394" endtime="20241128 09:24:44.413"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.287" endtime="20241128 09:24:44.414"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.414" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:44.414" endtime="20241128 09:24:44.414"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.416" endtime="20241128 09:24:44.416"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.416" endtime="20241128 09:24:44.417"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.417" endtime="20241128 09:24:44.417"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.417" endtime="20241128 09:24:44.417"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.416" endtime="20241128 09:24:44.417"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:44.418" endtime="20241128 09:24:44.507"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.418" endtime="20241128 09:24:44.507"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.508" endtime="20241128 09:24:44.508"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.508" endtime="20241128 09:24:44.508"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.507" endtime="20241128 09:24:44.508"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.417" endtime="20241128 09:24:44.508"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.415" endtime="20241128 09:24:44.509"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.414" endtime="20241128 09:24:44.509"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.414" endtime="20241128 09:24:44.509"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.509" endtime="20241128 09:24:44.509"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.509" endtime="20241128 09:24:44.509"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.414" endtime="20241128 09:24:44.510"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.286" endtime="20241128 09:24:44.510"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.285" endtime="20241128 09:24:44.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.512" endtime="20241128 09:24:44.513"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.516" endtime="20241128 09:24:44.516"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.510" endtime="20241128 09:24:44.516"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.518" endtime="20241128 09:24:44.518"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.516" endtime="20241128 09:24:44.518"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.521" endtime="20241128 09:24:44.521"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.518" endtime="20241128 09:24:44.521"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.523" endtime="20241128 09:24:44.523"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.523" endtime="20241128 09:24:44.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.523" endtime="20241128 09:24:44.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.523" endtime="20241128 09:24:44.524"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.521" endtime="20241128 09:24:44.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.525" endtime="20241128 09:24:44.525"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.524" endtime="20241128 09:24:44.525"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.526" endtime="20241128 09:24:44.526"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.526" endtime="20241128 09:24:44.526"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.526" endtime="20241128 09:24:44.526"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.527" endtime="20241128 09:24:44.527"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.527" endtime="20241128 09:24:44.527"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.526" endtime="20241128 09:24:44.527"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.525" endtime="20241128 09:24:44.527"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.532" endtime="20241128 09:24:44.532"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.535" endtime="20241128 09:24:44.535"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.527" endtime="20241128 09:24:44.535"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.536" endtime="20241128 09:24:44.536"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.536" endtime="20241128 09:24:44.536"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.536" endtime="20241128 09:24:44.536"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.537" endtime="20241128 09:24:44.537"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.537" endtime="20241128 09:24:44.537"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.536" endtime="20241128 09:24:44.537"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.535" endtime="20241128 09:24:44.537"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.542" endtime="20241128 09:24:44.542"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.545" endtime="20241128 09:24:44.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.537" endtime="20241128 09:24:44.546"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.548" endtime="20241128 09:24:44.548"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.549" endtime="20241128 09:24:44.550"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.549" endtime="20241128 09:24:44.550"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.550" endtime="20241128 09:24:44.550"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.550" endtime="20241128 09:24:44.551"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.549" endtime="20241128 09:24:44.551"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.546" endtime="20241128 09:24:44.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.553" endtime="20241128 09:24:44.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.551" endtime="20241128 09:24:44.553"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.559" endtime="20241128 09:24:44.560"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.560" endtime="20241128 09:24:44.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.554" endtime="20241128 09:24:44.560"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.281" endtime="20241128 09:24:44.560"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.561" endtime="20241128 09:24:44.562"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:44.563" endtime="20241128 09:24:44.563"/>
</return>
<msg timestamp="20241128 09:24:44.563" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:44.280" endtime="20241128 09:24:44.563"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.566" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:9</msg>
<status status="PASS" starttime="20241128 09:24:44.566" endtime="20241128 09:24:44.566"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.567" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:44.567" endtime="20241128 09:24:44.567"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.568" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:44.567" endtime="20241128 09:24:44.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.568" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.568" endtime="20241128 09:24:44.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.568" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:44.568" endtime="20241128 09:24:44.568"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.569" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.569" endtime="20241128 09:24:44.569"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.569" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:44.569" endtime="20241128 09:24:44.569"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.570" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:44.569" endtime="20241128 09:24:44.570"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.570" endtime="20241128 09:24:44.570"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.572" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.572" endtime="20241128 09:24:44.572"/>
</kw>
<msg timestamp="20241128 09:24:44.572" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.572" endtime="20241128 09:24:44.572"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.573"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.573"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.574" endtime="20241128 09:24:44.574"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.574"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.574"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.574"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.573" endtime="20241128 09:24:44.574"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.574" endtime="20241128 09:24:44.574"/>
</return>
<msg timestamp="20241128 09:24:44.574" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.571" endtime="20241128 09:24:44.574"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.577" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.576" endtime="20241128 09:24:44.577"/>
</kw>
<msg timestamp="20241128 09:24:44.577" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.576" endtime="20241128 09:24:44.577"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.577" endtime="20241128 09:24:44.577"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.578" endtime="20241128 09:24:44.578"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.577" endtime="20241128 09:24:44.578"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.578" endtime="20241128 09:24:44.578"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.578" endtime="20241128 09:24:44.578"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.577" endtime="20241128 09:24:44.578"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.577" endtime="20241128 09:24:44.578"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.577" endtime="20241128 09:24:44.578"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.578" endtime="20241128 09:24:44.578"/>
</return>
<msg timestamp="20241128 09:24:44.579" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.575" endtime="20241128 09:24:44.579"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.579"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.579"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.579"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.580"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.580"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.580" endtime="20241128 09:24:44.580"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.581"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.579" endtime="20241128 09:24:44.581"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.581"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.581"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.581"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.582" endtime="20241128 09:24:44.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.582"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.582"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.582" endtime="20241128 09:24:44.582"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.583" endtime="20241128 09:24:44.583"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.582" endtime="20241128 09:24:44.583"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.582" endtime="20241128 09:24:44.583"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.583"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.581" endtime="20241128 09:24:44.583"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.567" endtime="20241128 09:24:44.583"/>
</iter>
<status status="PASS" starttime="20241128 09:24:44.566" endtime="20241128 09:24:44.583"/>
</for>
<msg timestamp="20241128 09:24:44.583" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:44.563" endtime="20241128 09:24:44.583"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.584" endtime="20241128 09:24:44.584"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.588" endtime="20241128 09:24:44.588"/>
</kw>
<msg timestamp="20241128 09:24:44.588" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.587" endtime="20241128 09:24:44.588"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.589" level="INFO">${values} = {'id': '8', 'name': 'Add vehicle icon', 'xpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T10:44:06.334Z', 'updatedAt': '2024-11-25T10:44:06...</msg>
<status status="PASS" starttime="20241128 09:24:44.588" endtime="20241128 09:24:44.589"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.589" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.589" endtime="20241128 09:24:44.589"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.589" endtime="20241128 09:24:44.589"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.590" endtime="20241128 09:24:44.590"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.590" endtime="20241128 09:24:44.590"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.589" endtime="20241128 09:24:44.590"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.588" endtime="20241128 09:24:44.590"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.588" endtime="20241128 09:24:44.590"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.590" endtime="20241128 09:24:44.590"/>
</return>
<msg timestamp="20241128 09:24:44.590" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.587" endtime="20241128 09:24:44.590"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.591" level="INFO">${xpath} = //p[text()="VEHICLE"]//parent::div//following-sibling::img</msg>
<status status="PASS" starttime="20241128 09:24:44.591" endtime="20241128 09:24:44.591"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.591" endtime="20241128 09:24:44.591"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.591" endtime="20241128 09:24:44.591"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.591" endtime="20241128 09:24:44.591"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.590" endtime="20241128 09:24:44.591"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.592" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '440', 'status': 'COMPLETED', 'actionName': 'Click Add vehicle icon', 'actionType': 'CLICK', 'actionXpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img'...</msg>
<status status="PASS" starttime="20241128 09:24:44.592" endtime="20241128 09:24:44.592"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:44.593" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "440", "status": "COMPLETED", "actionName": "Click Add vehicle icon", "actionType": "CLICK", "actionXpath": "//p[text()=\"VEHICLE\"]//parent::div//following-sibling::im...</msg>
<status status="PASS" starttime="20241128 09:24:44.593" endtime="20241128 09:24:44.593"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:44.630" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:44.630" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:44.594" endtime="20241128 09:24:44.630"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.631" endtime="20241128 09:24:44.632"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:44.632" endtime="20241128 09:24:44.632"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.593" endtime="20241128 09:24:44.633"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.584" endtime="20241128 09:24:44.633"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:44.635" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:44.634" endtime="20241128 09:24:44.635"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.277" endtime="20241128 09:24:44.635"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.636" endtime="20241128 09:24:44.636"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.636" endtime="20241128 09:24:44.636"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.637" endtime="20241128 09:24:44.637"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.635" endtime="20241128 09:24:44.637"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.277" endtime="20241128 09:24:44.637"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.276" endtime="20241128 09:24:44.637"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '10', 'actionId': '10', 'flowId': '4', 'order': 1, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.853Z', 'action': {'id': '10', 'name': 'Is vehicle details popup fou...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.638" level="INFO">${action} = {'id': '10', 'name': 'Is vehicle details popup found', 'type': 'IS_ELEMENT_VISIBLE', 'selectorI': '9', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:46:45.996Z', 'updat...</msg>
<status status="PASS" starttime="20241128 09:24:44.638" endtime="20241128 09:24:44.640"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.640" endtime="20241128 09:24:44.640"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:44.642" level="INFO">${input} = {'id': '11', 'actionId': '10', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:46:46.217Z', 'updatedAt': '2024-11-25T10:46:46.217Z'}</msg>
<status status="PASS" starttime="20241128 09:24:44.640" endtime="20241128 09:24:44.642"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.643" endtime="20241128 09:24:44.643"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.644" endtime="20241128 09:24:44.644"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.642" endtime="20241128 09:24:44.644"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.642" endtime="20241128 09:24:44.644"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.646" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:44.646" endtime="20241128 09:24:44.647"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.649" endtime="20241128 09:24:44.649"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.648" endtime="20241128 09:24:44.649"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.650" endtime="20241128 09:24:44.651"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.650" endtime="20241128 09:24:44.651"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.656" endtime="20241128 09:24:44.656"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.652" endtime="20241128 09:24:44.656"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.661" endtime="20241128 09:24:44.661"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.665" endtime="20241128 09:24:44.665"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.657" endtime="20241128 09:24:44.666"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.668" endtime="20241128 09:24:44.668"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.666" endtime="20241128 09:24:44.669"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.674" endtime="20241128 09:24:44.674"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.669" endtime="20241128 09:24:44.674"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.678" endtime="20241128 09:24:44.678"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.679" endtime="20241128 09:24:44.679"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.678" endtime="20241128 09:24:44.679"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.678" endtime="20241128 09:24:44.679"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.675" endtime="20241128 09:24:44.679"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.682" endtime="20241128 09:24:44.683"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.680" endtime="20241128 09:24:44.683"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.686" endtime="20241128 09:24:44.686"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.686" endtime="20241128 09:24:44.686"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.686" endtime="20241128 09:24:44.687"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.687" endtime="20241128 09:24:44.687"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.687" endtime="20241128 09:24:44.687"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.686" endtime="20241128 09:24:44.687"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.684" endtime="20241128 09:24:44.687"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.693" endtime="20241128 09:24:44.693"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.696" endtime="20241128 09:24:44.696"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.688" endtime="20241128 09:24:44.696"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.697" endtime="20241128 09:24:44.698"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.698" endtime="20241128 09:24:44.698"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.698" endtime="20241128 09:24:44.698"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.699" endtime="20241128 09:24:44.699"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.699" endtime="20241128 09:24:44.699"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.698" endtime="20241128 09:24:44.699"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.696" endtime="20241128 09:24:44.699"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:44.704" endtime="20241128 09:24:44.704"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.706" endtime="20241128 09:24:44.706"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.700" endtime="20241128 09:24:44.707"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.717" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:44.711" endtime="20241128 09:24:44.717"/>
</kw>
<msg timestamp="20241128 09:24:44.717" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.710" endtime="20241128 09:24:44.717"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.717" endtime="20241128 09:24:44.718"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.710" endtime="20241128 09:24:44.718"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.718" endtime="20241128 09:24:44.718"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.718" endtime="20241128 09:24:44.718"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.718" endtime="20241128 09:24:44.718"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.710" endtime="20241128 09:24:44.718"/>
</try>
<msg timestamp="20241128 09:24:44.718" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.709" endtime="20241128 09:24:44.718"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.719"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.708" endtime="20241128 09:24:44.719"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.719"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.719"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.708" endtime="20241128 09:24:44.719"/>
</try>
<msg timestamp="20241128 09:24:44.719" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.708" endtime="20241128 09:24:44.719"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.720" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.720"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.720"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.720" endtime="20241128 09:24:44.720"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.720" endtime="20241128 09:24:44.720"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.719" endtime="20241128 09:24:44.720"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.707" endtime="20241128 09:24:44.720"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.722" endtime="20241128 09:24:44.722"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.720" endtime="20241128 09:24:44.722"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.726" endtime="20241128 09:24:44.726"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.726" endtime="20241128 09:24:44.727"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.722" endtime="20241128 09:24:44.727"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.647" endtime="20241128 09:24:44.727"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.727" endtime="20241128 09:24:44.728"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:44.728" endtime="20241128 09:24:44.728"/>
</return>
<msg timestamp="20241128 09:24:44.728" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241128 09:24:44.645" endtime="20241128 09:24:44.728"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.729" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:10</msg>
<status status="PASS" starttime="20241128 09:24:44.729" endtime="20241128 09:24:44.729"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.730" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:44.729" endtime="20241128 09:24:44.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.730" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:44.730" endtime="20241128 09:24:44.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.730" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.730" endtime="20241128 09:24:44.730"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.731" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:44.730" endtime="20241128 09:24:44.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.731" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.731" endtime="20241128 09:24:44.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.732" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:44.731" endtime="20241128 09:24:44.732"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.732" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:44.732" endtime="20241128 09:24:44.732"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.732" endtime="20241128 09:24:44.733"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.735" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.734" endtime="20241128 09:24:44.735"/>
</kw>
<msg timestamp="20241128 09:24:44.735" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.734" endtime="20241128 09:24:44.735"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.735" endtime="20241128 09:24:44.735"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.735" endtime="20241128 09:24:44.736"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.735" endtime="20241128 09:24:44.736"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.736" endtime="20241128 09:24:44.736"/>
</return>
<msg timestamp="20241128 09:24:44.737" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.734" endtime="20241128 09:24:44.737"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:44.739" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:44.738" endtime="20241128 09:24:44.739"/>
</kw>
<msg timestamp="20241128 09:24:44.739" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.738" endtime="20241128 09:24:44.739"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.739" endtime="20241128 09:24:44.739"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.740" endtime="20241128 09:24:44.740"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.739" endtime="20241128 09:24:44.740"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.740" endtime="20241128 09:24:44.740"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.740" endtime="20241128 09:24:44.740"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.739" endtime="20241128 09:24:44.741"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.739" endtime="20241128 09:24:44.741"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.739" endtime="20241128 09:24:44.741"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.741" endtime="20241128 09:24:44.741"/>
</return>
<msg timestamp="20241128 09:24:44.741" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:44.738" endtime="20241128 09:24:44.741"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.742"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.742"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.742"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.742"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.743"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.743"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.743"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.743"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.743"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.743"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.743"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.743"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.742" endtime="20241128 09:24:44.743"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.744"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.745"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.745"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:44.744" endtime="20241128 09:24:44.745"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.745"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.743" endtime="20241128 09:24:44.745"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.729" endtime="20241128 09:24:44.745"/>
</iter>
<status status="PASS" starttime="20241128 09:24:44.729" endtime="20241128 09:24:44.745"/>
</for>
<msg timestamp="20241128 09:24:44.745" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:44.728" endtime="20241128 09:24:44.745"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.745" endtime="20241128 09:24:44.746"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.749" endtime="20241128 09:24:44.750"/>
</kw>
<msg timestamp="20241128 09:24:44.750" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.749" endtime="20241128 09:24:44.750"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.750" level="INFO">${values} = {'id': '9', 'name': 'Add Vehicle popup heading', 'xpath': '//h6[text()="Add Vehicle Details"]', 'pageId': '3', 'createdAt': '2024-11-25T10:46:44.506Z', 'updatedAt': '2024-11-25T10:46:44.506Z'}</msg>
<status status="PASS" starttime="20241128 09:24:44.750" endtime="20241128 09:24:44.750"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.751" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.751" endtime="20241128 09:24:44.751"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.751" endtime="20241128 09:24:44.751"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.751" endtime="20241128 09:24:44.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.751" endtime="20241128 09:24:44.751"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.751" endtime="20241128 09:24:44.751"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.750" endtime="20241128 09:24:44.751"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.750" endtime="20241128 09:24:44.751"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:44.752" endtime="20241128 09:24:44.752"/>
</return>
<msg timestamp="20241128 09:24:44.752" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.749" endtime="20241128 09:24:44.752"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.752" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]</msg>
<status status="PASS" starttime="20241128 09:24:44.752" endtime="20241128 09:24:44.752"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.752" endtime="20241128 09:24:44.752"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.753" endtime="20241128 09:24:44.753"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.752" endtime="20241128 09:24:44.753"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.752" endtime="20241128 09:24:44.753"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.754" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '441', 'status': 'COMPLETED', 'actionName': 'Is vehicle details popup found', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h6[text()="Add Vehicle Details"]', '...</msg>
<status status="PASS" starttime="20241128 09:24:44.753" endtime="20241128 09:24:44.754"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:44.754" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "441", "status": "COMPLETED", "actionName": "Is vehicle details popup found", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]",...</msg>
<status status="PASS" starttime="20241128 09:24:44.754" endtime="20241128 09:24:44.754"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:44.791" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:44.791" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:44.755" endtime="20241128 09:24:44.791"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.792" endtime="20241128 09:24:44.793"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:44.793" endtime="20241128 09:24:44.793"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.754" endtime="20241128 09:24:44.794"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.746" endtime="20241128 09:24:44.794"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:44.795" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:44.794" endtime="20241128 09:24:44.795"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.638" endtime="20241128 09:24:44.795"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.796" endtime="20241128 09:24:44.796"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.796" endtime="20241128 09:24:44.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.796" endtime="20241128 09:24:44.797"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.795" endtime="20241128 09:24:44.797"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.638" endtime="20241128 09:24:44.797"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.638" endtime="20241128 09:24:44.797"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '11', 'actionId': '11', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.858Z', 'action': {'id': '11', 'name': 'Enter Vehicle type', 'type':...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.800" level="INFO">${action} = {'id': '11', 'name': 'Enter Vehicle type', 'type': 'TYPE_TEXT', 'selectorI': '10', 'valueRege': '', 'projectId': '1', 'enter': True, 'createdAt': '2024-11-25T10:49:11.179Z', 'updatedAt': '2024-11-25T1...</msg>
<status status="PASS" starttime="20241128 09:24:44.798" endtime="20241128 09:24:44.800"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:44.800" endtime="20241128 09:24:44.801"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:44.803" level="INFO">${input} = {'id': '12', 'actionId': '11', 'name': 'Two wheeler', 'value': '2 Wheeler', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:49:11.397Z', 'updatedAt': '2024-11-25T12:27:35.774Z'}</msg>
<status status="PASS" starttime="20241128 09:24:44.802" endtime="20241128 09:24:44.803"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.804" endtime="20241128 09:24:44.804"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.804" endtime="20241128 09:24:44.804"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.803" endtime="20241128 09:24:44.804"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.803" endtime="20241128 09:24:44.805"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:44.806" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241128 09:24:44.806" endtime="20241128 09:24:44.806"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.807" endtime="20241128 09:24:44.807"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.807" endtime="20241128 09:24:44.807"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:44.808" endtime="20241128 09:24:44.808"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.808" endtime="20241128 09:24:44.808"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.813" endtime="20241128 09:24:44.813"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.809" endtime="20241128 09:24:44.813"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.819" endtime="20241128 09:24:44.820"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.823" endtime="20241128 09:24:44.823"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.813" endtime="20241128 09:24:44.824"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.826" endtime="20241128 09:24:44.827"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.824" endtime="20241128 09:24:44.827"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.834" endtime="20241128 09:24:44.834"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.827" endtime="20241128 09:24:44.834"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.859" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241128 09:24:44.851" endtime="20241128 09:24:44.860"/>
</kw>
<msg timestamp="20241128 09:24:44.860" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.850" endtime="20241128 09:24:44.860"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.860" endtime="20241128 09:24:44.860"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.850" endtime="20241128 09:24:44.860"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.861" endtime="20241128 09:24:44.861"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.862" endtime="20241128 09:24:44.862"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.861" endtime="20241128 09:24:44.862"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.850" endtime="20241128 09:24:44.862"/>
</try>
<msg timestamp="20241128 09:24:44.863" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.848" endtime="20241128 09:24:44.863"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.863" endtime="20241128 09:24:44.863"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.846" endtime="20241128 09:24:44.863"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.864" endtime="20241128 09:24:44.864"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.863" endtime="20241128 09:24:44.864"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.845" endtime="20241128 09:24:44.864"/>
</try>
<msg timestamp="20241128 09:24:44.865" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.845" endtime="20241128 09:24:44.865"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.870" endtime="20241128 09:24:44.871"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.871" endtime="20241128 09:24:44.871"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.870" endtime="20241128 09:24:44.871"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.870" endtime="20241128 09:24:44.871"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.868" endtime="20241128 09:24:44.872"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.844" endtime="20241128 09:24:44.872"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.898" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241128 09:24:44.889" endtime="20241128 09:24:44.898"/>
</kw>
<msg timestamp="20241128 09:24:44.899" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.889" endtime="20241128 09:24:44.899"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.899" endtime="20241128 09:24:44.899"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.888" endtime="20241128 09:24:44.899"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.900" endtime="20241128 09:24:44.900"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.900" endtime="20241128 09:24:44.900"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.899" endtime="20241128 09:24:44.900"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.888" endtime="20241128 09:24:44.900"/>
</try>
<msg timestamp="20241128 09:24:44.901" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.888" endtime="20241128 09:24:44.901"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.901" endtime="20241128 09:24:44.901"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.885" endtime="20241128 09:24:44.901"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:44.901" endtime="20241128 09:24:44.901"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:44.901" endtime="20241128 09:24:44.901"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.885" endtime="20241128 09:24:44.902"/>
</try>
<msg timestamp="20241128 09:24:44.902" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.885" endtime="20241128 09:24:44.902"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.905" endtime="20241128 09:24:44.905"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.905" endtime="20241128 09:24:44.905"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.905" endtime="20241128 09:24:44.905"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.904" endtime="20241128 09:24:44.905"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.903" endtime="20241128 09:24:44.906"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.884" endtime="20241128 09:24:44.906"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:24:44.919" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:24:44.919" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:44.906" endtime="20241128 09:24:44.919"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:24:44.919" endtime="20241128 09:24:44.919"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.906" endtime="20241128 09:24:44.919"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.919" endtime="20241128 09:24:44.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.920" endtime="20241128 09:24:44.920"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.919" endtime="20241128 09:24:44.920"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.906" endtime="20241128 09:24:44.920"/>
</try>
<msg timestamp="20241128 09:24:44.920" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:44.879" endtime="20241128 09:24:44.920"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.922" endtime="20241128 09:24:44.922"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.922" endtime="20241128 09:24:44.922"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.922" endtime="20241128 09:24:44.922"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.922" endtime="20241128 09:24:44.922"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.921" endtime="20241128 09:24:44.922"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.876" endtime="20241128 09:24:44.922"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.923" endtime="20241128 09:24:44.923"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.923" endtime="20241128 09:24:44.923"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.876" endtime="20241128 09:24:44.923"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.875" endtime="20241128 09:24:44.923"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.933" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state visible</msg>
<status status="PASS" starttime="20241128 09:24:44.927" endtime="20241128 09:24:44.934"/>
</kw>
<msg timestamp="20241128 09:24:44.934" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.927" endtime="20241128 09:24:44.934"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.934" endtime="20241128 09:24:44.934"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.927" endtime="20241128 09:24:44.934"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.934" endtime="20241128 09:24:44.934"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.935" endtime="20241128 09:24:44.935"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.934" endtime="20241128 09:24:44.935"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.927" endtime="20241128 09:24:44.935"/>
</try>
<msg timestamp="20241128 09:24:44.935" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.926" endtime="20241128 09:24:44.935"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.935" endtime="20241128 09:24:44.935"/>
</return>
<msg timestamp="20241128 09:24:44.935" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.925" endtime="20241128 09:24:44.935"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.937" endtime="20241128 09:24:44.937"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.937" endtime="20241128 09:24:44.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.937" endtime="20241128 09:24:44.938"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.937" endtime="20241128 09:24:44.938"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.936" endtime="20241128 09:24:44.938"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.925" endtime="20241128 09:24:44.938"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.840" endtime="20241128 09:24:44.938"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:44.955" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state editable</msg>
<status status="PASS" starttime="20241128 09:24:44.941" endtime="20241128 09:24:44.955"/>
</kw>
<msg timestamp="20241128 09:24:44.955" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.941" endtime="20241128 09:24:44.955"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.955" endtime="20241128 09:24:44.955"/>
</return>
<status status="PASS" starttime="20241128 09:24:44.941" endtime="20241128 09:24:44.955"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.956" endtime="20241128 09:24:44.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.956" endtime="20241128 09:24:44.956"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.956" endtime="20241128 09:24:44.956"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.941" endtime="20241128 09:24:44.956"/>
</try>
<msg timestamp="20241128 09:24:44.956" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.941" endtime="20241128 09:24:44.956"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:44.956" endtime="20241128 09:24:44.957"/>
</return>
<msg timestamp="20241128 09:24:44.957" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:24:44.940" endtime="20241128 09:24:44.957"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.959" endtime="20241128 09:24:44.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.959" endtime="20241128 09:24:44.959"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.958" endtime="20241128 09:24:44.959"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.958" endtime="20241128 09:24:44.959"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.958" endtime="20241128 09:24:44.959"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.939" endtime="20241128 09:24:44.959"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:44.960" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:44.959" endtime="20241128 09:24:44.960"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.961" endtime="20241128 09:24:44.961"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.962" endtime="20241128 09:24:44.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.961" endtime="20241128 09:24:44.963"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:44.963" endtime="20241128 09:24:44.963"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.963" endtime="20241128 09:24:44.963"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.961" endtime="20241128 09:24:44.963"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:24:44.964" level="INFO">Fills the text '2 Wheeler' in the given field.</msg>
<status status="PASS" starttime="20241128 09:24:44.963" endtime="20241128 09:24:44.997"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.963" endtime="20241128 09:24:44.997"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.997" endtime="20241128 09:24:44.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:44.998" endtime="20241128 09:24:44.998"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.997" endtime="20241128 09:24:44.998"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.963" endtime="20241128 09:24:44.998"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.960" endtime="20241128 09:24:44.999"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.960" endtime="20241128 09:24:44.999"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.960" endtime="20241128 09:24:44.999"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.000" endtime="20241128 09:24:45.000"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:44.999" endtime="20241128 09:24:45.000"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.960" endtime="20241128 09:24:45.000"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.838" endtime="20241128 09:24:45.000"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20241128 09:24:45.001" endtime="20241128 09:24:45.020"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.001" endtime="20241128 09:24:45.020"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.000" endtime="20241128 09:24:45.021"/>
</if>
<status status="PASS" starttime="20241128 09:24:44.834" endtime="20241128 09:24:45.021"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.023" endtime="20241128 09:24:45.023"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.021" endtime="20241128 09:24:45.023"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.024" endtime="20241128 09:24:45.024"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.025" endtime="20241128 09:24:45.025"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.025" endtime="20241128 09:24:45.025"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.025" endtime="20241128 09:24:45.025"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.025" endtime="20241128 09:24:45.025"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.024" endtime="20241128 09:24:45.025"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.023" endtime="20241128 09:24:45.026"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.031" endtime="20241128 09:24:45.031"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.036" endtime="20241128 09:24:45.036"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.026" endtime="20241128 09:24:45.036"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.037"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.037"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.037"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.037"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.038"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.037" endtime="20241128 09:24:45.038"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.036" endtime="20241128 09:24:45.038"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.042" endtime="20241128 09:24:45.042"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.044" endtime="20241128 09:24:45.044"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.038" endtime="20241128 09:24:45.044"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.045" endtime="20241128 09:24:45.045"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.045" endtime="20241128 09:24:45.045"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.045" endtime="20241128 09:24:45.046"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.046" endtime="20241128 09:24:45.046"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.046" endtime="20241128 09:24:45.046"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.045" endtime="20241128 09:24:45.046"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.044" endtime="20241128 09:24:45.046"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.049" endtime="20241128 09:24:45.049"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.046" endtime="20241128 09:24:45.049"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.054" endtime="20241128 09:24:45.054"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.054" endtime="20241128 09:24:45.054"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.049" endtime="20241128 09:24:45.054"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.806" endtime="20241128 09:24:45.054"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.055" endtime="20241128 09:24:45.056"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:45.056" endtime="20241128 09:24:45.056"/>
</return>
<msg timestamp="20241128 09:24:45.056" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241128 09:24:44.805" endtime="20241128 09:24:45.056"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.057" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:11</msg>
<status status="PASS" starttime="20241128 09:24:45.057" endtime="20241128 09:24:45.057"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.058" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.058" endtime="20241128 09:24:45.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.058" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.058" endtime="20241128 09:24:45.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.058" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.058" endtime="20241128 09:24:45.058"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.059" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:45.059" endtime="20241128 09:24:45.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.059" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.059" endtime="20241128 09:24:45.059"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.060" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.059" endtime="20241128 09:24:45.060"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.060" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:45.060" endtime="20241128 09:24:45.060"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.060" endtime="20241128 09:24:45.060"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:45.062" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:45.062" endtime="20241128 09:24:45.062"/>
</kw>
<msg timestamp="20241128 09:24:45.062" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.062" endtime="20241128 09:24:45.062"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.063" endtime="20241128 09:24:45.063"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.063" endtime="20241128 09:24:45.064"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.063" endtime="20241128 09:24:45.064"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.064" endtime="20241128 09:24:45.064"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.064" endtime="20241128 09:24:45.064"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.063" endtime="20241128 09:24:45.064"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.063" endtime="20241128 09:24:45.064"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.062" endtime="20241128 09:24:45.064"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.064" endtime="20241128 09:24:45.065"/>
</return>
<msg timestamp="20241128 09:24:45.065" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.061" endtime="20241128 09:24:45.065"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:45.068" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241128 09:24:45.067" endtime="20241128 09:24:45.068"/>
</kw>
<msg timestamp="20241128 09:24:45.068" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.067" endtime="20241128 09:24:45.068"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.069"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.069"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.069"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.069"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.069"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.069" endtime="20241128 09:24:45.070"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.068" endtime="20241128 09:24:45.070"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.068" endtime="20241128 09:24:45.070"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.070"/>
</return>
<msg timestamp="20241128 09:24:45.070" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.067" endtime="20241128 09:24:45.070"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.070"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.071"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.071"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.071"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.072"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.071" endtime="20241128 09:24:45.072"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.072"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.070" endtime="20241128 09:24:45.072"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.072"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.072"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.072"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.073" endtime="20241128 09:24:45.073"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.073"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.073"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.073" endtime="20241128 09:24:45.073"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.073" endtime="20241128 09:24:45.073"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.073" endtime="20241128 09:24:45.073"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.073" endtime="20241128 09:24:45.073"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.073"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.072" endtime="20241128 09:24:45.073"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.057" endtime="20241128 09:24:45.073"/>
</iter>
<status status="PASS" starttime="20241128 09:24:45.057" endtime="20241128 09:24:45.074"/>
</for>
<msg timestamp="20241128 09:24:45.074" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:45.056" endtime="20241128 09:24:45.074"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.074" endtime="20241128 09:24:45.074"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.077" endtime="20241128 09:24:45.078"/>
</kw>
<msg timestamp="20241128 09:24:45.078" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.077" endtime="20241128 09:24:45.078"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.078" level="INFO">${values} = {'id': '10', 'name': 'Vehicle type', 'xpath': '//div[text()="Select vehicle type"]//following-sibling::div/input', 'pageId': '3', 'createdAt': '2024-11-25T10:49:09.637Z', 'updatedAt': '2024-11-25T11:1...</msg>
<status status="PASS" starttime="20241128 09:24:45.078" endtime="20241128 09:24:45.078"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.079" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.079" endtime="20241128 09:24:45.079"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.079" endtime="20241128 09:24:45.079"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.079" endtime="20241128 09:24:45.079"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.079" endtime="20241128 09:24:45.079"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.078" endtime="20241128 09:24:45.079"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.078" endtime="20241128 09:24:45.079"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.078" endtime="20241128 09:24:45.080"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.080" endtime="20241128 09:24:45.080"/>
</return>
<msg timestamp="20241128 09:24:45.080" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.077" endtime="20241128 09:24:45.080"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.080" level="INFO">${xpath} = //div[text()="Select vehicle type"]//following-sibling::div/input</msg>
<status status="PASS" starttime="20241128 09:24:45.080" endtime="20241128 09:24:45.080"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.080" endtime="20241128 09:24:45.080"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.081" endtime="20241128 09:24:45.081"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.080" endtime="20241128 09:24:45.081"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.080" endtime="20241128 09:24:45.081"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.083" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '442', 'status': 'COMPLETED', 'actionName': 'Enter Vehicle type', 'actionType': 'TYPE_TEXT', 'actionXpath': '//div[text()="Select vehicle type"]//following-sibling::div...</msg>
<status status="PASS" starttime="20241128 09:24:45.081" endtime="20241128 09:24:45.083"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.085" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "442", "status": "COMPLETED", "actionName": "Enter Vehicle type", "actionType": "TYPE_TEXT", "actionXpath": "//div[text()=\"Select vehicle type\"]//following-sibling::d...</msg>
<status status="PASS" starttime="20241128 09:24:45.084" endtime="20241128 09:24:45.085"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:45.115" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:45.115" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.085" endtime="20241128 09:24:45.115"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.116" endtime="20241128 09:24:45.117"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:45.117" endtime="20241128 09:24:45.117"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.084" endtime="20241128 09:24:45.117"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.075" endtime="20241128 09:24:45.117"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:45.118" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:45.117" endtime="20241128 09:24:45.118"/>
</kw>
<status status="PASS" starttime="20241128 09:24:44.798" endtime="20241128 09:24:45.118"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.118" endtime="20241128 09:24:45.118"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.118" endtime="20241128 09:24:45.119"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.119" endtime="20241128 09:24:45.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.118" endtime="20241128 09:24:45.119"/>
</branch>
<status status="PASS" starttime="20241128 09:24:44.798" endtime="20241128 09:24:45.119"/>
</try>
<status status="PASS" starttime="20241128 09:24:44.798" endtime="20241128 09:24:45.119"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '13', 'actionId': '12', 'flowId': '4', 'order': 3, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.860Z', 'action': {'id': '12', 'name': 'Enter vehicle number', 'type...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.120" level="INFO">${action} = {'id': '12', 'name': 'Enter vehicle number', 'type': 'TYPE_TEXT', 'selectorI': '11', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:54:49.286Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241128 09:24:45.120" endtime="20241128 09:24:45.120"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.120" endtime="20241128 09:24:45.121"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:45.121" level="INFO">${input} = {'id': '13', 'actionId': '12', 'name': 'Bharani Bike number', 'value': 'TN91 T9861', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:54:49.735Z', 'updatedAt': '2024-11-25T11:18:...</msg>
<status status="PASS" starttime="20241128 09:24:45.121" endtime="20241128 09:24:45.121"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.122" endtime="20241128 09:24:45.122"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.122" endtime="20241128 09:24:45.122"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.122" endtime="20241128 09:24:45.122"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.121" endtime="20241128 09:24:45.122"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.123" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.123" endtime="20241128 09:24:45.123"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.123" endtime="20241128 09:24:45.124"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.123" endtime="20241128 09:24:45.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.124" endtime="20241128 09:24:45.124"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.124" endtime="20241128 09:24:45.124"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.126" endtime="20241128 09:24:45.126"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.124" endtime="20241128 09:24:45.126"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.128" endtime="20241128 09:24:45.128"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.130" endtime="20241128 09:24:45.130"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.126" endtime="20241128 09:24:45.130"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.131" endtime="20241128 09:24:45.131"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.130" endtime="20241128 09:24:45.131"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.135" endtime="20241128 09:24:45.135"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.131" endtime="20241128 09:24:45.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.148" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241128 09:24:45.141" endtime="20241128 09:24:45.148"/>
</kw>
<msg timestamp="20241128 09:24:45.148" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.141" endtime="20241128 09:24:45.148"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.148" endtime="20241128 09:24:45.148"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.141" endtime="20241128 09:24:45.148"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.149" endtime="20241128 09:24:45.149"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.149" endtime="20241128 09:24:45.149"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.149" endtime="20241128 09:24:45.149"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.140" endtime="20241128 09:24:45.149"/>
</try>
<msg timestamp="20241128 09:24:45.150" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.140" endtime="20241128 09:24:45.150"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.150" endtime="20241128 09:24:45.150"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.139" endtime="20241128 09:24:45.150"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.150" endtime="20241128 09:24:45.150"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.150" endtime="20241128 09:24:45.150"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.139" endtime="20241128 09:24:45.150"/>
</try>
<msg timestamp="20241128 09:24:45.151" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.139" endtime="20241128 09:24:45.151"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.153" endtime="20241128 09:24:45.153"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.153" endtime="20241128 09:24:45.153"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.153" endtime="20241128 09:24:45.153"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.153" endtime="20241128 09:24:45.154"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.152" endtime="20241128 09:24:45.154"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.139" endtime="20241128 09:24:45.154"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.169" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241128 09:24:45.161" endtime="20241128 09:24:45.169"/>
</kw>
<msg timestamp="20241128 09:24:45.169" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.161" endtime="20241128 09:24:45.169"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.169" endtime="20241128 09:24:45.170"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.161" endtime="20241128 09:24:45.170"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.170" endtime="20241128 09:24:45.170"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.170" endtime="20241128 09:24:45.170"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.170" endtime="20241128 09:24:45.170"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.161" endtime="20241128 09:24:45.170"/>
</try>
<msg timestamp="20241128 09:24:45.170" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.160" endtime="20241128 09:24:45.170"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.171" endtime="20241128 09:24:45.171"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.160" endtime="20241128 09:24:45.171"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.171" endtime="20241128 09:24:45.171"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.171" endtime="20241128 09:24:45.171"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.159" endtime="20241128 09:24:45.171"/>
</try>
<msg timestamp="20241128 09:24:45.171" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.159" endtime="20241128 09:24:45.171"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.173" endtime="20241128 09:24:45.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.173" endtime="20241128 09:24:45.173"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.173" endtime="20241128 09:24:45.173"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.173" endtime="20241128 09:24:45.173"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.172" endtime="20241128 09:24:45.174"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.159" endtime="20241128 09:24:45.174"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:24:45.185" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:24:45.185" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:45.174" endtime="20241128 09:24:45.185"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:24:45.185" endtime="20241128 09:24:45.185"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.174" endtime="20241128 09:24:45.185"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.185" endtime="20241128 09:24:45.186"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.186" endtime="20241128 09:24:45.186"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.185" endtime="20241128 09:24:45.186"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.174" endtime="20241128 09:24:45.186"/>
</try>
<msg timestamp="20241128 09:24:45.186" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:24:45.157" endtime="20241128 09:24:45.186"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.188" endtime="20241128 09:24:45.188"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.188" endtime="20241128 09:24:45.188"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.188" endtime="20241128 09:24:45.188"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.188" endtime="20241128 09:24:45.188"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.187" endtime="20241128 09:24:45.189"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.156" endtime="20241128 09:24:45.189"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.189" endtime="20241128 09:24:45.189"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.189" endtime="20241128 09:24:45.189"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.156" endtime="20241128 09:24:45.189"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.156" endtime="20241128 09:24:45.189"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.198" level="INFO">Waited for Element with selector id=vehicleNumber at state visible</msg>
<status status="PASS" starttime="20241128 09:24:45.193" endtime="20241128 09:24:45.198"/>
</kw>
<msg timestamp="20241128 09:24:45.199" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.192" endtime="20241128 09:24:45.199"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.199" endtime="20241128 09:24:45.199"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.192" endtime="20241128 09:24:45.199"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.199" endtime="20241128 09:24:45.199"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.200" endtime="20241128 09:24:45.200"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.199" endtime="20241128 09:24:45.200"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.192" endtime="20241128 09:24:45.200"/>
</try>
<msg timestamp="20241128 09:24:45.200" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.192" endtime="20241128 09:24:45.200"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.200" endtime="20241128 09:24:45.200"/>
</return>
<msg timestamp="20241128 09:24:45.200" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.191" endtime="20241128 09:24:45.200"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.202" endtime="20241128 09:24:45.202"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.202" endtime="20241128 09:24:45.202"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.202" endtime="20241128 09:24:45.203"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.202" endtime="20241128 09:24:45.203"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.201" endtime="20241128 09:24:45.203"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.191" endtime="20241128 09:24:45.203"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.137" endtime="20241128 09:24:45.203"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.224" level="INFO">Waited for Element with selector id=vehicleNumber at state editable</msg>
<status status="PASS" starttime="20241128 09:24:45.206" endtime="20241128 09:24:45.224"/>
</kw>
<msg timestamp="20241128 09:24:45.224" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.206" endtime="20241128 09:24:45.224"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.224" endtime="20241128 09:24:45.224"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.206" endtime="20241128 09:24:45.224"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.225" endtime="20241128 09:24:45.225"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.225" endtime="20241128 09:24:45.225"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.224" endtime="20241128 09:24:45.225"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.206" endtime="20241128 09:24:45.225"/>
</try>
<msg timestamp="20241128 09:24:45.225" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.206" endtime="20241128 09:24:45.225"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.225" endtime="20241128 09:24:45.225"/>
</return>
<msg timestamp="20241128 09:24:45.226" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.205" endtime="20241128 09:24:45.226"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.228" endtime="20241128 09:24:45.228"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.228" endtime="20241128 09:24:45.228"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.228" endtime="20241128 09:24:45.228"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.228" endtime="20241128 09:24:45.228"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.227" endtime="20241128 09:24:45.229"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.204" endtime="20241128 09:24:45.229"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.229" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:45.229" endtime="20241128 09:24:45.229"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.231" endtime="20241128 09:24:45.231"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.232" endtime="20241128 09:24:45.233"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.230" endtime="20241128 09:24:45.233"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.233" endtime="20241128 09:24:45.234"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.233" endtime="20241128 09:24:45.234"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.230" endtime="20241128 09:24:45.235"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:24:45.236" level="INFO">Fills the text 'TN91 T9861' in the given field.</msg>
<status status="PASS" starttime="20241128 09:24:45.235" endtime="20241128 09:24:45.274"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.235" endtime="20241128 09:24:45.274"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.274" endtime="20241128 09:24:45.274"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.276" endtime="20241128 09:24:45.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.274" endtime="20241128 09:24:45.276"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.235" endtime="20241128 09:24:45.276"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.230" endtime="20241128 09:24:45.276"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.229" endtime="20241128 09:24:45.276"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.229" endtime="20241128 09:24:45.276"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.276" endtime="20241128 09:24:45.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.276" endtime="20241128 09:24:45.276"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.229" endtime="20241128 09:24:45.277"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.137" endtime="20241128 09:24:45.277"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.277" endtime="20241128 09:24:45.277"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.277" endtime="20241128 09:24:45.277"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.277" endtime="20241128 09:24:45.277"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.135" endtime="20241128 09:24:45.277"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.278" endtime="20241128 09:24:45.278"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.277" endtime="20241128 09:24:45.278"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.279" endtime="20241128 09:24:45.279"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.280" endtime="20241128 09:24:45.280"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.279" endtime="20241128 09:24:45.280"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.280" endtime="20241128 09:24:45.280"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.280" endtime="20241128 09:24:45.280"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.279" endtime="20241128 09:24:45.280"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.278" endtime="20241128 09:24:45.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.285" endtime="20241128 09:24:45.285"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.287" endtime="20241128 09:24:45.287"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.280" endtime="20241128 09:24:45.287"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.288"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.288"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.288"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.288"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.288"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.288" endtime="20241128 09:24:45.289"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.287" endtime="20241128 09:24:45.289"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.293" endtime="20241128 09:24:45.293"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.295" endtime="20241128 09:24:45.295"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.289" endtime="20241128 09:24:45.295"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.296" endtime="20241128 09:24:45.296"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.297" endtime="20241128 09:24:45.297"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.297" endtime="20241128 09:24:45.297"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.297" endtime="20241128 09:24:45.297"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.297" endtime="20241128 09:24:45.297"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.297" endtime="20241128 09:24:45.297"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.295" endtime="20241128 09:24:45.298"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.300" endtime="20241128 09:24:45.300"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.298" endtime="20241128 09:24:45.300"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.305" endtime="20241128 09:24:45.305"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.305" endtime="20241128 09:24:45.305"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.300" endtime="20241128 09:24:45.305"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.123" endtime="20241128 09:24:45.306"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.306" endtime="20241128 09:24:45.306"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:45.306" endtime="20241128 09:24:45.307"/>
</return>
<msg timestamp="20241128 09:24:45.307" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.122" endtime="20241128 09:24:45.307"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.308" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.308" endtime="20241128 09:24:45.308"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.309" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.308" endtime="20241128 09:24:45.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.309" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.309" endtime="20241128 09:24:45.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.309" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.309" endtime="20241128 09:24:45.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.310" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:45.309" endtime="20241128 09:24:45.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.310" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.310" endtime="20241128 09:24:45.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.310" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.310" endtime="20241128 09:24:45.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.311" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:45.311" endtime="20241128 09:24:45.311"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.311" endtime="20241128 09:24:45.311"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:45.314" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:45.313" endtime="20241128 09:24:45.314"/>
</kw>
<msg timestamp="20241128 09:24:45.315" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.313" endtime="20241128 09:24:45.315"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.316"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.316"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.317" endtime="20241128 09:24:45.317"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.317"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.317"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.316" endtime="20241128 09:24:45.317"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.315" endtime="20241128 09:24:45.317"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.317" endtime="20241128 09:24:45.317"/>
</return>
<msg timestamp="20241128 09:24:45.317" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.312" endtime="20241128 09:24:45.317"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.319" endtime="20241128 09:24:45.319"/>
</kw>
<msg timestamp="20241128 09:24:45.319" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.319" endtime="20241128 09:24:45.319"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.320" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.320" endtime="20241128 09:24:45.320"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.320" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.320" endtime="20241128 09:24:45.320"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.320" endtime="20241128 09:24:45.321"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.321" endtime="20241128 09:24:45.321"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.321" endtime="20241128 09:24:45.321"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.320" endtime="20241128 09:24:45.321"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.319" endtime="20241128 09:24:45.321"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.319" endtime="20241128 09:24:45.321"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.321" endtime="20241128 09:24:45.321"/>
</return>
<msg timestamp="20241128 09:24:45.321" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.318" endtime="20241128 09:24:45.321"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.322"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.322"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.322"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.322"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.322"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.323"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.323"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.323"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.323"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.323"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.323"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.322" endtime="20241128 09:24:45.323"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.321" endtime="20241128 09:24:45.323"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.324"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.324"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.324"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.324"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.324"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.324" endtime="20241128 09:24:45.325"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.325" endtime="20241128 09:24:45.325"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.325" endtime="20241128 09:24:45.325"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.325" endtime="20241128 09:24:45.325"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.325" endtime="20241128 09:24:45.325"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.325"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.323" endtime="20241128 09:24:45.325"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.308" endtime="20241128 09:24:45.325"/>
</iter>
<status status="PASS" starttime="20241128 09:24:45.308" endtime="20241128 09:24:45.325"/>
</for>
<msg timestamp="20241128 09:24:45.326" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:45.307" endtime="20241128 09:24:45.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.326" endtime="20241128 09:24:45.327"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.330" endtime="20241128 09:24:45.330"/>
</kw>
<msg timestamp="20241128 09:24:45.330" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.330" endtime="20241128 09:24:45.330"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.331" level="INFO">${values} = {'id': '11', 'name': 'Vehicle number', 'xpath': 'id=vehicleNumber', 'pageId': '3', 'createdAt': '2024-11-25T10:54:47.928Z', 'updatedAt': '2024-11-25T10:54:47.928Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.331" endtime="20241128 09:24:45.331"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.331" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.331" endtime="20241128 09:24:45.331"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.331" endtime="20241128 09:24:45.331"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.332" endtime="20241128 09:24:45.332"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.331" endtime="20241128 09:24:45.332"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.331" endtime="20241128 09:24:45.332"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.330" endtime="20241128 09:24:45.332"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.330" endtime="20241128 09:24:45.332"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.332" endtime="20241128 09:24:45.332"/>
</return>
<msg timestamp="20241128 09:24:45.332" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.329" endtime="20241128 09:24:45.332"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.333" level="INFO">${xpath} = id=vehicleNumber</msg>
<status status="PASS" starttime="20241128 09:24:45.333" endtime="20241128 09:24:45.333"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.333" endtime="20241128 09:24:45.333"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.333" endtime="20241128 09:24:45.333"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.333" endtime="20241128 09:24:45.333"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.332" endtime="20241128 09:24:45.333"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.334" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '443', 'status': 'COMPLETED', 'actionName': 'Enter vehicle number', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=vehicleNumber', 'inputValue': 'TN91 T9861', 'errorMess...</msg>
<status status="PASS" starttime="20241128 09:24:45.334" endtime="20241128 09:24:45.334"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.335" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "443", "status": "COMPLETED", "actionName": "Enter vehicle number", "actionType": "TYPE_TEXT", "actionXpath": "id=vehicleNumber", "inputValue": "TN91 T9861", "errorMess...</msg>
<status status="PASS" starttime="20241128 09:24:45.335" endtime="20241128 09:24:45.335"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:45.351" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:45.351" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.335" endtime="20241128 09:24:45.351"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.352" endtime="20241128 09:24:45.352"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:45.352" endtime="20241128 09:24:45.352"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.335" endtime="20241128 09:24:45.353"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.327" endtime="20241128 09:24:45.353"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:45.354" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:45.353" endtime="20241128 09:24:45.354"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.120" endtime="20241128 09:24:45.354"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.354" endtime="20241128 09:24:45.354"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.354" endtime="20241128 09:24:45.354"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.354" endtime="20241128 09:24:45.354"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.354" endtime="20241128 09:24:45.355"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.119" endtime="20241128 09:24:45.355"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.119" endtime="20241128 09:24:45.355"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '14', 'actionId': '13', 'flowId': '4', 'order': 4, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.863Z', 'action': {'id': '13', 'name': 'Click add vehicle button', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.356" level="INFO">${action} = {'id': '13', 'name': 'Click add vehicle button', 'type': 'CLICK', 'selectorI': '12', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:56:26.254Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241128 09:24:45.355" endtime="20241128 09:24:45.356"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.356" endtime="20241128 09:24:45.356"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:45.356" level="INFO">${input} = {'id': '14', 'actionId': '13', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:56:26.592Z', 'updatedAt': '2024-11-25T10:56:26.592Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.356" endtime="20241128 09:24:45.357"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.357" endtime="20241128 09:24:45.357"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.357" endtime="20241128 09:24:45.357"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.357" endtime="20241128 09:24:45.358"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.357" endtime="20241128 09:24:45.358"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.359" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:45.358" endtime="20241128 09:24:45.359"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.359" endtime="20241128 09:24:45.359"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.359" endtime="20241128 09:24:45.359"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.360" endtime="20241128 09:24:45.360"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.360" endtime="20241128 09:24:45.360"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.376" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state attached</msg>
<status status="PASS" starttime="20241128 09:24:45.369" endtime="20241128 09:24:45.376"/>
</kw>
<msg timestamp="20241128 09:24:45.376" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.368" endtime="20241128 09:24:45.376"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.376" endtime="20241128 09:24:45.377"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.368" endtime="20241128 09:24:45.377"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.377" endtime="20241128 09:24:45.377"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.378" endtime="20241128 09:24:45.378"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.377" endtime="20241128 09:24:45.378"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.368" endtime="20241128 09:24:45.378"/>
</try>
<msg timestamp="20241128 09:24:45.379" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.368" endtime="20241128 09:24:45.379"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.379" endtime="20241128 09:24:45.379"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.367" endtime="20241128 09:24:45.379"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.379" endtime="20241128 09:24:45.379"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.379" endtime="20241128 09:24:45.379"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.367" endtime="20241128 09:24:45.379"/>
</try>
<msg timestamp="20241128 09:24:45.380" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.367" endtime="20241128 09:24:45.380"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.384" endtime="20241128 09:24:45.384"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.384" endtime="20241128 09:24:45.384"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.383" endtime="20241128 09:24:45.384"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.383" endtime="20241128 09:24:45.385"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.381" endtime="20241128 09:24:45.385"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.366" endtime="20241128 09:24:45.385"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.394" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state visible</msg>
<status status="PASS" starttime="20241128 09:24:45.389" endtime="20241128 09:24:45.394"/>
</kw>
<msg timestamp="20241128 09:24:45.394" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.389" endtime="20241128 09:24:45.394"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.394" endtime="20241128 09:24:45.394"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.388" endtime="20241128 09:24:45.394"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.395" endtime="20241128 09:24:45.395"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.395" endtime="20241128 09:24:45.395"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.394" endtime="20241128 09:24:45.395"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.388" endtime="20241128 09:24:45.395"/>
</try>
<msg timestamp="20241128 09:24:45.396" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.388" endtime="20241128 09:24:45.396"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.396" endtime="20241128 09:24:45.396"/>
</return>
<msg timestamp="20241128 09:24:45.396" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.387" endtime="20241128 09:24:45.396"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.400" endtime="20241128 09:24:45.400"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.401" endtime="20241128 09:24:45.401"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.400" endtime="20241128 09:24:45.401"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.399" endtime="20241128 09:24:45.401"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.398" endtime="20241128 09:24:45.401"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.387" endtime="20241128 09:24:45.401"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.417" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:45.405" endtime="20241128 09:24:45.417"/>
</kw>
<msg timestamp="20241128 09:24:45.417" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.404" endtime="20241128 09:24:45.417"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.417" endtime="20241128 09:24:45.418"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.404" endtime="20241128 09:24:45.418"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.418" endtime="20241128 09:24:45.418"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.418" endtime="20241128 09:24:45.418"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.418" endtime="20241128 09:24:45.418"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.404" endtime="20241128 09:24:45.418"/>
</try>
<msg timestamp="20241128 09:24:45.418" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.404" endtime="20241128 09:24:45.419"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.419" endtime="20241128 09:24:45.419"/>
</return>
<msg timestamp="20241128 09:24:45.419" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.403" endtime="20241128 09:24:45.419"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.421" endtime="20241128 09:24:45.421"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.421" endtime="20241128 09:24:45.421"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.421" endtime="20241128 09:24:45.421"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.420" endtime="20241128 09:24:45.421"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.420" endtime="20241128 09:24:45.421"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.402" endtime="20241128 09:24:45.421"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.363" endtime="20241128 09:24:45.421"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.422" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:45.422" endtime="20241128 09:24:45.422"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.423" endtime="20241128 09:24:45.423"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.423" endtime="20241128 09:24:45.423"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.424" endtime="20241128 09:24:45.424"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.423" endtime="20241128 09:24:45.424"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.423" endtime="20241128 09:24:45.424"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:45.424" endtime="20241128 09:24:45.495"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.424" endtime="20241128 09:24:45.496"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.496" endtime="20241128 09:24:45.496"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.496" endtime="20241128 09:24:45.496"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.496" endtime="20241128 09:24:45.496"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.424" endtime="20241128 09:24:45.496"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.422" endtime="20241128 09:24:45.496"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.422" endtime="20241128 09:24:45.497"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.422" endtime="20241128 09:24:45.497"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.497" endtime="20241128 09:24:45.498"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.497" endtime="20241128 09:24:45.498"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.422" endtime="20241128 09:24:45.498"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.362" endtime="20241128 09:24:45.498"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.360" endtime="20241128 09:24:45.498"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.502" endtime="20241128 09:24:45.502"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.504" endtime="20241128 09:24:45.504"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.499" endtime="20241128 09:24:45.504"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.505" endtime="20241128 09:24:45.505"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.504" endtime="20241128 09:24:45.505"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.507" endtime="20241128 09:24:45.508"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.505" endtime="20241128 09:24:45.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.509" endtime="20241128 09:24:45.509"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.510" endtime="20241128 09:24:45.510"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.510" endtime="20241128 09:24:45.510"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.510" endtime="20241128 09:24:45.510"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.508" endtime="20241128 09:24:45.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.511" endtime="20241128 09:24:45.511"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.510" endtime="20241128 09:24:45.511"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.512" endtime="20241128 09:24:45.512"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.513" endtime="20241128 09:24:45.513"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.513" endtime="20241128 09:24:45.513"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.513" endtime="20241128 09:24:45.513"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.513" endtime="20241128 09:24:45.513"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.512" endtime="20241128 09:24:45.513"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.511" endtime="20241128 09:24:45.513"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.520" endtime="20241128 09:24:45.520"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.522" endtime="20241128 09:24:45.522"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.514" endtime="20241128 09:24:45.523"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.523" endtime="20241128 09:24:45.524"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.524"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.524"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.524"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.523" endtime="20241128 09:24:45.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.529" endtime="20241128 09:24:45.529"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.533" endtime="20241128 09:24:45.533"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.524" endtime="20241128 09:24:45.533"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.535" endtime="20241128 09:24:45.536"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.536" endtime="20241128 09:24:45.536"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.536" endtime="20241128 09:24:45.536"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.536" endtime="20241128 09:24:45.536"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.536" endtime="20241128 09:24:45.537"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.536" endtime="20241128 09:24:45.537"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.534" endtime="20241128 09:24:45.537"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.538" endtime="20241128 09:24:45.538"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.537" endtime="20241128 09:24:45.538"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.543" endtime="20241128 09:24:45.543"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.543" endtime="20241128 09:24:45.543"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.538" endtime="20241128 09:24:45.543"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.359" endtime="20241128 09:24:45.543"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.543" endtime="20241128 09:24:45.544"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:45.544" endtime="20241128 09:24:45.544"/>
</return>
<msg timestamp="20241128 09:24:45.544" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:45.358" endtime="20241128 09:24:45.544"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.545" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:14</msg>
<status status="PASS" starttime="20241128 09:24:45.545" endtime="20241128 09:24:45.545"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.546" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.545" endtime="20241128 09:24:45.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.546" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.546" endtime="20241128 09:24:45.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.546" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.546" endtime="20241128 09:24:45.546"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.547" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:45.546" endtime="20241128 09:24:45.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.547" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.547" endtime="20241128 09:24:45.547"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.548" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.547" endtime="20241128 09:24:45.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.548" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:45.548" endtime="20241128 09:24:45.548"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.549" endtime="20241128 09:24:45.550"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:45.552" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:45.552" endtime="20241128 09:24:45.552"/>
</kw>
<msg timestamp="20241128 09:24:45.552" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.552" endtime="20241128 09:24:45.552"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.553"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.553"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.553"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.554"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.554"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.554"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.554"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.553" endtime="20241128 09:24:45.554"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.554" endtime="20241128 09:24:45.554"/>
</return>
<msg timestamp="20241128 09:24:45.554" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.551" endtime="20241128 09:24:45.554"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.556" endtime="20241128 09:24:45.556"/>
</kw>
<msg timestamp="20241128 09:24:45.556" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.556" endtime="20241128 09:24:45.556"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.557" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.557" endtime="20241128 09:24:45.557"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.558" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.557" endtime="20241128 09:24:45.558"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.557" endtime="20241128 09:24:45.558"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.558" endtime="20241128 09:24:45.558"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.558" endtime="20241128 09:24:45.558"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.557" endtime="20241128 09:24:45.558"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.557" endtime="20241128 09:24:45.558"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.556" endtime="20241128 09:24:45.558"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.558" endtime="20241128 09:24:45.558"/>
</return>
<msg timestamp="20241128 09:24:45.558" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.555" endtime="20241128 09:24:45.559"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.559"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.559"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.559"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.560"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.560"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.560"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.560"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.560"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.560"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.560"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.560"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.560"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.559" endtime="20241128 09:24:45.560"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.561"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.561"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.561"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.561"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.562"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.562"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.562" endtime="20241128 09:24:45.562"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.562" endtime="20241128 09:24:45.562"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.562" endtime="20241128 09:24:45.562"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.562" endtime="20241128 09:24:45.562"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.561" endtime="20241128 09:24:45.562"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.560" endtime="20241128 09:24:45.562"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.545" endtime="20241128 09:24:45.562"/>
</iter>
<status status="PASS" starttime="20241128 09:24:45.545" endtime="20241128 09:24:45.562"/>
</for>
<msg timestamp="20241128 09:24:45.563" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:45.544" endtime="20241128 09:24:45.563"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.563" endtime="20241128 09:24:45.563"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.569" endtime="20241128 09:24:45.569"/>
</kw>
<msg timestamp="20241128 09:24:45.569" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.569" endtime="20241128 09:24:45.569"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.570" level="INFO">${values} = {'id': '12', 'name': 'Add vehicle button', 'xpath': '//button[@type="submit"]//p[text()="Add"]', 'pageId': '3', 'createdAt': '2024-11-25T10:56:22.831Z', 'updatedAt': '2024-11-25T11:27:24.850Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.570"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.571" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.571"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.571"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.571" endtime="20241128 09:24:45.571"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.571" endtime="20241128 09:24:45.571"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.571"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.571"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.570" endtime="20241128 09:24:45.571"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.571" endtime="20241128 09:24:45.571"/>
</return>
<msg timestamp="20241128 09:24:45.572" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.568" endtime="20241128 09:24:45.572"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.572" level="INFO">${xpath} = //button[@type="submit"]//p[text()="Add"]</msg>
<status status="PASS" starttime="20241128 09:24:45.572" endtime="20241128 09:24:45.572"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.572" endtime="20241128 09:24:45.572"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.572" endtime="20241128 09:24:45.572"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.572" endtime="20241128 09:24:45.572"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.572" endtime="20241128 09:24:45.572"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.573" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '444', 'status': 'COMPLETED', 'actionName': 'Click add vehicle button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit"]//p[text()="Add"]', 'inputValue':...</msg>
<status status="PASS" starttime="20241128 09:24:45.573" endtime="20241128 09:24:45.573"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.574" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "444", "status": "COMPLETED", "actionName": "Click add vehicle button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\"]//p[text()=\"Add\"]", "inputVal...</msg>
<status status="PASS" starttime="20241128 09:24:45.574" endtime="20241128 09:24:45.574"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:45.601" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:45.602" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.574" endtime="20241128 09:24:45.602"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.602" endtime="20241128 09:24:45.602"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:45.603" endtime="20241128 09:24:45.603"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.573" endtime="20241128 09:24:45.603"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.564" endtime="20241128 09:24:45.603"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:45.603" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:45.603" endtime="20241128 09:24:45.603"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.355" endtime="20241128 09:24:45.603"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.604" endtime="20241128 09:24:45.604"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.604" endtime="20241128 09:24:45.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.604" endtime="20241128 09:24:45.604"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.604" endtime="20241128 09:24:45.604"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.355" endtime="20241128 09:24:45.604"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.355" endtime="20241128 09:24:45.605"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '15', 'actionId': '15', 'flowId': '4', 'order': 5, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.865Z', 'action': {'id': '15', 'name': 'Close add vehicle popup', 't...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.606" level="INFO">${action} = {'id': '15', 'name': 'Close add vehicle popup', 'type': 'CLICK', 'selectorI': '14', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:20:45.695Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241128 09:24:45.605" endtime="20241128 09:24:45.606"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.606" endtime="20241128 09:24:45.606"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:45.607" level="INFO">${input} = {'id': '16', 'actionId': '15', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:20:46.000Z', 'updatedAt': '2024-11-25T11:20:46.000Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.607" endtime="20241128 09:24:45.607"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.607" endtime="20241128 09:24:45.607"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.607" endtime="20241128 09:24:45.607"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.607" endtime="20241128 09:24:45.608"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.607" endtime="20241128 09:24:45.608"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.609" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.609"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.609"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.609"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.609"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.609"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.627" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state attached</msg>
<status status="PASS" starttime="20241128 09:24:45.622" endtime="20241128 09:24:45.627"/>
</kw>
<msg timestamp="20241128 09:24:45.627" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.622" endtime="20241128 09:24:45.627"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.627" endtime="20241128 09:24:45.628"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.621" endtime="20241128 09:24:45.628"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.628" endtime="20241128 09:24:45.628"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.628" endtime="20241128 09:24:45.628"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.628" endtime="20241128 09:24:45.628"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.621" endtime="20241128 09:24:45.628"/>
</try>
<msg timestamp="20241128 09:24:45.629" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.621" endtime="20241128 09:24:45.629"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.629" endtime="20241128 09:24:45.629"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.619" endtime="20241128 09:24:45.629"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.629" endtime="20241128 09:24:45.629"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.629" endtime="20241128 09:24:45.629"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.619" endtime="20241128 09:24:45.629"/>
</try>
<msg timestamp="20241128 09:24:45.629" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.619" endtime="20241128 09:24:45.629"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.632" endtime="20241128 09:24:45.633"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.633" endtime="20241128 09:24:45.633"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.632" endtime="20241128 09:24:45.634"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.632" endtime="20241128 09:24:45.634"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.630" endtime="20241128 09:24:45.634"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.618" endtime="20241128 09:24:45.634"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.643" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state visible</msg>
<status status="PASS" starttime="20241128 09:24:45.638" endtime="20241128 09:24:45.643"/>
</kw>
<msg timestamp="20241128 09:24:45.643" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.638" endtime="20241128 09:24:45.643"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.643" endtime="20241128 09:24:45.643"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.638" endtime="20241128 09:24:45.644"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.644" endtime="20241128 09:24:45.644"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.644" endtime="20241128 09:24:45.644"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.644" endtime="20241128 09:24:45.644"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.638" endtime="20241128 09:24:45.644"/>
</try>
<msg timestamp="20241128 09:24:45.644" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.637" endtime="20241128 09:24:45.644"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.645" endtime="20241128 09:24:45.645"/>
</return>
<msg timestamp="20241128 09:24:45.645" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.636" endtime="20241128 09:24:45.645"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.647" endtime="20241128 09:24:45.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.647" endtime="20241128 09:24:45.647"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.647" endtime="20241128 09:24:45.647"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.646" endtime="20241128 09:24:45.647"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.646" endtime="20241128 09:24:45.648"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.636" endtime="20241128 09:24:45.648"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.674" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241128 09:24:45.654" endtime="20241128 09:24:45.674"/>
</kw>
<msg timestamp="20241128 09:24:45.674" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.653" endtime="20241128 09:24:45.674"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.674" endtime="20241128 09:24:45.674"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.653" endtime="20241128 09:24:45.674"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.675" endtime="20241128 09:24:45.675"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.675" endtime="20241128 09:24:45.675"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.675" endtime="20241128 09:24:45.675"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.653" endtime="20241128 09:24:45.675"/>
</try>
<msg timestamp="20241128 09:24:45.675" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.653" endtime="20241128 09:24:45.675"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.675" endtime="20241128 09:24:45.675"/>
</return>
<msg timestamp="20241128 09:24:45.676" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.652" endtime="20241128 09:24:45.676"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.678" endtime="20241128 09:24:45.678"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.678" endtime="20241128 09:24:45.678"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.677" endtime="20241128 09:24:45.678"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.677" endtime="20241128 09:24:45.678"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.677" endtime="20241128 09:24:45.678"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.651" endtime="20241128 09:24:45.678"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.612" endtime="20241128 09:24:45.678"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.679" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:24:45.678" endtime="20241128 09:24:45.679"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.681" endtime="20241128 09:24:45.681"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.680" endtime="20241128 09:24:45.681"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.681" endtime="20241128 09:24:45.682"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.681" endtime="20241128 09:24:45.682"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.680" endtime="20241128 09:24:45.682"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:24:45.683" endtime="20241128 09:24:45.736"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.683" endtime="20241128 09:24:45.737"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.737" endtime="20241128 09:24:45.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.737" endtime="20241128 09:24:45.737"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.737" endtime="20241128 09:24:45.737"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.683" endtime="20241128 09:24:45.737"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.679" endtime="20241128 09:24:45.737"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.679" endtime="20241128 09:24:45.738"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.679" endtime="20241128 09:24:45.738"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.738" endtime="20241128 09:24:45.738"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.738" endtime="20241128 09:24:45.738"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.679" endtime="20241128 09:24:45.738"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.611" endtime="20241128 09:24:45.738"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.738"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.740" endtime="20241128 09:24:45.740"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.742" endtime="20241128 09:24:45.742"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.738" endtime="20241128 09:24:45.742"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.743" endtime="20241128 09:24:45.743"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.742" endtime="20241128 09:24:45.744"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.746" endtime="20241128 09:24:45.746"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.744" endtime="20241128 09:24:45.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.748" endtime="20241128 09:24:45.748"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.749" endtime="20241128 09:24:45.749"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.748" endtime="20241128 09:24:45.749"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.748" endtime="20241128 09:24:45.749"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.746" endtime="20241128 09:24:45.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.750" endtime="20241128 09:24:45.750"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.749" endtime="20241128 09:24:45.750"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.751"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.751"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.752"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.751" endtime="20241128 09:24:45.752"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.750" endtime="20241128 09:24:45.752"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.756" endtime="20241128 09:24:45.756"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.758" endtime="20241128 09:24:45.758"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.752" endtime="20241128 09:24:45.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.759" endtime="20241128 09:24:45.759"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.760" endtime="20241128 09:24:45.760"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.760" endtime="20241128 09:24:45.760"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.760" endtime="20241128 09:24:45.760"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.760" endtime="20241128 09:24:45.760"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.759" endtime="20241128 09:24:45.760"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.758" endtime="20241128 09:24:45.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.765" endtime="20241128 09:24:45.766"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.768" endtime="20241128 09:24:45.768"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.760" endtime="20241128 09:24:45.768"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.769" endtime="20241128 09:24:45.769"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.770"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.770"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.770"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.770"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.770"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.768" endtime="20241128 09:24:45.770"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.772" endtime="20241128 09:24:45.772"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.770" endtime="20241128 09:24:45.772"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.778" endtime="20241128 09:24:45.778"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.778" endtime="20241128 09:24:45.778"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.772" endtime="20241128 09:24:45.778"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.609" endtime="20241128 09:24:45.778"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.778" endtime="20241128 09:24:45.779"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:45.779" endtime="20241128 09:24:45.779"/>
</return>
<msg timestamp="20241128 09:24:45.779" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:45.608" endtime="20241128 09:24:45.779"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.781" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:15</msg>
<status status="PASS" starttime="20241128 09:24:45.780" endtime="20241128 09:24:45.781"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.781" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.781" endtime="20241128 09:24:45.781"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.783" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.781" endtime="20241128 09:24:45.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.783" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.783" endtime="20241128 09:24:45.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.783" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:45.783" endtime="20241128 09:24:45.783"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.784" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.784" endtime="20241128 09:24:45.784"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.784" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.784" endtime="20241128 09:24:45.784"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.785" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:45.784" endtime="20241128 09:24:45.785"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.785" endtime="20241128 09:24:45.785"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:24:45.786" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:16::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241128 09:24:45.786" endtime="20241128 09:24:45.787"/>
</kw>
<msg timestamp="20241128 09:24:45.787" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.786" endtime="20241128 09:24:45.787"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.787"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.788"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.788"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.788" endtime="20241128 09:24:45.788"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.788" endtime="20241128 09:24:45.788"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.788"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.788"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.787" endtime="20241128 09:24:45.788"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.788" endtime="20241128 09:24:45.788"/>
</return>
<msg timestamp="20241128 09:24:45.789" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.785" endtime="20241128 09:24:45.789"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.791" endtime="20241128 09:24:45.791"/>
</kw>
<msg timestamp="20241128 09:24:45.791" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.790" endtime="20241128 09:24:45.791"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.792" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.792" endtime="20241128 09:24:45.792"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.792" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.792" endtime="20241128 09:24:45.792"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.792" endtime="20241128 09:24:45.793"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.793" endtime="20241128 09:24:45.793"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.793" endtime="20241128 09:24:45.793"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.792" endtime="20241128 09:24:45.793"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.791" endtime="20241128 09:24:45.793"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.791" endtime="20241128 09:24:45.793"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.793" endtime="20241128 09:24:45.793"/>
</return>
<msg timestamp="20241128 09:24:45.793" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.790" endtime="20241128 09:24:45.793"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.794"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.794"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.794"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.795"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.795" endtime="20241128 09:24:45.795"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.795"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.795"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.795" endtime="20241128 09:24:45.795"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.795" endtime="20241128 09:24:45.795"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.795" endtime="20241128 09:24:45.795"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.795" endtime="20241128 09:24:45.795"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.796"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.794" endtime="20241128 09:24:45.796"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.796" endtime="20241128 09:24:45.796"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.796" endtime="20241128 09:24:45.796"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.796" endtime="20241128 09:24:45.796"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.798" endtime="20241128 09:24:45.798"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.797" endtime="20241128 09:24:45.798"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.797" endtime="20241128 09:24:45.798"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.798" endtime="20241128 09:24:45.798"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.798" endtime="20241128 09:24:45.798"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.798" endtime="20241128 09:24:45.798"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.798" endtime="20241128 09:24:45.798"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.796" endtime="20241128 09:24:45.798"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.796" endtime="20241128 09:24:45.798"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.781" endtime="20241128 09:24:45.798"/>
</iter>
<status status="PASS" starttime="20241128 09:24:45.781" endtime="20241128 09:24:45.799"/>
</for>
<msg timestamp="20241128 09:24:45.799" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:24:45.779" endtime="20241128 09:24:45.799"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.799" endtime="20241128 09:24:45.801"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.804"/>
</kw>
<msg timestamp="20241128 09:24:45.804" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.804"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.804" level="INFO">${values} = {'id': '14', 'name': 'Close add vehicle', 'xpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T11:20:43.962Z', 'updatedAt': '2024-11-25T11:20:...</msg>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.804"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.805" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.805" endtime="20241128 09:24:45.805"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.805" endtime="20241128 09:24:45.805"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.805" endtime="20241128 09:24:45.806"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.805" endtime="20241128 09:24:45.806"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.805" endtime="20241128 09:24:45.806"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.806"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.806"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.806" endtime="20241128 09:24:45.806"/>
</return>
<msg timestamp="20241128 09:24:45.806" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.804" endtime="20241128 09:24:45.806"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.807" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]//preceding-sibling::img</msg>
<status status="PASS" starttime="20241128 09:24:45.807" endtime="20241128 09:24:45.807"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.806" endtime="20241128 09:24:45.807"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.807" endtime="20241128 09:24:45.807"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.807" endtime="20241128 09:24:45.807"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.806" endtime="20241128 09:24:45.807"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.808" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '445', 'status': 'COMPLETED', 'actionName': 'Close add vehicle popup', 'actionType': 'CLICK', 'actionXpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img...</msg>
<status status="PASS" starttime="20241128 09:24:45.807" endtime="20241128 09:24:45.808"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.809" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "445", "status": "COMPLETED", "actionName": "Close add vehicle popup", "actionType": "CLICK", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]//preceding-sibling::i...</msg>
<status status="PASS" starttime="20241128 09:24:45.809" endtime="20241128 09:24:45.809"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:45.834" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:45.834" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.809" endtime="20241128 09:24:45.834"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.834" endtime="20241128 09:24:45.835"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:45.835" endtime="20241128 09:24:45.835"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.808" endtime="20241128 09:24:45.835"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.801" endtime="20241128 09:24:45.835"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:24:45.836" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:24:45.835" endtime="20241128 09:24:45.836"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.605" endtime="20241128 09:24:45.836"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.836" endtime="20241128 09:24:45.836"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.836" endtime="20241128 09:24:45.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.836" endtime="20241128 09:24:45.836"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.836" endtime="20241128 09:24:45.837"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.605" endtime="20241128 09:24:45.837"/>
</try>
<status status="PASS" starttime="20241128 09:24:45.605" endtime="20241128 09:24:45.837"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '16', 'actionId': '16', 'flowId': '4', 'order': 6, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.873Z', 'action': {'id': '16', 'name': 'Get vehicle info', 'type': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.838" level="INFO">${action} = {'id': '16', 'name': 'Get vehicle info', 'type': 'GET_TEXT', 'selectorI': '15', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:23:13.728Z', 'updatedAt': '2024-11-25T11:2...</msg>
<status status="PASS" starttime="20241128 09:24:45.837" endtime="20241128 09:24:45.838"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.838" endtime="20241128 09:24:45.838"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:24:45.839" level="INFO">${input} = {'id': '17', 'actionId': '16', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:23:13.975Z', 'updatedAt': '2024-11-25T11:23:13.975Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.839" endtime="20241128 09:24:45.839"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.840" endtime="20241128 09:24:45.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.840" endtime="20241128 09:24:45.840"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.839" endtime="20241128 09:24:45.840"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.839" endtime="20241128 09:24:45.840"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.841" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:24:45.841" endtime="20241128 09:24:45.841"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.842" endtime="20241128 09:24:45.842"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.842" endtime="20241128 09:24:45.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.842" endtime="20241128 09:24:45.842"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.842" endtime="20241128 09:24:45.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.844" endtime="20241128 09:24:45.844"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.842" endtime="20241128 09:24:45.844"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.847" endtime="20241128 09:24:45.847"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.849" endtime="20241128 09:24:45.849"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.844" endtime="20241128 09:24:45.849"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.851" endtime="20241128 09:24:45.851"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.850" endtime="20241128 09:24:45.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.853" endtime="20241128 09:24:45.853"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.851" endtime="20241128 09:24:45.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.855" endtime="20241128 09:24:45.855"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.855" endtime="20241128 09:24:45.855"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.855" endtime="20241128 09:24:45.855"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.855" endtime="20241128 09:24:45.856"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.853" endtime="20241128 09:24:45.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.857" endtime="20241128 09:24:45.857"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.856" endtime="20241128 09:24:45.857"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.858"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.858"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.858"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.859"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.858" endtime="20241128 09:24:45.859"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.857" endtime="20241128 09:24:45.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.864" endtime="20241128 09:24:45.864"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.868" endtime="20241128 09:24:45.868"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.859" endtime="20241128 09:24:45.868"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.869"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.869"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.869"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.870"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.870"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.869" endtime="20241128 09:24:45.870"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.868" endtime="20241128 09:24:45.870"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:24:45.874" endtime="20241128 09:24:45.874"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.877" endtime="20241128 09:24:45.877"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.870" endtime="20241128 09:24:45.877"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.878" endtime="20241128 09:24:45.878"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.879"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.879"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.879"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.879"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.879"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.877" endtime="20241128 09:24:45.879"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:24:45.892" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]/following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241128 09:24:45.887" endtime="20241128 09:24:45.892"/>
</kw>
<msg timestamp="20241128 09:24:45.892" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.887" endtime="20241128 09:24:45.893"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.893" endtime="20241128 09:24:45.893"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.886" endtime="20241128 09:24:45.893"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.893" endtime="20241128 09:24:45.893"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.893" endtime="20241128 09:24:45.893"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.893" endtime="20241128 09:24:45.893"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.886" endtime="20241128 09:24:45.893"/>
</try>
<msg timestamp="20241128 09:24:45.894" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.886" endtime="20241128 09:24:45.894"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.894" endtime="20241128 09:24:45.894"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.885" endtime="20241128 09:24:45.894"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.894" endtime="20241128 09:24:45.894"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.894" endtime="20241128 09:24:45.894"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.885" endtime="20241128 09:24:45.894"/>
</try>
<msg timestamp="20241128 09:24:45.894" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.885" endtime="20241128 09:24:45.894"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.896" endtime="20241128 09:24:45.897"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.897" endtime="20241128 09:24:45.897"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.896" endtime="20241128 09:24:45.897"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.896" endtime="20241128 09:24:45.897"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.895" endtime="20241128 09:24:45.898"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.884" endtime="20241128 09:24:45.898"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:24:45.908" level="INFO">Property: 'TN91 T9861 ( Two-wheeler )'</msg>
<msg timestamp="20241128 09:24:45.908" level="INFO">${property} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.898" endtime="20241128 09:24:45.908"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:24:45.908" endtime="20241128 09:24:45.908"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.898" endtime="20241128 09:24:45.908"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.908" endtime="20241128 09:24:45.909"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.909" endtime="20241128 09:24:45.909"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.908" endtime="20241128 09:24:45.909"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.898" endtime="20241128 09:24:45.909"/>
</try>
<msg timestamp="20241128 09:24:45.909" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.882" endtime="20241128 09:24:45.909"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.879" endtime="20241128 09:24:45.909"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.914" endtime="20241128 09:24:45.914"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.914" endtime="20241128 09:24:45.914"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.909" endtime="20241128 09:24:45.914"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.841" endtime="20241128 09:24:45.914"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.915" endtime="20241128 09:24:45.915"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:24:45.915" endtime="20241128 09:24:45.915"/>
</return>
<msg timestamp="20241128 09:24:45.916" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.840" endtime="20241128 09:24:45.916"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.917" level="INFO">${key} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.916" endtime="20241128 09:24:45.917"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '4', 'testCaseId': '7', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:16::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:16::flowActionSequenceId:13', 'custom...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.917" level="INFO">${source} = testCaseFlowSequenceId:16::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:24:45.917" endtime="20241128 09:24:45.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.917" level="INFO">${target} = testCaseFlowSequenceId:16::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:24:45.917" endtime="20241128 09:24:45.917"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.918" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.918" endtime="20241128 09:24:45.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.918" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241128 09:24:45.918" endtime="20241128 09:24:45.918"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.919" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241128 09:24:45.918" endtime="20241128 09:24:45.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.919" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.919" endtime="20241128 09:24:45.919"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.919" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241128 09:24:45.919" endtime="20241128 09:24:45.919"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.919" endtime="20241128 09:24:45.920"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.921" endtime="20241128 09:24:45.922"/>
</kw>
<msg timestamp="20241128 09:24:45.922" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.921" endtime="20241128 09:24:45.922"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.923" level="INFO">${values} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:24:45.922" endtime="20241128 09:24:45.923"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.923" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.923" endtime="20241128 09:24:45.923"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.923" endtime="20241128 09:24:45.923"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.923" endtime="20241128 09:24:45.923"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.923" endtime="20241128 09:24:45.924"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.923" endtime="20241128 09:24:45.924"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.922" endtime="20241128 09:24:45.924"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.922" endtime="20241128 09:24:45.924"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.924" endtime="20241128 09:24:45.924"/>
</return>
<msg timestamp="20241128 09:24:45.924" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.921" endtime="20241128 09:24:45.924"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.926" endtime="20241128 09:24:45.926"/>
</kw>
<msg timestamp="20241128 09:24:45.926" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.925" endtime="20241128 09:24:45.926"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.927" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:24:45.926" endtime="20241128 09:24:45.927"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.927" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.927" endtime="20241128 09:24:45.927"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.927" endtime="20241128 09:24:45.927"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.927" endtime="20241128 09:24:45.927"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.927" endtime="20241128 09:24:45.927"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.927" endtime="20241128 09:24:45.928"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.926" endtime="20241128 09:24:45.928"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.926" endtime="20241128 09:24:45.928"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.928" endtime="20241128 09:24:45.928"/>
</return>
<msg timestamp="20241128 09:24:45.928" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.925" endtime="20241128 09:24:45.928"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.929" endtime="20241128 09:24:45.929"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.928" endtime="20241128 09:24:45.929"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.928" endtime="20241128 09:24:45.929"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.929" endtime="20241128 09:24:45.929"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.929" endtime="20241128 09:24:45.929"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.929" endtime="20241128 09:24:45.929"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.929" endtime="20241128 09:24:45.930"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} != ${target}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.931" endtime="20241128 09:24:45.931"/>
</kw>
<return>
<value>Assertion passed: ${source} == ${target}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.931" endtime="20241128 09:24:45.931"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.931" endtime="20241128 09:24:45.931"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} == ${target}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.932" endtime="20241128 09:24:45.932"/>
</kw>
<return>
<value>Assertion passed: ${source} != ${target}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.932" endtime="20241128 09:24:45.932"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.932" endtime="20241128 09:24:45.932"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'CONTAINS'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.934" endtime="20241128 09:24:45.934"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${source} contains ${target}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.934" endtime="20241128 09:24:45.934"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.934" endtime="20241128 09:24:45.934"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.934" endtime="20241128 09:24:45.934"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} does not contain ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.935" endtime="20241128 09:24:45.935"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.933" endtime="20241128 09:24:45.935"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_CONTAINS_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.936" endtime="20241128 09:24:45.937"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${target} contains ${source}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.937" endtime="20241128 09:24:45.937"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.937" endtime="20241128 09:24:45.937"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.937" endtime="20241128 09:24:45.937"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} does not contain ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.937" endtime="20241128 09:24:45.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.935" endtime="20241128 09:24:45.937"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_CONTAIN'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}`.includes(`${string2}`)</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241128 09:24:45.944" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.940" endtime="20241128 09:24:45.944"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:24:45.944" endtime="20241128 09:24:45.945"/>
</return>
<msg timestamp="20241128 09:24:45.945" level="INFO">${contains} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.939" endtime="20241128 09:24:45.945"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} contains ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:24:45.946" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241128 09:24:45.945" endtime="20241128 09:24:45.946"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:45.945" endtime="20241128 09:24:45.946"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:45.945" endtime="20241128 09:24:45.947"/>
</if>
<return>
<value>Assertion passed: ${source} does not contain ${target}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.947" endtime="20241128 09:24:45.947"/>
</return>
<status status="FAIL" starttime="20241128 09:24:45.937" endtime="20241128 09:24:45.947"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_SHOULD_NOT_CONTAIN_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.949" endtime="20241128 09:24:45.949"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} contains ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.950" endtime="20241128 09:24:45.950"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.949" endtime="20241128 09:24:45.950"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.949" endtime="20241128 09:24:45.950"/>
</if>
<return>
<value>Assertion passed: ${target} does not contain (${source})</value>
<status status="NOT RUN" starttime="20241128 09:24:45.950" endtime="20241128 09:24:45.950"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.948" endtime="20241128 09:24:45.950"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:45.930" endtime="20241128 09:24:45.950"/>
</if>
<status status="FAIL" starttime="20241128 09:24:45.930" endtime="20241128 09:24:45.951"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.951" endtime="20241128 09:24:45.951"/>
</return>
<status status="FAIL" starttime="20241128 09:24:45.930" endtime="20241128 09:24:45.951"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:45.930" endtime="20241128 09:24:45.951"/>
</if>
<status status="FAIL" starttime="20241128 09:24:45.928" endtime="20241128 09:24:45.951"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:45.928" endtime="20241128 09:24:45.951"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.952"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.953" endtime="20241128 09:24:45.953"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:24:45.953" endtime="20241128 09:24:45.953"/>
</return>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.953"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.953"/>
</if>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.953"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:24:45.952" endtime="20241128 09:24:45.953"/>
</if>
<status status="FAIL" starttime="20241128 09:24:45.917" endtime="20241128 09:24:45.953"/>
</iter>
<status status="FAIL" starttime="20241128 09:24:45.917" endtime="20241128 09:24:45.953"/>
</for>
<status status="FAIL" starttime="20241128 09:24:45.916" endtime="20241128 09:24:45.954"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.954" endtime="20241128 09:24:45.955"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.955" endtime="20241128 09:24:45.955"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.955" endtime="20241128 09:24:45.955"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:45.837" endtime="20241128 09:24:45.955"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.955" endtime="20241128 09:24:45.956"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:24:45.959" endtime="20241128 09:24:45.959"/>
</kw>
<msg timestamp="20241128 09:24:45.959" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.958" endtime="20241128 09:24:45.959"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.959" level="INFO">${values} = {'id': '15', 'name': 'Get vehicle info', 'xpath': '//p[text()="VEHICLE"]/following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T11:23:12.124Z', 'updatedAt': '2024-11-25T11:23:12.124Z'}</msg>
<status status="PASS" starttime="20241128 09:24:45.959" endtime="20241128 09:24:45.960"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.960" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.960" endtime="20241128 09:24:45.960"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.960" endtime="20241128 09:24:45.960"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.960" endtime="20241128 09:24:45.960"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.960" endtime="20241128 09:24:45.960"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.960" endtime="20241128 09:24:45.961"/>
</if>
<status status="PASS" starttime="20241128 09:24:45.959" endtime="20241128 09:24:45.961"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.959" endtime="20241128 09:24:45.961"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:24:45.961" endtime="20241128 09:24:45.961"/>
</return>
<msg timestamp="20241128 09:24:45.961" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:24:45.958" endtime="20241128 09:24:45.961"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:24:45.961" level="INFO">${xpath} = //p[text()="VEHICLE"]/following-sibling::p</msg>
<status status="PASS" starttime="20241128 09:24:45.961" endtime="20241128 09:24:45.961"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.961" endtime="20241128 09:24:45.961"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:24:45.962" endtime="20241128 09:24:45.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:45.962" endtime="20241128 09:24:45.962"/>
</branch>
<status status="PASS" starttime="20241128 09:24:45.961" endtime="20241128 09:24:45.962"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.963" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '446', 'status': 'FAILED', 'actionName': 'Get vehicle info', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="VEHICLE"]/following-sibling::p', 'inputValue': '', 'e...</msg>
<status status="PASS" starttime="20241128 09:24:45.962" endtime="20241128 09:24:45.963"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.965" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "446", "status": "FAILED", "actionName": "Get vehicle info", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"VEHICLE\"]/following-sibling::p", "inputValue": "", ...</msg>
<status status="PASS" starttime="20241128 09:24:45.964" endtime="20241128 09:24:45.965"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:45.984" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:45.984" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.965" endtime="20241128 09:24:45.984"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.985" endtime="20241128 09:24:45.986"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:45.986" endtime="20241128 09:24:45.986"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.964" endtime="20241128 09:24:45.986"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.956" endtime="20241128 09:24:45.987"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.987" endtime="20241128 09:24:45.988"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:24:45.988" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241128 09:24:45.988" endtime="20241128 09:24:45.988"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:45.987" endtime="20241128 09:24:45.989"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:45.955" endtime="20241128 09:24:45.989"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:45.837" endtime="20241128 09:24:45.990"/>
</try>
<status status="FAIL" starttime="20241128 09:24:45.837" endtime="20241128 09:24:45.990"/>
</iter>
<status status="FAIL" starttime="20241128 09:24:44.276" endtime="20241128 09:24:45.990"/>
</for>
<status status="FAIL" starttime="20241128 09:24:44.276" endtime="20241128 09:24:45.991"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:44.275" endtime="20241128 09:24:45.991"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 09:24:45.991" endtime="20241128 09:24:45.991"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:44.258" endtime="20241128 09:24:45.991"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:45.991" endtime="20241128 09:24:45.992"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:45.993" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '112', 'status': 'FAILED', 'errorMessage': 'Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861'}</msg>
<status status="PASS" starttime="20241128 09:24:45.992" endtime="20241128 09:24:45.993"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:45.994" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "112", "status": "FAILED", "errorMessage": "Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861"}</msg>
<status status="PASS" starttime="20241128 09:24:45.993" endtime="20241128 09:24:45.994"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:46.000" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:46.001" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:45.994" endtime="20241128 09:24:46.001"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.001" endtime="20241128 09:24:46.001"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:46.002" endtime="20241128 09:24:46.002"/>
</return>
<status status="PASS" starttime="20241128 09:24:45.993" endtime="20241128 09:24:46.002"/>
</kw>
<status status="PASS" starttime="20241128 09:24:45.992" endtime="20241128 09:24:46.002"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.003" endtime="20241128 09:24:46.003"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:24:46.004" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241128 09:24:46.003" endtime="20241128 09:24:46.004"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:46.002" endtime="20241128 09:24:46.005"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:45.991" endtime="20241128 09:24:46.005"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:44.258" endtime="20241128 09:24:46.006"/>
</try>
<status status="FAIL" starttime="20241128 09:24:44.258" endtime="20241128 09:24:46.006"/>
</iter>
<status status="FAIL" starttime="20241128 09:24:35.787" endtime="20241128 09:24:46.006"/>
</for>
<status status="FAIL" starttime="20241128 09:24:35.787" endtime="20241128 09:24:46.006"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:35.786" endtime="20241128 09:24:46.006"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 09:24:46.007" endtime="20241128 09:24:46.007"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:35.769" endtime="20241128 09:24:46.007"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.007" endtime="20241128 09:24:46.008"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:24:46.009" level="INFO">${response_message} = {'testCaseRunId': '41', 'status': 'FAIL', 'errorMessage': 'Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861'}</msg>
<status status="PASS" starttime="20241128 09:24:46.008" endtime="20241128 09:24:46.009"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:24:46.010" level="INFO">${json_response} = {"testCaseRunId": "41", "status": "FAIL", "errorMessage": "Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861"}</msg>
<status status="PASS" starttime="20241128 09:24:46.009" endtime="20241128 09:24:46.010"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:24:46.016" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:24:46.017" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:24:46.010" endtime="20241128 09:24:46.017"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.017" endtime="20241128 09:24:46.018"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:24:46.018" endtime="20241128 09:24:46.018"/>
</return>
<status status="PASS" starttime="20241128 09:24:46.009" endtime="20241128 09:24:46.018"/>
</kw>
<status status="PASS" starttime="20241128 09:24:46.008" endtime="20241128 09:24:46.018"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.019" endtime="20241128 09:24:46.019"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:24:46.020" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241128 09:24:46.020" endtime="20241128 09:24:46.020"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:46.018" endtime="20241128 09:24:46.021"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:46.007" endtime="20241128 09:24:46.022"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:35.769" endtime="20241128 09:24:46.022"/>
</try>
<status status="FAIL" starttime="20241128 09:24:35.752" endtime="20241128 09:24:46.022"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:46.022" endtime="20241128 09:24:46.023"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:46.022" endtime="20241128 09:24:46.023"/>
</branch>
<status status="FAIL" starttime="20241128 09:24:35.752" endtime="20241128 09:24:46.023"/>
</if>
<status status="FAIL" starttime="20241128 09:24:35.735" endtime="20241128 09:24:46.023"/>
</kw>
<status status="FAIL" starttime="20241128 09:24:35.734" endtime="20241128 09:24:46.024"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.024" endtime="20241128 09:24:46.025"/>
</kw>
<status status="PASS" starttime="20241128 09:24:46.024" endtime="20241128 09:24:46.025"/>
</branch>
<status status="PASS" starttime="20241128 09:24:35.734" endtime="20241128 09:24:46.025"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 09:24:46.276" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 09:24:46.026" endtime="20241128 09:24:46.276"/>
</kw>
<status status="PASS" starttime="20241128 09:24:46.025" endtime="20241128 09:24:46.277"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:24:46.277" endtime="20241128 09:24:46.277"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:24:46.277" endtime="20241128 09:24:46.277"/>
</branch>
<status status="PASS" starttime="20241128 09:24:46.025" endtime="20241128 09:24:46.277"/>
</try>
<status status="PASS" starttime="20241128 09:24:46.025" endtime="20241128 09:24:46.277"/>
</kw>
<status status="PASS" starttime="20241127 12:51:14.062" endtime="20241128 09:24:46.278"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:24:46.278" endtime="20241128 09:24:46.279"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 09:31:36.631" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '42', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:36.556Z', 'createdAt': '2024-11-28T04:01:36.556Z', 'errorMes...</msg>
<status status="PASS" starttime="20241128 09:24:46.279" endtime="20241128 09:31:36.631"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 09:31:36.631" endtime="20241128 09:31:36.631"/>
</break>
<status status="NOT RUN" starttime="20241128 09:31:36.631" endtime="20241128 09:31:36.631"/>
</branch>
<status status="PASS" starttime="20241128 09:31:36.631" endtime="20241128 09:31:36.646"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 09:31:36.648" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\dd3ab623-08c8-4642-bc3b-4d6ade9b793d"}</msg>
<msg timestamp="20241128 09:31:37.310" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\dd3ab623-08c8-4642-bc3b-4d6ade9b793d"}</msg>
<status status="PASS" starttime="20241128 09:31:36.648" endtime="20241128 09:31:37.310"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 09:31:37.312" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 09:31:37.329" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 09:31:37.329" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 09:31:37.311" endtime="20241128 09:31:37.329"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 09:31:37.330" endtime="20241128 09:31:37.330"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:31:40.568" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 09:31:40.568" level="INFO">${page_id} = {'page_id': 'page=a46c4083-c9cf-4834-89fa-7c77fdfc28e9', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:31:37.331" endtime="20241128 09:31:40.568"/>
</kw>
<status status="PASS" starttime="20241128 09:31:36.648" endtime="20241128 09:31:40.568"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.569" endtime="20241128 09:31:40.575"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:31:40.580" endtime="20241128 09:31:40.580"/>
</kw>
<msg timestamp="20241128 09:31:40.580" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.580" endtime="20241128 09:31:40.580"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.581" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 09:31:40.581" endtime="20241128 09:31:40.581"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.582" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.581" endtime="20241128 09:31:40.582"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.581" endtime="20241128 09:31:40.582"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.582" endtime="20241128 09:31:40.582"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.582" endtime="20241128 09:31:40.582"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.581" endtime="20241128 09:31:40.582"/>
</if>
<status status="PASS" starttime="20241128 09:31:40.581" endtime="20241128 09:31:40.582"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.580" endtime="20241128 09:31:40.582"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.582" endtime="20241128 09:31:40.582"/>
</return>
<msg timestamp="20241128 09:31:40.582" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.578" endtime="20241128 09:31:40.583"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.583" endtime="20241128 09:31:40.583"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 09:31:40.583" endtime="20241128 09:31:40.583"/>
</return>
<status status="NOT RUN" starttime="20241128 09:31:40.583" endtime="20241128 09:31:40.583"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.583" endtime="20241128 09:31:40.583"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:31:40.585" endtime="20241128 09:31:40.586"/>
</kw>
<msg timestamp="20241128 09:31:40.586" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.585" endtime="20241128 09:31:40.586"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.587" level="INFO">${values} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:01:03.859...</msg>
<status status="PASS" starttime="20241128 09:31:40.586" endtime="20241128 09:31:40.587"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.587" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.587" endtime="20241128 09:31:40.587"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.587" endtime="20241128 09:31:40.587"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.587" endtime="20241128 09:31:40.587"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.587" endtime="20241128 09:31:40.588"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.587" endtime="20241128 09:31:40.588"/>
</if>
<status status="PASS" starttime="20241128 09:31:40.586" endtime="20241128 09:31:40.588"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.586" endtime="20241128 09:31:40.588"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.588" endtime="20241128 09:31:40.588"/>
</return>
<msg timestamp="20241128 09:31:40.588" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.585" endtime="20241128 09:31:40.588"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:31:40.590" endtime="20241128 09:31:40.590"/>
</kw>
<msg timestamp="20241128 09:31:40.590" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.590" endtime="20241128 09:31:40.590"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.591" level="INFO">${values} = {'id': '42', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:36.556Z', 'createdAt': '2024-11-28T04:01:36.556Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:31:40.591" endtime="20241128 09:31:40.591"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.592" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.592" endtime="20241128 09:31:40.592"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.592" endtime="20241128 09:31:40.592"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.593" endtime="20241128 09:31:40.593"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.592" endtime="20241128 09:31:40.594"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.591" endtime="20241128 09:31:40.594"/>
</if>
<status status="PASS" starttime="20241128 09:31:40.591" endtime="20241128 09:31:40.594"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.590" endtime="20241128 09:31:40.594"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.594" endtime="20241128 09:31:40.594"/>
</return>
<msg timestamp="20241128 09:31:40.595" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.589" endtime="20241128 09:31:40.595"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.596" endtime="20241128 09:31:40.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.596" endtime="20241128 09:31:40.596"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.595" endtime="20241128 09:31:40.596"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.597" level="INFO">${testCase} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:01:03.859...</msg>
<status status="PASS" starttime="20241128 09:31:40.596" endtime="20241128 09:31:40.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.597" level="INFO">${testCaseRun} = {'id': '42', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:36.556Z', 'createdAt': '2024-11-28T04:01:36.556Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:31:40.597" endtime="20241128 09:31:40.597"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.598" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 09:31:40.598" endtime="20241128 09:31:40.598"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.598" endtime="20241128 09:31:40.598"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:31:40.601" endtime="20241128 09:31:40.601"/>
</kw>
<msg timestamp="20241128 09:31:40.601" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.601" endtime="20241128 09:31:40.601"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.602" level="INFO">${values} = [{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:01:03.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</msg>
<status status="PASS" starttime="20241128 09:31:40.602" endtime="20241128 09:31:40.602"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.603" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.602" endtime="20241128 09:31:40.603"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.602" endtime="20241128 09:31:40.603"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.603" endtime="20241128 09:31:40.603"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.603" endtime="20241128 09:31:40.603"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.602" endtime="20241128 09:31:40.603"/>
</if>
<status status="PASS" starttime="20241128 09:31:40.601" endtime="20241128 09:31:40.603"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.601" endtime="20241128 09:31:40.603"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.603" endtime="20241128 09:31:40.603"/>
</return>
<msg timestamp="20241128 09:31:40.603" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.600" endtime="20241128 09:31:40.603"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:31:40.604" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '42', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 09:31:40.604" endtime="20241128 09:31:40.604"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:31:40.605" level="INFO">${json_response} = {"testCaseRunId": "42", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 09:31:40.604" endtime="20241128 09:31:40.605"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:31:40.629" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:31:40.629" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:31:40.605" endtime="20241128 09:31:40.629"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.630" endtime="20241128 09:31:40.630"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:31:40.630" endtime="20241128 09:31:40.630"/>
</return>
<status status="PASS" starttime="20241128 09:31:40.604" endtime="20241128 09:31:40.631"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:31:40.631" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 09:31:40.631" endtime="20241128 09:31:40.632"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:01:03.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.633" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 09:31:40.633" endtime="20241128 09:31:40.633"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.633" endtime="20241128 09:31:40.634"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:31:40.636" endtime="20241128 09:31:40.636"/>
</kw>
<msg timestamp="20241128 09:31:40.636" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.636" endtime="20241128 09:31:40.636"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.637" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 09:31:40.637" endtime="20241128 09:31:40.637"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.638" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</if>
<status status="PASS" starttime="20241128 09:31:40.636" endtime="20241128 09:31:40.638"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.636" endtime="20241128 09:31:40.638"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.638" endtime="20241128 09:31:40.638"/>
</return>
<msg timestamp="20241128 09:31:40.638" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:31:40.636" endtime="20241128 09:31:40.638"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.640" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241128 09:31:40.640" endtime="20241128 09:31:40.640"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.640" endtime="20241128 09:31:40.640"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:31:40.644" level="INFO">${input} = {'id': '29', 'actionId': '1', 'name': 'qa10', 'value': 'qa10', 'waitAfterAction': '0', 'isDefault': False, 'createdAt': '2024-11-25T17:36:35.013Z', 'updatedAt': '2024-11-25T17:36:35.013Z'}</msg>
<status status="PASS" starttime="20241128 09:31:40.640" endtime="20241128 09:31:40.644"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.646" endtime="20241128 09:31:40.646"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.646" endtime="20241128 09:31:40.646"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.645" endtime="20241128 09:31:40.646"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.645" endtime="20241128 09:31:40.647"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.648" level="INFO">${value} = qa10</msg>
<status status="PASS" starttime="20241128 09:31:40.647" endtime="20241128 09:31:40.648"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:31:40.833" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241128 09:31:40.835" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241128 09:31:40.835" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
=========================== logs ===========================
navigating to "qa10", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20241128 09:31:40.648" endtime="20241128 09:31:40.924"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.925" endtime="20241128 09:31:40.925"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.648" endtime="20241128 09:31:40.925"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.648" endtime="20241128 09:31:40.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:31:40.926" endtime="20241128 09:31:40.926"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.926" endtime="20241128 09:31:40.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.928" endtime="20241128 09:31:40.928"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.926" endtime="20241128 09:31:40.929"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.930" endtime="20241128 09:31:40.930"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.932" endtime="20241128 09:31:40.932"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.929" endtime="20241128 09:31:40.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.933" endtime="20241128 09:31:40.933"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.932" endtime="20241128 09:31:40.933"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.935" endtime="20241128 09:31:40.935"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.933" endtime="20241128 09:31:40.935"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.937" endtime="20241128 09:31:40.937"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.937" endtime="20241128 09:31:40.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.937" endtime="20241128 09:31:40.937"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:31:40.937" endtime="20241128 09:31:40.938"/>
</if>
<status status="NOT RUN" starttime="20241128 09:31:40.935" endtime="20241128 09:31:40.938"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.939" endtime="20241128 09:31:40.939"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.938" endtime="20241128 09:31:40.939"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.940"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.940"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.940"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.940"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.940"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:31:40.940" endtime="20241128 09:31:40.941"/>
</if>
<status status="NOT RUN" starttime="20241128 09:31:40.939" endtime="20241128 09:31:40.941"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:31:40.947" endtime="20241128 09:31:40.947"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.949" endtime="20241128 09:31:40.949"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.941" endtime="20241128 09:31:40.949"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.950" endtime="20241128 09:31:40.951"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.951"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.951"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.951"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.951"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.951"/>
</if>
<status status="NOT RUN" starttime="20241128 09:31:40.949" endtime="20241128 09:31:40.951"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:31:40.956" endtime="20241128 09:31:40.956"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.959" endtime="20241128 09:31:40.959"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.951" endtime="20241128 09:31:40.959"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.960" endtime="20241128 09:31:40.960"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.961" endtime="20241128 09:31:40.961"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.960" endtime="20241128 09:31:40.961"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.961" endtime="20241128 09:31:40.961"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.961" endtime="20241128 09:31:40.961"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:31:40.960" endtime="20241128 09:31:40.961"/>
</if>
<status status="NOT RUN" starttime="20241128 09:31:40.959" endtime="20241128 09:31:40.961"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.963" endtime="20241128 09:31:40.963"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.961" endtime="20241128 09:31:40.963"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:31:40.968" endtime="20241128 09:31:40.968"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.968" endtime="20241128 09:31:40.969"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.963" endtime="20241128 09:31:40.969"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.648" endtime="20241128 09:31:40.969"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.969" endtime="20241128 09:31:40.969"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241128 09:31:40.969" endtime="20241128 09:31:40.969"/>
</return>
<status status="FAIL" starttime="20241128 09:31:40.647" endtime="20241128 09:31:40.970"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241128 09:31:40.970" endtime="20241128 09:31:40.970"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.970" endtime="20241128 09:31:40.971"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241128 09:31:40.971" endtime="20241128 09:31:40.971"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.971" endtime="20241128 09:31:40.971"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.639" endtime="20241128 09:31:40.971"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:40.971" endtime="20241128 09:31:40.973"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:31:40.977" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 09:31:40.977" endtime="20241128 09:31:40.977"/>
</kw>
<msg timestamp="20241128 09:31:40.977" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:31:40.976" endtime="20241128 09:31:40.977"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.978"/>
</if>
<status status="NOT RUN" starttime="20241128 09:31:40.978" endtime="20241128 09:31:40.979"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.977" endtime="20241128 09:31:40.979"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:31:40.979" endtime="20241128 09:31:40.979"/>
</return>
<msg timestamp="20241128 09:31:40.979" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 09:31:40.976" endtime="20241128 09:31:40.979"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:31:40.979" endtime="20241128 09:31:40.979"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:40.979" endtime="20241128 09:31:40.979"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:31:40.980" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 09:31:40.980" endtime="20241128 09:31:40.980"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.979" endtime="20241128 09:31:40.980"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.979" endtime="20241128 09:31:40.980"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:31:40.981" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '447', 'status': 'FAILED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'qa10', 'errorMessage': 'Error: page.goto: P...</msg>
<status status="PASS" starttime="20241128 09:31:40.980" endtime="20241128 09:31:40.981"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:31:40.982" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "447", "status": "FAILED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "qa10", "errorMessage": "Error: page.goto: P...</msg>
<status status="PASS" starttime="20241128 09:31:40.982" endtime="20241128 09:31:40.982"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:31:41.028" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:31:41.028" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:31:40.982" endtime="20241128 09:31:41.028"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.028" endtime="20241128 09:31:41.029"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:31:41.029" endtime="20241128 09:31:41.029"/>
</return>
<status status="PASS" starttime="20241128 09:31:40.981" endtime="20241128 09:31:41.029"/>
</kw>
<status status="PASS" starttime="20241128 09:31:40.973" endtime="20241128 09:31:41.030"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.030" endtime="20241128 09:31:41.031"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:31:41.032" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
=========================== logs ===========================
navigating to "qa10", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20241128 09:31:41.031" endtime="20241128 09:31:41.032"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:41.030" endtime="20241128 09:31:41.033"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.971" endtime="20241128 09:31:41.033"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.639" endtime="20241128 09:31:41.033"/>
</try>
<status status="FAIL" starttime="20241128 09:31:40.639" endtime="20241128 09:31:41.034"/>
</iter>
<status status="FAIL" starttime="20241128 09:31:40.639" endtime="20241128 09:31:41.034"/>
</for>
<status status="FAIL" starttime="20241128 09:31:40.639" endtime="20241128 09:31:41.034"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.638" endtime="20241128 09:31:41.035"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241128 09:31:41.035" endtime="20241128 09:31:41.035"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.633" endtime="20241128 09:31:41.035"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.036" endtime="20241128 09:31:41.037"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:31:41.038" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '113', 'status': 'FAILED', 'errorMessage': 'Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\n=========================== logs =======...</msg>
<status status="PASS" starttime="20241128 09:31:41.038" endtime="20241128 09:31:41.038"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:31:41.040" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "113", "status": "FAILED", "errorMessage": "Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\n=========================== logs =======...</msg>
<status status="PASS" starttime="20241128 09:31:41.039" endtime="20241128 09:31:41.040"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:31:41.048" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:31:41.048" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:31:41.040" endtime="20241128 09:31:41.048"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.048" endtime="20241128 09:31:41.049"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:31:41.049" endtime="20241128 09:31:41.049"/>
</return>
<status status="PASS" starttime="20241128 09:31:41.039" endtime="20241128 09:31:41.049"/>
</kw>
<status status="PASS" starttime="20241128 09:31:41.037" endtime="20241128 09:31:41.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.050" endtime="20241128 09:31:41.051"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:31:41.052" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
=========================== logs ===========================
navigating to "qa10", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20241128 09:31:41.051" endtime="20241128 09:31:41.052"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:41.050" endtime="20241128 09:31:41.054"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:41.035" endtime="20241128 09:31:41.054"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.633" endtime="20241128 09:31:41.054"/>
</try>
<status status="FAIL" starttime="20241128 09:31:40.632" endtime="20241128 09:31:41.055"/>
</iter>
<status status="FAIL" starttime="20241128 09:31:40.632" endtime="20241128 09:31:41.055"/>
</for>
<status status="FAIL" starttime="20241128 09:31:40.631" endtime="20241128 09:31:41.056"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.631" endtime="20241128 09:31:41.056"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241128 09:31:41.056" endtime="20241128 09:31:41.056"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.599" endtime="20241128 09:31:41.056"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.057" endtime="20241128 09:31:41.057"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:31:41.059" level="INFO">${response_message} = {'testCaseRunId': '42', 'status': 'FAIL', 'errorMessage': 'Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\n=========================== logs ==========================...</msg>
<status status="PASS" starttime="20241128 09:31:41.058" endtime="20241128 09:31:41.059"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:31:41.061" level="INFO">${json_response} = {"testCaseRunId": "42", "status": "FAIL", "errorMessage": "Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL\n=========================== logs ==========================...</msg>
<status status="PASS" starttime="20241128 09:31:41.060" endtime="20241128 09:31:41.061"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:31:41.079" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:31:41.079" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:31:41.062" endtime="20241128 09:31:41.079"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.080" endtime="20241128 09:31:41.080"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:31:41.080" endtime="20241128 09:31:41.080"/>
</return>
<status status="PASS" starttime="20241128 09:31:41.060" endtime="20241128 09:31:41.081"/>
</kw>
<status status="PASS" starttime="20241128 09:31:41.058" endtime="20241128 09:31:41.081"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.081" endtime="20241128 09:31:41.082"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241128 09:31:41.083" level="FAIL">Error: page.goto: Protocol error (Page.navigate): Cannot navigate to invalid URL
=========================== logs ===========================
navigating to "qa10", waiting until "load"
============================================================</msg>
<status status="FAIL" starttime="20241128 09:31:41.083" endtime="20241128 09:31:41.083"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:41.081" endtime="20241128 09:31:41.084"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:41.056" endtime="20241128 09:31:41.084"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.599" endtime="20241128 09:31:41.085"/>
</try>
<status status="FAIL" starttime="20241128 09:31:40.583" endtime="20241128 09:31:41.085"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:41.085" endtime="20241128 09:31:41.085"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:41.085" endtime="20241128 09:31:41.085"/>
</branch>
<status status="FAIL" starttime="20241128 09:31:40.583" endtime="20241128 09:31:41.085"/>
</if>
<status status="FAIL" starttime="20241128 09:31:40.569" endtime="20241128 09:31:41.086"/>
</kw>
<status status="FAIL" starttime="20241128 09:31:40.569" endtime="20241128 09:31:41.086"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.086" endtime="20241128 09:31:41.088"/>
</kw>
<status status="PASS" starttime="20241128 09:31:41.086" endtime="20241128 09:31:41.088"/>
</branch>
<status status="PASS" starttime="20241128 09:31:40.569" endtime="20241128 09:31:41.088"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 09:31:41.299" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 09:31:41.089" endtime="20241128 09:31:41.299"/>
</kw>
<status status="PASS" starttime="20241128 09:31:41.089" endtime="20241128 09:31:41.299"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:31:41.300" endtime="20241128 09:31:41.300"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:31:41.299" endtime="20241128 09:31:41.300"/>
</branch>
<status status="PASS" starttime="20241128 09:31:41.089" endtime="20241128 09:31:41.300"/>
</try>
<status status="PASS" starttime="20241128 09:31:41.088" endtime="20241128 09:31:41.300"/>
</kw>
<status status="PASS" starttime="20241128 09:24:46.278" endtime="20241128 09:31:41.300"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:31:41.300" endtime="20241128 09:31:41.301"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 09:31:57.790" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '43', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:57.718Z', 'createdAt': '2024-11-28T04:01:57.718Z', 'errorMes...</msg>
<status status="PASS" starttime="20241128 09:31:41.301" endtime="20241128 09:31:57.790"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 09:31:57.791" endtime="20241128 09:31:57.791"/>
</break>
<status status="NOT RUN" starttime="20241128 09:31:57.791" endtime="20241128 09:31:57.791"/>
</branch>
<status status="PASS" starttime="20241128 09:31:57.791" endtime="20241128 09:31:57.792"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 09:31:57.796" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9800905c-f61e-4002-b703-d74e28f679c1"}</msg>
<msg timestamp="20241128 09:31:58.303" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\9800905c-f61e-4002-b703-d74e28f679c1"}</msg>
<status status="PASS" starttime="20241128 09:31:57.794" endtime="20241128 09:31:58.303"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 09:31:58.305" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 09:31:58.322" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 09:31:58.322" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 09:31:58.304" endtime="20241128 09:31:58.322"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 09:31:58.323" endtime="20241128 09:31:58.325"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:32:01.929" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 09:32:01.929" level="INFO">${page_id} = {'page_id': 'page=40114bd7-f5f7-443f-9190-7bb7b16dd899', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:31:58.325" endtime="20241128 09:32:01.929"/>
</kw>
<status status="PASS" starttime="20241128 09:31:57.792" endtime="20241128 09:32:01.929"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:01.930" endtime="20241128 09:32:01.937"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:01.941" endtime="20241128 09:32:01.941"/>
</kw>
<msg timestamp="20241128 09:32:01.941" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.940" endtime="20241128 09:32:01.941"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.943" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 09:32:01.942" endtime="20241128 09:32:01.943"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.943" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.943" endtime="20241128 09:32:01.943"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.943" endtime="20241128 09:32:01.944"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.944" endtime="20241128 09:32:01.944"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:01.944" endtime="20241128 09:32:01.944"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.943" endtime="20241128 09:32:01.944"/>
</if>
<status status="PASS" starttime="20241128 09:32:01.942" endtime="20241128 09:32:01.944"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.942" endtime="20241128 09:32:01.944"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:01.944" endtime="20241128 09:32:01.944"/>
</return>
<msg timestamp="20241128 09:32:01.945" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.939" endtime="20241128 09:32:01.945"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.945" endtime="20241128 09:32:01.945"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 09:32:01.945" endtime="20241128 09:32:01.945"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:01.945" endtime="20241128 09:32:01.945"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.945" endtime="20241128 09:32:01.946"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:01.948" endtime="20241128 09:32:01.948"/>
</kw>
<msg timestamp="20241128 09:32:01.948" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.948" endtime="20241128 09:32:01.948"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.949" level="INFO">${values} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:01:55.420...</msg>
<status status="PASS" starttime="20241128 09:32:01.949" endtime="20241128 09:32:01.949"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.950" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.949" endtime="20241128 09:32:01.950"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.949" endtime="20241128 09:32:01.950"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.950" endtime="20241128 09:32:01.950"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:01.950" endtime="20241128 09:32:01.950"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.949" endtime="20241128 09:32:01.950"/>
</if>
<status status="PASS" starttime="20241128 09:32:01.948" endtime="20241128 09:32:01.950"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.948" endtime="20241128 09:32:01.950"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:01.950" endtime="20241128 09:32:01.950"/>
</return>
<msg timestamp="20241128 09:32:01.950" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.947" endtime="20241128 09:32:01.950"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:01.952" endtime="20241128 09:32:01.953"/>
</kw>
<msg timestamp="20241128 09:32:01.953" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.952" endtime="20241128 09:32:01.953"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.953" level="INFO">${values} = {'id': '43', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:57.718Z', 'createdAt': '2024-11-28T04:01:57.718Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:32:01.953" endtime="20241128 09:32:01.953"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.954" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.954" endtime="20241128 09:32:01.954"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.953" endtime="20241128 09:32:01.954"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.954" endtime="20241128 09:32:01.954"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:01.954" endtime="20241128 09:32:01.954"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.953" endtime="20241128 09:32:01.954"/>
</if>
<status status="PASS" starttime="20241128 09:32:01.953" endtime="20241128 09:32:01.954"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.953" endtime="20241128 09:32:01.954"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:01.954" endtime="20241128 09:32:01.954"/>
</return>
<msg timestamp="20241128 09:32:01.955" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.952" endtime="20241128 09:32:01.955"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.955" endtime="20241128 09:32:01.955"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:01.955" endtime="20241128 09:32:01.955"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.955" endtime="20241128 09:32:01.955"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.956" level="INFO">${testCase} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:01:55.420...</msg>
<status status="PASS" starttime="20241128 09:32:01.955" endtime="20241128 09:32:01.956"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.957" level="INFO">${testCaseRun} = {'id': '43', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:01:57.718Z', 'createdAt': '2024-11-28T04:01:57.718Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:32:01.957" endtime="20241128 09:32:01.957"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.958" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 09:32:01.957" endtime="20241128 09:32:01.958"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:01.958" endtime="20241128 09:32:01.959"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:01.962" endtime="20241128 09:32:01.962"/>
</kw>
<msg timestamp="20241128 09:32:01.962" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.961" endtime="20241128 09:32:01.962"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.963" level="INFO">${values} = [{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:01:55.457Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</msg>
<status status="PASS" starttime="20241128 09:32:01.962" endtime="20241128 09:32:01.963"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.963" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.963" endtime="20241128 09:32:01.963"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.963" endtime="20241128 09:32:01.964"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:01.964" endtime="20241128 09:32:01.964"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:01.964" endtime="20241128 09:32:01.964"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.963" endtime="20241128 09:32:01.964"/>
</if>
<status status="PASS" starttime="20241128 09:32:01.962" endtime="20241128 09:32:01.964"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.962" endtime="20241128 09:32:01.964"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:01.964" endtime="20241128 09:32:01.964"/>
</return>
<msg timestamp="20241128 09:32:01.964" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:01.961" endtime="20241128 09:32:01.964"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:01.965" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '43', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 09:32:01.965" endtime="20241128 09:32:01.965"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:01.966" level="INFO">${json_response} = {"testCaseRunId": "43", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 09:32:01.965" endtime="20241128 09:32:01.966"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:01.995" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:01.995" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:01.966" endtime="20241128 09:32:01.995"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:01.995" endtime="20241128 09:32:01.996"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:01.996" endtime="20241128 09:32:01.996"/>
</return>
<status status="PASS" starttime="20241128 09:32:01.965" endtime="20241128 09:32:01.997"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:01.997" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 09:32:01.997" endtime="20241128 09:32:01.997"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:01:55.457Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:01.998" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 09:32:01.998" endtime="20241128 09:32:01.998"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:01.999" endtime="20241128 09:32:01.999"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:02.002" endtime="20241128 09:32:02.002"/>
</kw>
<msg timestamp="20241128 09:32:02.002" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:02.002" endtime="20241128 09:32:02.002"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:02.003" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 09:32:02.003" endtime="20241128 09:32:02.003"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:02.004" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:02.003" endtime="20241128 09:32:02.004"/>
</kw>
<status status="PASS" starttime="20241128 09:32:02.003" endtime="20241128 09:32:02.004"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:02.004" endtime="20241128 09:32:02.004"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:02.004" endtime="20241128 09:32:02.004"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.003" endtime="20241128 09:32:02.004"/>
</if>
<status status="PASS" starttime="20241128 09:32:02.003" endtime="20241128 09:32:02.004"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.002" endtime="20241128 09:32:02.004"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:02.004" endtime="20241128 09:32:02.004"/>
</return>
<msg timestamp="20241128 09:32:02.005" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:02.001" endtime="20241128 09:32:02.005"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:02.006" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:02.006"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:02.006" endtime="20241128 09:32:02.006"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:02.008" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241128 09:32:02.006" endtime="20241128 09:32:02.008"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:02.008" endtime="20241128 09:32:02.008"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:02.009" endtime="20241128 09:32:02.009"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:02.008" endtime="20241128 09:32:02.009"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.008" endtime="20241128 09:32:02.009"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:02.010" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:02.009" endtime="20241128 09:32:02.010"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:32:07.104" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241128 09:32:07.105" level="INFO">${page_id} = {'page_id': 'page=cef973fc-a572-44b5-babe-1f1932dc5774', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:32:02.011" endtime="20241128 09:32:07.105"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 09:32:07.106" level="INFO">Switching to page {'page_id': 'page=cef973fc-a572-44b5-babe-1f1932dc5774', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 09:32:07.149" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=cc5c3f00-aca4-4091-b563-ec7003a27058",
    "contexts": [
      {
        "type": "context",
        "id": "context=88d638bf-3f09-4dce-926c-cb375ec0e331",
        "activePage": "page=cef973fc-a572-44b5-babe-1f1932dc5774",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=40114bd7-f5f7-443f-9190-7bb7b16dd899",
            "timestamp": 1732766518.61
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=cef973fc-a572-44b5-babe-1f1932dc5774",
            "timestamp": 1732766522.041
          }
        ]
      }
    ],
    "activeContext": "context=88d638bf-3f09-4dce-926c-cb375ec0e331",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 09:32:07.162" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 09:32:07.105" endtime="20241128 09:32:07.162"/>
</kw>
<status status="PASS" starttime="20241128 09:32:02.010" endtime="20241128 09:32:07.162"/>
</kw>
<status status="PASS" starttime="20241128 09:32:02.010" endtime="20241128 09:32:07.162"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.163" endtime="20241128 09:32:07.163"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.163" endtime="20241128 09:32:07.163"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.165" endtime="20241128 09:32:07.165"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.163" endtime="20241128 09:32:07.165"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.167" endtime="20241128 09:32:07.167"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.170" endtime="20241128 09:32:07.170"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.166" endtime="20241128 09:32:07.170"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.170" endtime="20241128 09:32:07.170"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.170" endtime="20241128 09:32:07.170"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.173" endtime="20241128 09:32:07.174"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.170" endtime="20241128 09:32:07.174"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.176" endtime="20241128 09:32:07.176"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.177" endtime="20241128 09:32:07.177"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.177" endtime="20241128 09:32:07.177"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.177" endtime="20241128 09:32:07.178"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.174" endtime="20241128 09:32:07.178"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.180" endtime="20241128 09:32:07.180"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.178" endtime="20241128 09:32:07.180"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.182" endtime="20241128 09:32:07.182"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.183" endtime="20241128 09:32:07.183"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.183" endtime="20241128 09:32:07.183"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.183" endtime="20241128 09:32:07.183"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.183" endtime="20241128 09:32:07.184"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.183" endtime="20241128 09:32:07.184"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.180" endtime="20241128 09:32:07.184"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.190" endtime="20241128 09:32:07.190"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.193" endtime="20241128 09:32:07.193"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.184" endtime="20241128 09:32:07.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.194" endtime="20241128 09:32:07.195"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.195" endtime="20241128 09:32:07.195"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.195" endtime="20241128 09:32:07.195"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.195" endtime="20241128 09:32:07.195"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.195" endtime="20241128 09:32:07.196"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.195" endtime="20241128 09:32:07.196"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.193" endtime="20241128 09:32:07.196"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.204" endtime="20241128 09:32:07.204"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.208" endtime="20241128 09:32:07.209"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.196" endtime="20241128 09:32:07.209"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.211" endtime="20241128 09:32:07.211"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.212" endtime="20241128 09:32:07.212"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.211" endtime="20241128 09:32:07.212"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.212" endtime="20241128 09:32:07.212"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.212" endtime="20241128 09:32:07.212"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.211" endtime="20241128 09:32:07.212"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.209" endtime="20241128 09:32:07.212"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.214" endtime="20241128 09:32:07.215"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.213" endtime="20241128 09:32:07.215"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.223" endtime="20241128 09:32:07.223"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.223" endtime="20241128 09:32:07.223"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.215" endtime="20241128 09:32:07.223"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.010" endtime="20241128 09:32:07.223"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.224" endtime="20241128 09:32:07.224"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:07.224" endtime="20241128 09:32:07.225"/>
</return>
<msg timestamp="20241128 09:32:07.225" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:02.009" endtime="20241128 09:32:07.225"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.227" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 09:32:07.226" endtime="20241128 09:32:07.227"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.227" endtime="20241128 09:32:07.227"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.228" endtime="20241128 09:32:07.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.228" endtime="20241128 09:32:07.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.228" endtime="20241128 09:32:07.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.228" endtime="20241128 09:32:07.228"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.228" endtime="20241128 09:32:07.229"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.229" endtime="20241128 09:32:07.229"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.229" endtime="20241128 09:32:07.229"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.230" endtime="20241128 09:32:07.230"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.231" endtime="20241128 09:32:07.231"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.232"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.232"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.232"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.232"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.232"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.233"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.233"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.233"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.233"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.233"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.233"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.233"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.232" endtime="20241128 09:32:07.233"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.234" endtime="20241128 09:32:07.235"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.234" endtime="20241128 09:32:07.236"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.237"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.237" endtime="20241128 09:32:07.237"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.237" endtime="20241128 09:32:07.237"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.237" endtime="20241128 09:32:07.237"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.238" endtime="20241128 09:32:07.238"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.238" endtime="20241128 09:32:07.238"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.238" endtime="20241128 09:32:07.238"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.238" endtime="20241128 09:32:07.238"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.238"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.233" endtime="20241128 09:32:07.238"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.227" endtime="20241128 09:32:07.238"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:07.227" endtime="20241128 09:32:07.238"/>
</for>
<msg timestamp="20241128 09:32:07.239" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:07.225" endtime="20241128 09:32:07.239"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.239" endtime="20241128 09:32:07.240"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:32:07.244" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 09:32:07.244" endtime="20241128 09:32:07.245"/>
</kw>
<msg timestamp="20241128 09:32:07.245" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:32:07.243" endtime="20241128 09:32:07.245"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.245" endtime="20241128 09:32:07.245"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.246" endtime="20241128 09:32:07.246"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.245" endtime="20241128 09:32:07.246"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.246" endtime="20241128 09:32:07.246"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.246" endtime="20241128 09:32:07.246"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.245" endtime="20241128 09:32:07.246"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.245" endtime="20241128 09:32:07.246"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.245" endtime="20241128 09:32:07.246"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:07.246" endtime="20241128 09:32:07.247"/>
</return>
<msg timestamp="20241128 09:32:07.247" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 09:32:07.243" endtime="20241128 09:32:07.247"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.247" endtime="20241128 09:32:07.247"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.247" endtime="20241128 09:32:07.247"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.249" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 09:32:07.248" endtime="20241128 09:32:07.249"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.248" endtime="20241128 09:32:07.249"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.247" endtime="20241128 09:32:07.249"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.252" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '455', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241128 09:32:07.249" endtime="20241128 09:32:07.253"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:07.254" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "455", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241128 09:32:07.253" endtime="20241128 09:32:07.254"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:07.262" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:07.263" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:07.254" endtime="20241128 09:32:07.263"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.263" endtime="20241128 09:32:07.264"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:07.264" endtime="20241128 09:32:07.264"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.253" endtime="20241128 09:32:07.265"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.240" endtime="20241128 09:32:07.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:07.265" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:07.265" endtime="20241128 09:32:07.265"/>
</kw>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:07.266"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.266" endtime="20241128 09:32:07.266"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.266" endtime="20241128 09:32:07.266"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.266" endtime="20241128 09:32:07.267"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.266" endtime="20241128 09:32:07.267"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:07.267"/>
</try>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:07.267"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.270" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241128 09:32:07.269" endtime="20241128 09:32:07.270"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.270" endtime="20241128 09:32:07.271"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:07.271" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241128 09:32:07.271" endtime="20241128 09:32:07.271"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.272" endtime="20241128 09:32:07.272"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.272" endtime="20241128 09:32:07.272"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.272" endtime="20241128 09:32:07.272"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.271" endtime="20241128 09:32:07.272"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.273" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:07.273" endtime="20241128 09:32:07.273"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.274" endtime="20241128 09:32:07.274"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.273" endtime="20241128 09:32:07.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.274" endtime="20241128 09:32:07.274"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.274" endtime="20241128 09:32:07.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.276" endtime="20241128 09:32:07.277"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.274" endtime="20241128 09:32:07.277"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.278" endtime="20241128 09:32:07.279"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.280" endtime="20241128 09:32:07.280"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.277" endtime="20241128 09:32:07.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.282" endtime="20241128 09:32:07.282"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.281" endtime="20241128 09:32:07.282"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.287" endtime="20241128 09:32:07.287"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.282" endtime="20241128 09:32:07.288"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.314" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:07.294" endtime="20241128 09:32:07.315"/>
</kw>
<msg timestamp="20241128 09:32:07.315" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.294" endtime="20241128 09:32:07.315"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.315" endtime="20241128 09:32:07.315"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.294" endtime="20241128 09:32:07.315"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.315" endtime="20241128 09:32:07.315"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.315" endtime="20241128 09:32:07.316"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.315" endtime="20241128 09:32:07.316"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.294" endtime="20241128 09:32:07.316"/>
</try>
<msg timestamp="20241128 09:32:07.316" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.294" endtime="20241128 09:32:07.316"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.316" endtime="20241128 09:32:07.316"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.293" endtime="20241128 09:32:07.316"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.316" endtime="20241128 09:32:07.316"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.316" endtime="20241128 09:32:07.316"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.293" endtime="20241128 09:32:07.317"/>
</try>
<msg timestamp="20241128 09:32:07.317" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.292" endtime="20241128 09:32:07.317"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.321" endtime="20241128 09:32:07.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.321" endtime="20241128 09:32:07.321"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.320" endtime="20241128 09:32:07.321"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.320" endtime="20241128 09:32:07.321"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.319" endtime="20241128 09:32:07.321"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.292" endtime="20241128 09:32:07.322"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.339" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:07.331" endtime="20241128 09:32:07.339"/>
</kw>
<msg timestamp="20241128 09:32:07.339" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.331" endtime="20241128 09:32:07.339"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.339" endtime="20241128 09:32:07.339"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.331" endtime="20241128 09:32:07.339"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.340" endtime="20241128 09:32:07.340"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.340" endtime="20241128 09:32:07.340"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.339" endtime="20241128 09:32:07.340"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.331" endtime="20241128 09:32:07.340"/>
</try>
<msg timestamp="20241128 09:32:07.340" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.330" endtime="20241128 09:32:07.340"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.340" endtime="20241128 09:32:07.340"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.330" endtime="20241128 09:32:07.341"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.341" endtime="20241128 09:32:07.341"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.341" endtime="20241128 09:32:07.341"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.329" endtime="20241128 09:32:07.341"/>
</try>
<msg timestamp="20241128 09:32:07.341" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.329" endtime="20241128 09:32:07.341"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.343" endtime="20241128 09:32:07.343"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.343" endtime="20241128 09:32:07.343"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.343" endtime="20241128 09:32:07.344"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.343" endtime="20241128 09:32:07.344"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.342" endtime="20241128 09:32:07.344"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.329" endtime="20241128 09:32:07.344"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:07.360" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:07.361" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:07.344" endtime="20241128 09:32:07.361"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:07.361" endtime="20241128 09:32:07.361"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.344" endtime="20241128 09:32:07.361"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.361" endtime="20241128 09:32:07.361"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.362" endtime="20241128 09:32:07.362"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.361" endtime="20241128 09:32:07.362"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.344" endtime="20241128 09:32:07.362"/>
</try>
<msg timestamp="20241128 09:32:07.362" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:07.326" endtime="20241128 09:32:07.362"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.364" endtime="20241128 09:32:07.365"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.365" endtime="20241128 09:32:07.365"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.364" endtime="20241128 09:32:07.365"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.364" endtime="20241128 09:32:07.365"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.363" endtime="20241128 09:32:07.365"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.325" endtime="20241128 09:32:07.365"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.365" endtime="20241128 09:32:07.366"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.365" endtime="20241128 09:32:07.366"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.325" endtime="20241128 09:32:07.366"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.324" endtime="20241128 09:32:07.366"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.377" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:07.372" endtime="20241128 09:32:07.377"/>
</kw>
<msg timestamp="20241128 09:32:07.377" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.372" endtime="20241128 09:32:07.377"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.377" endtime="20241128 09:32:07.377"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.372" endtime="20241128 09:32:07.377"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.378" endtime="20241128 09:32:07.378"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.378" endtime="20241128 09:32:07.378"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.377" endtime="20241128 09:32:07.378"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.372" endtime="20241128 09:32:07.378"/>
</try>
<msg timestamp="20241128 09:32:07.378" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.371" endtime="20241128 09:32:07.378"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.378" endtime="20241128 09:32:07.379"/>
</return>
<msg timestamp="20241128 09:32:07.379" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.369" endtime="20241128 09:32:07.379"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.381" endtime="20241128 09:32:07.381"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.381" endtime="20241128 09:32:07.381"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.381" endtime="20241128 09:32:07.381"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.381" endtime="20241128 09:32:07.381"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.380" endtime="20241128 09:32:07.382"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.368" endtime="20241128 09:32:07.382"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.290" endtime="20241128 09:32:07.382"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.404" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241128 09:32:07.388" endtime="20241128 09:32:07.404"/>
</kw>
<msg timestamp="20241128 09:32:07.405" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.388" endtime="20241128 09:32:07.405"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.405" endtime="20241128 09:32:07.405"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.388" endtime="20241128 09:32:07.405"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.405" endtime="20241128 09:32:07.405"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.405" endtime="20241128 09:32:07.405"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.405" endtime="20241128 09:32:07.406"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.388" endtime="20241128 09:32:07.406"/>
</try>
<msg timestamp="20241128 09:32:07.406" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.387" endtime="20241128 09:32:07.406"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.406" endtime="20241128 09:32:07.406"/>
</return>
<msg timestamp="20241128 09:32:07.406" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.384" endtime="20241128 09:32:07.406"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.409" endtime="20241128 09:32:07.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.409" endtime="20241128 09:32:07.409"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.409" endtime="20241128 09:32:07.409"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.409" endtime="20241128 09:32:07.409"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.408" endtime="20241128 09:32:07.410"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.383" endtime="20241128 09:32:07.410"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.410" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:07.410" endtime="20241128 09:32:07.410"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.412" endtime="20241128 09:32:07.413"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.414" endtime="20241128 09:32:07.415"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.412" endtime="20241128 09:32:07.415"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:07.415" endtime="20241128 09:32:07.415"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.415" endtime="20241128 09:32:07.416"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.412" endtime="20241128 09:32:07.416"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:07.417" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:07.416" endtime="20241128 09:32:07.490"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.416" endtime="20241128 09:32:07.490"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.490" endtime="20241128 09:32:07.490"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.491" endtime="20241128 09:32:07.491"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.490" endtime="20241128 09:32:07.491"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.416" endtime="20241128 09:32:07.491"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.411" endtime="20241128 09:32:07.491"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.411" endtime="20241128 09:32:07.491"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.410" endtime="20241128 09:32:07.491"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.491" endtime="20241128 09:32:07.491"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.491" endtime="20241128 09:32:07.492"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.410" endtime="20241128 09:32:07.492"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.290" endtime="20241128 09:32:07.492"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.492" endtime="20241128 09:32:07.492"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.492" endtime="20241128 09:32:07.492"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.492" endtime="20241128 09:32:07.493"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.288" endtime="20241128 09:32:07.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.494" endtime="20241128 09:32:07.494"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.493" endtime="20241128 09:32:07.494"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.495" endtime="20241128 09:32:07.495"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.495" endtime="20241128 09:32:07.496"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.495" endtime="20241128 09:32:07.496"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.496" endtime="20241128 09:32:07.496"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.496" endtime="20241128 09:32:07.496"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.495" endtime="20241128 09:32:07.496"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.494" endtime="20241128 09:32:07.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.503" endtime="20241128 09:32:07.503"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.507" endtime="20241128 09:32:07.508"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.496" endtime="20241128 09:32:07.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.509" endtime="20241128 09:32:07.509"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.510" endtime="20241128 09:32:07.510"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.509" endtime="20241128 09:32:07.510"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.510" endtime="20241128 09:32:07.510"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.510" endtime="20241128 09:32:07.510"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.509" endtime="20241128 09:32:07.510"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.508" endtime="20241128 09:32:07.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.516" endtime="20241128 09:32:07.516"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.520" endtime="20241128 09:32:07.520"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.510" endtime="20241128 09:32:07.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.521" endtime="20241128 09:32:07.521"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.521" endtime="20241128 09:32:07.522"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.521" endtime="20241128 09:32:07.522"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.522" endtime="20241128 09:32:07.522"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.522" endtime="20241128 09:32:07.522"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.521" endtime="20241128 09:32:07.522"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.520" endtime="20241128 09:32:07.522"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.524" endtime="20241128 09:32:07.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.522" endtime="20241128 09:32:07.524"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.529" endtime="20241128 09:32:07.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.529" endtime="20241128 09:32:07.529"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.524" endtime="20241128 09:32:07.530"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.273" endtime="20241128 09:32:07.530"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.530" endtime="20241128 09:32:07.530"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:07.531" endtime="20241128 09:32:07.531"/>
</return>
<msg timestamp="20241128 09:32:07.531" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:07.273" endtime="20241128 09:32:07.531"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.532" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 09:32:07.532" endtime="20241128 09:32:07.532"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.532" endtime="20241128 09:32:07.532"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.532" endtime="20241128 09:32:07.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.533" endtime="20241128 09:32:07.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.533" endtime="20241128 09:32:07.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.533" endtime="20241128 09:32:07.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.533" endtime="20241128 09:32:07.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.533" endtime="20241128 09:32:07.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.534" endtime="20241128 09:32:07.534"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.535" endtime="20241128 09:32:07.535"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.537"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.537"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.537"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.537"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.538"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.538"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.538" endtime="20241128 09:32:07.538"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.537" endtime="20241128 09:32:07.539"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.539"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.539"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.540"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.540"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.540" endtime="20241128 09:32:07.540"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.540" endtime="20241128 09:32:07.540"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.540" endtime="20241128 09:32:07.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.540" endtime="20241128 09:32:07.540"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.539" endtime="20241128 09:32:07.540"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.532" endtime="20241128 09:32:07.540"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:07.532" endtime="20241128 09:32:07.540"/>
</for>
<msg timestamp="20241128 09:32:07.541" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:07.531" endtime="20241128 09:32:07.541"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.541" endtime="20241128 09:32:07.541"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:07.545" endtime="20241128 09:32:07.545"/>
</kw>
<msg timestamp="20241128 09:32:07.546" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.545" endtime="20241128 09:32:07.546"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.546" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241128 09:32:07.546" endtime="20241128 09:32:07.546"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.547" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.547" endtime="20241128 09:32:07.547"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.546" endtime="20241128 09:32:07.547"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.547" endtime="20241128 09:32:07.547"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.547" endtime="20241128 09:32:07.547"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.546" endtime="20241128 09:32:07.547"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.546" endtime="20241128 09:32:07.547"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.546" endtime="20241128 09:32:07.547"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:07.548" endtime="20241128 09:32:07.548"/>
</return>
<msg timestamp="20241128 09:32:07.548" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.544" endtime="20241128 09:32:07.548"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.549" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241128 09:32:07.548" endtime="20241128 09:32:07.549"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.548" endtime="20241128 09:32:07.549"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.549" endtime="20241128 09:32:07.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.549" endtime="20241128 09:32:07.549"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.548" endtime="20241128 09:32:07.549"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.550" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '456', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241128 09:32:07.549" endtime="20241128 09:32:07.550"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:07.552" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "456", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241128 09:32:07.551" endtime="20241128 09:32:07.552"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:07.581" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:07.581" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:07.552" endtime="20241128 09:32:07.581"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.582" endtime="20241128 09:32:07.582"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:07.582" endtime="20241128 09:32:07.582"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.551" endtime="20241128 09:32:07.582"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.542" endtime="20241128 09:32:07.582"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:07.583" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:07.582" endtime="20241128 09:32:07.583"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.269" endtime="20241128 09:32:07.583"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.583" endtime="20241128 09:32:07.583"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.583" endtime="20241128 09:32:07.584"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.584" endtime="20241128 09:32:07.584"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.583" endtime="20241128 09:32:07.584"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.269" endtime="20241128 09:32:07.584"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.268" endtime="20241128 09:32:07.584"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.585" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241128 09:32:07.585" endtime="20241128 09:32:07.585"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.585" endtime="20241128 09:32:07.586"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:07.586" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241128 09:32:07.586" endtime="20241128 09:32:07.586"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.588" endtime="20241128 09:32:07.588"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.588" endtime="20241128 09:32:07.588"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.586" endtime="20241128 09:32:07.588"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.586" endtime="20241128 09:32:07.588"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.589" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:32:07.589" endtime="20241128 09:32:07.589"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.589" endtime="20241128 09:32:07.589"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.589" endtime="20241128 09:32:07.589"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.590" endtime="20241128 09:32:07.590"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.589" endtime="20241128 09:32:07.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.591" endtime="20241128 09:32:07.591"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.590" endtime="20241128 09:32:07.591"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.593" endtime="20241128 09:32:07.593"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.595" endtime="20241128 09:32:07.595"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.592" endtime="20241128 09:32:07.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.596" endtime="20241128 09:32:07.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.595" endtime="20241128 09:32:07.597"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.599" endtime="20241128 09:32:07.599"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.597" endtime="20241128 09:32:07.599"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.614" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:07.607" endtime="20241128 09:32:07.614"/>
</kw>
<msg timestamp="20241128 09:32:07.615" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.607" endtime="20241128 09:32:07.615"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.615" endtime="20241128 09:32:07.615"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.607" endtime="20241128 09:32:07.615"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.615" endtime="20241128 09:32:07.615"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.615" endtime="20241128 09:32:07.616"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.615" endtime="20241128 09:32:07.616"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.607" endtime="20241128 09:32:07.616"/>
</try>
<msg timestamp="20241128 09:32:07.616" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.606" endtime="20241128 09:32:07.616"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.616" endtime="20241128 09:32:07.616"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.606" endtime="20241128 09:32:07.616"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.616" endtime="20241128 09:32:07.616"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.616" endtime="20241128 09:32:07.616"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.605" endtime="20241128 09:32:07.616"/>
</try>
<msg timestamp="20241128 09:32:07.617" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.605" endtime="20241128 09:32:07.617"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.620" endtime="20241128 09:32:07.621"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.621" endtime="20241128 09:32:07.621"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.620" endtime="20241128 09:32:07.621"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.620" endtime="20241128 09:32:07.621"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.618" endtime="20241128 09:32:07.622"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.605" endtime="20241128 09:32:07.622"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.643" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:07.631" endtime="20241128 09:32:07.643"/>
</kw>
<msg timestamp="20241128 09:32:07.644" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.630" endtime="20241128 09:32:07.644"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.644" endtime="20241128 09:32:07.644"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.630" endtime="20241128 09:32:07.644"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.644" endtime="20241128 09:32:07.644"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.645" endtime="20241128 09:32:07.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.644" endtime="20241128 09:32:07.645"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.630" endtime="20241128 09:32:07.645"/>
</try>
<msg timestamp="20241128 09:32:07.645" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.629" endtime="20241128 09:32:07.645"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.645" endtime="20241128 09:32:07.645"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.628" endtime="20241128 09:32:07.645"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.646" endtime="20241128 09:32:07.646"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.646" endtime="20241128 09:32:07.646"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.628" endtime="20241128 09:32:07.646"/>
</try>
<msg timestamp="20241128 09:32:07.646" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.628" endtime="20241128 09:32:07.646"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.648" endtime="20241128 09:32:07.649"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.649" endtime="20241128 09:32:07.649"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.648" endtime="20241128 09:32:07.649"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.648" endtime="20241128 09:32:07.649"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.647" endtime="20241128 09:32:07.649"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.627" endtime="20241128 09:32:07.649"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:07.664" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:07.664" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:07.650" endtime="20241128 09:32:07.664"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:07.664" endtime="20241128 09:32:07.664"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.650" endtime="20241128 09:32:07.664"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.664" endtime="20241128 09:32:07.664"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.665" endtime="20241128 09:32:07.665"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.664" endtime="20241128 09:32:07.665"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.650" endtime="20241128 09:32:07.665"/>
</try>
<msg timestamp="20241128 09:32:07.665" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:07.625" endtime="20241128 09:32:07.665"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.667" endtime="20241128 09:32:07.667"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.668" endtime="20241128 09:32:07.668"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.667" endtime="20241128 09:32:07.668"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.667" endtime="20241128 09:32:07.668"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.666" endtime="20241128 09:32:07.669"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.624" endtime="20241128 09:32:07.669"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.669" endtime="20241128 09:32:07.669"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.669" endtime="20241128 09:32:07.670"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.624" endtime="20241128 09:32:07.670"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.624" endtime="20241128 09:32:07.670"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.679" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:07.674" endtime="20241128 09:32:07.679"/>
</kw>
<msg timestamp="20241128 09:32:07.679" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.674" endtime="20241128 09:32:07.679"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.680" endtime="20241128 09:32:07.680"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.674" endtime="20241128 09:32:07.680"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.680" endtime="20241128 09:32:07.680"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.680" endtime="20241128 09:32:07.680"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.680" endtime="20241128 09:32:07.680"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.674" endtime="20241128 09:32:07.680"/>
</try>
<msg timestamp="20241128 09:32:07.681" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.673" endtime="20241128 09:32:07.681"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.681" endtime="20241128 09:32:07.681"/>
</return>
<msg timestamp="20241128 09:32:07.681" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.672" endtime="20241128 09:32:07.681"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.683" endtime="20241128 09:32:07.683"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.683" endtime="20241128 09:32:07.684"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.683" endtime="20241128 09:32:07.684"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.683" endtime="20241128 09:32:07.684"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.682" endtime="20241128 09:32:07.684"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.671" endtime="20241128 09:32:07.685"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.602" endtime="20241128 09:32:07.685"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.705" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241128 09:32:07.690" endtime="20241128 09:32:07.705"/>
</kw>
<msg timestamp="20241128 09:32:07.705" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.690" endtime="20241128 09:32:07.705"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.706" endtime="20241128 09:32:07.706"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.690" endtime="20241128 09:32:07.706"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.706" endtime="20241128 09:32:07.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.706" endtime="20241128 09:32:07.706"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.706" endtime="20241128 09:32:07.707"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.690" endtime="20241128 09:32:07.707"/>
</try>
<msg timestamp="20241128 09:32:07.707" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.689" endtime="20241128 09:32:07.707"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.707" endtime="20241128 09:32:07.707"/>
</return>
<msg timestamp="20241128 09:32:07.707" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.688" endtime="20241128 09:32:07.707"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.710" endtime="20241128 09:32:07.710"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.710" endtime="20241128 09:32:07.710"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.709" endtime="20241128 09:32:07.710"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.709" endtime="20241128 09:32:07.710"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.708" endtime="20241128 09:32:07.710"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.687" endtime="20241128 09:32:07.710"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.711" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:07.711" endtime="20241128 09:32:07.711"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.713" endtime="20241128 09:32:07.713"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.715" endtime="20241128 09:32:07.715"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.713" endtime="20241128 09:32:07.715"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:07.715" endtime="20241128 09:32:07.715"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.715" endtime="20241128 09:32:07.716"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.712" endtime="20241128 09:32:07.716"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:07.716" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:07.716" endtime="20241128 09:32:07.746"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.716" endtime="20241128 09:32:07.746"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.746" endtime="20241128 09:32:07.746"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.747" endtime="20241128 09:32:07.747"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.746" endtime="20241128 09:32:07.747"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.716" endtime="20241128 09:32:07.747"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.712" endtime="20241128 09:32:07.748"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.711" endtime="20241128 09:32:07.748"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.711" endtime="20241128 09:32:07.748"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.749" endtime="20241128 09:32:07.749"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.748" endtime="20241128 09:32:07.749"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.711" endtime="20241128 09:32:07.749"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.601" endtime="20241128 09:32:07.749"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.750" endtime="20241128 09:32:07.751"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.750" endtime="20241128 09:32:07.751"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.750" endtime="20241128 09:32:07.751"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.599" endtime="20241128 09:32:07.751"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.754" endtime="20241128 09:32:07.754"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.752" endtime="20241128 09:32:07.754"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.756" endtime="20241128 09:32:07.756"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.756" endtime="20241128 09:32:07.757"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.756" endtime="20241128 09:32:07.757"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.757" endtime="20241128 09:32:07.757"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.757" endtime="20241128 09:32:07.757"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.756" endtime="20241128 09:32:07.757"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.754" endtime="20241128 09:32:07.757"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.763" endtime="20241128 09:32:07.763"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.767" endtime="20241128 09:32:07.767"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.757" endtime="20241128 09:32:07.767"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.769" endtime="20241128 09:32:07.769"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.769" endtime="20241128 09:32:07.769"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.769" endtime="20241128 09:32:07.769"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.770" endtime="20241128 09:32:07.770"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.770" endtime="20241128 09:32:07.770"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.769" endtime="20241128 09:32:07.770"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.767" endtime="20241128 09:32:07.770"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:07.776" endtime="20241128 09:32:07.776"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.779" endtime="20241128 09:32:07.779"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.770" endtime="20241128 09:32:07.779"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.781" endtime="20241128 09:32:07.781"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.781" endtime="20241128 09:32:07.782"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.781" endtime="20241128 09:32:07.782"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.782" endtime="20241128 09:32:07.782"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.782" endtime="20241128 09:32:07.782"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.781" endtime="20241128 09:32:07.782"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.779" endtime="20241128 09:32:07.782"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.786" endtime="20241128 09:32:07.787"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.782" endtime="20241128 09:32:07.787"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.793" endtime="20241128 09:32:07.793"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.793" endtime="20241128 09:32:07.794"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.787" endtime="20241128 09:32:07.794"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.589" endtime="20241128 09:32:07.794"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.794" endtime="20241128 09:32:07.795"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:07.795" endtime="20241128 09:32:07.795"/>
</return>
<msg timestamp="20241128 09:32:07.795" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:32:07.588" endtime="20241128 09:32:07.795"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.796" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 09:32:07.796" endtime="20241128 09:32:07.796"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.797" endtime="20241128 09:32:07.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.797" endtime="20241128 09:32:07.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.798" endtime="20241128 09:32:07.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.798" endtime="20241128 09:32:07.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.798" endtime="20241128 09:32:07.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.798" endtime="20241128 09:32:07.798"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.798" endtime="20241128 09:32:07.798"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.799" endtime="20241128 09:32:07.799"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.800" endtime="20241128 09:32:07.800"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.802" endtime="20241128 09:32:07.803"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.804" endtime="20241128 09:32:07.804"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.803" endtime="20241128 09:32:07.804"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.803" endtime="20241128 09:32:07.804"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.805" endtime="20241128 09:32:07.805"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.805" endtime="20241128 09:32:07.805"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.804" endtime="20241128 09:32:07.805"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.804" endtime="20241128 09:32:07.805"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.806" endtime="20241128 09:32:07.806"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.806" endtime="20241128 09:32:07.806"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.806" endtime="20241128 09:32:07.806"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.805" endtime="20241128 09:32:07.806"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.803" endtime="20241128 09:32:07.807"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.803" endtime="20241128 09:32:07.807"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:07.807" endtime="20241128 09:32:07.807"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.807" endtime="20241128 09:32:07.808"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.807" endtime="20241128 09:32:07.808"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.808" endtime="20241128 09:32:07.808"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.808" endtime="20241128 09:32:07.809"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.808" endtime="20241128 09:32:07.809"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.809" endtime="20241128 09:32:07.809"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.810" endtime="20241128 09:32:07.810"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.809" endtime="20241128 09:32:07.810"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.809" endtime="20241128 09:32:07.810"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.807" endtime="20241128 09:32:07.810"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:07.807" endtime="20241128 09:32:07.810"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:07.797" endtime="20241128 09:32:07.810"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:07.797" endtime="20241128 09:32:07.810"/>
</for>
<msg timestamp="20241128 09:32:07.811" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:07.795" endtime="20241128 09:32:07.811"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.811" endtime="20241128 09:32:07.812"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:07.817" endtime="20241128 09:32:07.817"/>
</kw>
<msg timestamp="20241128 09:32:07.817" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.816" endtime="20241128 09:32:07.817"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.820" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241128 09:32:07.818" endtime="20241128 09:32:07.820"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.822" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.822" endtime="20241128 09:32:07.822"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.821" endtime="20241128 09:32:07.822"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.823" endtime="20241128 09:32:07.823"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.822" endtime="20241128 09:32:07.823"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.821" endtime="20241128 09:32:07.823"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.818" endtime="20241128 09:32:07.823"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.817" endtime="20241128 09:32:07.823"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:07.823" endtime="20241128 09:32:07.823"/>
</return>
<msg timestamp="20241128 09:32:07.824" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.816" endtime="20241128 09:32:07.824"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.825" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241128 09:32:07.825" endtime="20241128 09:32:07.825"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.825" endtime="20241128 09:32:07.825"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.825" endtime="20241128 09:32:07.826"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.825" endtime="20241128 09:32:07.826"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.824" endtime="20241128 09:32:07.826"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.827" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '457', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241128 09:32:07.826" endtime="20241128 09:32:07.827"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:07.829" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "457", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241128 09:32:07.828" endtime="20241128 09:32:07.829"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:07.839" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:07.840" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:07.829" endtime="20241128 09:32:07.840"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.841" endtime="20241128 09:32:07.842"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:07.842" endtime="20241128 09:32:07.842"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.827" endtime="20241128 09:32:07.842"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.812" endtime="20241128 09:32:07.843"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:07.844" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:07.843" endtime="20241128 09:32:07.844"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.585" endtime="20241128 09:32:07.844"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.845" endtime="20241128 09:32:07.845"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.845" endtime="20241128 09:32:07.845"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.846" endtime="20241128 09:32:07.846"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.844" endtime="20241128 09:32:07.846"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.585" endtime="20241128 09:32:07.847"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.584" endtime="20241128 09:32:07.847"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.850" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241128 09:32:07.849" endtime="20241128 09:32:07.850"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:07.850" endtime="20241128 09:32:07.851"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:07.852" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241128 09:32:07.851" endtime="20241128 09:32:07.852"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.853" endtime="20241128 09:32:07.854"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.855" endtime="20241128 09:32:07.855"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.853" endtime="20241128 09:32:07.855"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.852" endtime="20241128 09:32:07.855"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:07.858" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:07.856" endtime="20241128 09:32:07.858"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.859" endtime="20241128 09:32:07.859"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.859" endtime="20241128 09:32:07.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:07.860" endtime="20241128 09:32:07.861"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.860" endtime="20241128 09:32:07.861"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.886" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:07.882" endtime="20241128 09:32:07.886"/>
</kw>
<msg timestamp="20241128 09:32:07.886" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.881" endtime="20241128 09:32:07.886"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.881" endtime="20241128 09:32:07.886"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.881" endtime="20241128 09:32:07.886"/>
</try>
<msg timestamp="20241128 09:32:07.886" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.880" endtime="20241128 09:32:07.886"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.878" endtime="20241128 09:32:07.886"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.878" endtime="20241128 09:32:07.886"/>
</try>
<msg timestamp="20241128 09:32:07.886" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.877" endtime="20241128 09:32:07.886"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.886" endtime="20241128 09:32:07.886"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.875" endtime="20241128 09:32:07.886"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.917" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:07.909" endtime="20241128 09:32:07.919"/>
</kw>
<msg timestamp="20241128 09:32:07.920" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.909" endtime="20241128 09:32:07.920"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.921" endtime="20241128 09:32:07.922"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.909" endtime="20241128 09:32:07.922"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.923" endtime="20241128 09:32:07.923"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.924" endtime="20241128 09:32:07.924"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.923" endtime="20241128 09:32:07.924"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.908" endtime="20241128 09:32:07.924"/>
</try>
<msg timestamp="20241128 09:32:07.925" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.907" endtime="20241128 09:32:07.925"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.925" endtime="20241128 09:32:07.926"/>
</return>
<msg timestamp="20241128 09:32:07.926" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.902" endtime="20241128 09:32:07.926"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.931" endtime="20241128 09:32:07.931"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.931" endtime="20241128 09:32:07.932"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.930" endtime="20241128 09:32:07.932"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.930" endtime="20241128 09:32:07.932"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.928" endtime="20241128 09:32:07.932"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.902" endtime="20241128 09:32:07.932"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:07.962" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:07.943" endtime="20241128 09:32:07.963"/>
</kw>
<msg timestamp="20241128 09:32:07.963" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.943" endtime="20241128 09:32:07.963"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.963" endtime="20241128 09:32:07.963"/>
</return>
<status status="PASS" starttime="20241128 09:32:07.943" endtime="20241128 09:32:07.963"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.964" endtime="20241128 09:32:07.964"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.964" endtime="20241128 09:32:07.964"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.963" endtime="20241128 09:32:07.964"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.942" endtime="20241128 09:32:07.964"/>
</try>
<msg timestamp="20241128 09:32:07.965" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.942" endtime="20241128 09:32:07.965"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:07.965" endtime="20241128 09:32:07.965"/>
</return>
<msg timestamp="20241128 09:32:07.965" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:07.938" endtime="20241128 09:32:07.965"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.972" endtime="20241128 09:32:07.972"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.972" endtime="20241128 09:32:07.972"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.971" endtime="20241128 09:32:07.973"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.971" endtime="20241128 09:32:07.973"/>
</if>
<status status="PASS" starttime="20241128 09:32:07.967" endtime="20241128 09:32:07.973"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.937" endtime="20241128 09:32:07.973"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.867" endtime="20241128 09:32:07.973"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:07.974" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:07.973" endtime="20241128 09:32:07.974"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:07.977" endtime="20241128 09:32:07.977"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:07.977" endtime="20241128 09:32:07.977"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:07.978" endtime="20241128 09:32:07.978"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.978" endtime="20241128 09:32:07.978"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.977" endtime="20241128 09:32:07.978"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:07.979" endtime="20241128 09:32:08.044"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.978" endtime="20241128 09:32:08.044"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.045" endtime="20241128 09:32:08.045"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.045" endtime="20241128 09:32:08.045"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.044" endtime="20241128 09:32:08.045"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.978" endtime="20241128 09:32:08.045"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.976" endtime="20241128 09:32:08.045"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.975" endtime="20241128 09:32:08.046"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.974" endtime="20241128 09:32:08.046"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.046" endtime="20241128 09:32:08.046"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.046" endtime="20241128 09:32:08.046"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.974" endtime="20241128 09:32:08.046"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.865" endtime="20241128 09:32:08.046"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.861" endtime="20241128 09:32:08.046"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.048" endtime="20241128 09:32:08.049"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.053" endtime="20241128 09:32:08.054"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.047" endtime="20241128 09:32:08.054"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.057" endtime="20241128 09:32:08.057"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.055" endtime="20241128 09:32:08.057"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.063" endtime="20241128 09:32:08.063"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.058" endtime="20241128 09:32:08.063"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.066" endtime="20241128 09:32:08.066"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.067" endtime="20241128 09:32:08.067"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.067" endtime="20241128 09:32:08.067"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.066" endtime="20241128 09:32:08.068"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.063" endtime="20241128 09:32:08.068"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.072" endtime="20241128 09:32:08.072"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.068" endtime="20241128 09:32:08.072"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.074" endtime="20241128 09:32:08.074"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.075" endtime="20241128 09:32:08.075"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.074" endtime="20241128 09:32:08.075"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.076" endtime="20241128 09:32:08.076"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.075" endtime="20241128 09:32:08.076"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.074" endtime="20241128 09:32:08.076"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.073" endtime="20241128 09:32:08.076"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.076" endtime="20241128 09:32:08.088"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.088"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.088" endtime="20241128 09:32:08.106"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.106"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.106" endtime="20241128 09:32:08.122"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.858" endtime="20241128 09:32:08.122"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<msg timestamp="20241128 09:32:08.122" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:07.855" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.122" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</for>
<msg timestamp="20241128 09:32:08.122" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.122"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.122" endtime="20241128 09:32:08.134"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<msg timestamp="20241128 09:32:08.137" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.137" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.137" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</if>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</return>
<msg timestamp="20241128 09:32:08.137" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.137" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:08.137" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '458', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:08.137" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "458", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.137"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:08.169" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:08.169" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.169"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.137" endtime="20241128 09:32:08.169"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.134" endtime="20241128 09:32:08.169"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:08.169" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</kw>
<status status="PASS" starttime="20241128 09:32:07.849" endtime="20241128 09:32:08.169"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.169" endtime="20241128 09:32:08.169"/>
</branch>
<status status="PASS" starttime="20241128 09:32:07.848" endtime="20241128 09:32:08.169"/>
</try>
<status status="PASS" starttime="20241128 09:32:07.848" endtime="20241128 09:32:08.169"/>
</iter>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:08.169"/>
</for>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:08.169"/>
</branch>
<status status="PASS" starttime="20241128 09:32:02.005" endtime="20241128 09:32:08.174"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:08.175" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '115', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:32:08.175" endtime="20241128 09:32:08.175"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:08.176" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "115", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:32:08.176" endtime="20241128 09:32:08.176"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:08.203" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:08.203" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:08.176" endtime="20241128 09:32:08.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.175" endtime="20241128 09:32:08.203"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.174" endtime="20241128 09:32:08.203"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.998" endtime="20241128 09:32:08.203"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.998" endtime="20241128 09:32:08.203"/>
</try>
<status status="PASS" starttime="20241128 09:32:01.998" endtime="20241128 09:32:08.203"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '15', 'testCaseId': '7', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:01:55.457Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'project...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.203" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:08.203"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<msg timestamp="20241128 09:32:08.220" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.220" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.220" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</if>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</return>
<msg timestamp="20241128 09:32:08.220" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.220" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:08.220" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.220"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:08.234" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:08.234"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:08.236" endtime="20241128 09:32:08.237"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.236" endtime="20241128 09:32:08.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:08.237" endtime="20241128 09:32:08.238"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.237" endtime="20241128 09:32:08.238"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:08.799" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241128 09:32:08.247" endtime="20241128 09:32:08.800"/>
</kw>
<msg timestamp="20241128 09:32:08.800" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.247" endtime="20241128 09:32:08.800"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.800" endtime="20241128 09:32:08.801"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.247" endtime="20241128 09:32:08.801"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.802" endtime="20241128 09:32:08.802"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.803" endtime="20241128 09:32:08.803"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.802" endtime="20241128 09:32:08.803"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.246" endtime="20241128 09:32:08.803"/>
</try>
<msg timestamp="20241128 09:32:08.804" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.246" endtime="20241128 09:32:08.804"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.804" endtime="20241128 09:32:08.804"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.245" endtime="20241128 09:32:08.804"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:08.805" endtime="20241128 09:32:08.805"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:08.805" endtime="20241128 09:32:08.805"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.245" endtime="20241128 09:32:08.805"/>
</try>
<msg timestamp="20241128 09:32:08.806" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.244" endtime="20241128 09:32:08.806"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.811" endtime="20241128 09:32:08.811"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.811" endtime="20241128 09:32:08.811"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.810" endtime="20241128 09:32:08.811"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.810" endtime="20241128 09:32:08.812"/>
</if>
<status status="PASS" starttime="20241128 09:32:08.808" endtime="20241128 09:32:08.812"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.244" endtime="20241128 09:32:08.812"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:08.830" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241128 09:32:08.820" endtime="20241128 09:32:08.831"/>
</kw>
<msg timestamp="20241128 09:32:08.831" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.820" endtime="20241128 09:32:08.831"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.831" endtime="20241128 09:32:08.831"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.819" endtime="20241128 09:32:08.831"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.832" endtime="20241128 09:32:08.832"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.833" endtime="20241128 09:32:08.833"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.832" endtime="20241128 09:32:08.833"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.819" endtime="20241128 09:32:08.834"/>
</try>
<msg timestamp="20241128 09:32:08.835" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.818" endtime="20241128 09:32:08.835"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.835" endtime="20241128 09:32:08.835"/>
</return>
<msg timestamp="20241128 09:32:08.836" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.816" endtime="20241128 09:32:08.836"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.840" endtime="20241128 09:32:08.841"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.841" endtime="20241128 09:32:08.841"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.840" endtime="20241128 09:32:08.841"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.840" endtime="20241128 09:32:08.841"/>
</if>
<status status="PASS" starttime="20241128 09:32:08.838" endtime="20241128 09:32:08.842"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.815" endtime="20241128 09:32:08.842"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:08.868" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:08.848" endtime="20241128 09:32:08.868"/>
</kw>
<msg timestamp="20241128 09:32:08.869" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.848" endtime="20241128 09:32:08.869"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.869" endtime="20241128 09:32:08.869"/>
</return>
<status status="PASS" starttime="20241128 09:32:08.847" endtime="20241128 09:32:08.869"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.870" endtime="20241128 09:32:08.870"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.870" endtime="20241128 09:32:08.870"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.869" endtime="20241128 09:32:08.871"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.847" endtime="20241128 09:32:08.871"/>
</try>
<msg timestamp="20241128 09:32:08.871" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.847" endtime="20241128 09:32:08.871"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:08.871" endtime="20241128 09:32:08.872"/>
</return>
<msg timestamp="20241128 09:32:08.872" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:08.845" endtime="20241128 09:32:08.872"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.876" endtime="20241128 09:32:08.876"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.876" endtime="20241128 09:32:08.876"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.876" endtime="20241128 09:32:08.877"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.876" endtime="20241128 09:32:08.877"/>
</if>
<status status="PASS" starttime="20241128 09:32:08.874" endtime="20241128 09:32:08.877"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.845" endtime="20241128 09:32:08.877"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.242" endtime="20241128 09:32:08.877"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:08.878" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:08.877" endtime="20241128 09:32:08.878"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:08.880" endtime="20241128 09:32:08.880"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:08.879" endtime="20241128 09:32:08.880"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:08.880" endtime="20241128 09:32:08.881"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.880" endtime="20241128 09:32:08.881"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.879" endtime="20241128 09:32:08.881"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:08.881" endtime="20241128 09:32:09.266"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.881" endtime="20241128 09:32:09.267"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.268" endtime="20241128 09:32:09.268"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.268" endtime="20241128 09:32:09.269"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.267" endtime="20241128 09:32:09.269"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.881" endtime="20241128 09:32:09.269"/>
</try>
<status status="PASS" starttime="20241128 09:32:08.879" endtime="20241128 09:32:09.270"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.878" endtime="20241128 09:32:09.270"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.878" endtime="20241128 09:32:09.270"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.271" endtime="20241128 09:32:09.271"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.271" endtime="20241128 09:32:09.272"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.878" endtime="20241128 09:32:09.272"/>
</try>
<status status="PASS" starttime="20241128 09:32:08.240" endtime="20241128 09:32:09.272"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.238" endtime="20241128 09:32:09.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.277" endtime="20241128 09:32:09.277"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.279" endtime="20241128 09:32:09.279"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.273" endtime="20241128 09:32:09.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.281" endtime="20241128 09:32:09.281"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.280" endtime="20241128 09:32:09.281"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.287" endtime="20241128 09:32:09.287"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.281" endtime="20241128 09:32:09.287"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.290" endtime="20241128 09:32:09.290"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.291" endtime="20241128 09:32:09.291"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.290" endtime="20241128 09:32:09.291"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.290" endtime="20241128 09:32:09.291"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.288" endtime="20241128 09:32:09.291"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.293" endtime="20241128 09:32:09.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.291" endtime="20241128 09:32:09.293"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.296" endtime="20241128 09:32:09.296"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.297" endtime="20241128 09:32:09.297"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.296" endtime="20241128 09:32:09.297"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.298" endtime="20241128 09:32:09.300"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.297" endtime="20241128 09:32:09.301"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.296" endtime="20241128 09:32:09.301"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.293" endtime="20241128 09:32:09.301"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:09.311" endtime="20241128 09:32:09.311"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.317" endtime="20241128 09:32:09.318"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.302" endtime="20241128 09:32:09.318"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.320" endtime="20241128 09:32:09.321"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.322" endtime="20241128 09:32:09.322"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.321" endtime="20241128 09:32:09.322"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.323" endtime="20241128 09:32:09.323"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.322" endtime="20241128 09:32:09.323"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.321" endtime="20241128 09:32:09.323"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.318" endtime="20241128 09:32:09.323"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:09.332" endtime="20241128 09:32:09.332"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.341" endtime="20241128 09:32:09.342"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.323" endtime="20241128 09:32:09.342"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.345" endtime="20241128 09:32:09.345"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.345" endtime="20241128 09:32:09.345"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.345" endtime="20241128 09:32:09.346"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.346" endtime="20241128 09:32:09.346"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.346" endtime="20241128 09:32:09.346"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.345" endtime="20241128 09:32:09.346"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.342" endtime="20241128 09:32:09.346"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.349" endtime="20241128 09:32:09.349"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.346" endtime="20241128 09:32:09.350"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:09.359" endtime="20241128 09:32:09.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.360" endtime="20241128 09:32:09.360"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.350" endtime="20241128 09:32:09.361"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.234" endtime="20241128 09:32:09.361"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:09.361" endtime="20241128 09:32:09.362"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:09.362" endtime="20241128 09:32:09.362"/>
</return>
<msg timestamp="20241128 09:32:09.363" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:09.363"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.366" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241128 09:32:09.365" endtime="20241128 09:32:09.366"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.369" endtime="20241128 09:32:09.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.370" endtime="20241128 09:32:09.370"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.371" endtime="20241128 09:32:09.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.371" endtime="20241128 09:32:09.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.371" endtime="20241128 09:32:09.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.372" endtime="20241128 09:32:09.372"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.372" endtime="20241128 09:32:09.372"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.372" endtime="20241128 09:32:09.372"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.374" endtime="20241128 09:32:09.374"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.376"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.377"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.377"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.377"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.377" endtime="20241128 09:32:09.377"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:09.378" endtime="20241128 09:32:09.378"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.377" endtime="20241128 09:32:09.378"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.377" endtime="20241128 09:32:09.378"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.378" endtime="20241128 09:32:09.378"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:09.379" endtime="20241128 09:32:09.379"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.378" endtime="20241128 09:32:09.379"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.378" endtime="20241128 09:32:09.379"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.379"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.376" endtime="20241128 09:32:09.379"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:09.380" endtime="20241128 09:32:09.380"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.379" endtime="20241128 09:32:09.380"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.379" endtime="20241128 09:32:09.380"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.380" endtime="20241128 09:32:09.380"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.380" endtime="20241128 09:32:09.380"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.380" endtime="20241128 09:32:09.381"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.381" endtime="20241128 09:32:09.381"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:09.381" endtime="20241128 09:32:09.381"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.381" endtime="20241128 09:32:09.381"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.381" endtime="20241128 09:32:09.381"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.379" endtime="20241128 09:32:09.382"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:09.379" endtime="20241128 09:32:09.382"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:09.368" endtime="20241128 09:32:09.382"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:09.367" endtime="20241128 09:32:09.382"/>
</for>
<msg timestamp="20241128 09:32:09.383" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:09.363" endtime="20241128 09:32:09.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:09.384" endtime="20241128 09:32:09.385"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:09.394" endtime="20241128 09:32:09.399"/>
</kw>
<msg timestamp="20241128 09:32:09.404" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.393" endtime="20241128 09:32:09.404"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.406" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241128 09:32:09.405" endtime="20241128 09:32:09.407"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.409" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.408" endtime="20241128 09:32:09.409"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.408" endtime="20241128 09:32:09.409"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.409" endtime="20241128 09:32:09.410"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.409" endtime="20241128 09:32:09.410"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.407" endtime="20241128 09:32:09.410"/>
</if>
<status status="PASS" starttime="20241128 09:32:09.405" endtime="20241128 09:32:09.410"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.404" endtime="20241128 09:32:09.410"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:09.411" endtime="20241128 09:32:09.411"/>
</return>
<msg timestamp="20241128 09:32:09.412" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.390" endtime="20241128 09:32:09.412"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.416" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241128 09:32:09.415" endtime="20241128 09:32:09.416"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.414" endtime="20241128 09:32:09.417"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.418" endtime="20241128 09:32:09.419"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.417" endtime="20241128 09:32:09.419"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.412" endtime="20241128 09:32:09.419"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:09.423" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '453', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 09:32:09.420" endtime="20241128 09:32:09.424"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:09.429" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "453", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 09:32:09.427" endtime="20241128 09:32:09.429"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:09.448" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:09.448" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:09.430" endtime="20241128 09:32:09.449"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:09.450" endtime="20241128 09:32:09.453"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:09.453" endtime="20241128 09:32:09.453"/>
</return>
<status status="PASS" starttime="20241128 09:32:09.426" endtime="20241128 09:32:09.454"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.385" endtime="20241128 09:32:09.455"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:09.456" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:09.455" endtime="20241128 09:32:09.456"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:09.456"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.457" endtime="20241128 09:32:09.457"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:09.457" endtime="20241128 09:32:09.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.458" endtime="20241128 09:32:09.458"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.456" endtime="20241128 09:32:09.459"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:09.459"/>
</try>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:09.459"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.465" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241128 09:32:09.464" endtime="20241128 09:32:09.465"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:09.466" endtime="20241128 09:32:09.468"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:09.469" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241128 09:32:09.468" endtime="20241128 09:32:09.469"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.471" endtime="20241128 09:32:09.471"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.472" endtime="20241128 09:32:09.473"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.470" endtime="20241128 09:32:09.474"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.470" endtime="20241128 09:32:09.475"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:09.482" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:09.479" endtime="20241128 09:32:09.482"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:09.487" endtime="20241128 09:32:09.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.486" endtime="20241128 09:32:09.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:09.490" endtime="20241128 09:32:09.491"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.490" endtime="20241128 09:32:09.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:09.810" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:09.546" endtime="20241128 09:32:09.810"/>
</kw>
<msg timestamp="20241128 09:32:09.811" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.545" endtime="20241128 09:32:09.811"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:09.811" endtime="20241128 09:32:09.811"/>
</return>
<status status="PASS" starttime="20241128 09:32:09.545" endtime="20241128 09:32:09.811"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.812" endtime="20241128 09:32:09.812"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.813" endtime="20241128 09:32:09.813"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.812" endtime="20241128 09:32:09.813"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.544" endtime="20241128 09:32:09.813"/>
</try>
<msg timestamp="20241128 09:32:09.814" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.543" endtime="20241128 09:32:09.814"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:09.814" endtime="20241128 09:32:09.814"/>
</return>
<status status="PASS" starttime="20241128 09:32:09.533" endtime="20241128 09:32:09.814"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:09.814" endtime="20241128 09:32:09.815"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:09.814" endtime="20241128 09:32:09.815"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.532" endtime="20241128 09:32:09.815"/>
</try>
<msg timestamp="20241128 09:32:09.816" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.531" endtime="20241128 09:32:09.816"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.823" endtime="20241128 09:32:09.823"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:09.824" endtime="20241128 09:32:09.824"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:09.822" endtime="20241128 09:32:09.825"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.822" endtime="20241128 09:32:09.825"/>
</if>
<status status="PASS" starttime="20241128 09:32:09.820" endtime="20241128 09:32:09.825"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.529" endtime="20241128 09:32:09.826"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:10.115" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:09.842" endtime="20241128 09:32:10.116"/>
</kw>
<msg timestamp="20241128 09:32:10.116" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.841" endtime="20241128 09:32:10.116"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:10.117" endtime="20241128 09:32:10.117"/>
</return>
<status status="PASS" starttime="20241128 09:32:09.840" endtime="20241128 09:32:10.117"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.118" endtime="20241128 09:32:10.118"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.118" endtime="20241128 09:32:10.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.118" endtime="20241128 09:32:10.119"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.840" endtime="20241128 09:32:10.119"/>
</try>
<msg timestamp="20241128 09:32:10.119" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.837" endtime="20241128 09:32:10.119"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:10.120" endtime="20241128 09:32:10.120"/>
</return>
<msg timestamp="20241128 09:32:10.121" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:09.834" endtime="20241128 09:32:10.121"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.125" endtime="20241128 09:32:10.126"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.126" endtime="20241128 09:32:10.126"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.125" endtime="20241128 09:32:10.126"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.125" endtime="20241128 09:32:10.126"/>
</if>
<status status="PASS" starttime="20241128 09:32:10.123" endtime="20241128 09:32:10.127"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.826" endtime="20241128 09:32:10.127"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:10.223" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:10.136" endtime="20241128 09:32:10.224"/>
</kw>
<msg timestamp="20241128 09:32:10.224" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.136" endtime="20241128 09:32:10.224"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:10.224" endtime="20241128 09:32:10.224"/>
</return>
<status status="PASS" starttime="20241128 09:32:10.135" endtime="20241128 09:32:10.224"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.225" endtime="20241128 09:32:10.225"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.225" endtime="20241128 09:32:10.226"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.225" endtime="20241128 09:32:10.226"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.135" endtime="20241128 09:32:10.226"/>
</try>
<msg timestamp="20241128 09:32:10.226" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.134" endtime="20241128 09:32:10.226"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:10.227" endtime="20241128 09:32:10.227"/>
</return>
<msg timestamp="20241128 09:32:10.227" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.131" endtime="20241128 09:32:10.227"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.233" endtime="20241128 09:32:10.233"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.234" endtime="20241128 09:32:10.234"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.232" endtime="20241128 09:32:10.234"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.232" endtime="20241128 09:32:10.234"/>
</if>
<status status="PASS" starttime="20241128 09:32:10.230" endtime="20241128 09:32:10.235"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.130" endtime="20241128 09:32:10.235"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.515" endtime="20241128 09:32:10.235"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:10.236" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:10.235" endtime="20241128 09:32:10.236"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.239" endtime="20241128 09:32:10.239"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.238" endtime="20241128 09:32:10.239"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:10.239" endtime="20241128 09:32:10.240"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.239" endtime="20241128 09:32:10.240"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.238" endtime="20241128 09:32:10.240"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:10.241" endtime="20241128 09:32:10.441"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.240" endtime="20241128 09:32:10.441"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.442" endtime="20241128 09:32:10.442"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.442" endtime="20241128 09:32:10.442"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.442" endtime="20241128 09:32:10.443"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.240" endtime="20241128 09:32:10.443"/>
</try>
<status status="PASS" starttime="20241128 09:32:10.237" endtime="20241128 09:32:10.443"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.237" endtime="20241128 09:32:10.443"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.236" endtime="20241128 09:32:10.443"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.444" endtime="20241128 09:32:10.444"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.443" endtime="20241128 09:32:10.444"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.236" endtime="20241128 09:32:10.444"/>
</try>
<status status="PASS" starttime="20241128 09:32:09.510" endtime="20241128 09:32:10.444"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.492" endtime="20241128 09:32:10.444"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.447" endtime="20241128 09:32:10.447"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.451" endtime="20241128 09:32:10.451"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.444" endtime="20241128 09:32:10.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.453" endtime="20241128 09:32:10.453"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.451" endtime="20241128 09:32:10.453"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.458" endtime="20241128 09:32:10.458"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.453" endtime="20241128 09:32:10.458"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.461" endtime="20241128 09:32:10.461"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.462" endtime="20241128 09:32:10.462"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.462" endtime="20241128 09:32:10.462"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.461" endtime="20241128 09:32:10.462"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.459" endtime="20241128 09:32:10.462"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.464" endtime="20241128 09:32:10.464"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.462" endtime="20241128 09:32:10.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.466" endtime="20241128 09:32:10.467"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.467" endtime="20241128 09:32:10.467"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.467" endtime="20241128 09:32:10.467"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.468" endtime="20241128 09:32:10.468"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.467" endtime="20241128 09:32:10.468"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.467" endtime="20241128 09:32:10.468"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.465" endtime="20241128 09:32:10.468"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:10.477" endtime="20241128 09:32:10.477"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.482" endtime="20241128 09:32:10.483"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.468" endtime="20241128 09:32:10.483"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.486" endtime="20241128 09:32:10.486"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.487" endtime="20241128 09:32:10.487"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.487" endtime="20241128 09:32:10.487"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.488" endtime="20241128 09:32:10.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.488" endtime="20241128 09:32:10.488"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.486" endtime="20241128 09:32:10.489"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.483" endtime="20241128 09:32:10.489"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:10.499" endtime="20241128 09:32:10.499"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.503" endtime="20241128 09:32:10.504"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.489" endtime="20241128 09:32:10.504"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.506" endtime="20241128 09:32:10.506"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.506" endtime="20241128 09:32:10.506"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.506" endtime="20241128 09:32:10.506"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.507" endtime="20241128 09:32:10.507"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.507" endtime="20241128 09:32:10.507"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.506" endtime="20241128 09:32:10.507"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.504" endtime="20241128 09:32:10.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.510" endtime="20241128 09:32:10.511"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.507" endtime="20241128 09:32:10.511"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:10.523" endtime="20241128 09:32:10.523"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.523" endtime="20241128 09:32:10.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.511" endtime="20241128 09:32:10.524"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.483" endtime="20241128 09:32:10.524"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:10.524" endtime="20241128 09:32:10.525"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:10.525" endtime="20241128 09:32:10.525"/>
</return>
<msg timestamp="20241128 09:32:10.525" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:09.476" endtime="20241128 09:32:10.525"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:10.528" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241128 09:32:10.527" endtime="20241128 09:32:10.528"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.529" endtime="20241128 09:32:10.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.530" endtime="20241128 09:32:10.530"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.530" endtime="20241128 09:32:10.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.531" endtime="20241128 09:32:10.531"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.533" endtime="20241128 09:32:10.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.533" endtime="20241128 09:32:10.533"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.534" endtime="20241128 09:32:10.534"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.534" endtime="20241128 09:32:10.534"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.536" endtime="20241128 09:32:10.536"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.538" endtime="20241128 09:32:10.538"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:10.539" endtime="20241128 09:32:10.539"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:10.538" endtime="20241128 09:32:10.539"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.538" endtime="20241128 09:32:10.539"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.539" endtime="20241128 09:32:10.539"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:10.539" endtime="20241128 09:32:10.540"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:10.539" endtime="20241128 09:32:10.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.539" endtime="20241128 09:32:10.540"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.540" endtime="20241128 09:32:10.540"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:10.540" endtime="20241128 09:32:10.540"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:10.540" endtime="20241128 09:32:10.540"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.540" endtime="20241128 09:32:10.541"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.538" endtime="20241128 09:32:10.541"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.538" endtime="20241128 09:32:10.541"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:10.541" endtime="20241128 09:32:10.541"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:10.541" endtime="20241128 09:32:10.541"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.541" endtime="20241128 09:32:10.542"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.542" endtime="20241128 09:32:10.542"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.542" endtime="20241128 09:32:10.543"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.542" endtime="20241128 09:32:10.543"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.543" endtime="20241128 09:32:10.543"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:10.544" endtime="20241128 09:32:10.544"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:10.543" endtime="20241128 09:32:10.544"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.543" endtime="20241128 09:32:10.544"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.541" endtime="20241128 09:32:10.544"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:10.541" endtime="20241128 09:32:10.544"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:10.529" endtime="20241128 09:32:10.544"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:10.528" endtime="20241128 09:32:10.544"/>
</for>
<msg timestamp="20241128 09:32:10.544" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:10.526" endtime="20241128 09:32:10.545"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:10.545" endtime="20241128 09:32:10.545"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:10.553" endtime="20241128 09:32:10.554"/>
</kw>
<msg timestamp="20241128 09:32:10.554" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.553" endtime="20241128 09:32:10.554"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:10.555" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241128 09:32:10.555" endtime="20241128 09:32:10.555"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:10.557" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.557" endtime="20241128 09:32:10.557"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.556" endtime="20241128 09:32:10.557"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.558" endtime="20241128 09:32:10.558"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.557" endtime="20241128 09:32:10.558"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.555" endtime="20241128 09:32:10.559"/>
</if>
<status status="PASS" starttime="20241128 09:32:10.555" endtime="20241128 09:32:10.559"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.554" endtime="20241128 09:32:10.559"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:10.559" endtime="20241128 09:32:10.559"/>
</return>
<msg timestamp="20241128 09:32:10.559" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:10.552" endtime="20241128 09:32:10.559"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:10.561" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241128 09:32:10.560" endtime="20241128 09:32:10.561"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.559" endtime="20241128 09:32:10.561"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.562" endtime="20241128 09:32:10.562"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.561" endtime="20241128 09:32:10.562"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.559" endtime="20241128 09:32:10.562"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:10.563" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '454', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241128 09:32:10.562" endtime="20241128 09:32:10.563"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:10.565" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "454", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241128 09:32:10.564" endtime="20241128 09:32:10.565"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:10.575" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:10.576" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:10.566" endtime="20241128 09:32:10.576"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:10.576" endtime="20241128 09:32:10.578"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:10.578" endtime="20241128 09:32:10.578"/>
</return>
<status status="PASS" starttime="20241128 09:32:10.564" endtime="20241128 09:32:10.579"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.546" endtime="20241128 09:32:10.579"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:10.581" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:10.580" endtime="20241128 09:32:10.581"/>
</kw>
<status status="PASS" starttime="20241128 09:32:09.460" endtime="20241128 09:32:10.581"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.585" endtime="20241128 09:32:10.585"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:10.586" endtime="20241128 09:32:10.586"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.587" endtime="20241128 09:32:10.587"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.583" endtime="20241128 09:32:10.587"/>
</branch>
<status status="PASS" starttime="20241128 09:32:09.460" endtime="20241128 09:32:10.587"/>
</try>
<status status="PASS" starttime="20241128 09:32:09.460" endtime="20241128 09:32:10.587"/>
</iter>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:10.587"/>
</for>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:10.588"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.220" endtime="20241128 09:32:10.588"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:10.590" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '116', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:32:10.589" endtime="20241128 09:32:10.590"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:10.591" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "116", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:32:10.591" endtime="20241128 09:32:10.591"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:10.611" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:10.611" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:10.592" endtime="20241128 09:32:10.611"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:10.612" endtime="20241128 09:32:10.614"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:10.614" endtime="20241128 09:32:10.614"/>
</return>
<status status="PASS" starttime="20241128 09:32:10.590" endtime="20241128 09:32:10.615"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.588" endtime="20241128 09:32:10.616"/>
</kw>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:10.616"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.617" endtime="20241128 09:32:10.618"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:10.619" endtime="20241128 09:32:10.619"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.620" endtime="20241128 09:32:10.621"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.616" endtime="20241128 09:32:10.622"/>
</branch>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:10.623"/>
</try>
<status status="PASS" starttime="20241128 09:32:08.203" endtime="20241128 09:32:10.623"/>
</iter>
<status status="PASS" starttime="20241128 09:32:01.997" endtime="20241128 09:32:10.623"/>
</for>
<status status="PASS" starttime="20241128 09:32:01.997" endtime="20241128 09:32:10.624"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.997" endtime="20241128 09:32:10.624"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:10.628" level="INFO">${response_message} = {'testCaseRunId': '43', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:32:10.626" endtime="20241128 09:32:10.628"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:10.632" level="INFO">${json_response} = {"testCaseRunId": "43", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:32:10.630" endtime="20241128 09:32:10.632"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:10.652" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:10.652" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:10.633" endtime="20241128 09:32:10.652"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:10.653" endtime="20241128 09:32:10.655"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:10.655" endtime="20241128 09:32:10.655"/>
</return>
<status status="PASS" starttime="20241128 09:32:10.629" endtime="20241128 09:32:10.656"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.624" endtime="20241128 09:32:10.657"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.959" endtime="20241128 09:32:10.657"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.658" endtime="20241128 09:32:10.658"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:10.659" endtime="20241128 09:32:10.660"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.660" endtime="20241128 09:32:10.661"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.657" endtime="20241128 09:32:10.661"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.959" endtime="20241128 09:32:10.661"/>
</try>
<status status="PASS" starttime="20241128 09:32:01.946" endtime="20241128 09:32:10.661"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.662" endtime="20241128 09:32:10.662"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.662" endtime="20241128 09:32:10.662"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.946" endtime="20241128 09:32:10.663"/>
</if>
<status status="PASS" starttime="20241128 09:32:01.930" endtime="20241128 09:32:10.663"/>
</kw>
<status status="PASS" starttime="20241128 09:32:01.930" endtime="20241128 09:32:10.663"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:10.666" endtime="20241128 09:32:10.666"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:10.664" endtime="20241128 09:32:10.667"/>
</branch>
<status status="PASS" starttime="20241128 09:32:01.929" endtime="20241128 09:32:10.667"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241128 09:32:11.090" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241128 09:32:10.670" endtime="20241128 09:32:11.090"/>
</kw>
<status status="PASS" starttime="20241128 09:32:10.669" endtime="20241128 09:32:11.090"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:11.091" endtime="20241128 09:32:11.091"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:11.091" endtime="20241128 09:32:11.091"/>
</branch>
<status status="PASS" starttime="20241128 09:32:10.668" endtime="20241128 09:32:11.091"/>
</try>
<status status="PASS" starttime="20241128 09:32:10.667" endtime="20241128 09:32:11.092"/>
</kw>
<status status="PASS" starttime="20241128 09:31:41.300" endtime="20241128 09:32:11.092"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:11.093" endtime="20241128 09:32:11.093"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241128 09:32:26.758" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '44', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:02:26.653Z', 'createdAt': '2024-11-28T04:02:26.653Z', 'errorMes...</msg>
<status status="PASS" starttime="20241128 09:32:11.094" endtime="20241128 09:32:26.758"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241128 09:32:26.759" endtime="20241128 09:32:26.759"/>
</break>
<status status="NOT RUN" starttime="20241128 09:32:26.759" endtime="20241128 09:32:26.759"/>
</branch>
<status status="PASS" starttime="20241128 09:32:26.758" endtime="20241128 09:32:26.759"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241128 09:32:26.761" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\a0a6e1ce-0129-4a2b-a0ea-4fc1914d120a"}</msg>
<msg timestamp="20241128 09:32:27.244" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\a0a6e1ce-0129-4a2b-a0ea-4fc1914d120a"}</msg>
<status status="PASS" starttime="20241128 09:32:26.760" endtime="20241128 09:32:27.245"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241128 09:32:27.246" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241128 09:32:27.281" level="INFO">Successfully created context. </msg>
<msg timestamp="20241128 09:32:27.282" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241128 09:32:27.245" endtime="20241128 09:32:27.282"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241128 09:32:27.283" endtime="20241128 09:32:27.284"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:32:30.522" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241128 09:32:30.522" level="INFO">${page_id} = {'page_id': 'page=c2566392-5054-4c9b-a4b2-368b28c6b43e', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:32:27.284" endtime="20241128 09:32:30.522"/>
</kw>
<status status="PASS" starttime="20241128 09:32:26.760" endtime="20241128 09:32:30.523"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:30.524" endtime="20241128 09:32:30.535"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:30.539" endtime="20241128 09:32:30.539"/>
</kw>
<msg timestamp="20241128 09:32:30.539" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.539" endtime="20241128 09:32:30.540"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.540" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241128 09:32:30.540" endtime="20241128 09:32:30.540"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.541" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.541" endtime="20241128 09:32:30.541"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.540" endtime="20241128 09:32:30.541"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.541" endtime="20241128 09:32:30.541"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.541" endtime="20241128 09:32:30.541"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.540" endtime="20241128 09:32:30.541"/>
</if>
<status status="PASS" starttime="20241128 09:32:30.540" endtime="20241128 09:32:30.541"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.540" endtime="20241128 09:32:30.541"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:30.542" endtime="20241128 09:32:30.542"/>
</return>
<msg timestamp="20241128 09:32:30.542" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.537" endtime="20241128 09:32:30.542"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.542" endtime="20241128 09:32:30.542"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241128 09:32:30.542" endtime="20241128 09:32:30.542"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:30.542" endtime="20241128 09:32:30.542"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.542" endtime="20241128 09:32:30.543"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:30.545" endtime="20241128 09:32:30.545"/>
</kw>
<msg timestamp="20241128 09:32:30.545" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.545" endtime="20241128 09:32:30.545"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.546" level="INFO">${values} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:02:24.242...</msg>
<status status="PASS" starttime="20241128 09:32:30.546" endtime="20241128 09:32:30.546"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.548" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.548" endtime="20241128 09:32:30.548"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.547" endtime="20241128 09:32:30.548"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.549" endtime="20241128 09:32:30.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.548" endtime="20241128 09:32:30.549"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.547" endtime="20241128 09:32:30.549"/>
</if>
<status status="PASS" starttime="20241128 09:32:30.546" endtime="20241128 09:32:30.549"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.545" endtime="20241128 09:32:30.549"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:30.549" endtime="20241128 09:32:30.549"/>
</return>
<msg timestamp="20241128 09:32:30.550" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.544" endtime="20241128 09:32:30.550"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:30.554" endtime="20241128 09:32:30.555"/>
</kw>
<msg timestamp="20241128 09:32:30.555" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.554" endtime="20241128 09:32:30.555"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.556" level="INFO">${values} = {'id': '44', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:02:26.653Z', 'createdAt': '2024-11-28T04:02:26.653Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:32:30.556" endtime="20241128 09:32:30.556"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.557" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.557" endtime="20241128 09:32:30.557"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.557" endtime="20241128 09:32:30.557"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.557" endtime="20241128 09:32:30.557"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.557" endtime="20241128 09:32:30.558"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.556" endtime="20241128 09:32:30.558"/>
</if>
<status status="PASS" starttime="20241128 09:32:30.556" endtime="20241128 09:32:30.558"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.555" endtime="20241128 09:32:30.558"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:30.558" endtime="20241128 09:32:30.558"/>
</return>
<msg timestamp="20241128 09:32:30.558" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.553" endtime="20241128 09:32:30.558"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.559" endtime="20241128 09:32:30.559"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.559" endtime="20241128 09:32:30.559"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.558" endtime="20241128 09:32:30.559"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.560" level="INFO">${testCase} = {'id': '7', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 21:36:17 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T16:06:17.333Z', 'updatedAt': '2024-11-28T04:02:24.242...</msg>
<status status="PASS" starttime="20241128 09:32:30.559" endtime="20241128 09:32:30.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.560" level="INFO">${testCaseRun} = {'id': '44', 'testCaseId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-28T04:02:26.653Z', 'createdAt': '2024-11-28T04:02:26.653Z', 'errorMessage': None, 'testSuitRunId': None}</msg>
<status status="PASS" starttime="20241128 09:32:30.560" endtime="20241128 09:32:30.560"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.561" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241128 09:32:30.560" endtime="20241128 09:32:30.561"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:30.561" endtime="20241128 09:32:30.561"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:30.566" endtime="20241128 09:32:30.566"/>
</kw>
<msg timestamp="20241128 09:32:30.566" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.565" endtime="20241128 09:32:30.566"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.567" level="INFO">${values} = [{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:02:24.297Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</msg>
<status status="PASS" starttime="20241128 09:32:30.567" endtime="20241128 09:32:30.567"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.568" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.568" endtime="20241128 09:32:30.568"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.568" endtime="20241128 09:32:30.568"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.568" endtime="20241128 09:32:30.568"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.568" endtime="20241128 09:32:30.568"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.567" endtime="20241128 09:32:30.568"/>
</if>
<status status="PASS" starttime="20241128 09:32:30.566" endtime="20241128 09:32:30.569"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.566" endtime="20241128 09:32:30.569"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:30.569" endtime="20241128 09:32:30.569"/>
</return>
<msg timestamp="20241128 09:32:30.569" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.565" endtime="20241128 09:32:30.569"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:30.570" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '44', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241128 09:32:30.569" endtime="20241128 09:32:30.570"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:30.571" level="INFO">${json_response} = {"testCaseRunId": "44", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241128 09:32:30.570" endtime="20241128 09:32:30.571"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:30.610" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:30.610" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:30.571" endtime="20241128 09:32:30.610"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:30.611" endtime="20241128 09:32:30.611"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:30.612" endtime="20241128 09:32:30.612"/>
</return>
<status status="PASS" starttime="20241128 09:32:30.570" endtime="20241128 09:32:30.612"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:30.614" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241128 09:32:30.613" endtime="20241128 09:32:30.614"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '14', 'testCaseId': '7', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:02:24.297Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.616" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241128 09:32:30.615" endtime="20241128 09:32:30.616"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:30.616" endtime="20241128 09:32:30.617"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:30.620" endtime="20241128 09:32:30.620"/>
</kw>
<msg timestamp="20241128 09:32:30.620" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.619" endtime="20241128 09:32:30.620"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.621" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241128 09:32:30.621" endtime="20241128 09:32:30.621"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.622" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.621" endtime="20241128 09:32:30.622"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.621" endtime="20241128 09:32:30.622"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.622" endtime="20241128 09:32:30.622"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.622" endtime="20241128 09:32:30.622"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.621" endtime="20241128 09:32:30.622"/>
</if>
<status status="PASS" starttime="20241128 09:32:30.620" endtime="20241128 09:32:30.622"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.620" endtime="20241128 09:32:30.622"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:30.622" endtime="20241128 09:32:30.622"/>
</return>
<msg timestamp="20241128 09:32:30.623" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:30.619" endtime="20241128 09:32:30.623"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.624" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:30.624"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:30.624" endtime="20241128 09:32:30.625"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:30.625" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241128 09:32:30.625" endtime="20241128 09:32:30.625"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.626" endtime="20241128 09:32:30.626"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:30.626" endtime="20241128 09:32:30.626"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:30.626" endtime="20241128 09:32:30.626"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.625" endtime="20241128 09:32:30.626"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:30.627" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:30.627" endtime="20241128 09:32:30.627"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241128 09:32:35.464" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241128 09:32:35.465" level="INFO">${page_id} = {'page_id': 'page=3f1a1d1c-e02c-4cf7-9e49-c3a791af0bf9', 'video_path': ''}</msg>
<status status="PASS" starttime="20241128 09:32:30.628" endtime="20241128 09:32:35.465"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241128 09:32:35.466" level="INFO">Switching to page {'page_id': 'page=3f1a1d1c-e02c-4cf7-9e49-c3a791af0bf9', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241128 09:32:35.502" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=163c8357-ee9a-453f-ab24-4a6c5c237871",
    "contexts": [
      {
        "type": "context",
        "id": "context=dd312839-9992-43b0-a0ec-54209050b382",
        "activePage": "page=3f1a1d1c-e02c-4cf7-9e49-c3a791af0bf9",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=c2566392-5054-4c9b-a4b2-368b28c6b43e",
            "timestamp": 1732766547.517
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=3f1a1d1c-e02c-4cf7-9e49-c3a791af0bf9",
            "timestamp": 1732766550.662
          }
        ]
      }
    ],
    "activeContext": "context=dd312839-9992-43b0-a0ec-54209050b382",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241128 09:32:35.506" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241128 09:32:35.465" endtime="20241128 09:32:35.506"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.627" endtime="20241128 09:32:35.507"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.627" endtime="20241128 09:32:35.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.507" endtime="20241128 09:32:35.508"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.507" endtime="20241128 09:32:35.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.512" endtime="20241128 09:32:35.512"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.508" endtime="20241128 09:32:35.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.516" endtime="20241128 09:32:35.516"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.519" endtime="20241128 09:32:35.519"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.512" endtime="20241128 09:32:35.519"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.521" endtime="20241128 09:32:35.521"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.519" endtime="20241128 09:32:35.521"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.524" endtime="20241128 09:32:35.524"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.521" endtime="20241128 09:32:35.524"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.527" endtime="20241128 09:32:35.527"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.527" endtime="20241128 09:32:35.527"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.527" endtime="20241128 09:32:35.527"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.527" endtime="20241128 09:32:35.528"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.524" endtime="20241128 09:32:35.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.529" endtime="20241128 09:32:35.529"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.528" endtime="20241128 09:32:35.529"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.530" endtime="20241128 09:32:35.531"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.531" endtime="20241128 09:32:35.531"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.531" endtime="20241128 09:32:35.531"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.531" endtime="20241128 09:32:35.532"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.531" endtime="20241128 09:32:35.532"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.531" endtime="20241128 09:32:35.532"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.529" endtime="20241128 09:32:35.532"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:35.540" endtime="20241128 09:32:35.540"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.544" endtime="20241128 09:32:35.544"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.532" endtime="20241128 09:32:35.544"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.545" endtime="20241128 09:32:35.545"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.546" endtime="20241128 09:32:35.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.546" endtime="20241128 09:32:35.546"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.546" endtime="20241128 09:32:35.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.546" endtime="20241128 09:32:35.546"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.546" endtime="20241128 09:32:35.546"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.544" endtime="20241128 09:32:35.546"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:35.552" endtime="20241128 09:32:35.552"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.555" endtime="20241128 09:32:35.555"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.547" endtime="20241128 09:32:35.556"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.558" endtime="20241128 09:32:35.558"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.559" endtime="20241128 09:32:35.559"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.559" endtime="20241128 09:32:35.559"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.560" endtime="20241128 09:32:35.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.560" endtime="20241128 09:32:35.560"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.558" endtime="20241128 09:32:35.561"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.556" endtime="20241128 09:32:35.561"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.563" endtime="20241128 09:32:35.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.561" endtime="20241128 09:32:35.564"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.572" endtime="20241128 09:32:35.572"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.573" endtime="20241128 09:32:35.573"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.564" endtime="20241128 09:32:35.573"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.627" endtime="20241128 09:32:35.573"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.574" endtime="20241128 09:32:35.575"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:35.576" endtime="20241128 09:32:35.576"/>
</return>
<msg timestamp="20241128 09:32:35.576" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:30.626" endtime="20241128 09:32:35.576"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.578" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241128 09:32:35.578" endtime="20241128 09:32:35.578"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.579" endtime="20241128 09:32:35.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.579" endtime="20241128 09:32:35.579"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.579" endtime="20241128 09:32:35.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.580" endtime="20241128 09:32:35.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.580" endtime="20241128 09:32:35.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.580" endtime="20241128 09:32:35.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.580" endtime="20241128 09:32:35.580"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.580" endtime="20241128 09:32:35.581"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.582" endtime="20241128 09:32:35.582"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.583"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.583"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.584"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.584"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.584"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.584"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.585"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.585" endtime="20241128 09:32:35.585"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.585"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.584" endtime="20241128 09:32:35.585"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.585"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.583" endtime="20241128 09:32:35.585"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:35.586" endtime="20241128 09:32:35.586"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.586" endtime="20241128 09:32:35.586"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.585" endtime="20241128 09:32:35.586"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.586" endtime="20241128 09:32:35.586"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.586" endtime="20241128 09:32:35.586"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.586" endtime="20241128 09:32:35.587"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.587" endtime="20241128 09:32:35.587"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.587" endtime="20241128 09:32:35.587"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.587" endtime="20241128 09:32:35.587"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.587" endtime="20241128 09:32:35.587"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.585" endtime="20241128 09:32:35.587"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.585" endtime="20241128 09:32:35.587"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.579" endtime="20241128 09:32:35.587"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:35.578" endtime="20241128 09:32:35.588"/>
</for>
<msg timestamp="20241128 09:32:35.588" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:35.577" endtime="20241128 09:32:35.588"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.588" endtime="20241128 09:32:35.589"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241128 09:32:35.595" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241128 09:32:35.594" endtime="20241128 09:32:35.595"/>
</kw>
<msg timestamp="20241128 09:32:35.595" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241128 09:32:35.593" endtime="20241128 09:32:35.595"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.595" endtime="20241128 09:32:35.595"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.596" endtime="20241128 09:32:35.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.596" endtime="20241128 09:32:35.596"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.596" endtime="20241128 09:32:35.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.596" endtime="20241128 09:32:35.596"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.596" endtime="20241128 09:32:35.596"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.595" endtime="20241128 09:32:35.596"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.595" endtime="20241128 09:32:35.596"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:35.597" endtime="20241128 09:32:35.597"/>
</return>
<msg timestamp="20241128 09:32:35.597" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241128 09:32:35.592" endtime="20241128 09:32:35.597"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.597" endtime="20241128 09:32:35.597"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.597" endtime="20241128 09:32:35.598"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.599" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241128 09:32:35.598" endtime="20241128 09:32:35.599"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.598" endtime="20241128 09:32:35.599"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.597" endtime="20241128 09:32:35.599"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:35.602" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '459', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241128 09:32:35.600" endtime="20241128 09:32:35.602"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:35.607" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "459", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241128 09:32:35.606" endtime="20241128 09:32:35.607"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:35.617" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:35.618" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:35.607" endtime="20241128 09:32:35.618"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.618" endtime="20241128 09:32:35.619"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:35.619" endtime="20241128 09:32:35.619"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.604" endtime="20241128 09:32:35.620"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.589" endtime="20241128 09:32:35.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:35.621" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:35.621" endtime="20241128 09:32:35.621"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:35.621"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.622" endtime="20241128 09:32:35.622"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.622" endtime="20241128 09:32:35.622"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.623" endtime="20241128 09:32:35.623"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.621" endtime="20241128 09:32:35.623"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:35.623"/>
</try>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:35.623"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.627" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241128 09:32:35.626" endtime="20241128 09:32:35.627"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.628" endtime="20241128 09:32:35.630"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:35.631" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241128 09:32:35.630" endtime="20241128 09:32:35.631"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.632" endtime="20241128 09:32:35.632"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.632" endtime="20241128 09:32:35.632"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.632" endtime="20241128 09:32:35.632"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.631" endtime="20241128 09:32:35.632"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.633" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:35.633" endtime="20241128 09:32:35.633"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.634" endtime="20241128 09:32:35.634"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.633" endtime="20241128 09:32:35.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.634" endtime="20241128 09:32:35.634"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.634" endtime="20241128 09:32:35.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.637" endtime="20241128 09:32:35.637"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.635" endtime="20241128 09:32:35.637"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.639" endtime="20241128 09:32:35.639"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.643" endtime="20241128 09:32:35.643"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.637" endtime="20241128 09:32:35.644"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.646" endtime="20241128 09:32:35.646"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.644" endtime="20241128 09:32:35.646"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.650" endtime="20241128 09:32:35.651"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.647" endtime="20241128 09:32:35.651"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:35.685" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:35.661" endtime="20241128 09:32:35.685"/>
</kw>
<msg timestamp="20241128 09:32:35.685" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.660" endtime="20241128 09:32:35.685"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.685" endtime="20241128 09:32:35.685"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.659" endtime="20241128 09:32:35.685"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.686" endtime="20241128 09:32:35.686"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.686" endtime="20241128 09:32:35.686"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.686" endtime="20241128 09:32:35.686"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.659" endtime="20241128 09:32:35.686"/>
</try>
<msg timestamp="20241128 09:32:35.687" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.658" endtime="20241128 09:32:35.687"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.687" endtime="20241128 09:32:35.687"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.657" endtime="20241128 09:32:35.687"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.687" endtime="20241128 09:32:35.687"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.687" endtime="20241128 09:32:35.687"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.657" endtime="20241128 09:32:35.687"/>
</try>
<msg timestamp="20241128 09:32:35.688" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.656" endtime="20241128 09:32:35.688"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.694" endtime="20241128 09:32:35.694"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.694" endtime="20241128 09:32:35.694"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.693" endtime="20241128 09:32:35.694"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.692" endtime="20241128 09:32:35.694"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.690" endtime="20241128 09:32:35.694"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.656" endtime="20241128 09:32:35.695"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:35.710" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:35.704" endtime="20241128 09:32:35.711"/>
</kw>
<msg timestamp="20241128 09:32:35.711" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.703" endtime="20241128 09:32:35.711"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.711" endtime="20241128 09:32:35.711"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.703" endtime="20241128 09:32:35.711"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.712" endtime="20241128 09:32:35.712"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.712" endtime="20241128 09:32:35.712"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.711" endtime="20241128 09:32:35.712"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.703" endtime="20241128 09:32:35.712"/>
</try>
<msg timestamp="20241128 09:32:35.712" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.703" endtime="20241128 09:32:35.712"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.712" endtime="20241128 09:32:35.712"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.701" endtime="20241128 09:32:35.713"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.713" endtime="20241128 09:32:35.713"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.713" endtime="20241128 09:32:35.713"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.701" endtime="20241128 09:32:35.713"/>
</try>
<msg timestamp="20241128 09:32:35.713" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.701" endtime="20241128 09:32:35.713"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.716" endtime="20241128 09:32:35.716"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.716" endtime="20241128 09:32:35.716"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.715" endtime="20241128 09:32:35.716"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.715" endtime="20241128 09:32:35.716"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.714" endtime="20241128 09:32:35.716"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.701" endtime="20241128 09:32:35.716"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:35.733" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:35.734" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:35.717" endtime="20241128 09:32:35.734"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:35.734" endtime="20241128 09:32:35.734"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.716" endtime="20241128 09:32:35.734"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.734" endtime="20241128 09:32:35.735"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.735" endtime="20241128 09:32:35.735"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.734" endtime="20241128 09:32:35.735"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.716" endtime="20241128 09:32:35.735"/>
</try>
<msg timestamp="20241128 09:32:35.735" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:35.698" endtime="20241128 09:32:35.735"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.738" endtime="20241128 09:32:35.738"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.738" endtime="20241128 09:32:35.738"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.738" endtime="20241128 09:32:35.738"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.738" endtime="20241128 09:32:35.738"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.737" endtime="20241128 09:32:35.739"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.697" endtime="20241128 09:32:35.739"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.739" endtime="20241128 09:32:35.739"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.739" endtime="20241128 09:32:35.739"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.697" endtime="20241128 09:32:35.739"/>
</try>
<status status="PASS" starttime="20241128 09:32:35.697" endtime="20241128 09:32:35.739"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:35.752" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:35.746" endtime="20241128 09:32:35.752"/>
</kw>
<msg timestamp="20241128 09:32:35.753" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.746" endtime="20241128 09:32:35.753"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.753" endtime="20241128 09:32:35.753"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.745" endtime="20241128 09:32:35.753"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.753" endtime="20241128 09:32:35.753"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.754" endtime="20241128 09:32:35.754"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.753" endtime="20241128 09:32:35.754"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.745" endtime="20241128 09:32:35.754"/>
</try>
<msg timestamp="20241128 09:32:35.754" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.745" endtime="20241128 09:32:35.754"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.754" endtime="20241128 09:32:35.754"/>
</return>
<msg timestamp="20241128 09:32:35.755" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.743" endtime="20241128 09:32:35.755"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.757" endtime="20241128 09:32:35.757"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.758" endtime="20241128 09:32:35.758"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.757" endtime="20241128 09:32:35.758"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.757" endtime="20241128 09:32:35.758"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.756" endtime="20241128 09:32:35.758"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.741" endtime="20241128 09:32:35.759"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.653" endtime="20241128 09:32:35.759"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:35.806" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241128 09:32:35.765" endtime="20241128 09:32:35.806"/>
</kw>
<msg timestamp="20241128 09:32:35.807" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.765" endtime="20241128 09:32:35.807"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.807" endtime="20241128 09:32:35.807"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.765" endtime="20241128 09:32:35.807"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.808" endtime="20241128 09:32:35.808"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.809" endtime="20241128 09:32:35.809"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.808" endtime="20241128 09:32:35.809"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.765" endtime="20241128 09:32:35.809"/>
</try>
<msg timestamp="20241128 09:32:35.810" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.764" endtime="20241128 09:32:35.810"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:35.810" endtime="20241128 09:32:35.810"/>
</return>
<msg timestamp="20241128 09:32:35.810" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.763" endtime="20241128 09:32:35.810"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.815" endtime="20241128 09:32:35.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.815" endtime="20241128 09:32:35.815"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.814" endtime="20241128 09:32:35.815"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.814" endtime="20241128 09:32:35.815"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.813" endtime="20241128 09:32:35.815"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.761" endtime="20241128 09:32:35.816"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:35.816" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:35.816" endtime="20241128 09:32:35.817"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.819" endtime="20241128 09:32:35.819"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.821" endtime="20241128 09:32:35.822"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.818" endtime="20241128 09:32:35.822"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:35.823" endtime="20241128 09:32:35.823"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.822" endtime="20241128 09:32:35.823"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.818" endtime="20241128 09:32:35.824"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:35.825" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:35.825" endtime="20241128 09:32:35.890"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.824" endtime="20241128 09:32:35.890"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.890" endtime="20241128 09:32:35.891"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.891" endtime="20241128 09:32:35.891"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.890" endtime="20241128 09:32:35.891"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.824" endtime="20241128 09:32:35.891"/>
</try>
<status status="PASS" starttime="20241128 09:32:35.817" endtime="20241128 09:32:35.892"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.817" endtime="20241128 09:32:35.892"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.817" endtime="20241128 09:32:35.892"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.892" endtime="20241128 09:32:35.892"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.892" endtime="20241128 09:32:35.892"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.817" endtime="20241128 09:32:35.892"/>
</try>
<status status="PASS" starttime="20241128 09:32:35.653" endtime="20241128 09:32:35.893"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.893" endtime="20241128 09:32:35.893"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.893" endtime="20241128 09:32:35.893"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.893" endtime="20241128 09:32:35.893"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.651" endtime="20241128 09:32:35.893"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.895" endtime="20241128 09:32:35.895"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.894" endtime="20241128 09:32:35.895"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.896" endtime="20241128 09:32:35.896"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.896" endtime="20241128 09:32:35.896"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.896" endtime="20241128 09:32:35.896"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.897" endtime="20241128 09:32:35.897"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.896" endtime="20241128 09:32:35.897"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.896" endtime="20241128 09:32:35.897"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.895" endtime="20241128 09:32:35.897"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:35.902" endtime="20241128 09:32:35.902"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.906" endtime="20241128 09:32:35.906"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.897" endtime="20241128 09:32:35.906"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.907" endtime="20241128 09:32:35.908"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.909" endtime="20241128 09:32:35.910"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.908" endtime="20241128 09:32:35.910"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.910" endtime="20241128 09:32:35.911"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.910" endtime="20241128 09:32:35.911"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.908" endtime="20241128 09:32:35.911"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.906" endtime="20241128 09:32:35.911"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:35.916" endtime="20241128 09:32:35.916"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.919" endtime="20241128 09:32:35.919"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.911" endtime="20241128 09:32:35.919"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.920" endtime="20241128 09:32:35.920"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.920" endtime="20241128 09:32:35.920"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.920" endtime="20241128 09:32:35.921"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.921" endtime="20241128 09:32:35.921"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.921" endtime="20241128 09:32:35.921"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.920" endtime="20241128 09:32:35.921"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.919" endtime="20241128 09:32:35.921"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.923" endtime="20241128 09:32:35.923"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.921" endtime="20241128 09:32:35.923"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.928" endtime="20241128 09:32:35.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.929" endtime="20241128 09:32:35.929"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.923" endtime="20241128 09:32:35.929"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.633" endtime="20241128 09:32:35.929"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.929" endtime="20241128 09:32:35.929"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:35.929" endtime="20241128 09:32:35.929"/>
</return>
<msg timestamp="20241128 09:32:35.929" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241128 09:32:35.632" endtime="20241128 09:32:35.929"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.930" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241128 09:32:35.930" endtime="20241128 09:32:35.930"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.930" endtime="20241128 09:32:35.930"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.931" endtime="20241128 09:32:35.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.931" endtime="20241128 09:32:35.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.931" endtime="20241128 09:32:35.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.931" endtime="20241128 09:32:35.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.931" endtime="20241128 09:32:35.931"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.932" endtime="20241128 09:32:35.932"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.932" endtime="20241128 09:32:35.932"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.933" endtime="20241128 09:32:35.933"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.934"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.934"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.934"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.935"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.935"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.935"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.935"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.935"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.935"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.936"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.936"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.935" endtime="20241128 09:32:35.936"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.936"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.934" endtime="20241128 09:32:35.936"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.936"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.936"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.936"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.937" endtime="20241128 09:32:35.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.937"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.937"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.937" endtime="20241128 09:32:35.937"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:35.937" endtime="20241128 09:32:35.937"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:35.937" endtime="20241128 09:32:35.937"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.937" endtime="20241128 09:32:35.937"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.937"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:35.936" endtime="20241128 09:32:35.937"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:35.930" endtime="20241128 09:32:35.937"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:35.930" endtime="20241128 09:32:35.938"/>
</for>
<msg timestamp="20241128 09:32:35.938" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:35.929" endtime="20241128 09:32:35.938"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.938" endtime="20241128 09:32:35.938"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:35.943" endtime="20241128 09:32:35.943"/>
</kw>
<msg timestamp="20241128 09:32:35.943" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.942" endtime="20241128 09:32:35.943"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.944" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241128 09:32:35.943" endtime="20241128 09:32:35.944"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.944" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.944" endtime="20241128 09:32:35.944"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.944" endtime="20241128 09:32:35.944"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.945" endtime="20241128 09:32:35.945"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.944" endtime="20241128 09:32:35.945"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.944" endtime="20241128 09:32:35.945"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.943" endtime="20241128 09:32:35.945"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.943" endtime="20241128 09:32:35.945"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:35.945" endtime="20241128 09:32:35.945"/>
</return>
<msg timestamp="20241128 09:32:35.945" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:35.942" endtime="20241128 09:32:35.945"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.946" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241128 09:32:35.946" endtime="20241128 09:32:35.946"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.946" endtime="20241128 09:32:35.946"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.946" endtime="20241128 09:32:35.946"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.946" endtime="20241128 09:32:35.946"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.945" endtime="20241128 09:32:35.946"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:35.947" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '460', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241128 09:32:35.947" endtime="20241128 09:32:35.947"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:35.949" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "460", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241128 09:32:35.948" endtime="20241128 09:32:35.949"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:35.979" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:35.979" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:35.949" endtime="20241128 09:32:35.979"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.979" endtime="20241128 09:32:35.980"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:35.980" endtime="20241128 09:32:35.980"/>
</return>
<status status="PASS" starttime="20241128 09:32:35.948" endtime="20241128 09:32:35.980"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.939" endtime="20241128 09:32:35.981"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:35.981" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:35.981" endtime="20241128 09:32:35.981"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.625" endtime="20241128 09:32:35.981"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.981" endtime="20241128 09:32:35.981"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.981" endtime="20241128 09:32:35.982"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.982" endtime="20241128 09:32:35.982"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.981" endtime="20241128 09:32:35.982"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.625" endtime="20241128 09:32:35.982"/>
</try>
<status status="PASS" starttime="20241128 09:32:35.624" endtime="20241128 09:32:35.982"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.983" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241128 09:32:35.982" endtime="20241128 09:32:35.983"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:35.983" endtime="20241128 09:32:35.983"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:35.984" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241128 09:32:35.983" endtime="20241128 09:32:35.984"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.984" endtime="20241128 09:32:35.984"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.984" endtime="20241128 09:32:35.984"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.984" endtime="20241128 09:32:35.984"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.984" endtime="20241128 09:32:35.984"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:35.985" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:32:35.985" endtime="20241128 09:32:35.985"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.985" endtime="20241128 09:32:35.986"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.985" endtime="20241128 09:32:35.986"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:35.986" endtime="20241128 09:32:35.986"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.986" endtime="20241128 09:32:35.986"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.988" endtime="20241128 09:32:35.988"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.986" endtime="20241128 09:32:35.988"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.989" endtime="20241128 09:32:35.990"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.992" endtime="20241128 09:32:35.993"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.988" endtime="20241128 09:32:35.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.995" endtime="20241128 09:32:35.996"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.994" endtime="20241128 09:32:35.996"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:35.999" endtime="20241128 09:32:35.999"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:35.996" endtime="20241128 09:32:35.999"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.013" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:36.006" endtime="20241128 09:32:36.013"/>
</kw>
<msg timestamp="20241128 09:32:36.013" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.006" endtime="20241128 09:32:36.013"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.013" endtime="20241128 09:32:36.013"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.006" endtime="20241128 09:32:36.013"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.014" endtime="20241128 09:32:36.014"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.014" endtime="20241128 09:32:36.014"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.013" endtime="20241128 09:32:36.014"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.006" endtime="20241128 09:32:36.014"/>
</try>
<msg timestamp="20241128 09:32:36.014" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.005" endtime="20241128 09:32:36.014"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.014" endtime="20241128 09:32:36.015"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.004" endtime="20241128 09:32:36.015"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.015" endtime="20241128 09:32:36.015"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.015" endtime="20241128 09:32:36.015"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.004" endtime="20241128 09:32:36.015"/>
</try>
<msg timestamp="20241128 09:32:36.015" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.004" endtime="20241128 09:32:36.015"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.017" endtime="20241128 09:32:36.017"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.018" endtime="20241128 09:32:36.018"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.017" endtime="20241128 09:32:36.018"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.017" endtime="20241128 09:32:36.018"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.016" endtime="20241128 09:32:36.018"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.004" endtime="20241128 09:32:36.018"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.033" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:36.027" endtime="20241128 09:32:36.033"/>
</kw>
<msg timestamp="20241128 09:32:36.033" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.027" endtime="20241128 09:32:36.033"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.033" endtime="20241128 09:32:36.033"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.027" endtime="20241128 09:32:36.033"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.034" endtime="20241128 09:32:36.034"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.034" endtime="20241128 09:32:36.034"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.033" endtime="20241128 09:32:36.034"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.027" endtime="20241128 09:32:36.034"/>
</try>
<msg timestamp="20241128 09:32:36.034" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.026" endtime="20241128 09:32:36.034"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.034" endtime="20241128 09:32:36.035"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.025" endtime="20241128 09:32:36.035"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.035" endtime="20241128 09:32:36.035"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.035" endtime="20241128 09:32:36.035"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.025" endtime="20241128 09:32:36.035"/>
</try>
<msg timestamp="20241128 09:32:36.035" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.024" endtime="20241128 09:32:36.035"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.037" endtime="20241128 09:32:36.037"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.038" endtime="20241128 09:32:36.038"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.037" endtime="20241128 09:32:36.038"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.037" endtime="20241128 09:32:36.038"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.036" endtime="20241128 09:32:36.038"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.023" endtime="20241128 09:32:36.038"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:36.048" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:36.048" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:36.038" endtime="20241128 09:32:36.048"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:36.048" endtime="20241128 09:32:36.048"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.038" endtime="20241128 09:32:36.048"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.048" endtime="20241128 09:32:36.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.049" endtime="20241128 09:32:36.049"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.048" endtime="20241128 09:32:36.049"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.038" endtime="20241128 09:32:36.049"/>
</try>
<msg timestamp="20241128 09:32:36.049" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:36.021" endtime="20241128 09:32:36.049"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.052" endtime="20241128 09:32:36.053"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.053" endtime="20241128 09:32:36.053"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.052" endtime="20241128 09:32:36.053"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.052" endtime="20241128 09:32:36.053"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.051" endtime="20241128 09:32:36.053"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.020" endtime="20241128 09:32:36.054"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.054" endtime="20241128 09:32:36.054"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.054" endtime="20241128 09:32:36.054"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.020" endtime="20241128 09:32:36.054"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.020" endtime="20241128 09:32:36.055"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.068" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:36.062" endtime="20241128 09:32:36.068"/>
</kw>
<msg timestamp="20241128 09:32:36.068" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.061" endtime="20241128 09:32:36.068"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.068" endtime="20241128 09:32:36.069"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.061" endtime="20241128 09:32:36.069"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.069" endtime="20241128 09:32:36.069"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.070" endtime="20241128 09:32:36.070"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.069" endtime="20241128 09:32:36.070"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.061" endtime="20241128 09:32:36.070"/>
</try>
<msg timestamp="20241128 09:32:36.070" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.060" endtime="20241128 09:32:36.070"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.070" endtime="20241128 09:32:36.070"/>
</return>
<msg timestamp="20241128 09:32:36.071" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.059" endtime="20241128 09:32:36.071"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.073" endtime="20241128 09:32:36.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.073" endtime="20241128 09:32:36.073"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.073" endtime="20241128 09:32:36.073"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.073" endtime="20241128 09:32:36.073"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.072" endtime="20241128 09:32:36.074"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.057" endtime="20241128 09:32:36.074"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.002" endtime="20241128 09:32:36.074"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.091" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241128 09:32:36.078" endtime="20241128 09:32:36.091"/>
</kw>
<msg timestamp="20241128 09:32:36.091" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.078" endtime="20241128 09:32:36.091"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.091" endtime="20241128 09:32:36.091"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.078" endtime="20241128 09:32:36.091"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.092" endtime="20241128 09:32:36.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.092" endtime="20241128 09:32:36.092"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.091" endtime="20241128 09:32:36.092"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.078" endtime="20241128 09:32:36.092"/>
</try>
<msg timestamp="20241128 09:32:36.092" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.078" endtime="20241128 09:32:36.092"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.092" endtime="20241128 09:32:36.092"/>
</return>
<msg timestamp="20241128 09:32:36.093" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.077" endtime="20241128 09:32:36.093"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.095" endtime="20241128 09:32:36.095"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.095" endtime="20241128 09:32:36.095"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.095" endtime="20241128 09:32:36.095"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.094" endtime="20241128 09:32:36.095"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.094" endtime="20241128 09:32:36.095"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.076" endtime="20241128 09:32:36.095"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:36.096" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:36.095" endtime="20241128 09:32:36.096"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.097" endtime="20241128 09:32:36.097"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.099" endtime="20241128 09:32:36.099"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.097" endtime="20241128 09:32:36.099"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:36.099" endtime="20241128 09:32:36.100"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.099" endtime="20241128 09:32:36.100"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.097" endtime="20241128 09:32:36.100"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:36.100" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:36.100" endtime="20241128 09:32:36.222"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.100" endtime="20241128 09:32:36.223"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.223" endtime="20241128 09:32:36.223"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.223" endtime="20241128 09:32:36.223"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.223" endtime="20241128 09:32:36.223"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.100" endtime="20241128 09:32:36.223"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.097" endtime="20241128 09:32:36.223"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.096" endtime="20241128 09:32:36.224"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.096" endtime="20241128 09:32:36.224"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.224" endtime="20241128 09:32:36.224"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.224" endtime="20241128 09:32:36.224"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.096" endtime="20241128 09:32:36.224"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.001" endtime="20241128 09:32:36.225"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.226" endtime="20241128 09:32:36.226"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.225" endtime="20241128 09:32:36.226"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.225" endtime="20241128 09:32:36.226"/>
</if>
<status status="PASS" starttime="20241128 09:32:35.999" endtime="20241128 09:32:36.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.228" endtime="20241128 09:32:36.228"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.227" endtime="20241128 09:32:36.228"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.229" endtime="20241128 09:32:36.229"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.230" endtime="20241128 09:32:36.230"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.230" endtime="20241128 09:32:36.230"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.230" endtime="20241128 09:32:36.230"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.230" endtime="20241128 09:32:36.230"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.229" endtime="20241128 09:32:36.230"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.228" endtime="20241128 09:32:36.230"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:36.234" endtime="20241128 09:32:36.235"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.237" endtime="20241128 09:32:36.237"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.230" endtime="20241128 09:32:36.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.238" endtime="20241128 09:32:36.238"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.238" endtime="20241128 09:32:36.239"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.238" endtime="20241128 09:32:36.239"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.239" endtime="20241128 09:32:36.239"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.239" endtime="20241128 09:32:36.239"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.238" endtime="20241128 09:32:36.239"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.237" endtime="20241128 09:32:36.239"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:36.245" endtime="20241128 09:32:36.245"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.247" endtime="20241128 09:32:36.247"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.239" endtime="20241128 09:32:36.247"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.248" endtime="20241128 09:32:36.248"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.248" endtime="20241128 09:32:36.249"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.248" endtime="20241128 09:32:36.249"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.249" endtime="20241128 09:32:36.249"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.249" endtime="20241128 09:32:36.249"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.248" endtime="20241128 09:32:36.249"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.247" endtime="20241128 09:32:36.249"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.251" endtime="20241128 09:32:36.251"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.249" endtime="20241128 09:32:36.251"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.256" endtime="20241128 09:32:36.256"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.256" endtime="20241128 09:32:36.256"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.251" endtime="20241128 09:32:36.257"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.985" endtime="20241128 09:32:36.257"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.257" endtime="20241128 09:32:36.258"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:36.258" endtime="20241128 09:32:36.258"/>
</return>
<msg timestamp="20241128 09:32:36.259" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241128 09:32:35.985" endtime="20241128 09:32:36.259"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.261" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241128 09:32:36.260" endtime="20241128 09:32:36.261"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.261" endtime="20241128 09:32:36.261"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.262" endtime="20241128 09:32:36.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.262" endtime="20241128 09:32:36.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.262" endtime="20241128 09:32:36.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.262" endtime="20241128 09:32:36.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.262" endtime="20241128 09:32:36.262"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.263" endtime="20241128 09:32:36.263"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.263" endtime="20241128 09:32:36.263"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.264" endtime="20241128 09:32:36.264"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.265" endtime="20241128 09:32:36.265"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.266"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.266" endtime="20241128 09:32:36.267"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.267"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.267"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.267"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.267"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.265" endtime="20241128 09:32:36.267"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.265" endtime="20241128 09:32:36.267"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:36.268" endtime="20241128 09:32:36.268"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.268" endtime="20241128 09:32:36.268"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.268"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.269" endtime="20241128 09:32:36.269"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.268" endtime="20241128 09:32:36.269"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.268" endtime="20241128 09:32:36.269"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.269" endtime="20241128 09:32:36.269"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.269" endtime="20241128 09:32:36.270"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.269" endtime="20241128 09:32:36.270"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.269" endtime="20241128 09:32:36.270"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.270"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.267" endtime="20241128 09:32:36.270"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.261" endtime="20241128 09:32:36.270"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:36.261" endtime="20241128 09:32:36.270"/>
</for>
<msg timestamp="20241128 09:32:36.270" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:36.259" endtime="20241128 09:32:36.270"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.270" endtime="20241128 09:32:36.271"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:36.275" endtime="20241128 09:32:36.275"/>
</kw>
<msg timestamp="20241128 09:32:36.275" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.274" endtime="20241128 09:32:36.275"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.276" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241128 09:32:36.276" endtime="20241128 09:32:36.276"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.277" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.276" endtime="20241128 09:32:36.277"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.276" endtime="20241128 09:32:36.277"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.277" endtime="20241128 09:32:36.277"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.277" endtime="20241128 09:32:36.277"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.276" endtime="20241128 09:32:36.277"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.275" endtime="20241128 09:32:36.277"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.275" endtime="20241128 09:32:36.277"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:36.277" endtime="20241128 09:32:36.277"/>
</return>
<msg timestamp="20241128 09:32:36.278" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.274" endtime="20241128 09:32:36.278"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.278" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241128 09:32:36.278" endtime="20241128 09:32:36.278"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.278" endtime="20241128 09:32:36.278"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.279" endtime="20241128 09:32:36.279"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.278" endtime="20241128 09:32:36.279"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.278" endtime="20241128 09:32:36.279"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:36.280" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '461', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241128 09:32:36.279" endtime="20241128 09:32:36.280"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:36.281" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "461", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241128 09:32:36.280" endtime="20241128 09:32:36.281"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:36.326" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:36.327" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:36.281" endtime="20241128 09:32:36.327"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.327" endtime="20241128 09:32:36.328"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:36.328" endtime="20241128 09:32:36.328"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.280" endtime="20241128 09:32:36.328"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.271" endtime="20241128 09:32:36.329"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:36.329" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:36.329" endtime="20241128 09:32:36.329"/>
</kw>
<status status="PASS" starttime="20241128 09:32:35.982" endtime="20241128 09:32:36.329"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.329" endtime="20241128 09:32:36.329"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.330" endtime="20241128 09:32:36.330"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.330" endtime="20241128 09:32:36.330"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.329" endtime="20241128 09:32:36.330"/>
</branch>
<status status="PASS" starttime="20241128 09:32:35.982" endtime="20241128 09:32:36.330"/>
</try>
<status status="PASS" starttime="20241128 09:32:35.982" endtime="20241128 09:32:36.330"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.331" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241128 09:32:36.331" endtime="20241128 09:32:36.331"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.331" endtime="20241128 09:32:36.331"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:36.332" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241128 09:32:36.332" endtime="20241128 09:32:36.332"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.333" endtime="20241128 09:32:36.333"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.333" endtime="20241128 09:32:36.333"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.332" endtime="20241128 09:32:36.333"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.332" endtime="20241128 09:32:36.333"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.334" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:36.334" endtime="20241128 09:32:36.334"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.334" endtime="20241128 09:32:36.334"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.334" endtime="20241128 09:32:36.334"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.335" endtime="20241128 09:32:36.335"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.335" endtime="20241128 09:32:36.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.350" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:36.344" endtime="20241128 09:32:36.350"/>
</kw>
<msg timestamp="20241128 09:32:36.351" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.344" endtime="20241128 09:32:36.351"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.351" endtime="20241128 09:32:36.351"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.343" endtime="20241128 09:32:36.351"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.351" endtime="20241128 09:32:36.351"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.352" endtime="20241128 09:32:36.352"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.351" endtime="20241128 09:32:36.352"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.343" endtime="20241128 09:32:36.352"/>
</try>
<msg timestamp="20241128 09:32:36.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.342" endtime="20241128 09:32:36.352"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.352" endtime="20241128 09:32:36.353"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.340" endtime="20241128 09:32:36.353"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.353" endtime="20241128 09:32:36.353"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.353" endtime="20241128 09:32:36.353"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.340" endtime="20241128 09:32:36.353"/>
</try>
<msg timestamp="20241128 09:32:36.353" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.340" endtime="20241128 09:32:36.353"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.356" endtime="20241128 09:32:36.356"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.357" endtime="20241128 09:32:36.357"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.356" endtime="20241128 09:32:36.357"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.356" endtime="20241128 09:32:36.357"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.355" endtime="20241128 09:32:36.357"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.339" endtime="20241128 09:32:36.358"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.368" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:36.362" endtime="20241128 09:32:36.368"/>
</kw>
<msg timestamp="20241128 09:32:36.368" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.362" endtime="20241128 09:32:36.368"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.368" endtime="20241128 09:32:36.368"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.362" endtime="20241128 09:32:36.368"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.369" endtime="20241128 09:32:36.369"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.369" endtime="20241128 09:32:36.369"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.369" endtime="20241128 09:32:36.369"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.362" endtime="20241128 09:32:36.369"/>
</try>
<msg timestamp="20241128 09:32:36.369" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.361" endtime="20241128 09:32:36.369"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.369" endtime="20241128 09:32:36.370"/>
</return>
<msg timestamp="20241128 09:32:36.370" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.360" endtime="20241128 09:32:36.370"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.372" endtime="20241128 09:32:36.372"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.372" endtime="20241128 09:32:36.372"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.371" endtime="20241128 09:32:36.372"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.371" endtime="20241128 09:32:36.372"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.371" endtime="20241128 09:32:36.372"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.360" endtime="20241128 09:32:36.372"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.390" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:36.379" endtime="20241128 09:32:36.390"/>
</kw>
<msg timestamp="20241128 09:32:36.390" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.379" endtime="20241128 09:32:36.390"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.391" endtime="20241128 09:32:36.391"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.378" endtime="20241128 09:32:36.391"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.391" endtime="20241128 09:32:36.391"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.391" endtime="20241128 09:32:36.391"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.391" endtime="20241128 09:32:36.392"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.378" endtime="20241128 09:32:36.392"/>
</try>
<msg timestamp="20241128 09:32:36.392" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.377" endtime="20241128 09:32:36.392"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.392" endtime="20241128 09:32:36.392"/>
</return>
<msg timestamp="20241128 09:32:36.392" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.375" endtime="20241128 09:32:36.392"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.394" endtime="20241128 09:32:36.394"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.394" endtime="20241128 09:32:36.394"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.394" endtime="20241128 09:32:36.394"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.394" endtime="20241128 09:32:36.394"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.393" endtime="20241128 09:32:36.395"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.374" endtime="20241128 09:32:36.395"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.337" endtime="20241128 09:32:36.395"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:36.395" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:36.395" endtime="20241128 09:32:36.395"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.397" endtime="20241128 09:32:36.397"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.396" endtime="20241128 09:32:36.397"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:36.397" endtime="20241128 09:32:36.397"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.397" endtime="20241128 09:32:36.397"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.396" endtime="20241128 09:32:36.397"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:36.398" endtime="20241128 09:32:36.426"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.397" endtime="20241128 09:32:36.426"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.427" endtime="20241128 09:32:36.427"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.427" endtime="20241128 09:32:36.427"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.426" endtime="20241128 09:32:36.427"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.397" endtime="20241128 09:32:36.427"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.396" endtime="20241128 09:32:36.428"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.396" endtime="20241128 09:32:36.428"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.395" endtime="20241128 09:32:36.428"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.428" endtime="20241128 09:32:36.428"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.428" endtime="20241128 09:32:36.428"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.395" endtime="20241128 09:32:36.428"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.337" endtime="20241128 09:32:36.428"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.335" endtime="20241128 09:32:36.428"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.430" endtime="20241128 09:32:36.430"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.432" endtime="20241128 09:32:36.432"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.428" endtime="20241128 09:32:36.432"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.433" endtime="20241128 09:32:36.433"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.432" endtime="20241128 09:32:36.433"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.435" endtime="20241128 09:32:36.435"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.433" endtime="20241128 09:32:36.436"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.437" endtime="20241128 09:32:36.437"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.438" endtime="20241128 09:32:36.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.438" endtime="20241128 09:32:36.438"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.438" endtime="20241128 09:32:36.438"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.436" endtime="20241128 09:32:36.438"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.439" endtime="20241128 09:32:36.439"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.438" endtime="20241128 09:32:36.440"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.441" endtime="20241128 09:32:36.441"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.442" endtime="20241128 09:32:36.442"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.441" endtime="20241128 09:32:36.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.442" endtime="20241128 09:32:36.443"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.442" endtime="20241128 09:32:36.443"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.441" endtime="20241128 09:32:36.443"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.440" endtime="20241128 09:32:36.443"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:36.448" endtime="20241128 09:32:36.448"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.450" endtime="20241128 09:32:36.451"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.443" endtime="20241128 09:32:36.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.452" endtime="20241128 09:32:36.452"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.452" endtime="20241128 09:32:36.452"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.452" endtime="20241128 09:32:36.452"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.453" endtime="20241128 09:32:36.453"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.452" endtime="20241128 09:32:36.453"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.452" endtime="20241128 09:32:36.453"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.451" endtime="20241128 09:32:36.453"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:36.458" endtime="20241128 09:32:36.459"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.461" endtime="20241128 09:32:36.461"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.453" endtime="20241128 09:32:36.461"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.462" endtime="20241128 09:32:36.462"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.463" endtime="20241128 09:32:36.463"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.462" endtime="20241128 09:32:36.463"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.463" endtime="20241128 09:32:36.463"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.463" endtime="20241128 09:32:36.463"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.462" endtime="20241128 09:32:36.463"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.461" endtime="20241128 09:32:36.463"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.465" endtime="20241128 09:32:36.465"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.463" endtime="20241128 09:32:36.465"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.469" endtime="20241128 09:32:36.470"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.470" endtime="20241128 09:32:36.470"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.465" endtime="20241128 09:32:36.470"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.334" endtime="20241128 09:32:36.470"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.470" endtime="20241128 09:32:36.471"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:36.471" endtime="20241128 09:32:36.471"/>
</return>
<msg timestamp="20241128 09:32:36.471" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:36.333" endtime="20241128 09:32:36.471"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.472" level="INFO">${key} = testCaseFlowSequenceId:14::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241128 09:32:36.472" endtime="20241128 09:32:36.472"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.472" endtime="20241128 09:32:36.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.473" endtime="20241128 09:32:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.473" endtime="20241128 09:32:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.473" endtime="20241128 09:32:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.473" endtime="20241128 09:32:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.473" endtime="20241128 09:32:36.473"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.474" endtime="20241128 09:32:36.474"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.474" endtime="20241128 09:32:36.474"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.475" endtime="20241128 09:32:36.475"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.476" endtime="20241128 09:32:36.476"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.476" endtime="20241128 09:32:36.477"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.476" endtime="20241128 09:32:36.477"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.477"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.478"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.478"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.477" endtime="20241128 09:32:36.478"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.476" endtime="20241128 09:32:36.478"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.476" endtime="20241128 09:32:36.478"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.478"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.478"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.478"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.478"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.479"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.479"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.479" endtime="20241128 09:32:36.479"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.479" endtime="20241128 09:32:36.479"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.479" endtime="20241128 09:32:36.479"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.479" endtime="20241128 09:32:36.479"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.479"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:36.478" endtime="20241128 09:32:36.479"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:36.472" endtime="20241128 09:32:36.479"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:36.472" endtime="20241128 09:32:36.479"/>
</for>
<msg timestamp="20241128 09:32:36.480" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:36.471" endtime="20241128 09:32:36.480"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.480" endtime="20241128 09:32:36.480"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:36.483" endtime="20241128 09:32:36.483"/>
</kw>
<msg timestamp="20241128 09:32:36.483" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.483" endtime="20241128 09:32:36.483"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.484" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241128 09:32:36.483" endtime="20241128 09:32:36.484"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.484" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.484" endtime="20241128 09:32:36.484"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.484" endtime="20241128 09:32:36.484"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.485" endtime="20241128 09:32:36.485"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.484" endtime="20241128 09:32:36.485"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.484" endtime="20241128 09:32:36.485"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.483" endtime="20241128 09:32:36.485"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.483" endtime="20241128 09:32:36.485"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:36.485" endtime="20241128 09:32:36.485"/>
</return>
<msg timestamp="20241128 09:32:36.486" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.482" endtime="20241128 09:32:36.486"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.486" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241128 09:32:36.486" endtime="20241128 09:32:36.486"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.486" endtime="20241128 09:32:36.486"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.487" endtime="20241128 09:32:36.487"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.486" endtime="20241128 09:32:36.487"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.486" endtime="20241128 09:32:36.487"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:36.488" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '462', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241128 09:32:36.487" endtime="20241128 09:32:36.488"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:36.488" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "462", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241128 09:32:36.488" endtime="20241128 09:32:36.488"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:36.496" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:36.496" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:36.489" endtime="20241128 09:32:36.496"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.497" endtime="20241128 09:32:36.497"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:36.498" endtime="20241128 09:32:36.498"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.488" endtime="20241128 09:32:36.498"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.480" endtime="20241128 09:32:36.498"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:36.499" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:36.498" endtime="20241128 09:32:36.499"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.330" endtime="20241128 09:32:36.499"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.499" endtime="20241128 09:32:36.499"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.499" endtime="20241128 09:32:36.499"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.500" endtime="20241128 09:32:36.500"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.499" endtime="20241128 09:32:36.500"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.330" endtime="20241128 09:32:36.500"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.330" endtime="20241128 09:32:36.500"/>
</iter>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:36.500"/>
</for>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:36.500"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.623" endtime="20241128 09:32:36.500"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:36.502" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '117', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:32:36.501" endtime="20241128 09:32:36.502"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:36.503" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "117", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:32:36.503" endtime="20241128 09:32:36.503"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:36.529" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:36.529" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:36.504" endtime="20241128 09:32:36.529"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.529" endtime="20241128 09:32:36.530"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:36.530" endtime="20241128 09:32:36.530"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.502" endtime="20241128 09:32:36.530"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.500" endtime="20241128 09:32:36.530"/>
</kw>
<status status="PASS" starttime="20241128 09:32:30.615" endtime="20241128 09:32:36.530"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.530" endtime="20241128 09:32:36.530"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.531" endtime="20241128 09:32:36.531"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.531" endtime="20241128 09:32:36.531"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.530" endtime="20241128 09:32:36.531"/>
</branch>
<status status="PASS" starttime="20241128 09:32:30.615" endtime="20241128 09:32:36.531"/>
</try>
<status status="PASS" starttime="20241128 09:32:30.615" endtime="20241128 09:32:36.531"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '15', 'testCaseId': '7', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-26T16:06:17.357Z', 'updatedAt': '2024-11-28T04:02:24.298Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'project...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.532" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241128 09:32:36.532" endtime="20241128 09:32:36.532"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.532" endtime="20241128 09:32:36.533"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:36.535" endtime="20241128 09:32:36.535"/>
</kw>
<msg timestamp="20241128 09:32:36.535" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.535" endtime="20241128 09:32:36.535"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.536" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241128 09:32:36.536" endtime="20241128 09:32:36.536"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.537" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.537" endtime="20241128 09:32:36.537"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.536" endtime="20241128 09:32:36.537"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.537" endtime="20241128 09:32:36.537"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.537" endtime="20241128 09:32:36.537"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.536" endtime="20241128 09:32:36.537"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.536" endtime="20241128 09:32:36.537"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.535" endtime="20241128 09:32:36.537"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:36.537" endtime="20241128 09:32:36.537"/>
</return>
<msg timestamp="20241128 09:32:36.538" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.534" endtime="20241128 09:32:36.538"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.539" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:36.539"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:36.539" endtime="20241128 09:32:36.539"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:36.540" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241128 09:32:36.539" endtime="20241128 09:32:36.540"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.541" endtime="20241128 09:32:36.541"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.541" endtime="20241128 09:32:36.541"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.540" endtime="20241128 09:32:36.541"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.540" endtime="20241128 09:32:36.542"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:36.542" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:36.542" endtime="20241128 09:32:36.542"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.543" endtime="20241128 09:32:36.543"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.542" endtime="20241128 09:32:36.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:36.543" endtime="20241128 09:32:36.543"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.543" endtime="20241128 09:32:36.543"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:36.985" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241128 09:32:36.549" endtime="20241128 09:32:36.985"/>
</kw>
<msg timestamp="20241128 09:32:36.986" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.549" endtime="20241128 09:32:36.986"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.986" endtime="20241128 09:32:36.986"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.549" endtime="20241128 09:32:36.986"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.987" endtime="20241128 09:32:36.987"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.987" endtime="20241128 09:32:36.987"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.987" endtime="20241128 09:32:36.987"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.549" endtime="20241128 09:32:36.987"/>
</try>
<msg timestamp="20241128 09:32:36.988" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.548" endtime="20241128 09:32:36.988"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:36.988" endtime="20241128 09:32:36.988"/>
</return>
<status status="PASS" starttime="20241128 09:32:36.548" endtime="20241128 09:32:36.988"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:36.988" endtime="20241128 09:32:36.988"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:36.988" endtime="20241128 09:32:36.989"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.548" endtime="20241128 09:32:36.989"/>
</try>
<msg timestamp="20241128 09:32:36.989" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.547" endtime="20241128 09:32:36.989"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.994" endtime="20241128 09:32:36.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:36.994" endtime="20241128 09:32:36.994"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:36.993" endtime="20241128 09:32:36.994"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.993" endtime="20241128 09:32:36.994"/>
</if>
<status status="PASS" starttime="20241128 09:32:36.991" endtime="20241128 09:32:36.995"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.547" endtime="20241128 09:32:36.995"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:37.021" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241128 09:32:37.001" endtime="20241128 09:32:37.021"/>
</kw>
<msg timestamp="20241128 09:32:37.021" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:37.000" endtime="20241128 09:32:37.021"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:37.021" endtime="20241128 09:32:37.021"/>
</return>
<status status="PASS" starttime="20241128 09:32:37.000" endtime="20241128 09:32:37.021"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.022" endtime="20241128 09:32:37.022"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.022" endtime="20241128 09:32:37.022"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:37.022" endtime="20241128 09:32:37.022"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.000" endtime="20241128 09:32:37.022"/>
</try>
<msg timestamp="20241128 09:32:37.023" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.999" endtime="20241128 09:32:37.023"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:37.023" endtime="20241128 09:32:37.023"/>
</return>
<msg timestamp="20241128 09:32:37.024" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:36.997" endtime="20241128 09:32:37.024"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.028" endtime="20241128 09:32:37.028"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.028" endtime="20241128 09:32:37.028"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:37.028" endtime="20241128 09:32:37.029"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.027" endtime="20241128 09:32:37.029"/>
</if>
<status status="PASS" starttime="20241128 09:32:37.026" endtime="20241128 09:32:37.029"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.997" endtime="20241128 09:32:37.029"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:37.066" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:37.038" endtime="20241128 09:32:37.066"/>
</kw>
<msg timestamp="20241128 09:32:37.066" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:37.037" endtime="20241128 09:32:37.066"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:37.066" endtime="20241128 09:32:37.066"/>
</return>
<status status="PASS" starttime="20241128 09:32:37.037" endtime="20241128 09:32:37.067"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.067" endtime="20241128 09:32:37.067"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.067" endtime="20241128 09:32:37.067"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:37.067" endtime="20241128 09:32:37.067"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.037" endtime="20241128 09:32:37.067"/>
</try>
<msg timestamp="20241128 09:32:37.068" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:37.036" endtime="20241128 09:32:37.068"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:37.068" endtime="20241128 09:32:37.068"/>
</return>
<msg timestamp="20241128 09:32:37.069" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:37.034" endtime="20241128 09:32:37.069"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.071" endtime="20241128 09:32:37.071"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.072" endtime="20241128 09:32:37.072"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:37.071" endtime="20241128 09:32:37.072"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.071" endtime="20241128 09:32:37.072"/>
</if>
<status status="PASS" starttime="20241128 09:32:37.070" endtime="20241128 09:32:37.072"/>
</kw>
<status status="PASS" starttime="20241128 09:32:37.033" endtime="20241128 09:32:37.072"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.545" endtime="20241128 09:32:37.072"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:37.075" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:37.073" endtime="20241128 09:32:37.075"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:37.078" endtime="20241128 09:32:37.078"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:37.078" endtime="20241128 09:32:37.079"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:37.079" endtime="20241128 09:32:37.079"/>
</kw>
<status status="PASS" starttime="20241128 09:32:37.079" endtime="20241128 09:32:37.079"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.078" endtime="20241128 09:32:37.079"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:37.080" endtime="20241128 09:32:39.334"/>
</kw>
<status status="PASS" starttime="20241128 09:32:37.079" endtime="20241128 09:32:39.334"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.334" endtime="20241128 09:32:39.334"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.335" endtime="20241128 09:32:39.335"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.334" endtime="20241128 09:32:39.335"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.079" endtime="20241128 09:32:39.335"/>
</try>
<status status="PASS" starttime="20241128 09:32:37.077" endtime="20241128 09:32:39.335"/>
</kw>
<status status="PASS" starttime="20241128 09:32:37.076" endtime="20241128 09:32:39.335"/>
</kw>
<status status="PASS" starttime="20241128 09:32:37.076" endtime="20241128 09:32:39.335"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.336" endtime="20241128 09:32:39.336"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.336" endtime="20241128 09:32:39.336"/>
</branch>
<status status="PASS" starttime="20241128 09:32:37.076" endtime="20241128 09:32:39.336"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.545" endtime="20241128 09:32:39.336"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.543" endtime="20241128 09:32:39.336"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.339" endtime="20241128 09:32:39.339"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.342" endtime="20241128 09:32:39.342"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.336" endtime="20241128 09:32:39.342"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.343" endtime="20241128 09:32:39.343"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.342" endtime="20241128 09:32:39.343"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.345" endtime="20241128 09:32:39.345"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.343" endtime="20241128 09:32:39.345"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.347" endtime="20241128 09:32:39.347"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.347" endtime="20241128 09:32:39.347"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.347" endtime="20241128 09:32:39.347"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.347" endtime="20241128 09:32:39.348"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.345" endtime="20241128 09:32:39.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.349" endtime="20241128 09:32:39.349"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.348" endtime="20241128 09:32:39.349"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.350"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.349" endtime="20241128 09:32:39.350"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:39.355" endtime="20241128 09:32:39.355"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.358" endtime="20241128 09:32:39.358"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.350" endtime="20241128 09:32:39.358"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.359" endtime="20241128 09:32:39.359"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.359" endtime="20241128 09:32:39.359"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.359" endtime="20241128 09:32:39.359"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.360" endtime="20241128 09:32:39.360"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.359" endtime="20241128 09:32:39.360"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.359" endtime="20241128 09:32:39.360"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.358" endtime="20241128 09:32:39.360"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:39.365" endtime="20241128 09:32:39.365"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.367" endtime="20241128 09:32:39.367"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.360" endtime="20241128 09:32:39.367"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.368" endtime="20241128 09:32:39.368"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.369" endtime="20241128 09:32:39.369"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.368" endtime="20241128 09:32:39.369"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.369" endtime="20241128 09:32:39.369"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.369" endtime="20241128 09:32:39.369"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.368" endtime="20241128 09:32:39.369"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.367" endtime="20241128 09:32:39.369"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.371" endtime="20241128 09:32:39.371"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.369" endtime="20241128 09:32:39.371"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.376" endtime="20241128 09:32:39.376"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.377" endtime="20241128 09:32:39.377"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.372" endtime="20241128 09:32:39.377"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.542" endtime="20241128 09:32:39.377"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.377" endtime="20241128 09:32:39.377"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:39.377" endtime="20241128 09:32:39.377"/>
</return>
<msg timestamp="20241128 09:32:39.378" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:36.542" endtime="20241128 09:32:39.378"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.378" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241128 09:32:39.378" endtime="20241128 09:32:39.378"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.380" endtime="20241128 09:32:39.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.380" endtime="20241128 09:32:39.380"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.380" endtime="20241128 09:32:39.380"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.380" endtime="20241128 09:32:39.380"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.381" endtime="20241128 09:32:39.381"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.382" endtime="20241128 09:32:39.382"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.382" endtime="20241128 09:32:39.383"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.383"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.384"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.384"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.384"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.383" endtime="20241128 09:32:39.384"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.382" endtime="20241128 09:32:39.384"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.382" endtime="20241128 09:32:39.384"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.384"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.384"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.384"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.385" endtime="20241128 09:32:39.385"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.385"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.385"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.385" endtime="20241128 09:32:39.385"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.385" endtime="20241128 09:32:39.385"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.385" endtime="20241128 09:32:39.385"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.385" endtime="20241128 09:32:39.385"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.385"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.384" endtime="20241128 09:32:39.385"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.385"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:39.379" endtime="20241128 09:32:39.385"/>
</for>
<msg timestamp="20241128 09:32:39.386" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:39.378" endtime="20241128 09:32:39.386"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.386" endtime="20241128 09:32:39.386"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:39.390" endtime="20241128 09:32:39.390"/>
</kw>
<msg timestamp="20241128 09:32:39.390" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.389" endtime="20241128 09:32:39.390"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.391" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241128 09:32:39.390" endtime="20241128 09:32:39.391"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.391" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.391" endtime="20241128 09:32:39.391"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.391" endtime="20241128 09:32:39.391"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.391" endtime="20241128 09:32:39.391"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.391" endtime="20241128 09:32:39.392"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.391" endtime="20241128 09:32:39.392"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.390" endtime="20241128 09:32:39.392"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.390" endtime="20241128 09:32:39.392"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:39.392" endtime="20241128 09:32:39.392"/>
</return>
<msg timestamp="20241128 09:32:39.392" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.389" endtime="20241128 09:32:39.392"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.393" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241128 09:32:39.392" endtime="20241128 09:32:39.393"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.392" endtime="20241128 09:32:39.393"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.393" endtime="20241128 09:32:39.393"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.393" endtime="20241128 09:32:39.393"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.392" endtime="20241128 09:32:39.393"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:39.394" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '463', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241128 09:32:39.393" endtime="20241128 09:32:39.394"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:39.395" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "463", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241128 09:32:39.395" endtime="20241128 09:32:39.395"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:39.423" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:39.423" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:39.395" endtime="20241128 09:32:39.423"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.423" endtime="20241128 09:32:39.424"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:39.424" endtime="20241128 09:32:39.424"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.394" endtime="20241128 09:32:39.424"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.386" endtime="20241128 09:32:39.424"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:39.425" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:39.425" endtime="20241128 09:32:39.425"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.425"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.425" endtime="20241128 09:32:39.425"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.426" endtime="20241128 09:32:39.426"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.426" endtime="20241128 09:32:39.426"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.425" endtime="20241128 09:32:39.426"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.426"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.426"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.427" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241128 09:32:39.427" endtime="20241128 09:32:39.427"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.427" endtime="20241128 09:32:39.428"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:39.428" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241128 09:32:39.428" endtime="20241128 09:32:39.428"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.428" endtime="20241128 09:32:39.429"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.429" endtime="20241128 09:32:39.429"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.428" endtime="20241128 09:32:39.429"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.428" endtime="20241128 09:32:39.429"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.430" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.430"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.430"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.430"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.430"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.430"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.445" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:39.438" endtime="20241128 09:32:39.445"/>
</kw>
<msg timestamp="20241128 09:32:39.446" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.438" endtime="20241128 09:32:39.446"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.446" endtime="20241128 09:32:39.446"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.437" endtime="20241128 09:32:39.446"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.446" endtime="20241128 09:32:39.446"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.446" endtime="20241128 09:32:39.446"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.446" endtime="20241128 09:32:39.446"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.437" endtime="20241128 09:32:39.446"/>
</try>
<msg timestamp="20241128 09:32:39.447" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.437" endtime="20241128 09:32:39.447"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.447" endtime="20241128 09:32:39.447"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.436" endtime="20241128 09:32:39.447"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.447" endtime="20241128 09:32:39.447"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.447" endtime="20241128 09:32:39.447"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.436" endtime="20241128 09:32:39.447"/>
</try>
<msg timestamp="20241128 09:32:39.447" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.435" endtime="20241128 09:32:39.447"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.449" endtime="20241128 09:32:39.449"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.450" endtime="20241128 09:32:39.450"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.449" endtime="20241128 09:32:39.450"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.449" endtime="20241128 09:32:39.450"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.448" endtime="20241128 09:32:39.450"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.434" endtime="20241128 09:32:39.450"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.460" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:39.453" endtime="20241128 09:32:39.461"/>
</kw>
<msg timestamp="20241128 09:32:39.461" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.453" endtime="20241128 09:32:39.461"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.462" endtime="20241128 09:32:39.462"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.453" endtime="20241128 09:32:39.462"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.462" endtime="20241128 09:32:39.462"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.462" endtime="20241128 09:32:39.462"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.462" endtime="20241128 09:32:39.462"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.453" endtime="20241128 09:32:39.462"/>
</try>
<msg timestamp="20241128 09:32:39.463" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.453" endtime="20241128 09:32:39.463"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.463" endtime="20241128 09:32:39.463"/>
</return>
<msg timestamp="20241128 09:32:39.463" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.452" endtime="20241128 09:32:39.463"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.465" endtime="20241128 09:32:39.465"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.465" endtime="20241128 09:32:39.465"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.465" endtime="20241128 09:32:39.465"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.465" endtime="20241128 09:32:39.465"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.464" endtime="20241128 09:32:39.465"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.451" endtime="20241128 09:32:39.466"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.483" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:39.469" endtime="20241128 09:32:39.483"/>
</kw>
<msg timestamp="20241128 09:32:39.483" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.469" endtime="20241128 09:32:39.483"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.484" endtime="20241128 09:32:39.484"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.469" endtime="20241128 09:32:39.484"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.484" endtime="20241128 09:32:39.484"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.484" endtime="20241128 09:32:39.484"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.484" endtime="20241128 09:32:39.484"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.468" endtime="20241128 09:32:39.484"/>
</try>
<msg timestamp="20241128 09:32:39.485" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.468" endtime="20241128 09:32:39.485"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.485" endtime="20241128 09:32:39.485"/>
</return>
<msg timestamp="20241128 09:32:39.485" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.467" endtime="20241128 09:32:39.485"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.487" endtime="20241128 09:32:39.487"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.487" endtime="20241128 09:32:39.488"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.487" endtime="20241128 09:32:39.488"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.487" endtime="20241128 09:32:39.488"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.486" endtime="20241128 09:32:39.488"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.467" endtime="20241128 09:32:39.488"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.433" endtime="20241128 09:32:39.489"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:39.489" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:39.489" endtime="20241128 09:32:39.489"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.491" endtime="20241128 09:32:39.491"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.491" endtime="20241128 09:32:39.491"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:39.491" endtime="20241128 09:32:39.492"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.491" endtime="20241128 09:32:39.492"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.491" endtime="20241128 09:32:39.492"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:39.492" endtime="20241128 09:32:39.603"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.492" endtime="20241128 09:32:39.603"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.603" endtime="20241128 09:32:39.603"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.604" endtime="20241128 09:32:39.604"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.603" endtime="20241128 09:32:39.604"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.492" endtime="20241128 09:32:39.604"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.490" endtime="20241128 09:32:39.604"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.490" endtime="20241128 09:32:39.605"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.489" endtime="20241128 09:32:39.605"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.605" endtime="20241128 09:32:39.605"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.605" endtime="20241128 09:32:39.605"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.489" endtime="20241128 09:32:39.605"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.432" endtime="20241128 09:32:39.605"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.431" endtime="20241128 09:32:39.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.608" endtime="20241128 09:32:39.608"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.610" endtime="20241128 09:32:39.611"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.606" endtime="20241128 09:32:39.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.612" endtime="20241128 09:32:39.612"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.611" endtime="20241128 09:32:39.612"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.615" endtime="20241128 09:32:39.615"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.612" endtime="20241128 09:32:39.615"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.618" endtime="20241128 09:32:39.618"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.618" endtime="20241128 09:32:39.618"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.618" endtime="20241128 09:32:39.618"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.618" endtime="20241128 09:32:39.618"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.615" endtime="20241128 09:32:39.618"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.620" endtime="20241128 09:32:39.620"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.618" endtime="20241128 09:32:39.620"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.622" endtime="20241128 09:32:39.622"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.623" endtime="20241128 09:32:39.623"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.623" endtime="20241128 09:32:39.623"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.623" endtime="20241128 09:32:39.624"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.623" endtime="20241128 09:32:39.624"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.623" endtime="20241128 09:32:39.624"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.620" endtime="20241128 09:32:39.624"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:39.629" endtime="20241128 09:32:39.629"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.632" endtime="20241128 09:32:39.632"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.624" endtime="20241128 09:32:39.632"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.633" endtime="20241128 09:32:39.633"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.633" endtime="20241128 09:32:39.633"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.633" endtime="20241128 09:32:39.633"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.634" endtime="20241128 09:32:39.634"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.634" endtime="20241128 09:32:39.634"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.633" endtime="20241128 09:32:39.634"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.632" endtime="20241128 09:32:39.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:39.642" endtime="20241128 09:32:39.642"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.645" endtime="20241128 09:32:39.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.634" endtime="20241128 09:32:39.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.646" endtime="20241128 09:32:39.646"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.646" endtime="20241128 09:32:39.646"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.646" endtime="20241128 09:32:39.647"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.647" endtime="20241128 09:32:39.647"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.647" endtime="20241128 09:32:39.647"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.646" endtime="20241128 09:32:39.647"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.645" endtime="20241128 09:32:39.647"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.649" endtime="20241128 09:32:39.649"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.647" endtime="20241128 09:32:39.649"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.656" endtime="20241128 09:32:39.657"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.657" endtime="20241128 09:32:39.657"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.649" endtime="20241128 09:32:39.657"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.430" endtime="20241128 09:32:39.658"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.658" endtime="20241128 09:32:39.658"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:39.658" endtime="20241128 09:32:39.658"/>
</return>
<msg timestamp="20241128 09:32:39.659" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:39.429" endtime="20241128 09:32:39.659"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.660" level="INFO">${key} = testCaseFlowSequenceId:15::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241128 09:32:39.660" endtime="20241128 09:32:39.660"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.660" endtime="20241128 09:32:39.660"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.661" endtime="20241128 09:32:39.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.661" endtime="20241128 09:32:39.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.661" endtime="20241128 09:32:39.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.661" endtime="20241128 09:32:39.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.661" endtime="20241128 09:32:39.661"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.662" endtime="20241128 09:32:39.662"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.662" endtime="20241128 09:32:39.662"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.663" endtime="20241128 09:32:39.663"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.664"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.664"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.664"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.664"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.665"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.665" endtime="20241128 09:32:39.665"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.666"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.664" endtime="20241128 09:32:39.666"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.666"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.667" endtime="20241128 09:32:39.667"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.667" endtime="20241128 09:32:39.667"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.667" endtime="20241128 09:32:39.667"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.667" endtime="20241128 09:32:39.667"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.667"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:39.666" endtime="20241128 09:32:39.667"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:39.660" endtime="20241128 09:32:39.667"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:39.660" endtime="20241128 09:32:39.667"/>
</for>
<msg timestamp="20241128 09:32:39.667" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:39.659" endtime="20241128 09:32:39.667"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.668" endtime="20241128 09:32:39.668"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:39.674" endtime="20241128 09:32:39.674"/>
</kw>
<msg timestamp="20241128 09:32:39.674" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.673" endtime="20241128 09:32:39.674"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.676" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241128 09:32:39.675" endtime="20241128 09:32:39.676"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.677" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.677" endtime="20241128 09:32:39.678"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.677" endtime="20241128 09:32:39.678"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.678" endtime="20241128 09:32:39.678"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.678" endtime="20241128 09:32:39.679"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.676" endtime="20241128 09:32:39.679"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.675" endtime="20241128 09:32:39.679"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.674" endtime="20241128 09:32:39.679"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:39.679" endtime="20241128 09:32:39.679"/>
</return>
<msg timestamp="20241128 09:32:39.679" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.671" endtime="20241128 09:32:39.679"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.680" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241128 09:32:39.680" endtime="20241128 09:32:39.680"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.680" endtime="20241128 09:32:39.680"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.680" endtime="20241128 09:32:39.681"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.680" endtime="20241128 09:32:39.681"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.679" endtime="20241128 09:32:39.681"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:39.682" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '464', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241128 09:32:39.681" endtime="20241128 09:32:39.682"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:39.682" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "464", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241128 09:32:39.682" endtime="20241128 09:32:39.682"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:39.708" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:39.708" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:39.683" endtime="20241128 09:32:39.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.709" endtime="20241128 09:32:39.709"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:39.709" endtime="20241128 09:32:39.710"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.682" endtime="20241128 09:32:39.710"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.668" endtime="20241128 09:32:39.710"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:39.711" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:39.710" endtime="20241128 09:32:39.711"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.427" endtime="20241128 09:32:39.711"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.712" endtime="20241128 09:32:39.712"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.712" endtime="20241128 09:32:39.712"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.713" endtime="20241128 09:32:39.713"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.711" endtime="20241128 09:32:39.713"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.427" endtime="20241128 09:32:39.713"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.426" endtime="20241128 09:32:39.713"/>
</iter>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.713"/>
</for>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.714"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.538" endtime="20241128 09:32:39.714"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:39.716" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '118', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241128 09:32:39.715" endtime="20241128 09:32:39.716"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:39.718" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "118", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241128 09:32:39.717" endtime="20241128 09:32:39.718"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:39.745" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:39.745" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:39.718" endtime="20241128 09:32:39.745"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.745" endtime="20241128 09:32:39.746"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:39.746" endtime="20241128 09:32:39.746"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.716" endtime="20241128 09:32:39.746"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.714" endtime="20241128 09:32:39.746"/>
</kw>
<status status="PASS" starttime="20241128 09:32:36.531" endtime="20241128 09:32:39.746"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.747" endtime="20241128 09:32:39.747"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.747" endtime="20241128 09:32:39.747"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.747" endtime="20241128 09:32:39.747"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.746" endtime="20241128 09:32:39.747"/>
</branch>
<status status="PASS" starttime="20241128 09:32:36.531" endtime="20241128 09:32:39.747"/>
</try>
<status status="PASS" starttime="20241128 09:32:36.531" endtime="20241128 09:32:39.748"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '34', 'testCaseId': '7', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-28T04:02:24.257Z', 'updatedAt': '2024-11-28T04:02:24.257Z', 'flow': {'id': '4', 'name': 'Create vehicle', 'projectId': ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.749" level="INFO">${flow} = {'id': '4', 'name': 'Create vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:26.197Z', 'updatedAt': '2024-11-25T12:28:38.155Z', 'flowActionSequences': [{'id': '9', 'actionId': '9', 'flowId':...</msg>
<status status="PASS" starttime="20241128 09:32:39.748" endtime="20241128 09:32:39.749"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.749" endtime="20241128 09:32:39.749"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:39.753" endtime="20241128 09:32:39.753"/>
</kw>
<msg timestamp="20241128 09:32:39.753" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.753" endtime="20241128 09:32:39.753"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.757" level="INFO">${values} = [{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type...</msg>
<status status="PASS" starttime="20241128 09:32:39.755" endtime="20241128 09:32:39.757"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.758" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.758" endtime="20241128 09:32:39.758"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.757" endtime="20241128 09:32:39.758"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.758" endtime="20241128 09:32:39.759"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.758" endtime="20241128 09:32:39.759"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.757" endtime="20241128 09:32:39.759"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.754" endtime="20241128 09:32:39.759"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.753" endtime="20241128 09:32:39.759"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:39.759" endtime="20241128 09:32:39.759"/>
</return>
<msg timestamp="20241128 09:32:39.759" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.752" endtime="20241128 09:32:39.759"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.761" level="INFO">${action} = {'id': '9', 'name': 'Click Add vehicle icon', 'type': 'CLICK', 'selectorI': '8', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:44:11.329Z', 'updatedAt': '2024-11-25T10:...</msg>
<status status="PASS" starttime="20241128 09:32:39.760" endtime="20241128 09:32:39.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:39.761" endtime="20241128 09:32:39.761"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:39.762" level="INFO">${input} = {'id': '10', 'actionId': '9', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:44:11.572Z', 'updatedAt': '2024-11-25T10:44:11.572Z'}</msg>
<status status="PASS" starttime="20241128 09:32:39.762" endtime="20241128 09:32:39.762"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.763" endtime="20241128 09:32:39.763"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.763" endtime="20241128 09:32:39.763"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.763" endtime="20241128 09:32:39.763"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.762" endtime="20241128 09:32:39.763"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:39.764" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:39.764" endtime="20241128 09:32:39.764"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.765" endtime="20241128 09:32:39.765"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.765" endtime="20241128 09:32:39.766"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:39.766" endtime="20241128 09:32:39.766"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.766" endtime="20241128 09:32:39.766"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.802" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state attached</msg>
<status status="PASS" starttime="20241128 09:32:39.776" endtime="20241128 09:32:39.802"/>
</kw>
<msg timestamp="20241128 09:32:39.802" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.776" endtime="20241128 09:32:39.802"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.803" endtime="20241128 09:32:39.803"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.776" endtime="20241128 09:32:39.803"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.803" endtime="20241128 09:32:39.803"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.803" endtime="20241128 09:32:39.804"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.803" endtime="20241128 09:32:39.804"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.776" endtime="20241128 09:32:39.804"/>
</try>
<msg timestamp="20241128 09:32:39.805" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.775" endtime="20241128 09:32:39.805"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.805" endtime="20241128 09:32:39.805"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.774" endtime="20241128 09:32:39.806"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:39.806" endtime="20241128 09:32:39.807"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:39.806" endtime="20241128 09:32:39.807"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.774" endtime="20241128 09:32:39.807"/>
</try>
<msg timestamp="20241128 09:32:39.808" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.773" endtime="20241128 09:32:39.808"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.813" endtime="20241128 09:32:39.813"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.813" endtime="20241128 09:32:39.814"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.813" endtime="20241128 09:32:39.814"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.812" endtime="20241128 09:32:39.814"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.810" endtime="20241128 09:32:39.814"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.772" endtime="20241128 09:32:39.814"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.872" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state visible</msg>
<status status="PASS" starttime="20241128 09:32:39.825" endtime="20241128 09:32:39.872"/>
</kw>
<msg timestamp="20241128 09:32:39.872" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.824" endtime="20241128 09:32:39.872"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.873" endtime="20241128 09:32:39.873"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.824" endtime="20241128 09:32:39.873"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.873" endtime="20241128 09:32:39.873"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.874" endtime="20241128 09:32:39.874"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.873" endtime="20241128 09:32:39.874"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.824" endtime="20241128 09:32:39.874"/>
</try>
<msg timestamp="20241128 09:32:39.875" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.822" endtime="20241128 09:32:39.875"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.875" endtime="20241128 09:32:39.875"/>
</return>
<msg timestamp="20241128 09:32:39.876" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.818" endtime="20241128 09:32:39.876"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.879" endtime="20241128 09:32:39.879"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.879" endtime="20241128 09:32:39.880"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.879" endtime="20241128 09:32:39.880"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.879" endtime="20241128 09:32:39.880"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.878" endtime="20241128 09:32:39.880"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.817" endtime="20241128 09:32:39.880"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:39.913" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:39.885" endtime="20241128 09:32:39.914"/>
</kw>
<msg timestamp="20241128 09:32:39.914" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.885" endtime="20241128 09:32:39.914"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.914" endtime="20241128 09:32:39.914"/>
</return>
<status status="PASS" starttime="20241128 09:32:39.884" endtime="20241128 09:32:39.914"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.914" endtime="20241128 09:32:39.915"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.915" endtime="20241128 09:32:39.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.914" endtime="20241128 09:32:39.915"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.884" endtime="20241128 09:32:39.915"/>
</try>
<msg timestamp="20241128 09:32:39.916" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.884" endtime="20241128 09:32:39.916"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:39.916" endtime="20241128 09:32:39.916"/>
</return>
<msg timestamp="20241128 09:32:39.916" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:39.882" endtime="20241128 09:32:39.916"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.919" endtime="20241128 09:32:39.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.919" endtime="20241128 09:32:39.919"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.919" endtime="20241128 09:32:39.919"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.919" endtime="20241128 09:32:39.919"/>
</if>
<status status="PASS" starttime="20241128 09:32:39.917" endtime="20241128 09:32:39.919"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.882" endtime="20241128 09:32:39.920"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.769" endtime="20241128 09:32:39.920"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:39.921" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:39.920" endtime="20241128 09:32:39.921"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.924" endtime="20241128 09:32:39.924"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.924" endtime="20241128 09:32:39.924"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:39.924" endtime="20241128 09:32:39.925"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.924" endtime="20241128 09:32:39.925"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.923" endtime="20241128 09:32:39.925"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:39.925" endtime="20241128 09:32:39.996"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.925" endtime="20241128 09:32:39.996"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.997" endtime="20241128 09:32:39.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.997" endtime="20241128 09:32:39.997"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.997" endtime="20241128 09:32:39.997"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.925" endtime="20241128 09:32:39.997"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.923" endtime="20241128 09:32:39.998"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.922" endtime="20241128 09:32:39.998"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.921" endtime="20241128 09:32:39.998"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:39.998" endtime="20241128 09:32:39.998"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.998" endtime="20241128 09:32:39.998"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.921" endtime="20241128 09:32:39.998"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.768" endtime="20241128 09:32:39.998"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.766" endtime="20241128 09:32:39.998"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.000" endtime="20241128 09:32:40.001"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.002" endtime="20241128 09:32:40.003"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:39.999" endtime="20241128 09:32:40.003"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.006" endtime="20241128 09:32:40.006"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.003" endtime="20241128 09:32:40.006"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.011" endtime="20241128 09:32:40.011"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.006" endtime="20241128 09:32:40.011"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.014" endtime="20241128 09:32:40.014"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.014" endtime="20241128 09:32:40.014"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.014" endtime="20241128 09:32:40.015"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.014" endtime="20241128 09:32:40.015"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.011" endtime="20241128 09:32:40.015"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.016" endtime="20241128 09:32:40.016"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.015" endtime="20241128 09:32:40.016"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.017" endtime="20241128 09:32:40.017"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.018" endtime="20241128 09:32:40.018"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.018" endtime="20241128 09:32:40.018"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.018" endtime="20241128 09:32:40.018"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.018" endtime="20241128 09:32:40.018"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.018" endtime="20241128 09:32:40.018"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.016" endtime="20241128 09:32:40.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.025" endtime="20241128 09:32:40.025"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.027" endtime="20241128 09:32:40.028"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.019" endtime="20241128 09:32:40.028"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.029" endtime="20241128 09:32:40.029"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.029" endtime="20241128 09:32:40.029"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.029" endtime="20241128 09:32:40.029"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.030" endtime="20241128 09:32:40.030"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.029" endtime="20241128 09:32:40.030"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.029" endtime="20241128 09:32:40.030"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.028" endtime="20241128 09:32:40.030"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.035" endtime="20241128 09:32:40.035"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.039" endtime="20241128 09:32:40.039"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.030" endtime="20241128 09:32:40.039"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.040" endtime="20241128 09:32:40.040"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.041" endtime="20241128 09:32:40.041"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.041" endtime="20241128 09:32:40.041"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.041" endtime="20241128 09:32:40.041"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.041" endtime="20241128 09:32:40.041"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.040" endtime="20241128 09:32:40.041"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.039" endtime="20241128 09:32:40.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.043" endtime="20241128 09:32:40.043"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.041" endtime="20241128 09:32:40.043"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.049" endtime="20241128 09:32:40.049"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.049" endtime="20241128 09:32:40.049"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.044" endtime="20241128 09:32:40.049"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.764" endtime="20241128 09:32:40.049"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.050" endtime="20241128 09:32:40.050"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:40.050" endtime="20241128 09:32:40.050"/>
</return>
<msg timestamp="20241128 09:32:40.051" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:39.763" endtime="20241128 09:32:40.051"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.052" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:9</msg>
<status status="PASS" starttime="20241128 09:32:40.051" endtime="20241128 09:32:40.052"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.052" endtime="20241128 09:32:40.052"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.053" endtime="20241128 09:32:40.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.053" endtime="20241128 09:32:40.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.053" endtime="20241128 09:32:40.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.053" endtime="20241128 09:32:40.053"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.054" endtime="20241128 09:32:40.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.054" endtime="20241128 09:32:40.054"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.055" endtime="20241128 09:32:40.055"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.057" endtime="20241128 09:32:40.057"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.058"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.058"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.059"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.059"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.059"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.059"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.059"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.059"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.060"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.060"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.060"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.059" endtime="20241128 09:32:40.060"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.060"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.058" endtime="20241128 09:32:40.060"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.060"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.061"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.061"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.061"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.061"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.061"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.062"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.062" endtime="20241128 09:32:40.062"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.062"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.061" endtime="20241128 09:32:40.062"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.062"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.060" endtime="20241128 09:32:40.062"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.052" endtime="20241128 09:32:40.062"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:40.052" endtime="20241128 09:32:40.062"/>
</for>
<msg timestamp="20241128 09:32:40.062" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:40.051" endtime="20241128 09:32:40.062"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.062" endtime="20241128 09:32:40.063"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.067" endtime="20241128 09:32:40.067"/>
</kw>
<msg timestamp="20241128 09:32:40.067" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.067" endtime="20241128 09:32:40.067"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.069" level="INFO">${values} = {'id': '8', 'name': 'Add vehicle icon', 'xpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T10:44:06.334Z', 'updatedAt': '2024-11-25T10:44:06...</msg>
<status status="PASS" starttime="20241128 09:32:40.068" endtime="20241128 09:32:40.069"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.069" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.069" endtime="20241128 09:32:40.069"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.069" endtime="20241128 09:32:40.070"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.070" endtime="20241128 09:32:40.071"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.070" endtime="20241128 09:32:40.071"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.069" endtime="20241128 09:32:40.071"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.068" endtime="20241128 09:32:40.071"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.067" endtime="20241128 09:32:40.071"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:40.071" endtime="20241128 09:32:40.071"/>
</return>
<msg timestamp="20241128 09:32:40.072" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.066" endtime="20241128 09:32:40.072"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.073" level="INFO">${xpath} = //p[text()="VEHICLE"]//parent::div//following-sibling::img</msg>
<status status="PASS" starttime="20241128 09:32:40.072" endtime="20241128 09:32:40.073"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.072" endtime="20241128 09:32:40.073"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.073" endtime="20241128 09:32:40.073"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.073" endtime="20241128 09:32:40.073"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.072" endtime="20241128 09:32:40.073"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.074" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '465', 'status': 'COMPLETED', 'actionName': 'Click Add vehicle icon', 'actionType': 'CLICK', 'actionXpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img'...</msg>
<status status="PASS" starttime="20241128 09:32:40.073" endtime="20241128 09:32:40.074"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:40.075" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "465", "status": "COMPLETED", "actionName": "Click Add vehicle icon", "actionType": "CLICK", "actionXpath": "//p[text()=\"VEHICLE\"]//parent::div//following-sibling::im...</msg>
<status status="PASS" starttime="20241128 09:32:40.075" endtime="20241128 09:32:40.075"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:40.116" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:40.116" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:40.076" endtime="20241128 09:32:40.116"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.116" endtime="20241128 09:32:40.117"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:40.117" endtime="20241128 09:32:40.117"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.075" endtime="20241128 09:32:40.117"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.063" endtime="20241128 09:32:40.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:40.118" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:40.118" endtime="20241128 09:32:40.118"/>
</kw>
<status status="PASS" starttime="20241128 09:32:39.760" endtime="20241128 09:32:40.118"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.119" endtime="20241128 09:32:40.119"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.119" endtime="20241128 09:32:40.119"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.119" endtime="20241128 09:32:40.119"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.118" endtime="20241128 09:32:40.119"/>
</branch>
<status status="PASS" starttime="20241128 09:32:39.760" endtime="20241128 09:32:40.119"/>
</try>
<status status="PASS" starttime="20241128 09:32:39.760" endtime="20241128 09:32:40.119"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '10', 'actionId': '10', 'flowId': '4', 'order': 1, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.853Z', 'action': {'id': '10', 'name': 'Is vehicle details popup fou...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.121" level="INFO">${action} = {'id': '10', 'name': 'Is vehicle details popup found', 'type': 'IS_ELEMENT_VISIBLE', 'selectorI': '9', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:46:45.996Z', 'updat...</msg>
<status status="PASS" starttime="20241128 09:32:40.120" endtime="20241128 09:32:40.121"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.122" endtime="20241128 09:32:40.122"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:40.123" level="INFO">${input} = {'id': '11', 'actionId': '10', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:46:46.217Z', 'updatedAt': '2024-11-25T10:46:46.217Z'}</msg>
<status status="PASS" starttime="20241128 09:32:40.122" endtime="20241128 09:32:40.123"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.124" endtime="20241128 09:32:40.124"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.125" endtime="20241128 09:32:40.125"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.123" endtime="20241128 09:32:40.125"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.123" endtime="20241128 09:32:40.126"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.127" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:40.127" endtime="20241128 09:32:40.127"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.127" endtime="20241128 09:32:40.128"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.127" endtime="20241128 09:32:40.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.128" endtime="20241128 09:32:40.128"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.128" endtime="20241128 09:32:40.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.131" endtime="20241128 09:32:40.131"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.128" endtime="20241128 09:32:40.131"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.133" endtime="20241128 09:32:40.133"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.135" endtime="20241128 09:32:40.135"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.131" endtime="20241128 09:32:40.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.136" endtime="20241128 09:32:40.137"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.135" endtime="20241128 09:32:40.137"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.141" endtime="20241128 09:32:40.141"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.137" endtime="20241128 09:32:40.141"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.143" endtime="20241128 09:32:40.143"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.144" endtime="20241128 09:32:40.144"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.144" endtime="20241128 09:32:40.144"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.144" endtime="20241128 09:32:40.144"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.141" endtime="20241128 09:32:40.144"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.145" endtime="20241128 09:32:40.146"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.144" endtime="20241128 09:32:40.146"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.147" endtime="20241128 09:32:40.147"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.147" endtime="20241128 09:32:40.148"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.147" endtime="20241128 09:32:40.148"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.148" endtime="20241128 09:32:40.148"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.148" endtime="20241128 09:32:40.148"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.147" endtime="20241128 09:32:40.148"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.146" endtime="20241128 09:32:40.148"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.154" endtime="20241128 09:32:40.154"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.157" endtime="20241128 09:32:40.158"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.148" endtime="20241128 09:32:40.158"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.159" endtime="20241128 09:32:40.159"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.159" endtime="20241128 09:32:40.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.159" endtime="20241128 09:32:40.160"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.160" endtime="20241128 09:32:40.160"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.160" endtime="20241128 09:32:40.160"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.159" endtime="20241128 09:32:40.160"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.158" endtime="20241128 09:32:40.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.165" endtime="20241128 09:32:40.165"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.168" endtime="20241128 09:32:40.168"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.160" endtime="20241128 09:32:40.168"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.178" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.173" endtime="20241128 09:32:40.178"/>
</kw>
<msg timestamp="20241128 09:32:40.179" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.173" endtime="20241128 09:32:40.179"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.179" endtime="20241128 09:32:40.179"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.173" endtime="20241128 09:32:40.179"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.179" endtime="20241128 09:32:40.179"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.179" endtime="20241128 09:32:40.180"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.179" endtime="20241128 09:32:40.180"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.172" endtime="20241128 09:32:40.180"/>
</try>
<msg timestamp="20241128 09:32:40.180" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.171" endtime="20241128 09:32:40.180"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.180" endtime="20241128 09:32:40.180"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.170" endtime="20241128 09:32:40.180"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.180" endtime="20241128 09:32:40.180"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.180" endtime="20241128 09:32:40.181"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.170" endtime="20241128 09:32:40.181"/>
</try>
<msg timestamp="20241128 09:32:40.181" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.169" endtime="20241128 09:32:40.181"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.181" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241128 09:32:40.181" endtime="20241128 09:32:40.181"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.181" endtime="20241128 09:32:40.182"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.182" endtime="20241128 09:32:40.182"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.182" endtime="20241128 09:32:40.182"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.181" endtime="20241128 09:32:40.182"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.168" endtime="20241128 09:32:40.182"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.184" endtime="20241128 09:32:40.184"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.182" endtime="20241128 09:32:40.184"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.193" endtime="20241128 09:32:40.194"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.194" endtime="20241128 09:32:40.194"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.184" endtime="20241128 09:32:40.195"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.127" endtime="20241128 09:32:40.195"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.195" endtime="20241128 09:32:40.196"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:40.196" endtime="20241128 09:32:40.197"/>
</return>
<msg timestamp="20241128 09:32:40.197" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241128 09:32:40.126" endtime="20241128 09:32:40.197"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.200" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:10</msg>
<status status="PASS" starttime="20241128 09:32:40.199" endtime="20241128 09:32:40.200"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.201" endtime="20241128 09:32:40.201"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.201" endtime="20241128 09:32:40.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.202" endtime="20241128 09:32:40.202"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.202" endtime="20241128 09:32:40.203"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.204" endtime="20241128 09:32:40.204"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.204" endtime="20241128 09:32:40.205"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.205" endtime="20241128 09:32:40.205"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.206" endtime="20241128 09:32:40.206"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.209" endtime="20241128 09:32:40.209"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.211" endtime="20241128 09:32:40.212"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.212" endtime="20241128 09:32:40.213"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.212" endtime="20241128 09:32:40.213"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.212" endtime="20241128 09:32:40.213"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.213" endtime="20241128 09:32:40.214"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.214" endtime="20241128 09:32:40.214"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.213" endtime="20241128 09:32:40.214"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.213" endtime="20241128 09:32:40.214"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.215" endtime="20241128 09:32:40.215"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.215" endtime="20241128 09:32:40.215"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.215" endtime="20241128 09:32:40.216"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.214" endtime="20241128 09:32:40.216"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.212" endtime="20241128 09:32:40.216"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.212" endtime="20241128 09:32:40.216"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.217" endtime="20241128 09:32:40.217"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.217" endtime="20241128 09:32:40.217"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.217" endtime="20241128 09:32:40.217"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.218" endtime="20241128 09:32:40.218"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.218" endtime="20241128 09:32:40.218"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.217" endtime="20241128 09:32:40.218"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.219" endtime="20241128 09:32:40.219"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.219" endtime="20241128 09:32:40.221"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.219" endtime="20241128 09:32:40.221"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.219" endtime="20241128 09:32:40.221"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.216" endtime="20241128 09:32:40.222"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.216" endtime="20241128 09:32:40.222"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.200" endtime="20241128 09:32:40.222"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:40.200" endtime="20241128 09:32:40.222"/>
</for>
<msg timestamp="20241128 09:32:40.223" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:40.198" endtime="20241128 09:32:40.223"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.223" endtime="20241128 09:32:40.224"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.233" endtime="20241128 09:32:40.233"/>
</kw>
<msg timestamp="20241128 09:32:40.234" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.232" endtime="20241128 09:32:40.234"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.236" level="INFO">${values} = {'id': '9', 'name': 'Add Vehicle popup heading', 'xpath': '//h6[text()="Add Vehicle Details"]', 'pageId': '3', 'createdAt': '2024-11-25T10:46:44.506Z', 'updatedAt': '2024-11-25T10:46:44.506Z'}</msg>
<status status="PASS" starttime="20241128 09:32:40.235" endtime="20241128 09:32:40.236"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.239" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.238" endtime="20241128 09:32:40.239"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.236" endtime="20241128 09:32:40.240"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.240" endtime="20241128 09:32:40.240"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.240" endtime="20241128 09:32:40.241"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.236" endtime="20241128 09:32:40.241"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.234" endtime="20241128 09:32:40.241"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.234" endtime="20241128 09:32:40.241"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:40.241" endtime="20241128 09:32:40.241"/>
</return>
<msg timestamp="20241128 09:32:40.242" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.231" endtime="20241128 09:32:40.242"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.244" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]</msg>
<status status="PASS" starttime="20241128 09:32:40.243" endtime="20241128 09:32:40.244"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.243" endtime="20241128 09:32:40.244"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.244" endtime="20241128 09:32:40.245"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.244" endtime="20241128 09:32:40.245"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.242" endtime="20241128 09:32:40.245"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.247" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '466', 'status': 'COMPLETED', 'actionName': 'Is vehicle details popup found', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h6[text()="Add Vehicle Details"]', '...</msg>
<status status="PASS" starttime="20241128 09:32:40.245" endtime="20241128 09:32:40.247"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:40.250" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "466", "status": "COMPLETED", "actionName": "Is vehicle details popup found", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]",...</msg>
<status status="PASS" starttime="20241128 09:32:40.249" endtime="20241128 09:32:40.250"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:40.278" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:40.279" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:40.250" endtime="20241128 09:32:40.279"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.280" endtime="20241128 09:32:40.281"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:40.281" endtime="20241128 09:32:40.282"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.248" endtime="20241128 09:32:40.283"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.225" endtime="20241128 09:32:40.283"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:40.285" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:40.284" endtime="20241128 09:32:40.285"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.120" endtime="20241128 09:32:40.286"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.287" endtime="20241128 09:32:40.289"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.290" endtime="20241128 09:32:40.290"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.291" endtime="20241128 09:32:40.293"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.286" endtime="20241128 09:32:40.294"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.120" endtime="20241128 09:32:40.294"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.120" endtime="20241128 09:32:40.295"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '11', 'actionId': '11', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.858Z', 'action': {'id': '11', 'name': 'Enter Vehicle type', 'type':...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.298" level="INFO">${action} = {'id': '11', 'name': 'Enter Vehicle type', 'type': 'TYPE_TEXT', 'selectorI': '10', 'valueRege': '', 'projectId': '1', 'enter': True, 'createdAt': '2024-11-25T10:49:11.179Z', 'updatedAt': '2024-11-25T1...</msg>
<status status="PASS" starttime="20241128 09:32:40.297" endtime="20241128 09:32:40.298"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.299" endtime="20241128 09:32:40.301"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:40.302" level="INFO">${input} = {'id': '12', 'actionId': '11', 'name': 'Two wheeler', 'value': '2 Wheeler', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:49:11.397Z', 'updatedAt': '2024-11-25T12:27:35.774Z'}</msg>
<status status="PASS" starttime="20241128 09:32:40.301" endtime="20241128 09:32:40.302"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.303" endtime="20241128 09:32:40.303"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.304" endtime="20241128 09:32:40.305"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.303" endtime="20241128 09:32:40.305"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.302" endtime="20241128 09:32:40.305"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.307" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241128 09:32:40.306" endtime="20241128 09:32:40.307"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.309" endtime="20241128 09:32:40.309"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.309" endtime="20241128 09:32:40.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.311" endtime="20241128 09:32:40.311"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.311" endtime="20241128 09:32:40.311"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.314" endtime="20241128 09:32:40.314"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.311" endtime="20241128 09:32:40.314"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.317" endtime="20241128 09:32:40.317"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.319" endtime="20241128 09:32:40.319"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.315" endtime="20241128 09:32:40.319"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.321" endtime="20241128 09:32:40.322"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.319" endtime="20241128 09:32:40.322"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.328" endtime="20241128 09:32:40.328"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.323" endtime="20241128 09:32:40.328"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.343" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.335" endtime="20241128 09:32:40.343"/>
</kw>
<msg timestamp="20241128 09:32:40.344" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.335" endtime="20241128 09:32:40.344"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.344" endtime="20241128 09:32:40.344"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.335" endtime="20241128 09:32:40.344"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.344" endtime="20241128 09:32:40.344"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.344" endtime="20241128 09:32:40.345"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.344" endtime="20241128 09:32:40.345"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.335" endtime="20241128 09:32:40.345"/>
</try>
<msg timestamp="20241128 09:32:40.345" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.334" endtime="20241128 09:32:40.345"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.345" endtime="20241128 09:32:40.345"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.333" endtime="20241128 09:32:40.345"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.345" endtime="20241128 09:32:40.345"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.345" endtime="20241128 09:32:40.345"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.333" endtime="20241128 09:32:40.346"/>
</try>
<msg timestamp="20241128 09:32:40.346" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.333" endtime="20241128 09:32:40.346"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.348" endtime="20241128 09:32:40.348"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.348" endtime="20241128 09:32:40.349"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.348" endtime="20241128 09:32:40.349"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.348" endtime="20241128 09:32:40.349"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.347" endtime="20241128 09:32:40.349"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.333" endtime="20241128 09:32:40.349"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.367" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.360" endtime="20241128 09:32:40.368"/>
</kw>
<msg timestamp="20241128 09:32:40.368" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.359" endtime="20241128 09:32:40.368"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.368" endtime="20241128 09:32:40.368"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.359" endtime="20241128 09:32:40.368"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.368" endtime="20241128 09:32:40.368"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.369" endtime="20241128 09:32:40.369"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.368" endtime="20241128 09:32:40.369"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.359" endtime="20241128 09:32:40.369"/>
</try>
<msg timestamp="20241128 09:32:40.369" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.358" endtime="20241128 09:32:40.369"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.369" endtime="20241128 09:32:40.369"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.357" endtime="20241128 09:32:40.369"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.370" endtime="20241128 09:32:40.370"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.370" endtime="20241128 09:32:40.370"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.357" endtime="20241128 09:32:40.370"/>
</try>
<msg timestamp="20241128 09:32:40.371" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.357" endtime="20241128 09:32:40.371"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.375" endtime="20241128 09:32:40.375"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.375" endtime="20241128 09:32:40.375"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.375" endtime="20241128 09:32:40.376"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.375" endtime="20241128 09:32:40.376"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.373" endtime="20241128 09:32:40.376"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.356" endtime="20241128 09:32:40.376"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:40.392" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:40.393" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:40.377" endtime="20241128 09:32:40.393"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:40.393" endtime="20241128 09:32:40.393"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.376" endtime="20241128 09:32:40.393"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.393" endtime="20241128 09:32:40.393"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.394" endtime="20241128 09:32:40.394"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.393" endtime="20241128 09:32:40.394"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.376" endtime="20241128 09:32:40.394"/>
</try>
<msg timestamp="20241128 09:32:40.394" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:40.352" endtime="20241128 09:32:40.394"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.397" endtime="20241128 09:32:40.397"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.398" endtime="20241128 09:32:40.398"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.397" endtime="20241128 09:32:40.398"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.397" endtime="20241128 09:32:40.398"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.396" endtime="20241128 09:32:40.398"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.351" endtime="20241128 09:32:40.398"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.399" endtime="20241128 09:32:40.399"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.398" endtime="20241128 09:32:40.399"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.351" endtime="20241128 09:32:40.399"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.351" endtime="20241128 09:32:40.399"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.411" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state visible</msg>
<status status="PASS" starttime="20241128 09:32:40.405" endtime="20241128 09:32:40.411"/>
</kw>
<msg timestamp="20241128 09:32:40.411" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.405" endtime="20241128 09:32:40.411"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.411" endtime="20241128 09:32:40.412"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.404" endtime="20241128 09:32:40.412"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.412" endtime="20241128 09:32:40.412"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.412" endtime="20241128 09:32:40.412"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.412" endtime="20241128 09:32:40.413"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.404" endtime="20241128 09:32:40.413"/>
</try>
<msg timestamp="20241128 09:32:40.413" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.404" endtime="20241128 09:32:40.413"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.413" endtime="20241128 09:32:40.413"/>
</return>
<msg timestamp="20241128 09:32:40.414" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.402" endtime="20241128 09:32:40.414"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.418" endtime="20241128 09:32:40.418"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.418" endtime="20241128 09:32:40.418"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.417" endtime="20241128 09:32:40.418"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.417" endtime="20241128 09:32:40.418"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.415" endtime="20241128 09:32:40.419"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.401" endtime="20241128 09:32:40.419"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.331" endtime="20241128 09:32:40.419"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.447" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state editable</msg>
<status status="PASS" starttime="20241128 09:32:40.427" endtime="20241128 09:32:40.448"/>
</kw>
<msg timestamp="20241128 09:32:40.448" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.427" endtime="20241128 09:32:40.448"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.448" endtime="20241128 09:32:40.448"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.426" endtime="20241128 09:32:40.448"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.448" endtime="20241128 09:32:40.449"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.449" endtime="20241128 09:32:40.449"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.448" endtime="20241128 09:32:40.449"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.426" endtime="20241128 09:32:40.449"/>
</try>
<msg timestamp="20241128 09:32:40.449" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.426" endtime="20241128 09:32:40.449"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.450" endtime="20241128 09:32:40.450"/>
</return>
<msg timestamp="20241128 09:32:40.450" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.424" endtime="20241128 09:32:40.450"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.453" endtime="20241128 09:32:40.454"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.454" endtime="20241128 09:32:40.454"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.453" endtime="20241128 09:32:40.454"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.453" endtime="20241128 09:32:40.454"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.451" endtime="20241128 09:32:40.454"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.424" endtime="20241128 09:32:40.455"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.455" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:40.455" endtime="20241128 09:32:40.456"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.458" endtime="20241128 09:32:40.458"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.460" endtime="20241128 09:32:40.461"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.458" endtime="20241128 09:32:40.461"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.461" endtime="20241128 09:32:40.462"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.461" endtime="20241128 09:32:40.462"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.457" endtime="20241128 09:32:40.462"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:40.463" level="INFO">Fills the text '2 Wheeler' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:40.462" endtime="20241128 09:32:40.505"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.462" endtime="20241128 09:32:40.505"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.506" endtime="20241128 09:32:40.506"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.506" endtime="20241128 09:32:40.506"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.505" endtime="20241128 09:32:40.506"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.462" endtime="20241128 09:32:40.507"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.457" endtime="20241128 09:32:40.507"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.456" endtime="20241128 09:32:40.507"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.456" endtime="20241128 09:32:40.507"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.508" endtime="20241128 09:32:40.508"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.507" endtime="20241128 09:32:40.508"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.456" endtime="20241128 09:32:40.508"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.330" endtime="20241128 09:32:40.509"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20241128 09:32:40.509" endtime="20241128 09:32:40.525"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.509" endtime="20241128 09:32:40.525"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.509" endtime="20241128 09:32:40.525"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.328" endtime="20241128 09:32:40.525"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.528" endtime="20241128 09:32:40.528"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.526" endtime="20241128 09:32:40.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.529" endtime="20241128 09:32:40.530"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.530" endtime="20241128 09:32:40.531"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.530" endtime="20241128 09:32:40.531"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.531" endtime="20241128 09:32:40.531"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.531" endtime="20241128 09:32:40.532"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.530" endtime="20241128 09:32:40.532"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.528" endtime="20241128 09:32:40.532"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.539" endtime="20241128 09:32:40.539"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.543" endtime="20241128 09:32:40.544"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.532" endtime="20241128 09:32:40.544"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.545" endtime="20241128 09:32:40.545"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.546" endtime="20241128 09:32:40.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.545" endtime="20241128 09:32:40.546"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.546" endtime="20241128 09:32:40.546"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.546" endtime="20241128 09:32:40.546"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.545" endtime="20241128 09:32:40.546"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.544" endtime="20241128 09:32:40.546"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.553" endtime="20241128 09:32:40.553"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.557" endtime="20241128 09:32:40.557"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.546" endtime="20241128 09:32:40.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.559" endtime="20241128 09:32:40.559"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.559" endtime="20241128 09:32:40.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.559" endtime="20241128 09:32:40.560"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.560" endtime="20241128 09:32:40.560"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.560" endtime="20241128 09:32:40.560"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.559" endtime="20241128 09:32:40.560"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.558" endtime="20241128 09:32:40.560"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.563" endtime="20241128 09:32:40.563"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.560" endtime="20241128 09:32:40.563"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.570" endtime="20241128 09:32:40.570"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.570" endtime="20241128 09:32:40.570"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.563" endtime="20241128 09:32:40.570"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.308" endtime="20241128 09:32:40.571"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.571" endtime="20241128 09:32:40.571"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:40.572" endtime="20241128 09:32:40.572"/>
</return>
<msg timestamp="20241128 09:32:40.572" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241128 09:32:40.305" endtime="20241128 09:32:40.572"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.573" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:11</msg>
<status status="PASS" starttime="20241128 09:32:40.573" endtime="20241128 09:32:40.573"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.574" endtime="20241128 09:32:40.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.574" endtime="20241128 09:32:40.574"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.575" endtime="20241128 09:32:40.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.575" endtime="20241128 09:32:40.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.575" endtime="20241128 09:32:40.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.575" endtime="20241128 09:32:40.576"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.576" endtime="20241128 09:32:40.576"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.576" endtime="20241128 09:32:40.576"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.578" endtime="20241128 09:32:40.578"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.579" endtime="20241128 09:32:40.579"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.580" endtime="20241128 09:32:40.580"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.580" endtime="20241128 09:32:40.580"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.579" endtime="20241128 09:32:40.580"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.580" endtime="20241128 09:32:40.581"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.581" endtime="20241128 09:32:40.581"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.580" endtime="20241128 09:32:40.581"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.580" endtime="20241128 09:32:40.581"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.581" endtime="20241128 09:32:40.581"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.581" endtime="20241128 09:32:40.582"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.581" endtime="20241128 09:32:40.582"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.581" endtime="20241128 09:32:40.582"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.579" endtime="20241128 09:32:40.582"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.579" endtime="20241128 09:32:40.582"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.582" endtime="20241128 09:32:40.582"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.582" endtime="20241128 09:32:40.582"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.582" endtime="20241128 09:32:40.583"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.583"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.583"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.583"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.584"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.584" endtime="20241128 09:32:40.584"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.583" endtime="20241128 09:32:40.584"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.582" endtime="20241128 09:32:40.584"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.582" endtime="20241128 09:32:40.584"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.574" endtime="20241128 09:32:40.584"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:40.574" endtime="20241128 09:32:40.584"/>
</for>
<msg timestamp="20241128 09:32:40.585" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:40.572" endtime="20241128 09:32:40.585"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.585" endtime="20241128 09:32:40.585"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.591" endtime="20241128 09:32:40.591"/>
</kw>
<msg timestamp="20241128 09:32:40.592" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.591" endtime="20241128 09:32:40.592"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.593" level="INFO">${values} = {'id': '10', 'name': 'Vehicle type', 'xpath': '//div[text()="Select vehicle type"]//following-sibling::div/input', 'pageId': '3', 'createdAt': '2024-11-25T10:49:09.637Z', 'updatedAt': '2024-11-25T11:1...</msg>
<status status="PASS" starttime="20241128 09:32:40.592" endtime="20241128 09:32:40.593"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.593" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.593" endtime="20241128 09:32:40.593"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.593" endtime="20241128 09:32:40.594"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.594" endtime="20241128 09:32:40.594"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.594" endtime="20241128 09:32:40.594"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.593" endtime="20241128 09:32:40.594"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.592" endtime="20241128 09:32:40.594"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.592" endtime="20241128 09:32:40.594"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:40.594" endtime="20241128 09:32:40.595"/>
</return>
<msg timestamp="20241128 09:32:40.595" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.590" endtime="20241128 09:32:40.595"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.596" level="INFO">${xpath} = //div[text()="Select vehicle type"]//following-sibling::div/input</msg>
<status status="PASS" starttime="20241128 09:32:40.595" endtime="20241128 09:32:40.596"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.595" endtime="20241128 09:32:40.596"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.596" endtime="20241128 09:32:40.596"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.596" endtime="20241128 09:32:40.596"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.595" endtime="20241128 09:32:40.596"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.598" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '467', 'status': 'COMPLETED', 'actionName': 'Enter Vehicle type', 'actionType': 'TYPE_TEXT', 'actionXpath': '//div[text()="Select vehicle type"]//following-sibling::div...</msg>
<status status="PASS" starttime="20241128 09:32:40.597" endtime="20241128 09:32:40.598"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:40.599" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "467", "status": "COMPLETED", "actionName": "Enter Vehicle type", "actionType": "TYPE_TEXT", "actionXpath": "//div[text()=\"Select vehicle type\"]//following-sibling::d...</msg>
<status status="PASS" starttime="20241128 09:32:40.599" endtime="20241128 09:32:40.599"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:40.625" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:40.625" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:40.600" endtime="20241128 09:32:40.625"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.626" endtime="20241128 09:32:40.626"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:40.627" endtime="20241128 09:32:40.627"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.598" endtime="20241128 09:32:40.627"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.586" endtime="20241128 09:32:40.627"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:40.628" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:40.627" endtime="20241128 09:32:40.628"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.296" endtime="20241128 09:32:40.628"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.628" endtime="20241128 09:32:40.629"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.629" endtime="20241128 09:32:40.629"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.629" endtime="20241128 09:32:40.629"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.628" endtime="20241128 09:32:40.629"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.296" endtime="20241128 09:32:40.629"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.296" endtime="20241128 09:32:40.629"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '13', 'actionId': '12', 'flowId': '4', 'order': 3, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.860Z', 'action': {'id': '12', 'name': 'Enter vehicle number', 'type...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.631" level="INFO">${action} = {'id': '12', 'name': 'Enter vehicle number', 'type': 'TYPE_TEXT', 'selectorI': '11', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:54:49.286Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241128 09:32:40.630" endtime="20241128 09:32:40.631"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.631" endtime="20241128 09:32:40.631"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:40.632" level="INFO">${input} = {'id': '13', 'actionId': '12', 'name': 'Bharani Bike number', 'value': 'TN91 T9861', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:54:49.735Z', 'updatedAt': '2024-11-25T11:18:...</msg>
<status status="PASS" starttime="20241128 09:32:40.632" endtime="20241128 09:32:40.632"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.633" endtime="20241128 09:32:40.633"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.633" endtime="20241128 09:32:40.633"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.632" endtime="20241128 09:32:40.633"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.632" endtime="20241128 09:32:40.633"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.634" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:32:40.634" endtime="20241128 09:32:40.634"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.635" endtime="20241128 09:32:40.635"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.635" endtime="20241128 09:32:40.635"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.636" endtime="20241128 09:32:40.636"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.635" endtime="20241128 09:32:40.636"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.639" endtime="20241128 09:32:40.640"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.636" endtime="20241128 09:32:40.640"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.642" endtime="20241128 09:32:40.642"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.645" endtime="20241128 09:32:40.645"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.640" endtime="20241128 09:32:40.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.646" endtime="20241128 09:32:40.646"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.645" endtime="20241128 09:32:40.647"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.650" endtime="20241128 09:32:40.650"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.647" endtime="20241128 09:32:40.650"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.668" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.662" endtime="20241128 09:32:40.668"/>
</kw>
<msg timestamp="20241128 09:32:40.668" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.661" endtime="20241128 09:32:40.669"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.669" endtime="20241128 09:32:40.669"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.661" endtime="20241128 09:32:40.669"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.670" endtime="20241128 09:32:40.671"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.671" endtime="20241128 09:32:40.671"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.669" endtime="20241128 09:32:40.672"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.661" endtime="20241128 09:32:40.672"/>
</try>
<msg timestamp="20241128 09:32:40.672" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.660" endtime="20241128 09:32:40.672"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.672" endtime="20241128 09:32:40.673"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.659" endtime="20241128 09:32:40.673"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.673" endtime="20241128 09:32:40.673"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.673" endtime="20241128 09:32:40.673"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.659" endtime="20241128 09:32:40.674"/>
</try>
<msg timestamp="20241128 09:32:40.674" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.659" endtime="20241128 09:32:40.674"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.677" endtime="20241128 09:32:40.677"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.677" endtime="20241128 09:32:40.677"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.677" endtime="20241128 09:32:40.677"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.677" endtime="20241128 09:32:40.678"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.675" endtime="20241128 09:32:40.678"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.658" endtime="20241128 09:32:40.678"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.695" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.689" endtime="20241128 09:32:40.695"/>
</kw>
<msg timestamp="20241128 09:32:40.695" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.688" endtime="20241128 09:32:40.695"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.695" endtime="20241128 09:32:40.696"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.688" endtime="20241128 09:32:40.696"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.696" endtime="20241128 09:32:40.696"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.696" endtime="20241128 09:32:40.696"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.696" endtime="20241128 09:32:40.697"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.688" endtime="20241128 09:32:40.697"/>
</try>
<msg timestamp="20241128 09:32:40.697" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.687" endtime="20241128 09:32:40.697"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.697" endtime="20241128 09:32:40.697"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.686" endtime="20241128 09:32:40.697"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.697" endtime="20241128 09:32:40.698"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.697" endtime="20241128 09:32:40.698"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.686" endtime="20241128 09:32:40.698"/>
</try>
<msg timestamp="20241128 09:32:40.698" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.685" endtime="20241128 09:32:40.698"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.701" endtime="20241128 09:32:40.701"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.701" endtime="20241128 09:32:40.701"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.701" endtime="20241128 09:32:40.701"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.701" endtime="20241128 09:32:40.702"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.699" endtime="20241128 09:32:40.702"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.685" endtime="20241128 09:32:40.702"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:40.715" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241128 09:32:40.715" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:40.702" endtime="20241128 09:32:40.715"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:40.715" endtime="20241128 09:32:40.715"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.702" endtime="20241128 09:32:40.715"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.716" endtime="20241128 09:32:40.716"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.716" endtime="20241128 09:32:40.716"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.715" endtime="20241128 09:32:40.716"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.702" endtime="20241128 09:32:40.716"/>
</try>
<msg timestamp="20241128 09:32:40.717" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241128 09:32:40.682" endtime="20241128 09:32:40.717"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.719" endtime="20241128 09:32:40.720"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.720" endtime="20241128 09:32:40.721"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.719" endtime="20241128 09:32:40.721"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.719" endtime="20241128 09:32:40.721"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.718" endtime="20241128 09:32:40.721"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.681" endtime="20241128 09:32:40.721"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.721" endtime="20241128 09:32:40.722"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.721" endtime="20241128 09:32:40.722"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.681" endtime="20241128 09:32:40.722"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.680" endtime="20241128 09:32:40.722"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.735" level="INFO">Waited for Element with selector id=vehicleNumber at state visible</msg>
<status status="PASS" starttime="20241128 09:32:40.728" endtime="20241128 09:32:40.735"/>
</kw>
<msg timestamp="20241128 09:32:40.735" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.727" endtime="20241128 09:32:40.735"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.735" endtime="20241128 09:32:40.735"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.727" endtime="20241128 09:32:40.735"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.736" endtime="20241128 09:32:40.736"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.736" endtime="20241128 09:32:40.736"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.736" endtime="20241128 09:32:40.736"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.727" endtime="20241128 09:32:40.737"/>
</try>
<msg timestamp="20241128 09:32:40.737" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.726" endtime="20241128 09:32:40.737"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.737" endtime="20241128 09:32:40.738"/>
</return>
<msg timestamp="20241128 09:32:40.738" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.725" endtime="20241128 09:32:40.738"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.741" endtime="20241128 09:32:40.741"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.742" endtime="20241128 09:32:40.742"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.741" endtime="20241128 09:32:40.742"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.741" endtime="20241128 09:32:40.742"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.740" endtime="20241128 09:32:40.742"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.724" endtime="20241128 09:32:40.742"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.655" endtime="20241128 09:32:40.743"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.766" level="INFO">Waited for Element with selector id=vehicleNumber at state editable</msg>
<status status="PASS" starttime="20241128 09:32:40.748" endtime="20241128 09:32:40.766"/>
</kw>
<msg timestamp="20241128 09:32:40.767" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.748" endtime="20241128 09:32:40.767"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.767" endtime="20241128 09:32:40.767"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.747" endtime="20241128 09:32:40.767"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.767" endtime="20241128 09:32:40.767"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.768" endtime="20241128 09:32:40.768"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.767" endtime="20241128 09:32:40.768"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.747" endtime="20241128 09:32:40.768"/>
</try>
<msg timestamp="20241128 09:32:40.768" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.747" endtime="20241128 09:32:40.768"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.768" endtime="20241128 09:32:40.769"/>
</return>
<msg timestamp="20241128 09:32:40.769" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.745" endtime="20241128 09:32:40.769"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.773" endtime="20241128 09:32:40.774"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.774" endtime="20241128 09:32:40.774"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.773" endtime="20241128 09:32:40.774"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.773" endtime="20241128 09:32:40.774"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.772" endtime="20241128 09:32:40.774"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.745" endtime="20241128 09:32:40.775"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.775" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:40.775" endtime="20241128 09:32:40.775"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.777" endtime="20241128 09:32:40.777"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.780" endtime="20241128 09:32:40.780"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.777" endtime="20241128 09:32:40.780"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.780" endtime="20241128 09:32:40.781"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.780" endtime="20241128 09:32:40.781"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.777" endtime="20241128 09:32:40.781"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241128 09:32:40.782" level="INFO">Fills the text 'TN91 T9861' in the given field.</msg>
<status status="PASS" starttime="20241128 09:32:40.781" endtime="20241128 09:32:40.833"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.781" endtime="20241128 09:32:40.834"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.834" endtime="20241128 09:32:40.834"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.838" endtime="20241128 09:32:40.838"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.834" endtime="20241128 09:32:40.839"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.781" endtime="20241128 09:32:40.839"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.776" endtime="20241128 09:32:40.839"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.776" endtime="20241128 09:32:40.840"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.775" endtime="20241128 09:32:40.840"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.841" endtime="20241128 09:32:40.841"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.840" endtime="20241128 09:32:40.841"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.775" endtime="20241128 09:32:40.841"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.654" endtime="20241128 09:32:40.842"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.842" endtime="20241128 09:32:40.842"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.842" endtime="20241128 09:32:40.842"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.842" endtime="20241128 09:32:40.843"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.650" endtime="20241128 09:32:40.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.844" endtime="20241128 09:32:40.844"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.843" endtime="20241128 09:32:40.844"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.846" endtime="20241128 09:32:40.846"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.846" endtime="20241128 09:32:40.846"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.846" endtime="20241128 09:32:40.847"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.847" endtime="20241128 09:32:40.847"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.847" endtime="20241128 09:32:40.847"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.846" endtime="20241128 09:32:40.847"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.844" endtime="20241128 09:32:40.847"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.854" endtime="20241128 09:32:40.854"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.858" endtime="20241128 09:32:40.858"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.847" endtime="20241128 09:32:40.858"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.860" endtime="20241128 09:32:40.860"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.860" endtime="20241128 09:32:40.860"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.860" endtime="20241128 09:32:40.860"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.861" endtime="20241128 09:32:40.861"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.861" endtime="20241128 09:32:40.861"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.860" endtime="20241128 09:32:40.861"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.858" endtime="20241128 09:32:40.861"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:40.868" endtime="20241128 09:32:40.869"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.873" endtime="20241128 09:32:40.873"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.861" endtime="20241128 09:32:40.873"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.875" endtime="20241128 09:32:40.875"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.875" endtime="20241128 09:32:40.875"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.875" endtime="20241128 09:32:40.875"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.876" endtime="20241128 09:32:40.876"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.875" endtime="20241128 09:32:40.876"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.875" endtime="20241128 09:32:40.876"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.873" endtime="20241128 09:32:40.876"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.879" endtime="20241128 09:32:40.879"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.876" endtime="20241128 09:32:40.879"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.886" endtime="20241128 09:32:40.887"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.887" endtime="20241128 09:32:40.887"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.879" endtime="20241128 09:32:40.887"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.634" endtime="20241128 09:32:40.888"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.888" endtime="20241128 09:32:40.888"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:40.888" endtime="20241128 09:32:40.888"/>
</return>
<msg timestamp="20241128 09:32:40.889" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241128 09:32:40.633" endtime="20241128 09:32:40.889"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.890" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241128 09:32:40.890" endtime="20241128 09:32:40.890"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.891" endtime="20241128 09:32:40.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.891" endtime="20241128 09:32:40.891"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.891" endtime="20241128 09:32:40.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.892" endtime="20241128 09:32:40.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.892" endtime="20241128 09:32:40.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.892" endtime="20241128 09:32:40.892"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.893" endtime="20241128 09:32:40.893"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.893" endtime="20241128 09:32:40.893"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.895" endtime="20241128 09:32:40.895"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.896" endtime="20241128 09:32:40.896"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.897"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.897"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.897"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.897"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.898" endtime="20241128 09:32:40.898"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.898"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.897" endtime="20241128 09:32:40.898"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.898" endtime="20241128 09:32:40.898"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.898" endtime="20241128 09:32:40.898"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.898" endtime="20241128 09:32:40.899"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.898" endtime="20241128 09:32:40.899"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.896" endtime="20241128 09:32:40.899"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.896" endtime="20241128 09:32:40.899"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:40.899" endtime="20241128 09:32:40.899"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.899" endtime="20241128 09:32:40.899"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.899" endtime="20241128 09:32:40.900"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.900" endtime="20241128 09:32:40.900"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.900" endtime="20241128 09:32:40.900"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.900" endtime="20241128 09:32:40.900"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.901" endtime="20241128 09:32:40.901"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.901" endtime="20241128 09:32:40.901"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.900" endtime="20241128 09:32:40.901"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.900" endtime="20241128 09:32:40.901"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.899" endtime="20241128 09:32:40.901"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:40.899" endtime="20241128 09:32:40.901"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:40.891" endtime="20241128 09:32:40.901"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:40.890" endtime="20241128 09:32:40.901"/>
</for>
<msg timestamp="20241128 09:32:40.902" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:40.889" endtime="20241128 09:32:40.902"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.902" endtime="20241128 09:32:40.904"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:40.909" endtime="20241128 09:32:40.910"/>
</kw>
<msg timestamp="20241128 09:32:40.910" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.909" endtime="20241128 09:32:40.910"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.911" level="INFO">${values} = {'id': '11', 'name': 'Vehicle number', 'xpath': 'id=vehicleNumber', 'pageId': '3', 'createdAt': '2024-11-25T10:54:47.928Z', 'updatedAt': '2024-11-25T10:54:47.928Z'}</msg>
<status status="PASS" starttime="20241128 09:32:40.910" endtime="20241128 09:32:40.911"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.912" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.911" endtime="20241128 09:32:40.912"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.911" endtime="20241128 09:32:40.912"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.912" endtime="20241128 09:32:40.912"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.912" endtime="20241128 09:32:40.912"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.911" endtime="20241128 09:32:40.913"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.910" endtime="20241128 09:32:40.913"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.910" endtime="20241128 09:32:40.913"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:40.913" endtime="20241128 09:32:40.913"/>
</return>
<msg timestamp="20241128 09:32:40.913" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.908" endtime="20241128 09:32:40.913"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.914" level="INFO">${xpath} = id=vehicleNumber</msg>
<status status="PASS" starttime="20241128 09:32:40.914" endtime="20241128 09:32:40.914"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.914" endtime="20241128 09:32:40.914"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.915" endtime="20241128 09:32:40.915"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.914" endtime="20241128 09:32:40.915"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.913" endtime="20241128 09:32:40.915"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:40.916" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '468', 'status': 'COMPLETED', 'actionName': 'Enter vehicle number', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=vehicleNumber', 'inputValue': 'TN91 T9861', 'errorMess...</msg>
<status status="PASS" starttime="20241128 09:32:40.915" endtime="20241128 09:32:40.916"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:40.918" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "468", "status": "COMPLETED", "actionName": "Enter vehicle number", "actionType": "TYPE_TEXT", "actionXpath": "id=vehicleNumber", "inputValue": "TN91 T9861", "errorMess...</msg>
<status status="PASS" starttime="20241128 09:32:40.917" endtime="20241128 09:32:40.918"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:40.925" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:40.925" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:40.918" endtime="20241128 09:32:40.925"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.926" endtime="20241128 09:32:40.926"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:40.926" endtime="20241128 09:32:40.927"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.917" endtime="20241128 09:32:40.927"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.905" endtime="20241128 09:32:40.927"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:40.928" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:40.927" endtime="20241128 09:32:40.928"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.630" endtime="20241128 09:32:40.928"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.928" endtime="20241128 09:32:40.928"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.929" endtime="20241128 09:32:40.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.929" endtime="20241128 09:32:40.929"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.928" endtime="20241128 09:32:40.929"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.630" endtime="20241128 09:32:40.929"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.630" endtime="20241128 09:32:40.929"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '14', 'actionId': '13', 'flowId': '4', 'order': 4, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.863Z', 'action': {'id': '13', 'name': 'Click add vehicle button', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.931" level="INFO">${action} = {'id': '13', 'name': 'Click add vehicle button', 'type': 'CLICK', 'selectorI': '12', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:56:26.254Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241128 09:32:40.930" endtime="20241128 09:32:40.931"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:40.931" endtime="20241128 09:32:40.932"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:40.933" level="INFO">${input} = {'id': '14', 'actionId': '13', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:56:26.592Z', 'updatedAt': '2024-11-25T10:56:26.592Z'}</msg>
<status status="PASS" starttime="20241128 09:32:40.932" endtime="20241128 09:32:40.933"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.933" endtime="20241128 09:32:40.933"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.934" endtime="20241128 09:32:40.934"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.933" endtime="20241128 09:32:40.934"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.933" endtime="20241128 09:32:40.934"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:40.935" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:40.935" endtime="20241128 09:32:40.935"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.937" endtime="20241128 09:32:40.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.935" endtime="20241128 09:32:40.937"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:40.937" endtime="20241128 09:32:40.937"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.937" endtime="20241128 09:32:40.938"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.960" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state attached</msg>
<status status="PASS" starttime="20241128 09:32:40.948" endtime="20241128 09:32:40.960"/>
</kw>
<msg timestamp="20241128 09:32:40.960" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.948" endtime="20241128 09:32:40.960"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.961" endtime="20241128 09:32:40.961"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.948" endtime="20241128 09:32:40.961"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.962" endtime="20241128 09:32:40.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.962" endtime="20241128 09:32:40.962"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.961" endtime="20241128 09:32:40.963"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.947" endtime="20241128 09:32:40.963"/>
</try>
<msg timestamp="20241128 09:32:40.963" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.947" endtime="20241128 09:32:40.963"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.964" endtime="20241128 09:32:40.964"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.946" endtime="20241128 09:32:40.964"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:40.964" endtime="20241128 09:32:40.964"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:40.964" endtime="20241128 09:32:40.965"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.946" endtime="20241128 09:32:40.965"/>
</try>
<msg timestamp="20241128 09:32:40.965" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.945" endtime="20241128 09:32:40.965"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.971" endtime="20241128 09:32:40.971"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.972" endtime="20241128 09:32:40.972"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.971" endtime="20241128 09:32:40.972"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.971" endtime="20241128 09:32:40.973"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.968" endtime="20241128 09:32:40.973"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.945" endtime="20241128 09:32:40.973"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:40.988" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state visible</msg>
<status status="PASS" starttime="20241128 09:32:40.980" endtime="20241128 09:32:40.989"/>
</kw>
<msg timestamp="20241128 09:32:40.989" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.979" endtime="20241128 09:32:40.989"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.989" endtime="20241128 09:32:40.989"/>
</return>
<status status="PASS" starttime="20241128 09:32:40.979" endtime="20241128 09:32:40.989"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.990" endtime="20241128 09:32:40.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.990" endtime="20241128 09:32:40.991"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.990" endtime="20241128 09:32:40.991"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.979" endtime="20241128 09:32:40.991"/>
</try>
<msg timestamp="20241128 09:32:40.991" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.978" endtime="20241128 09:32:40.991"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:40.991" endtime="20241128 09:32:40.991"/>
</return>
<msg timestamp="20241128 09:32:40.992" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.977" endtime="20241128 09:32:40.992"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.995" endtime="20241128 09:32:40.995"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:40.995" endtime="20241128 09:32:40.995"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:40.995" endtime="20241128 09:32:40.995"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.994" endtime="20241128 09:32:40.996"/>
</if>
<status status="PASS" starttime="20241128 09:32:40.993" endtime="20241128 09:32:40.996"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.976" endtime="20241128 09:32:40.996"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:41.020" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:41.002" endtime="20241128 09:32:41.021"/>
</kw>
<msg timestamp="20241128 09:32:41.021" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.002" endtime="20241128 09:32:41.021"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.021" endtime="20241128 09:32:41.021"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.002" endtime="20241128 09:32:41.021"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.022" endtime="20241128 09:32:41.022"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.022" endtime="20241128 09:32:41.022"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.022" endtime="20241128 09:32:41.023"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.002" endtime="20241128 09:32:41.023"/>
</try>
<msg timestamp="20241128 09:32:41.023" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.001" endtime="20241128 09:32:41.023"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.023" endtime="20241128 09:32:41.023"/>
</return>
<msg timestamp="20241128 09:32:41.024" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:40.999" endtime="20241128 09:32:41.024"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.027" endtime="20241128 09:32:41.027"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.028" endtime="20241128 09:32:41.028"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.027" endtime="20241128 09:32:41.028"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.027" endtime="20241128 09:32:41.028"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.025" endtime="20241128 09:32:41.028"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.998" endtime="20241128 09:32:41.028"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.943" endtime="20241128 09:32:41.029"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:41.029" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:41.029" endtime="20241128 09:32:41.029"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.032" endtime="20241128 09:32:41.032"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.031" endtime="20241128 09:32:41.032"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:41.032" endtime="20241128 09:32:41.033"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.032" endtime="20241128 09:32:41.033"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.031" endtime="20241128 09:32:41.033"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:41.033" endtime="20241128 09:32:41.134"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.033" endtime="20241128 09:32:41.134"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.134" endtime="20241128 09:32:41.134"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.135" endtime="20241128 09:32:41.135"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.134" endtime="20241128 09:32:41.135"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.033" endtime="20241128 09:32:41.135"/>
</try>
<status status="PASS" starttime="20241128 09:32:41.030" endtime="20241128 09:32:41.135"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.030" endtime="20241128 09:32:41.135"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.030" endtime="20241128 09:32:41.135"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.136" endtime="20241128 09:32:41.136"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.136" endtime="20241128 09:32:41.136"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.029" endtime="20241128 09:32:41.136"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.942" endtime="20241128 09:32:41.137"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.938" endtime="20241128 09:32:41.137"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.141" endtime="20241128 09:32:41.141"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.143" endtime="20241128 09:32:41.144"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.137" endtime="20241128 09:32:41.144"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.145" endtime="20241128 09:32:41.145"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.144" endtime="20241128 09:32:41.145"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.149" endtime="20241128 09:32:41.149"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.146" endtime="20241128 09:32:41.149"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.152" endtime="20241128 09:32:41.152"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.153" endtime="20241128 09:32:41.154"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.153" endtime="20241128 09:32:41.154"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.152" endtime="20241128 09:32:41.154"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.150" endtime="20241128 09:32:41.154"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.158" endtime="20241128 09:32:41.159"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.155" endtime="20241128 09:32:41.159"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.160" endtime="20241128 09:32:41.160"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.161" endtime="20241128 09:32:41.161"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.161" endtime="20241128 09:32:41.161"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.161" endtime="20241128 09:32:41.161"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.161" endtime="20241128 09:32:41.162"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.160" endtime="20241128 09:32:41.162"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.159" endtime="20241128 09:32:41.162"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.169" endtime="20241128 09:32:41.169"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.179" endtime="20241128 09:32:41.179"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.162" endtime="20241128 09:32:41.180"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.182" endtime="20241128 09:32:41.183"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.183" endtime="20241128 09:32:41.183"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.183" endtime="20241128 09:32:41.184"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.184" endtime="20241128 09:32:41.184"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.184" endtime="20241128 09:32:41.184"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.183" endtime="20241128 09:32:41.184"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.180" endtime="20241128 09:32:41.184"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.192" endtime="20241128 09:32:41.192"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.196" endtime="20241128 09:32:41.196"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.184" endtime="20241128 09:32:41.196"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.198" endtime="20241128 09:32:41.198"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.198" endtime="20241128 09:32:41.198"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.198" endtime="20241128 09:32:41.199"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.199" endtime="20241128 09:32:41.199"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.199" endtime="20241128 09:32:41.199"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.198" endtime="20241128 09:32:41.199"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.196" endtime="20241128 09:32:41.199"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.202" endtime="20241128 09:32:41.202"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.199" endtime="20241128 09:32:41.203"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.215" endtime="20241128 09:32:41.215"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.215" endtime="20241128 09:32:41.215"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.203" endtime="20241128 09:32:41.215"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.935" endtime="20241128 09:32:41.216"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.216" endtime="20241128 09:32:41.217"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:41.217" endtime="20241128 09:32:41.217"/>
</return>
<msg timestamp="20241128 09:32:41.217" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:40.934" endtime="20241128 09:32:41.217"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.219" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:14</msg>
<status status="PASS" starttime="20241128 09:32:41.219" endtime="20241128 09:32:41.219"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.222" endtime="20241128 09:32:41.222"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.222" endtime="20241128 09:32:41.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.223" endtime="20241128 09:32:41.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.223" endtime="20241128 09:32:41.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.223" endtime="20241128 09:32:41.223"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.224" endtime="20241128 09:32:41.224"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.224" endtime="20241128 09:32:41.224"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.224" endtime="20241128 09:32:41.224"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.226" endtime="20241128 09:32:41.226"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.228"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.228"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.229"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.229"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.229" endtime="20241128 09:32:41.229"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.229" endtime="20241128 09:32:41.229"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.229" endtime="20241128 09:32:41.229"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.229" endtime="20241128 09:32:41.229"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.230" endtime="20241128 09:32:41.230"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.230" endtime="20241128 09:32:41.230"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.230" endtime="20241128 09:32:41.230"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.230" endtime="20241128 09:32:41.230"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.230"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.228" endtime="20241128 09:32:41.231"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.231"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.231"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.231"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.232" endtime="20241128 09:32:41.232"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.232"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.232"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.232" endtime="20241128 09:32:41.232"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.233" endtime="20241128 09:32:41.233"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.232" endtime="20241128 09:32:41.233"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.232" endtime="20241128 09:32:41.233"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.233"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.231" endtime="20241128 09:32:41.233"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.220" endtime="20241128 09:32:41.233"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:41.219" endtime="20241128 09:32:41.233"/>
</for>
<msg timestamp="20241128 09:32:41.234" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:41.218" endtime="20241128 09:32:41.234"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.234" endtime="20241128 09:32:41.235"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:41.243" endtime="20241128 09:32:41.243"/>
</kw>
<msg timestamp="20241128 09:32:41.243" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.242" endtime="20241128 09:32:41.243"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.244" level="INFO">${values} = {'id': '12', 'name': 'Add vehicle button', 'xpath': '//button[@type="submit"]//p[text()="Add"]', 'pageId': '3', 'createdAt': '2024-11-25T10:56:22.831Z', 'updatedAt': '2024-11-25T11:27:24.850Z'}</msg>
<status status="PASS" starttime="20241128 09:32:41.244" endtime="20241128 09:32:41.244"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.246" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.245" endtime="20241128 09:32:41.246"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.245" endtime="20241128 09:32:41.246"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.246" endtime="20241128 09:32:41.246"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.246" endtime="20241128 09:32:41.246"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.245" endtime="20241128 09:32:41.246"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.244" endtime="20241128 09:32:41.247"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.243" endtime="20241128 09:32:41.247"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:41.247" endtime="20241128 09:32:41.247"/>
</return>
<msg timestamp="20241128 09:32:41.247" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.241" endtime="20241128 09:32:41.247"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.249" level="INFO">${xpath} = //button[@type="submit"]//p[text()="Add"]</msg>
<status status="PASS" starttime="20241128 09:32:41.248" endtime="20241128 09:32:41.249"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.248" endtime="20241128 09:32:41.249"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.249" endtime="20241128 09:32:41.249"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.249" endtime="20241128 09:32:41.249"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.248" endtime="20241128 09:32:41.250"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:41.251" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '469', 'status': 'COMPLETED', 'actionName': 'Click add vehicle button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit"]//p[text()="Add"]', 'inputValue':...</msg>
<status status="PASS" starttime="20241128 09:32:41.250" endtime="20241128 09:32:41.251"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:41.256" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "469", "status": "COMPLETED", "actionName": "Click add vehicle button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\"]//p[text()=\"Add\"]", "inputVal...</msg>
<status status="PASS" starttime="20241128 09:32:41.252" endtime="20241128 09:32:41.256"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:41.262" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:41.262" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:41.256" endtime="20241128 09:32:41.263"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.263" endtime="20241128 09:32:41.264"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:41.264" endtime="20241128 09:32:41.264"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.251" endtime="20241128 09:32:41.264"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.235" endtime="20241128 09:32:41.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:41.265" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:41.265" endtime="20241128 09:32:41.266"/>
</kw>
<status status="PASS" starttime="20241128 09:32:40.930" endtime="20241128 09:32:41.266"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.266" endtime="20241128 09:32:41.266"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.266" endtime="20241128 09:32:41.267"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.267" endtime="20241128 09:32:41.267"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.266" endtime="20241128 09:32:41.267"/>
</branch>
<status status="PASS" starttime="20241128 09:32:40.930" endtime="20241128 09:32:41.267"/>
</try>
<status status="PASS" starttime="20241128 09:32:40.930" endtime="20241128 09:32:41.267"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '15', 'actionId': '15', 'flowId': '4', 'order': 5, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.865Z', 'action': {'id': '15', 'name': 'Close add vehicle popup', 't...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.270" level="INFO">${action} = {'id': '15', 'name': 'Close add vehicle popup', 'type': 'CLICK', 'selectorI': '14', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:20:45.695Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241128 09:32:41.268" endtime="20241128 09:32:41.270"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.272" endtime="20241128 09:32:41.273"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:41.274" level="INFO">${input} = {'id': '16', 'actionId': '15', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:20:46.000Z', 'updatedAt': '2024-11-25T11:20:46.000Z'}</msg>
<status status="PASS" starttime="20241128 09:32:41.273" endtime="20241128 09:32:41.274"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.275" endtime="20241128 09:32:41.275"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.276" endtime="20241128 09:32:41.276"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.275" endtime="20241128 09:32:41.276"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.275" endtime="20241128 09:32:41.276"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.277" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:41.277" endtime="20241128 09:32:41.277"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.278" endtime="20241128 09:32:41.278"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.278" endtime="20241128 09:32:41.278"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.279" endtime="20241128 09:32:41.279"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.278" endtime="20241128 09:32:41.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:41.299" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state attached</msg>
<status status="PASS" starttime="20241128 09:32:41.293" endtime="20241128 09:32:41.300"/>
</kw>
<msg timestamp="20241128 09:32:41.300" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.292" endtime="20241128 09:32:41.300"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.300" endtime="20241128 09:32:41.300"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.292" endtime="20241128 09:32:41.300"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.301" endtime="20241128 09:32:41.301"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.302" endtime="20241128 09:32:41.302"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.301" endtime="20241128 09:32:41.302"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.292" endtime="20241128 09:32:41.302"/>
</try>
<msg timestamp="20241128 09:32:41.303" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.292" endtime="20241128 09:32:41.303"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.303" endtime="20241128 09:32:41.304"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.290" endtime="20241128 09:32:41.304"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.304" endtime="20241128 09:32:41.305"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.304" endtime="20241128 09:32:41.305"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.290" endtime="20241128 09:32:41.305"/>
</try>
<msg timestamp="20241128 09:32:41.306" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.289" endtime="20241128 09:32:41.306"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.310" endtime="20241128 09:32:41.310"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.310" endtime="20241128 09:32:41.310"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.309" endtime="20241128 09:32:41.310"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.309" endtime="20241128 09:32:41.311"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.308" endtime="20241128 09:32:41.311"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.287" endtime="20241128 09:32:41.311"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:41.325" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state visible</msg>
<status status="PASS" starttime="20241128 09:32:41.318" endtime="20241128 09:32:41.325"/>
</kw>
<msg timestamp="20241128 09:32:41.325" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.318" endtime="20241128 09:32:41.325"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.326" endtime="20241128 09:32:41.326"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.317" endtime="20241128 09:32:41.326"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.326" endtime="20241128 09:32:41.326"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.327" endtime="20241128 09:32:41.327"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.326" endtime="20241128 09:32:41.327"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.317" endtime="20241128 09:32:41.327"/>
</try>
<msg timestamp="20241128 09:32:41.327" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.316" endtime="20241128 09:32:41.327"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.328" endtime="20241128 09:32:41.328"/>
</return>
<msg timestamp="20241128 09:32:41.328" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.314" endtime="20241128 09:32:41.328"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.332" endtime="20241128 09:32:41.332"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.332" endtime="20241128 09:32:41.332"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.331" endtime="20241128 09:32:41.332"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.331" endtime="20241128 09:32:41.332"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.330" endtime="20241128 09:32:41.332"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.314" endtime="20241128 09:32:41.333"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:41.359" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241128 09:32:41.341" endtime="20241128 09:32:41.359"/>
</kw>
<msg timestamp="20241128 09:32:41.360" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.341" endtime="20241128 09:32:41.360"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.360" endtime="20241128 09:32:41.360"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.340" endtime="20241128 09:32:41.360"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.361" endtime="20241128 09:32:41.361"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.361" endtime="20241128 09:32:41.361"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.360" endtime="20241128 09:32:41.361"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.340" endtime="20241128 09:32:41.361"/>
</try>
<msg timestamp="20241128 09:32:41.362" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.340" endtime="20241128 09:32:41.362"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.362" endtime="20241128 09:32:41.362"/>
</return>
<msg timestamp="20241128 09:32:41.362" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.338" endtime="20241128 09:32:41.362"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.366" endtime="20241128 09:32:41.366"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.366" endtime="20241128 09:32:41.366"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.366" endtime="20241128 09:32:41.366"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.365" endtime="20241128 09:32:41.367"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.364" endtime="20241128 09:32:41.367"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.336" endtime="20241128 09:32:41.367"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.283" endtime="20241128 09:32:41.367"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:41.368" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241128 09:32:41.368" endtime="20241128 09:32:41.368"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.370" endtime="20241128 09:32:41.371"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.370" endtime="20241128 09:32:41.371"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:41.371" endtime="20241128 09:32:41.372"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.371" endtime="20241128 09:32:41.372"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.370" endtime="20241128 09:32:41.372"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241128 09:32:41.372" endtime="20241128 09:32:41.415"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.372" endtime="20241128 09:32:41.415"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.416" endtime="20241128 09:32:41.416"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.416" endtime="20241128 09:32:41.416"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.415" endtime="20241128 09:32:41.416"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.372" endtime="20241128 09:32:41.416"/>
</try>
<status status="PASS" starttime="20241128 09:32:41.370" endtime="20241128 09:32:41.417"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.369" endtime="20241128 09:32:41.417"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.368" endtime="20241128 09:32:41.417"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.417" endtime="20241128 09:32:41.417"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.417" endtime="20241128 09:32:41.418"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.368" endtime="20241128 09:32:41.418"/>
</try>
<status status="PASS" starttime="20241128 09:32:41.282" endtime="20241128 09:32:41.418"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.279" endtime="20241128 09:32:41.418"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.421" endtime="20241128 09:32:41.422"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.424" endtime="20241128 09:32:41.424"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.418" endtime="20241128 09:32:41.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.427" endtime="20241128 09:32:41.427"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.425" endtime="20241128 09:32:41.427"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.431" endtime="20241128 09:32:41.431"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.427" endtime="20241128 09:32:41.431"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.434" endtime="20241128 09:32:41.434"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.435" endtime="20241128 09:32:41.435"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.435" endtime="20241128 09:32:41.435"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.434" endtime="20241128 09:32:41.435"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.431" endtime="20241128 09:32:41.435"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.438" endtime="20241128 09:32:41.438"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.436" endtime="20241128 09:32:41.439"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.440" endtime="20241128 09:32:41.440"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.441" endtime="20241128 09:32:41.441"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.441" endtime="20241128 09:32:41.441"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.441" endtime="20241128 09:32:41.441"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.441" endtime="20241128 09:32:41.442"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.440" endtime="20241128 09:32:41.442"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.439" endtime="20241128 09:32:41.442"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.449" endtime="20241128 09:32:41.449"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.454" endtime="20241128 09:32:41.454"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.442" endtime="20241128 09:32:41.454"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.456" endtime="20241128 09:32:41.456"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.456" endtime="20241128 09:32:41.456"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.456" endtime="20241128 09:32:41.456"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.457" endtime="20241128 09:32:41.457"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.457" endtime="20241128 09:32:41.457"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.456" endtime="20241128 09:32:41.457"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.454" endtime="20241128 09:32:41.457"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.464" endtime="20241128 09:32:41.465"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.468" endtime="20241128 09:32:41.468"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.457" endtime="20241128 09:32:41.469"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.471" endtime="20241128 09:32:41.471"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.472" endtime="20241128 09:32:41.472"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.472" endtime="20241128 09:32:41.472"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.472" endtime="20241128 09:32:41.472"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.472" endtime="20241128 09:32:41.473"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.471" endtime="20241128 09:32:41.473"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.469" endtime="20241128 09:32:41.473"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.475" endtime="20241128 09:32:41.476"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.473" endtime="20241128 09:32:41.476"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.483" endtime="20241128 09:32:41.483"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.484" endtime="20241128 09:32:41.484"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.476" endtime="20241128 09:32:41.484"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.277" endtime="20241128 09:32:41.484"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.484" endtime="20241128 09:32:41.485"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:41.485" endtime="20241128 09:32:41.485"/>
</return>
<msg timestamp="20241128 09:32:41.485" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:41.276" endtime="20241128 09:32:41.485"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.487" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:15</msg>
<status status="PASS" starttime="20241128 09:32:41.487" endtime="20241128 09:32:41.487"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.488" endtime="20241128 09:32:41.488"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.489" endtime="20241128 09:32:41.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.489" endtime="20241128 09:32:41.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.489" endtime="20241128 09:32:41.489"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.490" endtime="20241128 09:32:41.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.490" endtime="20241128 09:32:41.490"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.490" endtime="20241128 09:32:41.490"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.491" endtime="20241128 09:32:41.491"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.492" endtime="20241128 09:32:41.492"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.494" endtime="20241128 09:32:41.494"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.495" endtime="20241128 09:32:41.495"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.495" endtime="20241128 09:32:41.495"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.494" endtime="20241128 09:32:41.495"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.495" endtime="20241128 09:32:41.495"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.496" endtime="20241128 09:32:41.496"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.495" endtime="20241128 09:32:41.496"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.495" endtime="20241128 09:32:41.496"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.496" endtime="20241128 09:32:41.496"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.496" endtime="20241128 09:32:41.496"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.496" endtime="20241128 09:32:41.497"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.496" endtime="20241128 09:32:41.497"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.494" endtime="20241128 09:32:41.497"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.494" endtime="20241128 09:32:41.497"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.497" endtime="20241128 09:32:41.497"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.497" endtime="20241128 09:32:41.498"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.497" endtime="20241128 09:32:41.498"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.498" endtime="20241128 09:32:41.498"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.498" endtime="20241128 09:32:41.498"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.498" endtime="20241128 09:32:41.498"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.499" endtime="20241128 09:32:41.499"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.499" endtime="20241128 09:32:41.499"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.499" endtime="20241128 09:32:41.499"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.499" endtime="20241128 09:32:41.499"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.497" endtime="20241128 09:32:41.499"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.497" endtime="20241128 09:32:41.500"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.488" endtime="20241128 09:32:41.500"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:41.488" endtime="20241128 09:32:41.500"/>
</for>
<msg timestamp="20241128 09:32:41.500" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:41.486" endtime="20241128 09:32:41.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.500" endtime="20241128 09:32:41.501"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:41.508" endtime="20241128 09:32:41.509"/>
</kw>
<msg timestamp="20241128 09:32:41.509" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.508" endtime="20241128 09:32:41.509"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.510" level="INFO">${values} = {'id': '14', 'name': 'Close add vehicle', 'xpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T11:20:43.962Z', 'updatedAt': '2024-11-25T11:20:...</msg>
<status status="PASS" starttime="20241128 09:32:41.509" endtime="20241128 09:32:41.510"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.511" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.511" endtime="20241128 09:32:41.511"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.510" endtime="20241128 09:32:41.511"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.511" endtime="20241128 09:32:41.511"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.511" endtime="20241128 09:32:41.512"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.510" endtime="20241128 09:32:41.512"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.509" endtime="20241128 09:32:41.512"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.509" endtime="20241128 09:32:41.512"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:41.512" endtime="20241128 09:32:41.512"/>
</return>
<msg timestamp="20241128 09:32:41.512" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.507" endtime="20241128 09:32:41.512"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.514" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]//preceding-sibling::img</msg>
<status status="PASS" starttime="20241128 09:32:41.513" endtime="20241128 09:32:41.514"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.513" endtime="20241128 09:32:41.514"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.514" endtime="20241128 09:32:41.514"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.514" endtime="20241128 09:32:41.514"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.513" endtime="20241128 09:32:41.515"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:41.516" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '470', 'status': 'COMPLETED', 'actionName': 'Close add vehicle popup', 'actionType': 'CLICK', 'actionXpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img...</msg>
<status status="PASS" starttime="20241128 09:32:41.515" endtime="20241128 09:32:41.516"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:41.518" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "470", "status": "COMPLETED", "actionName": "Close add vehicle popup", "actionType": "CLICK", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]//preceding-sibling::i...</msg>
<status status="PASS" starttime="20241128 09:32:41.517" endtime="20241128 09:32:41.518"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:41.525" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:41.526" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:41.518" endtime="20241128 09:32:41.526"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.526" endtime="20241128 09:32:41.527"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:41.527" endtime="20241128 09:32:41.527"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.516" endtime="20241128 09:32:41.528"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.501" endtime="20241128 09:32:41.528"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:41.529" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:41.528" endtime="20241128 09:32:41.529"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.268" endtime="20241128 09:32:41.529"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.529" endtime="20241128 09:32:41.529"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.530" endtime="20241128 09:32:41.530"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.530" endtime="20241128 09:32:41.530"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.529" endtime="20241128 09:32:41.530"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.268" endtime="20241128 09:32:41.530"/>
</try>
<status status="PASS" starttime="20241128 09:32:41.268" endtime="20241128 09:32:41.531"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '16', 'actionId': '16', 'flowId': '4', 'order': 6, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.873Z', 'action': {'id': '16', 'name': 'Get vehicle info', 'type': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.532" level="INFO">${action} = {'id': '16', 'name': 'Get vehicle info', 'type': 'GET_TEXT', 'selectorI': '15', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:23:13.728Z', 'updatedAt': '2024-11-25T11:2...</msg>
<status status="PASS" starttime="20241128 09:32:41.531" endtime="20241128 09:32:41.532"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.533" endtime="20241128 09:32:41.533"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241128 09:32:41.534" level="INFO">${input} = {'id': '17', 'actionId': '16', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:23:13.975Z', 'updatedAt': '2024-11-25T11:23:13.975Z'}</msg>
<status status="PASS" starttime="20241128 09:32:41.534" endtime="20241128 09:32:41.534"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.535" endtime="20241128 09:32:41.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.536" endtime="20241128 09:32:41.536"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.535" endtime="20241128 09:32:41.537"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.534" endtime="20241128 09:32:41.537"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.539" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241128 09:32:41.538" endtime="20241128 09:32:41.539"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.540" endtime="20241128 09:32:41.540"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.539" endtime="20241128 09:32:41.540"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.540" endtime="20241128 09:32:41.540"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.540" endtime="20241128 09:32:41.541"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.543" endtime="20241128 09:32:41.544"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.541" endtime="20241128 09:32:41.544"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.547" endtime="20241128 09:32:41.547"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.549" endtime="20241128 09:32:41.549"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.544" endtime="20241128 09:32:41.550"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.551" endtime="20241128 09:32:41.551"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.550" endtime="20241128 09:32:41.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.557" endtime="20241128 09:32:41.558"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.552" endtime="20241128 09:32:41.558"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.561" endtime="20241128 09:32:41.561"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.562" endtime="20241128 09:32:41.562"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.561" endtime="20241128 09:32:41.562"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.561" endtime="20241128 09:32:41.562"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.558" endtime="20241128 09:32:41.562"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.564" endtime="20241128 09:32:41.564"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.562" endtime="20241128 09:32:41.564"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.566" endtime="20241128 09:32:41.566"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.566" endtime="20241128 09:32:41.566"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.566" endtime="20241128 09:32:41.567"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.567" endtime="20241128 09:32:41.567"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.567" endtime="20241128 09:32:41.567"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.566" endtime="20241128 09:32:41.567"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.564" endtime="20241128 09:32:41.567"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.582" endtime="20241128 09:32:41.582"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.589" endtime="20241128 09:32:41.589"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.568" endtime="20241128 09:32:41.589"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.591" endtime="20241128 09:32:41.591"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.592" endtime="20241128 09:32:41.592"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.592" endtime="20241128 09:32:41.592"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.592" endtime="20241128 09:32:41.592"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.592" endtime="20241128 09:32:41.593"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.591" endtime="20241128 09:32:41.593"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.590" endtime="20241128 09:32:41.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241128 09:32:41.600" endtime="20241128 09:32:41.600"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.605" endtime="20241128 09:32:41.605"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.593" endtime="20241128 09:32:41.605"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.608" endtime="20241128 09:32:41.609"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.609" endtime="20241128 09:32:41.610"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.609" endtime="20241128 09:32:41.610"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.610" endtime="20241128 09:32:41.610"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.610" endtime="20241128 09:32:41.611"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.609" endtime="20241128 09:32:41.611"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.606" endtime="20241128 09:32:41.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241128 09:32:41.632" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]/following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241128 09:32:41.625" endtime="20241128 09:32:41.632"/>
</kw>
<msg timestamp="20241128 09:32:41.633" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.625" endtime="20241128 09:32:41.633"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.633" endtime="20241128 09:32:41.633"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.625" endtime="20241128 09:32:41.633"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.633" endtime="20241128 09:32:41.634"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.634" endtime="20241128 09:32:41.634"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.633" endtime="20241128 09:32:41.634"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.625" endtime="20241128 09:32:41.634"/>
</try>
<msg timestamp="20241128 09:32:41.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.624" endtime="20241128 09:32:41.635"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241128 09:32:41.635" endtime="20241128 09:32:41.635"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.623" endtime="20241128 09:32:41.635"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.635" endtime="20241128 09:32:41.635"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.635" endtime="20241128 09:32:41.636"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.622" endtime="20241128 09:32:41.636"/>
</try>
<msg timestamp="20241128 09:32:41.636" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.622" endtime="20241128 09:32:41.636"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.640" endtime="20241128 09:32:41.640"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.641" endtime="20241128 09:32:41.641"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.640" endtime="20241128 09:32:41.641"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.640" endtime="20241128 09:32:41.641"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.638" endtime="20241128 09:32:41.641"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.621" endtime="20241128 09:32:41.641"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241128 09:32:41.657" level="INFO">Property: 'TN91 T9861 ( Two-wheeler )'</msg>
<msg timestamp="20241128 09:32:41.658" level="INFO">${property} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:32:41.642" endtime="20241128 09:32:41.658"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241128 09:32:41.658" endtime="20241128 09:32:41.658"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.642" endtime="20241128 09:32:41.658"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.659" endtime="20241128 09:32:41.659"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.659" endtime="20241128 09:32:41.659"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.658" endtime="20241128 09:32:41.659"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.641" endtime="20241128 09:32:41.659"/>
</try>
<msg timestamp="20241128 09:32:41.660" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:32:41.616" endtime="20241128 09:32:41.660"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.611" endtime="20241128 09:32:41.660"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.667" endtime="20241128 09:32:41.667"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.667" endtime="20241128 09:32:41.668"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.660" endtime="20241128 09:32:41.668"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.539" endtime="20241128 09:32:41.668"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.668" endtime="20241128 09:32:41.670"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241128 09:32:41.670" endtime="20241128 09:32:41.670"/>
</return>
<msg timestamp="20241128 09:32:41.670" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241128 09:32:41.537" endtime="20241128 09:32:41.670"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.671" level="INFO">${key} = testCaseFlowSequenceId:34::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241128 09:32:41.671" endtime="20241128 09:32:41.672"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.672" endtime="20241128 09:32:41.672"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.672" endtime="20241128 09:32:41.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.673" endtime="20241128 09:32:41.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.673" endtime="20241128 09:32:41.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.673" endtime="20241128 09:32:41.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.674" endtime="20241128 09:32:41.674"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.674" endtime="20241128 09:32:41.674"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.674" endtime="20241128 09:32:41.674"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.676" endtime="20241128 09:32:41.676"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.678"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.678"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.678"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.678"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.679" endtime="20241128 09:32:41.679"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.679" endtime="20241128 09:32:41.679"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.679" endtime="20241128 09:32:41.679"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.679" endtime="20241128 09:32:41.679"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.680" endtime="20241128 09:32:41.680"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.680" endtime="20241128 09:32:41.680"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.680" endtime="20241128 09:32:41.680"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.679" endtime="20241128 09:32:41.680"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.680"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.678" endtime="20241128 09:32:41.680"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.681"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.681"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.681"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.682"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.682"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.682"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.682" endtime="20241128 09:32:41.682"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241128 09:32:41.682" endtime="20241128 09:32:41.682"/>
</return>
<status status="NOT RUN" starttime="20241128 09:32:41.682" endtime="20241128 09:32:41.683"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.682" endtime="20241128 09:32:41.683"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.681" endtime="20241128 09:32:41.683"/>
</branch>
<status status="NOT RUN" starttime="20241128 09:32:41.680" endtime="20241128 09:32:41.683"/>
</if>
<status status="NOT RUN" starttime="20241128 09:32:41.672" endtime="20241128 09:32:41.683"/>
</iter>
<status status="NOT RUN" starttime="20241128 09:32:41.672" endtime="20241128 09:32:41.683"/>
</for>
<msg timestamp="20241128 09:32:41.683" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241128 09:32:41.670" endtime="20241128 09:32:41.683"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.684" endtime="20241128 09:32:41.684"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241128 09:32:41.691" endtime="20241128 09:32:41.691"/>
</kw>
<msg timestamp="20241128 09:32:41.691" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.691" endtime="20241128 09:32:41.692"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.693" level="INFO">${values} = {'id': '15', 'name': 'Get vehicle info', 'xpath': '//p[text()="VEHICLE"]/following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T11:23:12.124Z', 'updatedAt': '2024-11-25T11:23:12.124Z'}</msg>
<status status="PASS" starttime="20241128 09:32:41.692" endtime="20241128 09:32:41.693"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.694" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.693" endtime="20241128 09:32:41.694"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.693" endtime="20241128 09:32:41.694"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.694" endtime="20241128 09:32:41.694"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.694" endtime="20241128 09:32:41.694"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.693" endtime="20241128 09:32:41.694"/>
</if>
<status status="PASS" starttime="20241128 09:32:41.692" endtime="20241128 09:32:41.694"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.692" endtime="20241128 09:32:41.695"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241128 09:32:41.695" endtime="20241128 09:32:41.695"/>
</return>
<msg timestamp="20241128 09:32:41.695" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241128 09:32:41.690" endtime="20241128 09:32:41.695"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241128 09:32:41.696" level="INFO">${xpath} = //p[text()="VEHICLE"]/following-sibling::p</msg>
<status status="PASS" starttime="20241128 09:32:41.696" endtime="20241128 09:32:41.696"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.695" endtime="20241128 09:32:41.696"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.697" endtime="20241128 09:32:41.697"/>
</kw>
<status status="NOT RUN" starttime="20241128 09:32:41.696" endtime="20241128 09:32:41.697"/>
</branch>
<status status="PASS" starttime="20241128 09:32:41.695" endtime="20241128 09:32:41.697"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241128 09:32:41.698" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '471', 'status': 'COMPLETED', 'actionName': 'Get vehicle info', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="VEHICLE"]/following-sibling::p', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241128 09:32:41.697" endtime="20241128 09:32:41.698"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241128 09:32:41.700" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "471", "status": "COMPLETED", "actionName": "Get vehicle info", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"VEHICLE\"]/following-sibling::p", "inputValue": "...</msg>
<status status="PASS" starttime="20241128 09:32:41.699" endtime="20241128 09:32:41.700"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241128 09:32:41.706" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241128 09:32:41.706" level="INFO">${producer_response} = &lt;function delivery_report at 0x0000018AB337C430&gt;</msg>
<status status="PASS" starttime="20241128 09:32:41.700" endtime="20241128 09:32:41.706"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241128 09:32:41.707" endtime="20241128 09:32:41.708"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241128 09:32:41.708" endtime="20241128 09:32:41.708"/>
</return>
<status status="PASS" starttime="20241128 09:32:41.699" endtime="20241128 09:32:41.709"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.685" endtime="20241128 09:32:41.709"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241128 09:32:41.710" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241128 09:32:41.710" endtime="20241128 09:32:41.710"/>
</kw>
<status status="PASS" starttime="20241128 09:32:41.531" endtime="20241128 09:32:41.711"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241128 09:32:41.711" endtime="20241128 09:32:41.711"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241128 09:32:41.711" endtime="20241128 09:32:41.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>