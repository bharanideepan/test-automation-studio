<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241125 21:58:08.834" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:10.594" endtime="20241125 21:58:10.595"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241125 21:58:20.469" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '34', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T16:28:20.145Z', 'createdAt': '2024-11-25T16:28:20.145Z', 'errorMes...</msg>
<status status="PASS" starttime="20241125 21:58:10.595" endtime="20241125 21:58:20.469"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241125 21:58:20.470" endtime="20241125 21:58:20.470"/>
</break>
<status status="NOT RUN" starttime="20241125 21:58:20.470" endtime="20241125 21:58:20.470"/>
</branch>
<status status="PASS" starttime="20241125 21:58:20.470" endtime="20241125 21:58:20.470"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241125 21:58:20.471" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\561ff184-6071-48e8-9961-cf5a21d62960"}</msg>
<msg timestamp="20241125 21:58:21.081" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\561ff184-6071-48e8-9961-cf5a21d62960"}</msg>
<status status="PASS" starttime="20241125 21:58:20.471" endtime="20241125 21:58:21.082"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241125 21:58:21.084" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241125 21:58:21.117" level="INFO">Successfully created context. </msg>
<msg timestamp="20241125 21:58:21.117" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241125 21:58:21.082" endtime="20241125 21:58:21.117"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241125 21:58:21.124" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241125 21:58:21.118" endtime="20241125 21:58:21.124"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241125 21:58:23.813" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241125 21:58:23.813" level="INFO">${page_id} = {'page_id': 'page=83e14389-3c66-4fb8-adea-c725e07bae1d', 'video_path': ''}</msg>
<status status="PASS" starttime="20241125 21:58:21.125" endtime="20241125 21:58:23.813"/>
</kw>
<status status="PASS" starttime="20241125 21:58:20.470" endtime="20241125 21:58:23.813"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:23.814" endtime="20241125 21:58:23.825"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:23.828" endtime="20241125 21:58:23.829"/>
</kw>
<msg timestamp="20241125 21:58:23.830" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.828" endtime="20241125 21:58:23.830"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.836" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241125 21:58:23.835" endtime="20241125 21:58:23.836"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.836" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.836" endtime="20241125 21:58:23.836"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.836" endtime="20241125 21:58:23.837"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.837" endtime="20241125 21:58:23.837"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.837" endtime="20241125 21:58:23.837"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.836" endtime="20241125 21:58:23.837"/>
</if>
<status status="PASS" starttime="20241125 21:58:23.835" endtime="20241125 21:58:23.837"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.830" endtime="20241125 21:58:23.837"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:23.837" endtime="20241125 21:58:23.837"/>
</return>
<msg timestamp="20241125 21:58:23.837" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.826" endtime="20241125 21:58:23.837"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.838" endtime="20241125 21:58:23.838"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241125 21:58:23.838" endtime="20241125 21:58:23.838"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:23.838" endtime="20241125 21:58:23.838"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.837" endtime="20241125 21:58:23.839"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:23.841" endtime="20241125 21:58:23.841"/>
</kw>
<msg timestamp="20241125 21:58:23.841" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.840" endtime="20241125 21:58:23.841"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.841" level="INFO">${values} = {'id': '3', 'name': 'Enter vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:44.260Z', 'updatedAt': '2024-11-25T16:17:04.460Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024...</msg>
<status status="PASS" starttime="20241125 21:58:23.841" endtime="20241125 21:58:23.841"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.842" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.842" endtime="20241125 21:58:23.842"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.842" endtime="20241125 21:58:23.842"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.843" endtime="20241125 21:58:23.843"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.842" endtime="20241125 21:58:23.843"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.841" endtime="20241125 21:58:23.843"/>
</if>
<status status="PASS" starttime="20241125 21:58:23.841" endtime="20241125 21:58:23.843"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.841" endtime="20241125 21:58:23.843"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:23.843" endtime="20241125 21:58:23.843"/>
</return>
<msg timestamp="20241125 21:58:23.843" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.840" endtime="20241125 21:58:23.843"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:23.849" endtime="20241125 21:58:23.849"/>
</kw>
<msg timestamp="20241125 21:58:23.850" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.848" endtime="20241125 21:58:23.850"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.851" level="INFO">${values} = {'id': '34', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T16:28:20.145Z', 'createdAt': '2024-11-25T16:28:20.145Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241125 21:58:23.850" endtime="20241125 21:58:23.851"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.852" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.851" endtime="20241125 21:58:23.852"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.851" endtime="20241125 21:58:23.852"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.852" endtime="20241125 21:58:23.852"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.852" endtime="20241125 21:58:23.852"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.851" endtime="20241125 21:58:23.852"/>
</if>
<status status="PASS" starttime="20241125 21:58:23.850" endtime="20241125 21:58:23.852"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.850" endtime="20241125 21:58:23.852"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:23.852" endtime="20241125 21:58:23.852"/>
</return>
<msg timestamp="20241125 21:58:23.853" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.847" endtime="20241125 21:58:23.853"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.853" endtime="20241125 21:58:23.853"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.853" endtime="20241125 21:58:23.853"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.853" endtime="20241125 21:58:23.853"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.854" level="INFO">${testCase} = {'id': '3', 'name': 'Enter vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:44.260Z', 'updatedAt': '2024-11-25T16:17:04.460Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024...</msg>
<status status="PASS" starttime="20241125 21:58:23.853" endtime="20241125 21:58:23.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.854" level="INFO">${testCaseRun} = {'id': '34', 'testCaseId': '3', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-25T16:28:20.145Z', 'createdAt': '2024-11-25T16:28:20.145Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241125 21:58:23.854" endtime="20241125 21:58:23.854"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.855" level="INFO">${assertions} = [{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customT...</msg>
<status status="PASS" starttime="20241125 21:58:23.855" endtime="20241125 21:58:23.855"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:23.855" endtime="20241125 21:58:23.856"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:23.858" endtime="20241125 21:58:23.858"/>
</kw>
<msg timestamp="20241125 21:58:23.858" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.858" endtime="20241125 21:58:23.858"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.859" level="INFO">${values} = [{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T16:17:04.519Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241125 21:58:23.859" endtime="20241125 21:58:23.859"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.860" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.859" endtime="20241125 21:58:23.860"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.859" endtime="20241125 21:58:23.860"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.860" endtime="20241125 21:58:23.860"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.860" endtime="20241125 21:58:23.860"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.859" endtime="20241125 21:58:23.860"/>
</if>
<status status="PASS" starttime="20241125 21:58:23.858" endtime="20241125 21:58:23.860"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.858" endtime="20241125 21:58:23.860"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:23.860" endtime="20241125 21:58:23.860"/>
</return>
<msg timestamp="20241125 21:58:23.860" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.857" endtime="20241125 21:58:23.861"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:23.864" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '34', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241125 21:58:23.861" endtime="20241125 21:58:23.864"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:23.865" level="INFO">${json_response} = {"testCaseRunId": "34", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241125 21:58:23.864" endtime="20241125 21:58:23.865"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:23.909" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:23.910" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:23.865" endtime="20241125 21:58:23.910"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:23.910" endtime="20241125 21:58:23.911"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:23.911" endtime="20241125 21:58:23.911"/>
</return>
<status status="PASS" starttime="20241125 21:58:23.864" endtime="20241125 21:58:23.912"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:23.913" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241125 21:58:23.912" endtime="20241125 21:58:23.913"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T16:17:04.519Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.914" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241125 21:58:23.913" endtime="20241125 21:58:23.914"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:23.914" endtime="20241125 21:58:23.914"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:23.917" endtime="20241125 21:58:23.917"/>
</kw>
<msg timestamp="20241125 21:58:23.917" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.917" endtime="20241125 21:58:23.917"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.918" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241125 21:58:23.918" endtime="20241125 21:58:23.918"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.919" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.919" endtime="20241125 21:58:23.919"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.918" endtime="20241125 21:58:23.919"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.919" endtime="20241125 21:58:23.919"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.919" endtime="20241125 21:58:23.919"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.918" endtime="20241125 21:58:23.919"/>
</if>
<status status="PASS" starttime="20241125 21:58:23.918" endtime="20241125 21:58:23.919"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.917" endtime="20241125 21:58:23.919"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:23.919" endtime="20241125 21:58:23.920"/>
</return>
<msg timestamp="20241125 21:58:23.920" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:23.916" endtime="20241125 21:58:23.920"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.921" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241125 21:58:23.921" endtime="20241125 21:58:23.921"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:23.921" endtime="20241125 21:58:23.922"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:23.922" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241125 21:58:23.922" endtime="20241125 21:58:23.922"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.923" endtime="20241125 21:58:23.923"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:23.923" endtime="20241125 21:58:23.923"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:23.922" endtime="20241125 21:58:23.923"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.922" endtime="20241125 21:58:23.923"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:23.924" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241125 21:58:23.924" endtime="20241125 21:58:23.924"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241125 21:58:28.423" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241125 21:58:28.424" level="INFO">${page_id} = {'page_id': 'page=acef4525-24bf-41a5-bbae-d336c832867c', 'video_path': ''}</msg>
<status status="PASS" starttime="20241125 21:58:23.925" endtime="20241125 21:58:28.424"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241125 21:58:28.425" level="INFO">Switching to page {'page_id': 'page=acef4525-24bf-41a5-bbae-d336c832867c', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241125 21:58:28.484" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=987b535e-bd60-4446-b7bc-befdd8e28703",
    "contexts": [
      {
        "type": "context",
        "id": "context=ba4e21f8-9b56-4abf-b3f1-3bbe72a4cc27",
        "activePage": "page=acef4525-24bf-41a5-bbae-d336c832867c",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=83e14389-3c66-4fb8-adea-c725e07bae1d",
            "timestamp": 1732552101.378
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=acef4525-24bf-41a5-bbae-d336c832867c",
            "timestamp": 1732552103.971
          }
        ]
      }
    ],
    "activeContext": "context=ba4e21f8-9b56-4abf-b3f1-3bbe72a4cc27",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241125 21:58:28.490" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241125 21:58:28.424" endtime="20241125 21:58:28.490"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.924" endtime="20241125 21:58:28.490"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.924" endtime="20241125 21:58:28.490"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.491" endtime="20241125 21:58:28.491"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.490" endtime="20241125 21:58:28.491"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.493" endtime="20241125 21:58:28.493"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.491" endtime="20241125 21:58:28.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.495" endtime="20241125 21:58:28.495"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.497" endtime="20241125 21:58:28.497"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.493" endtime="20241125 21:58:28.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.498" endtime="20241125 21:58:28.498"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.497" endtime="20241125 21:58:28.498"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.500" endtime="20241125 21:58:28.501"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.498" endtime="20241125 21:58:28.501"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.504" endtime="20241125 21:58:28.504"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.505" endtime="20241125 21:58:28.505"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.504" endtime="20241125 21:58:28.505"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.504" endtime="20241125 21:58:28.505"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.501" endtime="20241125 21:58:28.505"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.507" endtime="20241125 21:58:28.507"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.505" endtime="20241125 21:58:28.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.510" endtime="20241125 21:58:28.510"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.511" endtime="20241125 21:58:28.511"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.510" endtime="20241125 21:58:28.511"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.511" endtime="20241125 21:58:28.511"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.511" endtime="20241125 21:58:28.511"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.510" endtime="20241125 21:58:28.511"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.508" endtime="20241125 21:58:28.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:28.518" endtime="20241125 21:58:28.519"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.522" endtime="20241125 21:58:28.522"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.512" endtime="20241125 21:58:28.522"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.523" endtime="20241125 21:58:28.524"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.524" endtime="20241125 21:58:28.525"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.524" endtime="20241125 21:58:28.525"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.525" endtime="20241125 21:58:28.525"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.525" endtime="20241125 21:58:28.526"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.524" endtime="20241125 21:58:28.526"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.522" endtime="20241125 21:58:28.526"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:28.534" endtime="20241125 21:58:28.534"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.536" endtime="20241125 21:58:28.536"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.526" endtime="20241125 21:58:28.537"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.538"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.538"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.538"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.538"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.539"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.538" endtime="20241125 21:58:28.539"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.537" endtime="20241125 21:58:28.539"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.542" endtime="20241125 21:58:28.542"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.539" endtime="20241125 21:58:28.542"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.551" endtime="20241125 21:58:28.551"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.551" endtime="20241125 21:58:28.551"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.542" endtime="20241125 21:58:28.551"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.924" endtime="20241125 21:58:28.551"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.552" endtime="20241125 21:58:28.552"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:28.553" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:28.552" endtime="20241125 21:58:28.553"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:28.553" endtime="20241125 21:58:28.553"/>
</return>
<msg timestamp="20241125 21:58:28.553" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241125 21:58:23.923" endtime="20241125 21:58:28.553"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.554" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241125 21:58:28.554" endtime="20241125 21:58:28.554"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.555" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:28.555" endtime="20241125 21:58:28.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.555" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:28.555" endtime="20241125 21:58:28.555"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.556" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.555" endtime="20241125 21:58:28.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.556" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:28.556" endtime="20241125 21:58:28.556"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.557" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.556" endtime="20241125 21:58:28.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.557" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:28.557" endtime="20241125 21:58:28.557"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.558" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:28.558" endtime="20241125 21:58:28.558"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:28.558" endtime="20241125 21:58:28.559"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:28.562" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:28.561" endtime="20241125 21:58:28.562"/>
</kw>
<msg timestamp="20241125 21:58:28.562" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.560" endtime="20241125 21:58:28.562"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.563" endtime="20241125 21:58:28.563"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.563" endtime="20241125 21:58:28.564"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.563" endtime="20241125 21:58:28.564"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.564" endtime="20241125 21:58:28.564"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.564" endtime="20241125 21:58:28.564"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.563" endtime="20241125 21:58:28.564"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.563" endtime="20241125 21:58:28.564"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.562" endtime="20241125 21:58:28.564"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.564" endtime="20241125 21:58:28.564"/>
</return>
<msg timestamp="20241125 21:58:28.565" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.560" endtime="20241125 21:58:28.565"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:28.567" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:28.567" endtime="20241125 21:58:28.567"/>
</kw>
<msg timestamp="20241125 21:58:28.568" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.566" endtime="20241125 21:58:28.568"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.568" endtime="20241125 21:58:28.568"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.569" endtime="20241125 21:58:28.569"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.568" endtime="20241125 21:58:28.570"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.570" endtime="20241125 21:58:28.570"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.570" endtime="20241125 21:58:28.570"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.568" endtime="20241125 21:58:28.570"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.568" endtime="20241125 21:58:28.570"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.568" endtime="20241125 21:58:28.570"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.570" endtime="20241125 21:58:28.570"/>
</return>
<msg timestamp="20241125 21:58:28.571" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.566" endtime="20241125 21:58:28.571"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:28.571" endtime="20241125 21:58:28.572"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.571" endtime="20241125 21:58:28.572"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.571" endtime="20241125 21:58:28.572"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.572" endtime="20241125 21:58:28.572"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.572" endtime="20241125 21:58:28.573"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.572" endtime="20241125 21:58:28.573"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.572" endtime="20241125 21:58:28.573"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.573" endtime="20241125 21:58:28.574"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.574" endtime="20241125 21:58:28.574"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.573" endtime="20241125 21:58:28.574"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.573" endtime="20241125 21:58:28.574"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.571" endtime="20241125 21:58:28.574"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.571" endtime="20241125 21:58:28.574"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.575"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.575"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.575"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.575"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.575"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.576"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.576" endtime="20241125 21:58:28.576"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.576" endtime="20241125 21:58:28.576"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.576" endtime="20241125 21:58:28.576"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.576" endtime="20241125 21:58:28.576"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.575" endtime="20241125 21:58:28.576"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.574" endtime="20241125 21:58:28.576"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.554" endtime="20241125 21:58:28.576"/>
</iter>
<status status="PASS" starttime="20241125 21:58:28.554" endtime="20241125 21:58:28.576"/>
</for>
<msg timestamp="20241125 21:58:28.576" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:28.553" endtime="20241125 21:58:28.576"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.577" endtime="20241125 21:58:28.577"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:28.581" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241125 21:58:28.581" endtime="20241125 21:58:28.581"/>
</kw>
<msg timestamp="20241125 21:58:28.581" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.580" endtime="20241125 21:58:28.581"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.583" endtime="20241125 21:58:28.583"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.583" endtime="20241125 21:58:28.583"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.583" endtime="20241125 21:58:28.583"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.584" endtime="20241125 21:58:28.584"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.583" endtime="20241125 21:58:28.584"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.583" endtime="20241125 21:58:28.584"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.582" endtime="20241125 21:58:28.584"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.581" endtime="20241125 21:58:28.584"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.584" endtime="20241125 21:58:28.584"/>
</return>
<msg timestamp="20241125 21:58:28.584" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.580" endtime="20241125 21:58:28.584"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.585" endtime="20241125 21:58:28.585"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.585" endtime="20241125 21:58:28.585"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.586" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241125 21:58:28.585" endtime="20241125 21:58:28.586"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.585" endtime="20241125 21:58:28.586"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.584" endtime="20241125 21:58:28.586"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:28.587" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '370', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241125 21:58:28.586" endtime="20241125 21:58:28.587"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:28.588" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "370", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241125 21:58:28.587" endtime="20241125 21:58:28.588"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:28.593" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:28.593" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:28.588" endtime="20241125 21:58:28.593"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.593" endtime="20241125 21:58:28.594"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:28.594" endtime="20241125 21:58:28.594"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.587" endtime="20241125 21:58:28.594"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.577" endtime="20241125 21:58:28.594"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.921" endtime="20241125 21:58:28.594"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.595" endtime="20241125 21:58:28.595"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.595" endtime="20241125 21:58:28.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.595" endtime="20241125 21:58:28.595"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.594" endtime="20241125 21:58:28.595"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.920" endtime="20241125 21:58:28.595"/>
</try>
<status status="PASS" starttime="20241125 21:58:23.920" endtime="20241125 21:58:28.595"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.596" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241125 21:58:28.596" endtime="20241125 21:58:28.596"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.597" endtime="20241125 21:58:28.597"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:28.597" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241125 21:58:28.597" endtime="20241125 21:58:28.598"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.598" endtime="20241125 21:58:28.598"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.599" endtime="20241125 21:58:28.599"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.598" endtime="20241125 21:58:28.599"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.598" endtime="20241125 21:58:28.599"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.600" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241125 21:58:28.600" endtime="20241125 21:58:28.600"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.600" endtime="20241125 21:58:28.600"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.600" endtime="20241125 21:58:28.600"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.601" endtime="20241125 21:58:28.601"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.601" endtime="20241125 21:58:28.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.603" endtime="20241125 21:58:28.603"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.601" endtime="20241125 21:58:28.603"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.604" endtime="20241125 21:58:28.604"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.606" endtime="20241125 21:58:28.606"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.603" endtime="20241125 21:58:28.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.608" endtime="20241125 21:58:28.608"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.607" endtime="20241125 21:58:28.608"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.611" endtime="20241125 21:58:28.611"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.608" endtime="20241125 21:58:28.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.645" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:28.619" endtime="20241125 21:58:28.645"/>
</kw>
<msg timestamp="20241125 21:58:28.645" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.619" endtime="20241125 21:58:28.645"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.645" endtime="20241125 21:58:28.645"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.619" endtime="20241125 21:58:28.645"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.645" endtime="20241125 21:58:28.646"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.646" endtime="20241125 21:58:28.646"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.645" endtime="20241125 21:58:28.646"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.619" endtime="20241125 21:58:28.646"/>
</try>
<msg timestamp="20241125 21:58:28.646" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.618" endtime="20241125 21:58:28.646"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.646" endtime="20241125 21:58:28.646"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.618" endtime="20241125 21:58:28.646"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.647" endtime="20241125 21:58:28.647"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.646" endtime="20241125 21:58:28.647"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.618" endtime="20241125 21:58:28.647"/>
</try>
<msg timestamp="20241125 21:58:28.647" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.617" endtime="20241125 21:58:28.647"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.649" endtime="20241125 21:58:28.649"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.649" endtime="20241125 21:58:28.649"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.649" endtime="20241125 21:58:28.650"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.649" endtime="20241125 21:58:28.650"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.648" endtime="20241125 21:58:28.650"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.617" endtime="20241125 21:58:28.650"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.664" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:28.658" endtime="20241125 21:58:28.664"/>
</kw>
<msg timestamp="20241125 21:58:28.664" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.658" endtime="20241125 21:58:28.664"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.664" endtime="20241125 21:58:28.664"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.658" endtime="20241125 21:58:28.665"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.665" endtime="20241125 21:58:28.665"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.665" endtime="20241125 21:58:28.665"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.665" endtime="20241125 21:58:28.665"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.658" endtime="20241125 21:58:28.665"/>
</try>
<msg timestamp="20241125 21:58:28.666" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.657" endtime="20241125 21:58:28.666"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.666" endtime="20241125 21:58:28.666"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.656" endtime="20241125 21:58:28.666"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.666" endtime="20241125 21:58:28.666"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.666" endtime="20241125 21:58:28.666"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.656" endtime="20241125 21:58:28.666"/>
</try>
<msg timestamp="20241125 21:58:28.666" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.655" endtime="20241125 21:58:28.666"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.668" endtime="20241125 21:58:28.668"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.668" endtime="20241125 21:58:28.669"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.668" endtime="20241125 21:58:28.669"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.668" endtime="20241125 21:58:28.669"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.667" endtime="20241125 21:58:28.669"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.655" endtime="20241125 21:58:28.669"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 21:58:28.687" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 21:58:28.687" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:28.669" endtime="20241125 21:58:28.687"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 21:58:28.687" endtime="20241125 21:58:28.688"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.669" endtime="20241125 21:58:28.688"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.688" endtime="20241125 21:58:28.688"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.688" endtime="20241125 21:58:28.688"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.688" endtime="20241125 21:58:28.688"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.669" endtime="20241125 21:58:28.688"/>
</try>
<msg timestamp="20241125 21:58:28.689" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:28.653" endtime="20241125 21:58:28.689"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.691" endtime="20241125 21:58:28.691"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.691" endtime="20241125 21:58:28.691"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.691" endtime="20241125 21:58:28.691"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.691" endtime="20241125 21:58:28.692"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.690" endtime="20241125 21:58:28.692"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.652" endtime="20241125 21:58:28.692"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.692" endtime="20241125 21:58:28.692"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.692" endtime="20241125 21:58:28.692"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.652" endtime="20241125 21:58:28.692"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.652" endtime="20241125 21:58:28.692"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.701" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241125 21:58:28.696" endtime="20241125 21:58:28.701"/>
</kw>
<msg timestamp="20241125 21:58:28.701" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.696" endtime="20241125 21:58:28.701"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.702" endtime="20241125 21:58:28.702"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.696" endtime="20241125 21:58:28.702"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.702" endtime="20241125 21:58:28.702"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.702" endtime="20241125 21:58:28.702"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.702" endtime="20241125 21:58:28.702"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.696" endtime="20241125 21:58:28.702"/>
</try>
<msg timestamp="20241125 21:58:28.703" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.695" endtime="20241125 21:58:28.703"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.703" endtime="20241125 21:58:28.703"/>
</return>
<msg timestamp="20241125 21:58:28.703" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.694" endtime="20241125 21:58:28.703"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.706" endtime="20241125 21:58:28.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.707" endtime="20241125 21:58:28.707"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.706" endtime="20241125 21:58:28.707"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.705" endtime="20241125 21:58:28.707"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.704" endtime="20241125 21:58:28.707"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.694" endtime="20241125 21:58:28.707"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.614" endtime="20241125 21:58:28.708"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.771" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241125 21:58:28.713" endtime="20241125 21:58:28.772"/>
</kw>
<msg timestamp="20241125 21:58:28.772" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.712" endtime="20241125 21:58:28.772"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.772" endtime="20241125 21:58:28.772"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.712" endtime="20241125 21:58:28.773"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.773" endtime="20241125 21:58:28.774"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.774" endtime="20241125 21:58:28.774"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.773" endtime="20241125 21:58:28.774"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.712" endtime="20241125 21:58:28.775"/>
</try>
<msg timestamp="20241125 21:58:28.775" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.712" endtime="20241125 21:58:28.775"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.775" endtime="20241125 21:58:28.775"/>
</return>
<msg timestamp="20241125 21:58:28.776" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.710" endtime="20241125 21:58:28.776"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.780" endtime="20241125 21:58:28.780"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.781" endtime="20241125 21:58:28.781"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.780" endtime="20241125 21:58:28.781"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.779" endtime="20241125 21:58:28.781"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.778" endtime="20241125 21:58:28.783"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.710" endtime="20241125 21:58:28.783"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:28.787" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:28.785" endtime="20241125 21:58:28.787"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.789" endtime="20241125 21:58:28.789"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.791" endtime="20241125 21:58:28.791"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.789" endtime="20241125 21:58:28.791"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:28.792" endtime="20241125 21:58:28.792"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.791" endtime="20241125 21:58:28.792"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.788" endtime="20241125 21:58:28.792"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 21:58:28.793" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241125 21:58:28.792" endtime="20241125 21:58:28.818"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.792" endtime="20241125 21:58:28.818"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.819" endtime="20241125 21:58:28.819"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.819" endtime="20241125 21:58:28.819"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.818" endtime="20241125 21:58:28.819"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.792" endtime="20241125 21:58:28.819"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.788" endtime="20241125 21:58:28.819"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.787" endtime="20241125 21:58:28.820"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.787" endtime="20241125 21:58:28.820"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.820" endtime="20241125 21:58:28.820"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.820" endtime="20241125 21:58:28.820"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.787" endtime="20241125 21:58:28.820"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.613" endtime="20241125 21:58:28.820"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.821" endtime="20241125 21:58:28.821"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.821" endtime="20241125 21:58:28.821"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.820" endtime="20241125 21:58:28.821"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.611" endtime="20241125 21:58:28.821"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.823" endtime="20241125 21:58:28.823"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.821" endtime="20241125 21:58:28.823"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.824" endtime="20241125 21:58:28.824"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.825" endtime="20241125 21:58:28.825"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.824" endtime="20241125 21:58:28.825"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.825" endtime="20241125 21:58:28.825"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.825" endtime="20241125 21:58:28.825"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.824" endtime="20241125 21:58:28.825"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.823" endtime="20241125 21:58:28.825"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:28.830" endtime="20241125 21:58:28.830"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.832" endtime="20241125 21:58:28.832"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.825" endtime="20241125 21:58:28.832"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.834" endtime="20241125 21:58:28.834"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.833" endtime="20241125 21:58:28.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:28.839" endtime="20241125 21:58:28.839"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.842" endtime="20241125 21:58:28.843"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.835" endtime="20241125 21:58:28.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.844" endtime="20241125 21:58:28.844"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.844" endtime="20241125 21:58:28.844"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.844" endtime="20241125 21:58:28.844"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.845" endtime="20241125 21:58:28.845"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.844" endtime="20241125 21:58:28.845"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.844" endtime="20241125 21:58:28.845"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.843" endtime="20241125 21:58:28.845"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.847" endtime="20241125 21:58:28.847"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.845" endtime="20241125 21:58:28.847"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.852" endtime="20241125 21:58:28.852"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.853" endtime="20241125 21:58:28.853"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.847" endtime="20241125 21:58:28.853"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.600" endtime="20241125 21:58:28.853"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.853" endtime="20241125 21:58:28.853"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:28.854" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:28.854" endtime="20241125 21:58:28.854"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:28.854" endtime="20241125 21:58:28.854"/>
</return>
<msg timestamp="20241125 21:58:28.855" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241125 21:58:28.599" endtime="20241125 21:58:28.855"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.856" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241125 21:58:28.855" endtime="20241125 21:58:28.856"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.857" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:28.857" endtime="20241125 21:58:28.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.858" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:28.857" endtime="20241125 21:58:28.858"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.858" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.858" endtime="20241125 21:58:28.858"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.858" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:28.858" endtime="20241125 21:58:28.858"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.859" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.858" endtime="20241125 21:58:28.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.859" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:28.859" endtime="20241125 21:58:28.859"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.860" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:28.859" endtime="20241125 21:58:28.860"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:28.860" endtime="20241125 21:58:28.860"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:28.863" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:28.862" endtime="20241125 21:58:28.863"/>
</kw>
<msg timestamp="20241125 21:58:28.863" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.862" endtime="20241125 21:58:28.863"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.864" endtime="20241125 21:58:28.864"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.863" endtime="20241125 21:58:28.865"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.863" endtime="20241125 21:58:28.865"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.865" endtime="20241125 21:58:28.865"/>
</return>
<msg timestamp="20241125 21:58:28.865" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.861" endtime="20241125 21:58:28.865"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:28.867" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:28.867" endtime="20241125 21:58:28.867"/>
</kw>
<msg timestamp="20241125 21:58:28.867" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.866" endtime="20241125 21:58:28.867"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.868"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.868"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.868"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.869" endtime="20241125 21:58:28.869"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.869"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.869"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.869"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.868" endtime="20241125 21:58:28.869"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.869" endtime="20241125 21:58:28.869"/>
</return>
<msg timestamp="20241125 21:58:28.869" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:28.866" endtime="20241125 21:58:28.869"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.870"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.871"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.871"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.871"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.870" endtime="20241125 21:58:28.871"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.869" endtime="20241125 21:58:28.871"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.869" endtime="20241125 21:58:28.871"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.872"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.872"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.872"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.872"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.872"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.872"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.873"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.873" endtime="20241125 21:58:28.873"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.873"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:28.872" endtime="20241125 21:58:28.873"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.873"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.871" endtime="20241125 21:58:28.873"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.857" endtime="20241125 21:58:28.873"/>
</iter>
<status status="PASS" starttime="20241125 21:58:28.856" endtime="20241125 21:58:28.873"/>
</for>
<msg timestamp="20241125 21:58:28.873" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:28.855" endtime="20241125 21:58:28.873"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.874" endtime="20241125 21:58:28.874"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:28.878" endtime="20241125 21:58:28.878"/>
</kw>
<msg timestamp="20241125 21:58:28.878" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.878" endtime="20241125 21:58:28.878"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.879" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241125 21:58:28.879" endtime="20241125 21:58:28.879"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.879" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.879" endtime="20241125 21:58:28.879"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.879" endtime="20241125 21:58:28.880"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.880" endtime="20241125 21:58:28.880"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.880" endtime="20241125 21:58:28.880"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.879" endtime="20241125 21:58:28.880"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.879" endtime="20241125 21:58:28.880"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.878" endtime="20241125 21:58:28.880"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:28.880" endtime="20241125 21:58:28.880"/>
</return>
<msg timestamp="20241125 21:58:28.880" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.877" endtime="20241125 21:58:28.880"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.881" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241125 21:58:28.881" endtime="20241125 21:58:28.881"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.880" endtime="20241125 21:58:28.881"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.881" endtime="20241125 21:58:28.881"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.881" endtime="20241125 21:58:28.881"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.880" endtime="20241125 21:58:28.881"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:28.882" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '371', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241125 21:58:28.881" endtime="20241125 21:58:28.882"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:28.883" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "371", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241125 21:58:28.883" endtime="20241125 21:58:28.883"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:28.910" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:28.910" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:28.883" endtime="20241125 21:58:28.910"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.910" endtime="20241125 21:58:28.911"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:28.912" endtime="20241125 21:58:28.912"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.882" endtime="20241125 21:58:28.912"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.875" endtime="20241125 21:58:28.913"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.596" endtime="20241125 21:58:28.913"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.914" endtime="20241125 21:58:28.914"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.914" endtime="20241125 21:58:28.914"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.915" endtime="20241125 21:58:28.915"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.913" endtime="20241125 21:58:28.915"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.596" endtime="20241125 21:58:28.915"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.596" endtime="20241125 21:58:28.915"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.917" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241125 21:58:28.916" endtime="20241125 21:58:28.917"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:28.917" endtime="20241125 21:58:28.918"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:28.919" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241125 21:58:28.919" endtime="20241125 21:58:28.919"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.920" endtime="20241125 21:58:28.921"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.921" endtime="20241125 21:58:28.921"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.920" endtime="20241125 21:58:28.921"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.920" endtime="20241125 21:58:28.921"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:28.924" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241125 21:58:28.924" endtime="20241125 21:58:28.924"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.926" endtime="20241125 21:58:28.926"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.926" endtime="20241125 21:58:28.927"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:28.927" endtime="20241125 21:58:28.928"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.927" endtime="20241125 21:58:28.928"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.931" endtime="20241125 21:58:28.931"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.928" endtime="20241125 21:58:28.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.935" endtime="20241125 21:58:28.935"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.938" endtime="20241125 21:58:28.938"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.932" endtime="20241125 21:58:28.938"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.940" endtime="20241125 21:58:28.941"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.938" endtime="20241125 21:58:28.941"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.944" endtime="20241125 21:58:28.944"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.941" endtime="20241125 21:58:28.944"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.959" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:28.952" endtime="20241125 21:58:28.959"/>
</kw>
<msg timestamp="20241125 21:58:28.960" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.952" endtime="20241125 21:58:28.960"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.960" endtime="20241125 21:58:28.960"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.951" endtime="20241125 21:58:28.960"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.960" endtime="20241125 21:58:28.960"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.960" endtime="20241125 21:58:28.960"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.960" endtime="20241125 21:58:28.961"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.951" endtime="20241125 21:58:28.961"/>
</try>
<msg timestamp="20241125 21:58:28.961" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.951" endtime="20241125 21:58:28.961"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.961" endtime="20241125 21:58:28.961"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.950" endtime="20241125 21:58:28.961"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.961" endtime="20241125 21:58:28.961"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.961" endtime="20241125 21:58:28.961"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.950" endtime="20241125 21:58:28.961"/>
</try>
<msg timestamp="20241125 21:58:28.961" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.950" endtime="20241125 21:58:28.962"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.963" endtime="20241125 21:58:28.964"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.964" endtime="20241125 21:58:28.964"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.963" endtime="20241125 21:58:28.964"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.963" endtime="20241125 21:58:28.964"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.962" endtime="20241125 21:58:28.964"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.949" endtime="20241125 21:58:28.964"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:28.977" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:28.971" endtime="20241125 21:58:28.977"/>
</kw>
<msg timestamp="20241125 21:58:28.977" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.970" endtime="20241125 21:58:28.977"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.978" endtime="20241125 21:58:28.978"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.970" endtime="20241125 21:58:28.978"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.978" endtime="20241125 21:58:28.978"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.978" endtime="20241125 21:58:28.978"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.978" endtime="20241125 21:58:28.978"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.970" endtime="20241125 21:58:28.978"/>
</try>
<msg timestamp="20241125 21:58:28.979" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.970" endtime="20241125 21:58:28.979"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:28.979" endtime="20241125 21:58:28.979"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.969" endtime="20241125 21:58:28.979"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:28.979" endtime="20241125 21:58:28.979"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:28.979" endtime="20241125 21:58:28.979"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.969" endtime="20241125 21:58:28.979"/>
</try>
<msg timestamp="20241125 21:58:28.979" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:28.969" endtime="20241125 21:58:28.979"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.981" endtime="20241125 21:58:28.981"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.981" endtime="20241125 21:58:28.982"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.981" endtime="20241125 21:58:28.982"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.981" endtime="20241125 21:58:28.982"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.980" endtime="20241125 21:58:28.982"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.968" endtime="20241125 21:58:28.982"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 21:58:28.994" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 21:58:28.994" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:28.982" endtime="20241125 21:58:28.994"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 21:58:28.994" endtime="20241125 21:58:28.994"/>
</return>
<status status="PASS" starttime="20241125 21:58:28.982" endtime="20241125 21:58:28.994"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.995" endtime="20241125 21:58:28.995"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.995" endtime="20241125 21:58:28.995"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.994" endtime="20241125 21:58:28.995"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.982" endtime="20241125 21:58:28.995"/>
</try>
<msg timestamp="20241125 21:58:28.995" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:28.967" endtime="20241125 21:58:28.995"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.999" endtime="20241125 21:58:28.999"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:28.999" endtime="20241125 21:58:28.999"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:28.998" endtime="20241125 21:58:28.999"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.998" endtime="20241125 21:58:28.999"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.997" endtime="20241125 21:58:29.000"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.966" endtime="20241125 21:58:29.000"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.001" endtime="20241125 21:58:29.001"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.000" endtime="20241125 21:58:29.001"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.966" endtime="20241125 21:58:29.001"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.965" endtime="20241125 21:58:29.002"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:29.015" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241125 21:58:29.008" endtime="20241125 21:58:29.015"/>
</kw>
<msg timestamp="20241125 21:58:29.016" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.007" endtime="20241125 21:58:29.016"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.016" endtime="20241125 21:58:29.016"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.007" endtime="20241125 21:58:29.016"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.016" endtime="20241125 21:58:29.016"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.017" endtime="20241125 21:58:29.017"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.016" endtime="20241125 21:58:29.017"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.007" endtime="20241125 21:58:29.017"/>
</try>
<msg timestamp="20241125 21:58:29.017" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.007" endtime="20241125 21:58:29.017"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.017" endtime="20241125 21:58:29.017"/>
</return>
<msg timestamp="20241125 21:58:29.017" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.005" endtime="20241125 21:58:29.017"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.019" endtime="20241125 21:58:29.019"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.020" endtime="20241125 21:58:29.020"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.019" endtime="20241125 21:58:29.020"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.019" endtime="20241125 21:58:29.020"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.018" endtime="20241125 21:58:29.020"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.004" endtime="20241125 21:58:29.020"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.947" endtime="20241125 21:58:29.020"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:29.035" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241125 21:58:29.024" endtime="20241125 21:58:29.035"/>
</kw>
<msg timestamp="20241125 21:58:29.036" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.024" endtime="20241125 21:58:29.036"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.036" endtime="20241125 21:58:29.036"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.023" endtime="20241125 21:58:29.036"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.036" endtime="20241125 21:58:29.036"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.036" endtime="20241125 21:58:29.036"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.036" endtime="20241125 21:58:29.036"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.023" endtime="20241125 21:58:29.037"/>
</try>
<msg timestamp="20241125 21:58:29.037" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.023" endtime="20241125 21:58:29.037"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.037" endtime="20241125 21:58:29.037"/>
</return>
<msg timestamp="20241125 21:58:29.037" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.022" endtime="20241125 21:58:29.037"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.040" endtime="20241125 21:58:29.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.040" endtime="20241125 21:58:29.040"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.039" endtime="20241125 21:58:29.040"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.039" endtime="20241125 21:58:29.040"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.038" endtime="20241125 21:58:29.040"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.022" endtime="20241125 21:58:29.040"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:29.041" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:29.040" endtime="20241125 21:58:29.041"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.042" endtime="20241125 21:58:29.042"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.044" endtime="20241125 21:58:29.044"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.042" endtime="20241125 21:58:29.044"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.044" endtime="20241125 21:58:29.045"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.044" endtime="20241125 21:58:29.045"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.042" endtime="20241125 21:58:29.045"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 21:58:29.045" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241125 21:58:29.045" endtime="20241125 21:58:29.063"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.045" endtime="20241125 21:58:29.063"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.064" endtime="20241125 21:58:29.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.064" endtime="20241125 21:58:29.064"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.064" endtime="20241125 21:58:29.064"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.045" endtime="20241125 21:58:29.064"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.041" endtime="20241125 21:58:29.065"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.041" endtime="20241125 21:58:29.065"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.041" endtime="20241125 21:58:29.065"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.065" endtime="20241125 21:58:29.065"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.065" endtime="20241125 21:58:29.065"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.041" endtime="20241125 21:58:29.065"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.947" endtime="20241125 21:58:29.065"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.066" endtime="20241125 21:58:29.066"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.066" endtime="20241125 21:58:29.066"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.065" endtime="20241125 21:58:29.066"/>
</if>
<status status="PASS" starttime="20241125 21:58:28.945" endtime="20241125 21:58:29.066"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.067" endtime="20241125 21:58:29.067"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.066" endtime="20241125 21:58:29.067"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.068" endtime="20241125 21:58:29.068"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.068" endtime="20241125 21:58:29.069"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.068" endtime="20241125 21:58:29.069"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.069" endtime="20241125 21:58:29.069"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.069" endtime="20241125 21:58:29.069"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.068" endtime="20241125 21:58:29.069"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.067" endtime="20241125 21:58:29.069"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:29.074" endtime="20241125 21:58:29.074"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.077" endtime="20241125 21:58:29.077"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.069" endtime="20241125 21:58:29.077"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.078" endtime="20241125 21:58:29.078"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.079" endtime="20241125 21:58:29.079"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.079" endtime="20241125 21:58:29.079"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.079" endtime="20241125 21:58:29.079"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.079" endtime="20241125 21:58:29.079"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.079" endtime="20241125 21:58:29.079"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.077" endtime="20241125 21:58:29.079"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:29.084" endtime="20241125 21:58:29.084"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.087" endtime="20241125 21:58:29.087"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.080" endtime="20241125 21:58:29.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.088" endtime="20241125 21:58:29.088"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.089" endtime="20241125 21:58:29.089"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.088" endtime="20241125 21:58:29.089"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.089" endtime="20241125 21:58:29.089"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.089" endtime="20241125 21:58:29.089"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.088" endtime="20241125 21:58:29.089"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.087" endtime="20241125 21:58:29.089"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.091" endtime="20241125 21:58:29.091"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.090" endtime="20241125 21:58:29.092"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.096" endtime="20241125 21:58:29.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.096" endtime="20241125 21:58:29.097"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.092" endtime="20241125 21:58:29.097"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.925" endtime="20241125 21:58:29.097"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.097" endtime="20241125 21:58:29.097"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:29.097" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:29.097" endtime="20241125 21:58:29.097"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:29.097" endtime="20241125 21:58:29.097"/>
</return>
<msg timestamp="20241125 21:58:29.098" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241125 21:58:28.922" endtime="20241125 21:58:29.098"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.098" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241125 21:58:29.098" endtime="20241125 21:58:29.098"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.099" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:29.099" endtime="20241125 21:58:29.099"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.099" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:29.099" endtime="20241125 21:58:29.099"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.100" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.100" endtime="20241125 21:58:29.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.100" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:29.100" endtime="20241125 21:58:29.100"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.101" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.100" endtime="20241125 21:58:29.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.101" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:29.101" endtime="20241125 21:58:29.101"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.101" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:29.101" endtime="20241125 21:58:29.101"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.101" endtime="20241125 21:58:29.102"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:29.104" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:29.103" endtime="20241125 21:58:29.104"/>
</kw>
<msg timestamp="20241125 21:58:29.104" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.103" endtime="20241125 21:58:29.104"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.105"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.105"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.105"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.106"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.106"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.105" endtime="20241125 21:58:29.106"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.104" endtime="20241125 21:58:29.106"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.104" endtime="20241125 21:58:29.106"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.106" endtime="20241125 21:58:29.106"/>
</return>
<msg timestamp="20241125 21:58:29.106" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.103" endtime="20241125 21:58:29.106"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:29.109" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:29.108" endtime="20241125 21:58:29.110"/>
</kw>
<msg timestamp="20241125 21:58:29.110" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.108" endtime="20241125 21:58:29.110"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.111"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.111"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.111"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.111"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.112"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.111" endtime="20241125 21:58:29.112"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.110" endtime="20241125 21:58:29.112"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.110" endtime="20241125 21:58:29.112"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.112" endtime="20241125 21:58:29.112"/>
</return>
<msg timestamp="20241125 21:58:29.112" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.107" endtime="20241125 21:58:29.112"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.113"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.114"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.114"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.114"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.114"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.114"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.113" endtime="20241125 21:58:29.114"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.112" endtime="20241125 21:58:29.114"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.115"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.116" endtime="20241125 21:58:29.116"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.116"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.115" endtime="20241125 21:58:29.116"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.116"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.114" endtime="20241125 21:58:29.116"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.099" endtime="20241125 21:58:29.116"/>
</iter>
<status status="PASS" starttime="20241125 21:58:29.099" endtime="20241125 21:58:29.116"/>
</for>
<msg timestamp="20241125 21:58:29.116" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:29.098" endtime="20241125 21:58:29.116"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.116" endtime="20241125 21:58:29.117"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.120" endtime="20241125 21:58:29.120"/>
</kw>
<msg timestamp="20241125 21:58:29.120" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.120" endtime="20241125 21:58:29.120"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.121" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241125 21:58:29.120" endtime="20241125 21:58:29.121"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.121" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.121" endtime="20241125 21:58:29.121"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.121" endtime="20241125 21:58:29.122"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.122" endtime="20241125 21:58:29.122"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.122" endtime="20241125 21:58:29.122"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.121" endtime="20241125 21:58:29.122"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.120" endtime="20241125 21:58:29.123"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.120" endtime="20241125 21:58:29.123"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.123" endtime="20241125 21:58:29.123"/>
</return>
<msg timestamp="20241125 21:58:29.123" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.119" endtime="20241125 21:58:29.123"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.153" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241125 21:58:29.132" endtime="20241125 21:58:29.153"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.124" endtime="20241125 21:58:29.154"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.167" endtime="20241125 21:58:29.167"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.167" endtime="20241125 21:58:29.167"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.124" endtime="20241125 21:58:29.168"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:29.170" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '372', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241125 21:58:29.168" endtime="20241125 21:58:29.170"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:29.173" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "372", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241125 21:58:29.171" endtime="20241125 21:58:29.173"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:29.241" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:29.241" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:29.174" endtime="20241125 21:58:29.241"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.242" endtime="20241125 21:58:29.245"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:29.245" endtime="20241125 21:58:29.246"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.170" endtime="20241125 21:58:29.246"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.117" endtime="20241125 21:58:29.246"/>
</kw>
<status status="PASS" starttime="20241125 21:58:28.916" endtime="20241125 21:58:29.247"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.247" endtime="20241125 21:58:29.247"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.247" endtime="20241125 21:58:29.247"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.248" endtime="20241125 21:58:29.248"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.247" endtime="20241125 21:58:29.248"/>
</branch>
<status status="PASS" starttime="20241125 21:58:28.916" endtime="20241125 21:58:29.248"/>
</try>
<status status="PASS" starttime="20241125 21:58:28.916" endtime="20241125 21:58:29.249"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.250" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241125 21:58:29.250" endtime="20241125 21:58:29.250"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.250" endtime="20241125 21:58:29.251"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:29.251" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241125 21:58:29.251" endtime="20241125 21:58:29.252"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.252" endtime="20241125 21:58:29.252"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.252" endtime="20241125 21:58:29.252"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.252" endtime="20241125 21:58:29.252"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.252" endtime="20241125 21:58:29.253"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.253" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:29.253" endtime="20241125 21:58:29.253"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.254" endtime="20241125 21:58:29.254"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.254" endtime="20241125 21:58:29.254"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.254" endtime="20241125 21:58:29.255"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.254" endtime="20241125 21:58:29.255"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:29.284" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:29.263" endtime="20241125 21:58:29.285"/>
</kw>
<msg timestamp="20241125 21:58:29.285" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.262" endtime="20241125 21:58:29.285"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.285" endtime="20241125 21:58:29.286"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.262" endtime="20241125 21:58:29.286"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.286" endtime="20241125 21:58:29.287"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.287" endtime="20241125 21:58:29.287"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.286" endtime="20241125 21:58:29.287"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.262" endtime="20241125 21:58:29.287"/>
</try>
<msg timestamp="20241125 21:58:29.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.262" endtime="20241125 21:58:29.288"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.288" endtime="20241125 21:58:29.288"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.261" endtime="20241125 21:58:29.288"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.289" endtime="20241125 21:58:29.289"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.288" endtime="20241125 21:58:29.289"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.261" endtime="20241125 21:58:29.289"/>
</try>
<msg timestamp="20241125 21:58:29.290" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.260" endtime="20241125 21:58:29.290"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.297" endtime="20241125 21:58:29.297"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.298" endtime="20241125 21:58:29.298"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.295" endtime="20241125 21:58:29.298"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.294" endtime="20241125 21:58:29.298"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.292" endtime="20241125 21:58:29.299"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.260" endtime="20241125 21:58:29.299"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:29.316" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241125 21:58:29.308" endtime="20241125 21:58:29.316"/>
</kw>
<msg timestamp="20241125 21:58:29.316" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.307" endtime="20241125 21:58:29.316"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.316" endtime="20241125 21:58:29.317"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.307" endtime="20241125 21:58:29.317"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.317" endtime="20241125 21:58:29.317"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.317" endtime="20241125 21:58:29.317"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.317" endtime="20241125 21:58:29.317"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.306" endtime="20241125 21:58:29.318"/>
</try>
<msg timestamp="20241125 21:58:29.318" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.305" endtime="20241125 21:58:29.318"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.318" endtime="20241125 21:58:29.318"/>
</return>
<msg timestamp="20241125 21:58:29.318" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.303" endtime="20241125 21:58:29.318"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.321" endtime="20241125 21:58:29.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.321" endtime="20241125 21:58:29.321"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.320" endtime="20241125 21:58:29.321"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.320" endtime="20241125 21:58:29.321"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.319" endtime="20241125 21:58:29.321"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.302" endtime="20241125 21:58:29.321"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:29.337" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:29.328" endtime="20241125 21:58:29.338"/>
</kw>
<msg timestamp="20241125 21:58:29.338" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.327" endtime="20241125 21:58:29.338"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.338" endtime="20241125 21:58:29.338"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.327" endtime="20241125 21:58:29.338"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.338" endtime="20241125 21:58:29.338"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.339" endtime="20241125 21:58:29.339"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.338" endtime="20241125 21:58:29.339"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.327" endtime="20241125 21:58:29.339"/>
</try>
<msg timestamp="20241125 21:58:29.339" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.327" endtime="20241125 21:58:29.339"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:29.339" endtime="20241125 21:58:29.339"/>
</return>
<msg timestamp="20241125 21:58:29.339" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.325" endtime="20241125 21:58:29.339"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.341" endtime="20241125 21:58:29.341"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.342" endtime="20241125 21:58:29.342"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.341" endtime="20241125 21:58:29.342"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.341" endtime="20241125 21:58:29.342"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.340" endtime="20241125 21:58:29.342"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.324" endtime="20241125 21:58:29.342"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.258" endtime="20241125 21:58:29.342"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:29.343" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:29.342" endtime="20241125 21:58:29.343"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.344" endtime="20241125 21:58:29.344"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.344" endtime="20241125 21:58:29.344"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.344" endtime="20241125 21:58:29.345"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.344" endtime="20241125 21:58:29.345"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.344" endtime="20241125 21:58:29.345"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:29.345" endtime="20241125 21:58:29.374"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.345" endtime="20241125 21:58:29.374"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.374" endtime="20241125 21:58:29.374"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.375" endtime="20241125 21:58:29.375"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.374" endtime="20241125 21:58:29.375"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.345" endtime="20241125 21:58:29.375"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.343" endtime="20241125 21:58:29.375"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.343" endtime="20241125 21:58:29.375"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.343" endtime="20241125 21:58:29.375"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.375" endtime="20241125 21:58:29.375"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.375" endtime="20241125 21:58:29.376"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.343" endtime="20241125 21:58:29.376"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.257" endtime="20241125 21:58:29.376"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.255" endtime="20241125 21:58:29.376"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.378" endtime="20241125 21:58:29.378"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.380" endtime="20241125 21:58:29.380"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.376" endtime="20241125 21:58:29.380"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.381" endtime="20241125 21:58:29.381"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.380" endtime="20241125 21:58:29.381"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.383" endtime="20241125 21:58:29.383"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.381" endtime="20241125 21:58:29.383"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.385" endtime="20241125 21:58:29.385"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.385" endtime="20241125 21:58:29.385"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.385" endtime="20241125 21:58:29.385"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.385" endtime="20241125 21:58:29.385"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.383" endtime="20241125 21:58:29.386"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.386" endtime="20241125 21:58:29.387"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.386" endtime="20241125 21:58:29.387"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.388"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.388"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.388"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.388"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.388"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.388" endtime="20241125 21:58:29.389"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.387" endtime="20241125 21:58:29.389"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:29.393" endtime="20241125 21:58:29.393"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.396" endtime="20241125 21:58:29.396"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.389" endtime="20241125 21:58:29.396"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.397" endtime="20241125 21:58:29.397"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.398" endtime="20241125 21:58:29.398"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.398" endtime="20241125 21:58:29.398"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.398" endtime="20241125 21:58:29.398"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.398" endtime="20241125 21:58:29.398"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.397" endtime="20241125 21:58:29.398"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.396" endtime="20241125 21:58:29.398"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:29.403" endtime="20241125 21:58:29.403"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.406" endtime="20241125 21:58:29.406"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.398" endtime="20241125 21:58:29.406"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.407" endtime="20241125 21:58:29.408"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.408" endtime="20241125 21:58:29.408"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.408" endtime="20241125 21:58:29.408"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.408" endtime="20241125 21:58:29.408"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.408" endtime="20241125 21:58:29.408"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.408" endtime="20241125 21:58:29.409"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.406" endtime="20241125 21:58:29.409"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.411" endtime="20241125 21:58:29.411"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.409" endtime="20241125 21:58:29.411"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.416" endtime="20241125 21:58:29.416"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.416" endtime="20241125 21:58:29.416"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.411" endtime="20241125 21:58:29.416"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.253" endtime="20241125 21:58:29.416"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.417" endtime="20241125 21:58:29.417"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:29.417" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:29.417" endtime="20241125 21:58:29.418"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:29.418" endtime="20241125 21:58:29.418"/>
</return>
<msg timestamp="20241125 21:58:29.418" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:29.253" endtime="20241125 21:58:29.418"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.419" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241125 21:58:29.419" endtime="20241125 21:58:29.419"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.420" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:29.419" endtime="20241125 21:58:29.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.420" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:29.420" endtime="20241125 21:58:29.420"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.421" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.420" endtime="20241125 21:58:29.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.421" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:29.421" endtime="20241125 21:58:29.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.421" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.421" endtime="20241125 21:58:29.421"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.422" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:29.422" endtime="20241125 21:58:29.422"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.422" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:29.422" endtime="20241125 21:58:29.422"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.423" endtime="20241125 21:58:29.423"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:29.426" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:29.425" endtime="20241125 21:58:29.426"/>
</kw>
<msg timestamp="20241125 21:58:29.426" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.425" endtime="20241125 21:58:29.426"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.426" endtime="20241125 21:58:29.427"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.427" endtime="20241125 21:58:29.427"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.427" endtime="20241125 21:58:29.427"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.427" endtime="20241125 21:58:29.428"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.427" endtime="20241125 21:58:29.428"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.427" endtime="20241125 21:58:29.428"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.426" endtime="20241125 21:58:29.428"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.426" endtime="20241125 21:58:29.428"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.428" endtime="20241125 21:58:29.428"/>
</return>
<msg timestamp="20241125 21:58:29.428" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.424" endtime="20241125 21:58:29.428"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:29.431" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:29.430" endtime="20241125 21:58:29.431"/>
</kw>
<msg timestamp="20241125 21:58:29.431" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.430" endtime="20241125 21:58:29.431"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.431" endtime="20241125 21:58:29.431"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.432" endtime="20241125 21:58:29.432"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.432" endtime="20241125 21:58:29.432"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.432" endtime="20241125 21:58:29.432"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.432" endtime="20241125 21:58:29.432"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.431" endtime="20241125 21:58:29.432"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.431" endtime="20241125 21:58:29.432"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.431" endtime="20241125 21:58:29.432"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.432" endtime="20241125 21:58:29.433"/>
</return>
<msg timestamp="20241125 21:58:29.433" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:29.429" endtime="20241125 21:58:29.433"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:29.433" endtime="20241125 21:58:29.433"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.433" endtime="20241125 21:58:29.433"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.433" endtime="20241125 21:58:29.434"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.434"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.434"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.434"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.434"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.435"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.435"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.435"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.434" endtime="20241125 21:58:29.435"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.433" endtime="20241125 21:58:29.435"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.433" endtime="20241125 21:58:29.435"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.436"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.436"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.436"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.436"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.436"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.436"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.437"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:29.437" endtime="20241125 21:58:29.437"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.437"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:29.436" endtime="20241125 21:58:29.437"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.437"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.435" endtime="20241125 21:58:29.437"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.419" endtime="20241125 21:58:29.437"/>
</iter>
<status status="PASS" starttime="20241125 21:58:29.419" endtime="20241125 21:58:29.437"/>
</for>
<msg timestamp="20241125 21:58:29.437" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:29.418" endtime="20241125 21:58:29.437"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.437" endtime="20241125 21:58:29.438"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.442" endtime="20241125 21:58:29.442"/>
</kw>
<msg timestamp="20241125 21:58:29.442" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.441" endtime="20241125 21:58:29.442"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.443" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241125 21:58:29.443" endtime="20241125 21:58:29.443"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.444" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.443" endtime="20241125 21:58:29.444"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.443" endtime="20241125 21:58:29.444"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.444" endtime="20241125 21:58:29.444"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.444" endtime="20241125 21:58:29.444"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.443" endtime="20241125 21:58:29.444"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.443" endtime="20241125 21:58:29.444"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.442" endtime="20241125 21:58:29.444"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.444" endtime="20241125 21:58:29.444"/>
</return>
<msg timestamp="20241125 21:58:29.445" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.441" endtime="20241125 21:58:29.445"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.445" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241125 21:58:29.445" endtime="20241125 21:58:29.445"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.445" endtime="20241125 21:58:29.445"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.445" endtime="20241125 21:58:29.445"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.445" endtime="20241125 21:58:29.445"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.445" endtime="20241125 21:58:29.446"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:29.446" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '373', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241125 21:58:29.446" endtime="20241125 21:58:29.446"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:29.447" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "373", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241125 21:58:29.447" endtime="20241125 21:58:29.447"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:29.451" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:29.451" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:29.447" endtime="20241125 21:58:29.451"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.452" endtime="20241125 21:58:29.452"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:29.452" endtime="20241125 21:58:29.453"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.447" endtime="20241125 21:58:29.453"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.438" endtime="20241125 21:58:29.453"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.249" endtime="20241125 21:58:29.453"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.453" endtime="20241125 21:58:29.453"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.454" endtime="20241125 21:58:29.454"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.454" endtime="20241125 21:58:29.454"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.453" endtime="20241125 21:58:29.454"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.249" endtime="20241125 21:58:29.454"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.249" endtime="20241125 21:58:29.454"/>
</iter>
<status status="PASS" starttime="20241125 21:58:23.920" endtime="20241125 21:58:29.455"/>
</for>
<status status="PASS" starttime="20241125 21:58:23.920" endtime="20241125 21:58:29.455"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.920" endtime="20241125 21:58:29.455"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:29.458" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '96', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241125 21:58:29.457" endtime="20241125 21:58:29.458"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:29.459" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "96", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241125 21:58:29.459" endtime="20241125 21:58:29.460"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:29.463" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:29.463" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:29.460" endtime="20241125 21:58:29.463"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.464" endtime="20241125 21:58:29.464"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:29.465" endtime="20241125 21:58:29.465"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.459" endtime="20241125 21:58:29.465"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.455" endtime="20241125 21:58:29.465"/>
</kw>
<status status="PASS" starttime="20241125 21:58:23.913" endtime="20241125 21:58:29.465"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.465" endtime="20241125 21:58:29.465"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.466" endtime="20241125 21:58:29.466"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.466" endtime="20241125 21:58:29.466"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.465" endtime="20241125 21:58:29.466"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.913" endtime="20241125 21:58:29.466"/>
</try>
<status status="PASS" starttime="20241125 21:58:23.913" endtime="20241125 21:58:29.466"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '6', 'testCaseId': '3', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T16:17:04.521Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'projectI...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.467" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-25T08:07:30.175Z', 'updatedAt': '2024-11-25T08:07:30.175Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241125 21:58:29.467" endtime="20241125 21:58:29.467"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.467" endtime="20241125 21:58:29.468"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:29.470" endtime="20241125 21:58:29.470"/>
</kw>
<msg timestamp="20241125 21:58:29.470" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.470" endtime="20241125 21:58:29.471"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.471" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241125 21:58:29.471" endtime="20241125 21:58:29.471"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.472" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.472" endtime="20241125 21:58:29.472"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.471" endtime="20241125 21:58:29.472"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.472" endtime="20241125 21:58:29.472"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.472" endtime="20241125 21:58:29.472"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.471" endtime="20241125 21:58:29.473"/>
</if>
<status status="PASS" starttime="20241125 21:58:29.471" endtime="20241125 21:58:29.473"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.471" endtime="20241125 21:58:29.473"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:29.473" endtime="20241125 21:58:29.473"/>
</return>
<msg timestamp="20241125 21:58:29.473" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.469" endtime="20241125 21:58:29.473"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.475" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:04:54.162Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241125 21:58:29.475" endtime="20241125 21:58:29.475"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:29.475" endtime="20241125 21:58:29.476"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:29.476" level="INFO">${input} = {'id': '6', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:04:54.340Z', 'updatedAt': '2024-11-25T08:04:54.340Z'}</msg>
<status status="PASS" starttime="20241125 21:58:29.476" endtime="20241125 21:58:29.476"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.477" endtime="20241125 21:58:29.477"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:29.477" endtime="20241125 21:58:29.477"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.476" endtime="20241125 21:58:29.477"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.476" endtime="20241125 21:58:29.477"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:29.478" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:29.477" endtime="20241125 21:58:29.478"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.478" endtime="20241125 21:58:29.478"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.478" endtime="20241125 21:58:29.478"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:29.479" endtime="20241125 21:58:29.479"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:29.478" endtime="20241125 21:58:29.479"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:30.320" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241125 21:58:29.485" endtime="20241125 21:58:30.320"/>
</kw>
<msg timestamp="20241125 21:58:30.320" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.485" endtime="20241125 21:58:30.320"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.320" endtime="20241125 21:58:30.321"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.485" endtime="20241125 21:58:30.321"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.321" endtime="20241125 21:58:30.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.322" endtime="20241125 21:58:30.322"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.321" endtime="20241125 21:58:30.322"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.485" endtime="20241125 21:58:30.322"/>
</try>
<msg timestamp="20241125 21:58:30.323" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.484" endtime="20241125 21:58:30.323"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.323" endtime="20241125 21:58:30.323"/>
</return>
<status status="PASS" starttime="20241125 21:58:29.483" endtime="20241125 21:58:30.323"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:30.323" endtime="20241125 21:58:30.323"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:30.323" endtime="20241125 21:58:30.323"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.483" endtime="20241125 21:58:30.324"/>
</try>
<msg timestamp="20241125 21:58:30.324" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:29.483" endtime="20241125 21:58:30.324"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.326" endtime="20241125 21:58:30.327"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.327" endtime="20241125 21:58:30.327"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.326" endtime="20241125 21:58:30.327"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.326" endtime="20241125 21:58:30.327"/>
</if>
<status status="PASS" starttime="20241125 21:58:30.325" endtime="20241125 21:58:30.327"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.483" endtime="20241125 21:58:30.327"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:30.338" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241125 21:58:30.332" endtime="20241125 21:58:30.338"/>
</kw>
<msg timestamp="20241125 21:58:30.338" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.332" endtime="20241125 21:58:30.338"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.339" endtime="20241125 21:58:30.339"/>
</return>
<status status="PASS" starttime="20241125 21:58:30.332" endtime="20241125 21:58:30.339"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.339" endtime="20241125 21:58:30.340"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.340" endtime="20241125 21:58:30.340"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.339" endtime="20241125 21:58:30.340"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.332" endtime="20241125 21:58:30.340"/>
</try>
<msg timestamp="20241125 21:58:30.340" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.331" endtime="20241125 21:58:30.341"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.341" endtime="20241125 21:58:30.341"/>
</return>
<msg timestamp="20241125 21:58:30.341" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.330" endtime="20241125 21:58:30.341"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.343" endtime="20241125 21:58:30.343"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.343" endtime="20241125 21:58:30.343"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.343" endtime="20241125 21:58:30.344"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.343" endtime="20241125 21:58:30.344"/>
</if>
<status status="PASS" starttime="20241125 21:58:30.342" endtime="20241125 21:58:30.344"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.329" endtime="20241125 21:58:30.344"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:30.367" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:30.348" endtime="20241125 21:58:30.367"/>
</kw>
<msg timestamp="20241125 21:58:30.368" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.348" endtime="20241125 21:58:30.368"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.368" endtime="20241125 21:58:30.368"/>
</return>
<status status="PASS" starttime="20241125 21:58:30.348" endtime="20241125 21:58:30.368"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.368" endtime="20241125 21:58:30.368"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.368" endtime="20241125 21:58:30.368"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.368" endtime="20241125 21:58:30.368"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.348" endtime="20241125 21:58:30.368"/>
</try>
<msg timestamp="20241125 21:58:30.369" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.347" endtime="20241125 21:58:30.369"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:30.369" endtime="20241125 21:58:30.369"/>
</return>
<msg timestamp="20241125 21:58:30.369" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:30.346" endtime="20241125 21:58:30.369"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.371" endtime="20241125 21:58:30.371"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.372" endtime="20241125 21:58:30.372"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.371" endtime="20241125 21:58:30.372"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.371" endtime="20241125 21:58:30.372"/>
</if>
<status status="PASS" starttime="20241125 21:58:30.370" endtime="20241125 21:58:30.373"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.346" endtime="20241125 21:58:30.373"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.481" endtime="20241125 21:58:30.373"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:30.374" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:30.373" endtime="20241125 21:58:30.374"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:30.375" endtime="20241125 21:58:30.376"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:30.375" endtime="20241125 21:58:30.376"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:30.376" endtime="20241125 21:58:30.376"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.376" endtime="20241125 21:58:30.376"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.375" endtime="20241125 21:58:30.376"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:30.377" endtime="20241125 21:58:31.037"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.377" endtime="20241125 21:58:31.037"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.039" endtime="20241125 21:58:31.039"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.039" endtime="20241125 21:58:31.039"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.038" endtime="20241125 21:58:31.039"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.377" endtime="20241125 21:58:31.040"/>
</try>
<status status="PASS" starttime="20241125 21:58:30.375" endtime="20241125 21:58:31.041"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.374" endtime="20241125 21:58:31.041"/>
</kw>
<status status="PASS" starttime="20241125 21:58:30.374" endtime="20241125 21:58:31.041"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.041" endtime="20241125 21:58:31.042"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.041" endtime="20241125 21:58:31.042"/>
</branch>
<status status="PASS" starttime="20241125 21:58:30.374" endtime="20241125 21:58:31.042"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.480" endtime="20241125 21:58:31.042"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.479" endtime="20241125 21:58:31.042"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.046" endtime="20241125 21:58:31.046"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.050" endtime="20241125 21:58:31.050"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.043" endtime="20241125 21:58:31.050"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.051" endtime="20241125 21:58:31.051"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.050" endtime="20241125 21:58:31.052"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.055" endtime="20241125 21:58:31.055"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.052" endtime="20241125 21:58:31.055"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.057" endtime="20241125 21:58:31.057"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.057" endtime="20241125 21:58:31.058"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.057" endtime="20241125 21:58:31.058"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.057" endtime="20241125 21:58:31.058"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.055" endtime="20241125 21:58:31.058"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.059" endtime="20241125 21:58:31.060"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.058" endtime="20241125 21:58:31.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.061" endtime="20241125 21:58:31.061"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.062" endtime="20241125 21:58:31.062"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.061" endtime="20241125 21:58:31.062"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.062" endtime="20241125 21:58:31.062"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.062" endtime="20241125 21:58:31.062"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.061" endtime="20241125 21:58:31.062"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.060" endtime="20241125 21:58:31.062"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.067" endtime="20241125 21:58:31.067"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.070" endtime="20241125 21:58:31.070"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.062" endtime="20241125 21:58:31.070"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.071" endtime="20241125 21:58:31.071"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.072" endtime="20241125 21:58:31.072"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.072" endtime="20241125 21:58:31.073"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.073" endtime="20241125 21:58:31.073"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.073" endtime="20241125 21:58:31.073"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.072" endtime="20241125 21:58:31.073"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.070" endtime="20241125 21:58:31.073"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.079" endtime="20241125 21:58:31.080"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.082" endtime="20241125 21:58:31.083"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.073" endtime="20241125 21:58:31.083"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.084" endtime="20241125 21:58:31.084"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.084" endtime="20241125 21:58:31.084"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.084" endtime="20241125 21:58:31.085"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.085" endtime="20241125 21:58:31.085"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.085" endtime="20241125 21:58:31.085"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.084" endtime="20241125 21:58:31.085"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.083" endtime="20241125 21:58:31.085"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.087" endtime="20241125 21:58:31.088"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.085" endtime="20241125 21:58:31.088"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.098" endtime="20241125 21:58:31.098"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.098" endtime="20241125 21:58:31.099"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.088" endtime="20241125 21:58:31.099"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.478" endtime="20241125 21:58:31.099"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.100" endtime="20241125 21:58:31.101"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:31.102" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:31.101" endtime="20241125 21:58:31.102"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:31.102" endtime="20241125 21:58:31.102"/>
</return>
<msg timestamp="20241125 21:58:31.103" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:29.477" endtime="20241125 21:58:31.103"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.105" level="INFO">${key} = testCaseFlowSequenceId:6::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241125 21:58:31.105" endtime="20241125 21:58:31.106"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.107" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:31.106" endtime="20241125 21:58:31.107"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.107" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:31.107" endtime="20241125 21:58:31.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.108" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.108" endtime="20241125 21:58:31.108"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.109" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:31.108" endtime="20241125 21:58:31.109"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.110" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.109" endtime="20241125 21:58:31.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.110" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:31.110" endtime="20241125 21:58:31.110"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.111" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:31.111" endtime="20241125 21:58:31.111"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.111" endtime="20241125 21:58:31.112"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.114" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.114" endtime="20241125 21:58:31.115"/>
</kw>
<msg timestamp="20241125 21:58:31.115" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.114" endtime="20241125 21:58:31.115"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.115"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.116"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.116"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.116" endtime="20241125 21:58:31.116"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.116" endtime="20241125 21:58:31.116"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.116"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.116"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.115" endtime="20241125 21:58:31.116"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.117" endtime="20241125 21:58:31.117"/>
</return>
<msg timestamp="20241125 21:58:31.117" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.113" endtime="20241125 21:58:31.117"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.120" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.119" endtime="20241125 21:58:31.120"/>
</kw>
<msg timestamp="20241125 21:58:31.120" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.119" endtime="20241125 21:58:31.120"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.121" endtime="20241125 21:58:31.121"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.121" endtime="20241125 21:58:31.121"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.121" endtime="20241125 21:58:31.121"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.122" endtime="20241125 21:58:31.122"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.121" endtime="20241125 21:58:31.122"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.121" endtime="20241125 21:58:31.122"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.120" endtime="20241125 21:58:31.122"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.120" endtime="20241125 21:58:31.122"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.122" endtime="20241125 21:58:31.122"/>
</return>
<msg timestamp="20241125 21:58:31.122" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.118" endtime="20241125 21:58:31.122"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.123"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.123"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.123"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.124"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.124" endtime="20241125 21:58:31.124"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.124"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.124"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.124" endtime="20241125 21:58:31.124"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.124" endtime="20241125 21:58:31.124"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.124" endtime="20241125 21:58:31.124"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.124" endtime="20241125 21:58:31.124"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.125"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.123" endtime="20241125 21:58:31.125"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.125" endtime="20241125 21:58:31.125"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.125" endtime="20241125 21:58:31.125"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.125" endtime="20241125 21:58:31.126"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.126"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.126"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.126"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.126"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.127" endtime="20241125 21:58:31.127"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.127"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.126" endtime="20241125 21:58:31.127"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.125" endtime="20241125 21:58:31.127"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.125" endtime="20241125 21:58:31.127"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.106" endtime="20241125 21:58:31.127"/>
</iter>
<status status="PASS" starttime="20241125 21:58:31.106" endtime="20241125 21:58:31.127"/>
</for>
<msg timestamp="20241125 21:58:31.127" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:31.103" endtime="20241125 21:58:31.127"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.127" endtime="20241125 21:58:31.128"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.132" endtime="20241125 21:58:31.133"/>
</kw>
<msg timestamp="20241125 21:58:31.133" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.132" endtime="20241125 21:58:31.133"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.134" level="INFO">${values} = {'id': '4', 'name': 'Profile header icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-25T08:04:52.707Z', 'updatedAt': '2024-11-25T08:04:52.707Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.133" endtime="20241125 21:58:31.134"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.134" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.134" endtime="20241125 21:58:31.134"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.134" endtime="20241125 21:58:31.134"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.135" endtime="20241125 21:58:31.135"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.135" endtime="20241125 21:58:31.135"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.134" endtime="20241125 21:58:31.135"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.133" endtime="20241125 21:58:31.135"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.133" endtime="20241125 21:58:31.135"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.135" endtime="20241125 21:58:31.135"/>
</return>
<msg timestamp="20241125 21:58:31.136" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.131" endtime="20241125 21:58:31.136"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.139" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241125 21:58:31.138" endtime="20241125 21:58:31.139"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.137" endtime="20241125 21:58:31.139"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.140" endtime="20241125 21:58:31.140"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.139" endtime="20241125 21:58:31.140"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.136" endtime="20241125 21:58:31.140"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.142" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '374', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241125 21:58:31.141" endtime="20241125 21:58:31.142"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:31.144" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "374", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241125 21:58:31.143" endtime="20241125 21:58:31.144"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:31.148" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:31.148" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:31.144" endtime="20241125 21:58:31.148"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.148" endtime="20241125 21:58:31.149"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:31.149" endtime="20241125 21:58:31.149"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.142" endtime="20241125 21:58:31.150"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.128" endtime="20241125 21:58:31.150"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.150"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.150" endtime="20241125 21:58:31.150"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.150" endtime="20241125 21:58:31.151"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.151" endtime="20241125 21:58:31.151"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.150" endtime="20241125 21:58:31.151"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.151"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.151"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-25T08:07:30.315Z', 'updatedAt': '2024-11-25T08:07:30.315Z', 'action': {'id': '6', 'name': 'Click profile dropdown item', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.153" level="INFO">${action} = {'id': '6', 'name': 'Click profile dropdown item', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:05:44.025Z', 'updatedAt': '2024-11-2...</msg>
<status status="PASS" starttime="20241125 21:58:31.152" endtime="20241125 21:58:31.153"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.153" endtime="20241125 21:58:31.154"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:31.155" level="INFO">${input} = {'id': '7', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:05:44.210Z', 'updatedAt': '2024-11-25T08:05:44.210Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.155" endtime="20241125 21:58:31.155"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.156" endtime="20241125 21:58:31.157"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.157" endtime="20241125 21:58:31.157"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.156" endtime="20241125 21:58:31.157"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.156" endtime="20241125 21:58:31.158"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.159" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:31.159" endtime="20241125 21:58:31.159"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.159" endtime="20241125 21:58:31.159"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.159" endtime="20241125 21:58:31.159"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.160" endtime="20241125 21:58:31.160"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.160" endtime="20241125 21:58:31.160"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.174" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:31.167" endtime="20241125 21:58:31.174"/>
</kw>
<msg timestamp="20241125 21:58:31.174" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.167" endtime="20241125 21:58:31.174"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.174" endtime="20241125 21:58:31.174"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.167" endtime="20241125 21:58:31.175"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.175" endtime="20241125 21:58:31.175"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.175" endtime="20241125 21:58:31.175"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.175" endtime="20241125 21:58:31.175"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.167" endtime="20241125 21:58:31.175"/>
</try>
<msg timestamp="20241125 21:58:31.176" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.166" endtime="20241125 21:58:31.176"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.176" endtime="20241125 21:58:31.176"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.165" endtime="20241125 21:58:31.176"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.176" endtime="20241125 21:58:31.176"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.176" endtime="20241125 21:58:31.176"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.165" endtime="20241125 21:58:31.176"/>
</try>
<msg timestamp="20241125 21:58:31.176" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.165" endtime="20241125 21:58:31.176"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.178" endtime="20241125 21:58:31.179"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.179" endtime="20241125 21:58:31.179"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.178" endtime="20241125 21:58:31.179"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.178" endtime="20241125 21:58:31.179"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.177" endtime="20241125 21:58:31.179"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.164" endtime="20241125 21:58:31.179"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.193" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241125 21:58:31.184" endtime="20241125 21:58:31.193"/>
</kw>
<msg timestamp="20241125 21:58:31.193" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.184" endtime="20241125 21:58:31.193"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.193" endtime="20241125 21:58:31.194"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.184" endtime="20241125 21:58:31.194"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.194" endtime="20241125 21:58:31.194"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.194" endtime="20241125 21:58:31.194"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.194" endtime="20241125 21:58:31.194"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.184" endtime="20241125 21:58:31.194"/>
</try>
<msg timestamp="20241125 21:58:31.195" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.183" endtime="20241125 21:58:31.195"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.195" endtime="20241125 21:58:31.195"/>
</return>
<msg timestamp="20241125 21:58:31.195" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.182" endtime="20241125 21:58:31.195"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.198" endtime="20241125 21:58:31.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.198" endtime="20241125 21:58:31.198"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.198" endtime="20241125 21:58:31.198"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.197" endtime="20241125 21:58:31.198"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.196" endtime="20241125 21:58:31.199"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.182" endtime="20241125 21:58:31.199"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.215" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:31.203" endtime="20241125 21:58:31.216"/>
</kw>
<msg timestamp="20241125 21:58:31.216" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.202" endtime="20241125 21:58:31.216"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.216" endtime="20241125 21:58:31.216"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.202" endtime="20241125 21:58:31.216"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.217" endtime="20241125 21:58:31.217"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.217" endtime="20241125 21:58:31.217"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.216" endtime="20241125 21:58:31.217"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.202" endtime="20241125 21:58:31.217"/>
</try>
<msg timestamp="20241125 21:58:31.217" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.202" endtime="20241125 21:58:31.217"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.217" endtime="20241125 21:58:31.217"/>
</return>
<msg timestamp="20241125 21:58:31.218" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.201" endtime="20241125 21:58:31.218"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.220" endtime="20241125 21:58:31.220"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.220" endtime="20241125 21:58:31.220"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.219" endtime="20241125 21:58:31.220"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.219" endtime="20241125 21:58:31.220"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.219" endtime="20241125 21:58:31.221"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.200" endtime="20241125 21:58:31.221"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.163" endtime="20241125 21:58:31.221"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.221" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:31.221" endtime="20241125 21:58:31.221"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.223" endtime="20241125 21:58:31.223"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.223" endtime="20241125 21:58:31.223"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.223" endtime="20241125 21:58:31.224"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.223" endtime="20241125 21:58:31.224"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.223" endtime="20241125 21:58:31.224"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:31.224" endtime="20241125 21:58:31.339"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.224" endtime="20241125 21:58:31.339"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.339" endtime="20241125 21:58:31.339"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.340" endtime="20241125 21:58:31.340"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.339" endtime="20241125 21:58:31.340"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.224" endtime="20241125 21:58:31.340"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.222" endtime="20241125 21:58:31.340"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.222" endtime="20241125 21:58:31.340"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.222" endtime="20241125 21:58:31.340"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.341" endtime="20241125 21:58:31.341"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.341" endtime="20241125 21:58:31.341"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.222" endtime="20241125 21:58:31.341"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.162" endtime="20241125 21:58:31.341"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.160" endtime="20241125 21:58:31.341"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.344" endtime="20241125 21:58:31.344"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.346" endtime="20241125 21:58:31.347"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.342" endtime="20241125 21:58:31.347"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.348" endtime="20241125 21:58:31.348"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.347" endtime="20241125 21:58:31.348"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.351" endtime="20241125 21:58:31.352"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.348" endtime="20241125 21:58:31.352"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.354" endtime="20241125 21:58:31.354"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.355" endtime="20241125 21:58:31.355"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.354" endtime="20241125 21:58:31.355"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.354" endtime="20241125 21:58:31.355"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.352" endtime="20241125 21:58:31.355"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.356" endtime="20241125 21:58:31.356"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.355" endtime="20241125 21:58:31.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.358" endtime="20241125 21:58:31.358"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.359" endtime="20241125 21:58:31.359"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.359" endtime="20241125 21:58:31.360"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.360" endtime="20241125 21:58:31.360"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.360" endtime="20241125 21:58:31.360"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.359" endtime="20241125 21:58:31.360"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.356" endtime="20241125 21:58:31.361"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.367" endtime="20241125 21:58:31.367"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.370" endtime="20241125 21:58:31.370"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.361" endtime="20241125 21:58:31.370"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.373" endtime="20241125 21:58:31.373"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.374" endtime="20241125 21:58:31.374"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.373" endtime="20241125 21:58:31.374"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.374" endtime="20241125 21:58:31.374"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.374" endtime="20241125 21:58:31.374"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.373" endtime="20241125 21:58:31.375"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.371" endtime="20241125 21:58:31.375"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.380" endtime="20241125 21:58:31.380"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.382" endtime="20241125 21:58:31.382"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.375" endtime="20241125 21:58:31.382"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.383" endtime="20241125 21:58:31.383"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.383" endtime="20241125 21:58:31.383"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.383" endtime="20241125 21:58:31.384"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.384" endtime="20241125 21:58:31.384"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.384" endtime="20241125 21:58:31.384"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.383" endtime="20241125 21:58:31.384"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.382" endtime="20241125 21:58:31.384"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.386" endtime="20241125 21:58:31.386"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.384" endtime="20241125 21:58:31.386"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.392" endtime="20241125 21:58:31.392"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.392" endtime="20241125 21:58:31.392"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.386" endtime="20241125 21:58:31.392"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.159" endtime="20241125 21:58:31.392"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.393" endtime="20241125 21:58:31.393"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:31.394" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:31.393" endtime="20241125 21:58:31.394"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:31.394" endtime="20241125 21:58:31.394"/>
</return>
<msg timestamp="20241125 21:58:31.394" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:31.158" endtime="20241125 21:58:31.394"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.395" level="INFO">${key} = testCaseFlowSequenceId:6::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241125 21:58:31.395" endtime="20241125 21:58:31.395"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.396" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:31.395" endtime="20241125 21:58:31.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.396" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:31.396" endtime="20241125 21:58:31.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.396" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.396" endtime="20241125 21:58:31.396"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.397" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:31.397" endtime="20241125 21:58:31.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.397" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.397" endtime="20241125 21:58:31.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.398" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:31.397" endtime="20241125 21:58:31.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.398" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:31.398" endtime="20241125 21:58:31.398"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.398" endtime="20241125 21:58:31.398"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.401" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.400" endtime="20241125 21:58:31.401"/>
</kw>
<msg timestamp="20241125 21:58:31.401" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.400" endtime="20241125 21:58:31.401"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.401" endtime="20241125 21:58:31.402"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.402" endtime="20241125 21:58:31.402"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.402" endtime="20241125 21:58:31.402"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.402" endtime="20241125 21:58:31.402"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.402" endtime="20241125 21:58:31.403"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.402" endtime="20241125 21:58:31.403"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.401" endtime="20241125 21:58:31.403"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.401" endtime="20241125 21:58:31.403"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.403" endtime="20241125 21:58:31.403"/>
</return>
<msg timestamp="20241125 21:58:31.403" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.400" endtime="20241125 21:58:31.403"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.409" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.407" endtime="20241125 21:58:31.409"/>
</kw>
<msg timestamp="20241125 21:58:31.409" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.407" endtime="20241125 21:58:31.409"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.410" endtime="20241125 21:58:31.410"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.411" endtime="20241125 21:58:31.411"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.410" endtime="20241125 21:58:31.411"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.411" endtime="20241125 21:58:31.412"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.411" endtime="20241125 21:58:31.412"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.410" endtime="20241125 21:58:31.412"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.410" endtime="20241125 21:58:31.412"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.409" endtime="20241125 21:58:31.412"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.412" endtime="20241125 21:58:31.412"/>
</return>
<msg timestamp="20241125 21:58:31.413" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.406" endtime="20241125 21:58:31.413"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.414"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.414"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.414"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.415"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.415" endtime="20241125 21:58:31.415"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.415"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.415"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.415" endtime="20241125 21:58:31.415"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.415" endtime="20241125 21:58:31.415"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.415" endtime="20241125 21:58:31.415"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.415" endtime="20241125 21:58:31.415"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.414" endtime="20241125 21:58:31.416"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.413" endtime="20241125 21:58:31.416"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.416" endtime="20241125 21:58:31.417"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.416" endtime="20241125 21:58:31.417"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.416" endtime="20241125 21:58:31.417"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.417" endtime="20241125 21:58:31.417"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.417" endtime="20241125 21:58:31.417"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.417" endtime="20241125 21:58:31.417"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.418" endtime="20241125 21:58:31.418"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.418" endtime="20241125 21:58:31.418"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.417" endtime="20241125 21:58:31.418"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.417" endtime="20241125 21:58:31.418"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.416" endtime="20241125 21:58:31.418"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.416" endtime="20241125 21:58:31.418"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.395" endtime="20241125 21:58:31.418"/>
</iter>
<status status="PASS" starttime="20241125 21:58:31.395" endtime="20241125 21:58:31.418"/>
</for>
<msg timestamp="20241125 21:58:31.418" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:31.394" endtime="20241125 21:58:31.418"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.419" endtime="20241125 21:58:31.419"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.426" endtime="20241125 21:58:31.427"/>
</kw>
<msg timestamp="20241125 21:58:31.427" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.426" endtime="20241125 21:58:31.427"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.428" level="INFO">${values} = {'id': '5', 'name': 'Click profile icon dropdown item', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-25T08:05:42.554Z', 'updatedAt': '2024-11-25T08:05:42.554Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.427" endtime="20241125 21:58:31.428"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.429" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.429" endtime="20241125 21:58:31.429"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.428" endtime="20241125 21:58:31.429"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.430" endtime="20241125 21:58:31.430"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.429" endtime="20241125 21:58:31.430"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.428" endtime="20241125 21:58:31.430"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.427" endtime="20241125 21:58:31.430"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.427" endtime="20241125 21:58:31.430"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.430" endtime="20241125 21:58:31.430"/>
</return>
<msg timestamp="20241125 21:58:31.430" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.425" endtime="20241125 21:58:31.430"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.432" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241125 21:58:31.431" endtime="20241125 21:58:31.432"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.431" endtime="20241125 21:58:31.432"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.433" endtime="20241125 21:58:31.433"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.433" endtime="20241125 21:58:31.433"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.431" endtime="20241125 21:58:31.433"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.435" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '375', 'status': 'COMPLETED', 'actionName': 'Click profile dropdown item', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessag...</msg>
<status status="PASS" starttime="20241125 21:58:31.434" endtime="20241125 21:58:31.435"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:31.438" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "375", "status": "COMPLETED", "actionName": "Click profile dropdown item", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMess...</msg>
<status status="PASS" starttime="20241125 21:58:31.437" endtime="20241125 21:58:31.438"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:31.444" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:31.444" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:31.439" endtime="20241125 21:58:31.444"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.444" endtime="20241125 21:58:31.445"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:31.445" endtime="20241125 21:58:31.446"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.436" endtime="20241125 21:58:31.446"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.419" endtime="20241125 21:58:31.446"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.152" endtime="20241125 21:58:31.446"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.447" endtime="20241125 21:58:31.447"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.447" endtime="20241125 21:58:31.447"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.447" endtime="20241125 21:58:31.448"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.446" endtime="20241125 21:58:31.448"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.152" endtime="20241125 21:58:31.448"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.152" endtime="20241125 21:58:31.448"/>
</iter>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.448"/>
</for>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.448"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.474" endtime="20241125 21:58:31.448"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.453" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '97', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241125 21:58:31.451" endtime="20241125 21:58:31.453"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:31.458" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "97", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241125 21:58:31.456" endtime="20241125 21:58:31.458"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:31.465" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:31.466" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:31.458" endtime="20241125 21:58:31.466"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.466" endtime="20241125 21:58:31.467"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:31.467" endtime="20241125 21:58:31.467"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.455" endtime="20241125 21:58:31.468"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.449" endtime="20241125 21:58:31.468"/>
</kw>
<status status="PASS" starttime="20241125 21:58:29.466" endtime="20241125 21:58:31.468"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.468" endtime="20241125 21:58:31.468"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.469" endtime="20241125 21:58:31.469"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.469" endtime="20241125 21:58:31.469"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.468" endtime="20241125 21:58:31.469"/>
</branch>
<status status="PASS" starttime="20241125 21:58:29.466" endtime="20241125 21:58:31.469"/>
</try>
<status status="PASS" starttime="20241125 21:58:29.466" endtime="20241125 21:58:31.469"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '7', 'testCaseId': '3', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:44.388Z', 'updatedAt': '2024-11-25T16:17:04.518Z', 'flow': {'id': '4', 'name': 'Create vehicle', 'projectId': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.473" level="INFO">${flow} = {'id': '4', 'name': 'Create vehicle', 'projectId': '1', 'createdAt': '2024-11-25T11:15:26.197Z', 'updatedAt': '2024-11-25T12:28:38.155Z', 'flowActionSequences': [{'id': '9', 'actionId': '9', 'flowId':...</msg>
<status status="PASS" starttime="20241125 21:58:31.472" endtime="20241125 21:58:31.473"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.474" endtime="20241125 21:58:31.474"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.478" endtime="20241125 21:58:31.479"/>
</kw>
<msg timestamp="20241125 21:58:31.479" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.478" endtime="20241125 21:58:31.479"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.481" level="INFO">${values} = [{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type...</msg>
<status status="PASS" starttime="20241125 21:58:31.480" endtime="20241125 21:58:31.481"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.483" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.482" endtime="20241125 21:58:31.483"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.482" endtime="20241125 21:58:31.483"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.483" endtime="20241125 21:58:31.483"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.483" endtime="20241125 21:58:31.484"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.481" endtime="20241125 21:58:31.484"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.480" endtime="20241125 21:58:31.484"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.480" endtime="20241125 21:58:31.484"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.484" endtime="20241125 21:58:31.484"/>
</return>
<msg timestamp="20241125 21:58:31.485" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.477" endtime="20241125 21:58:31.485"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '9', 'actionId': '9', 'flowId': '4', 'order': 0, 'createdAt': '2024-11-25T11:15:26.506Z', 'updatedAt': '2024-11-25T12:28:37.844Z', 'action': {'id': '9', 'name': 'Click Add vehicle icon', 'type'...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.486" level="INFO">${action} = {'id': '9', 'name': 'Click Add vehicle icon', 'type': 'CLICK', 'selectorI': '8', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:44:11.329Z', 'updatedAt': '2024-11-25T10:...</msg>
<status status="PASS" starttime="20241125 21:58:31.486" endtime="20241125 21:58:31.486"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.487" endtime="20241125 21:58:31.489"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:31.490" level="INFO">${input} = {'id': '10', 'actionId': '9', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:44:11.572Z', 'updatedAt': '2024-11-25T10:44:11.572Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.490" endtime="20241125 21:58:31.490"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.492" endtime="20241125 21:58:31.492"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.492" endtime="20241125 21:58:31.492"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.491" endtime="20241125 21:58:31.493"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.491" endtime="20241125 21:58:31.493"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.494" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:31.494" endtime="20241125 21:58:31.494"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.495" endtime="20241125 21:58:31.495"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.495" endtime="20241125 21:58:31.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.496" endtime="20241125 21:58:31.496"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.496" endtime="20241125 21:58:31.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.601" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state attached</msg>
<status status="PASS" starttime="20241125 21:58:31.510" endtime="20241125 21:58:31.602"/>
</kw>
<msg timestamp="20241125 21:58:31.602" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.509" endtime="20241125 21:58:31.602"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.602" endtime="20241125 21:58:31.602"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.509" endtime="20241125 21:58:31.602"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.602" endtime="20241125 21:58:31.603"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.603" endtime="20241125 21:58:31.603"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.602" endtime="20241125 21:58:31.603"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.508" endtime="20241125 21:58:31.603"/>
</try>
<msg timestamp="20241125 21:58:31.604" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.507" endtime="20241125 21:58:31.604"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.604" endtime="20241125 21:58:31.604"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.505" endtime="20241125 21:58:31.604"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.604" endtime="20241125 21:58:31.604"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.604" endtime="20241125 21:58:31.604"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.505" endtime="20241125 21:58:31.604"/>
</try>
<msg timestamp="20241125 21:58:31.605" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.504" endtime="20241125 21:58:31.605"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.607" endtime="20241125 21:58:31.608"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.608" endtime="20241125 21:58:31.608"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.607" endtime="20241125 21:58:31.608"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.607" endtime="20241125 21:58:31.608"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.606" endtime="20241125 21:58:31.608"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.502" endtime="20241125 21:58:31.608"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.634" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state visible</msg>
<status status="PASS" starttime="20241125 21:58:31.615" endtime="20241125 21:58:31.634"/>
</kw>
<msg timestamp="20241125 21:58:31.635" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.615" endtime="20241125 21:58:31.635"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.635" endtime="20241125 21:58:31.635"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.614" endtime="20241125 21:58:31.635"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.635" endtime="20241125 21:58:31.635"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.635" endtime="20241125 21:58:31.635"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.635" endtime="20241125 21:58:31.636"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.614" endtime="20241125 21:58:31.636"/>
</try>
<msg timestamp="20241125 21:58:31.636" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.614" endtime="20241125 21:58:31.636"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.636" endtime="20241125 21:58:31.636"/>
</return>
<msg timestamp="20241125 21:58:31.636" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.611" endtime="20241125 21:58:31.636"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.641" endtime="20241125 21:58:31.641"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.642" endtime="20241125 21:58:31.642"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.641" endtime="20241125 21:58:31.642"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.641" endtime="20241125 21:58:31.642"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.639" endtime="20241125 21:58:31.642"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.610" endtime="20241125 21:58:31.642"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.660" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]//parent::div//following-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:31.647" endtime="20241125 21:58:31.661"/>
</kw>
<msg timestamp="20241125 21:58:31.661" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.646" endtime="20241125 21:58:31.661"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.661" endtime="20241125 21:58:31.661"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.646" endtime="20241125 21:58:31.661"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.662" endtime="20241125 21:58:31.662"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.662" endtime="20241125 21:58:31.662"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.661" endtime="20241125 21:58:31.662"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.646" endtime="20241125 21:58:31.662"/>
</try>
<msg timestamp="20241125 21:58:31.662" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.646" endtime="20241125 21:58:31.662"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.663" endtime="20241125 21:58:31.663"/>
</return>
<msg timestamp="20241125 21:58:31.663" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.644" endtime="20241125 21:58:31.663"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.665" endtime="20241125 21:58:31.665"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.665" endtime="20241125 21:58:31.665"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.665" endtime="20241125 21:58:31.665"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.665" endtime="20241125 21:58:31.665"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.664" endtime="20241125 21:58:31.666"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.644" endtime="20241125 21:58:31.666"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.500" endtime="20241125 21:58:31.666"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.666" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:31.666" endtime="20241125 21:58:31.666"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.668" endtime="20241125 21:58:31.668"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.667" endtime="20241125 21:58:31.668"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.668" endtime="20241125 21:58:31.668"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.668" endtime="20241125 21:58:31.668"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.667" endtime="20241125 21:58:31.669"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:31.669" endtime="20241125 21:58:31.736"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.669" endtime="20241125 21:58:31.737"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.737" endtime="20241125 21:58:31.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.738" endtime="20241125 21:58:31.738"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.737" endtime="20241125 21:58:31.738"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.669" endtime="20241125 21:58:31.738"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.667" endtime="20241125 21:58:31.738"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.667" endtime="20241125 21:58:31.738"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.666" endtime="20241125 21:58:31.739"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.739" endtime="20241125 21:58:31.739"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.739" endtime="20241125 21:58:31.739"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.666" endtime="20241125 21:58:31.739"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.499" endtime="20241125 21:58:31.739"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.497" endtime="20241125 21:58:31.740"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.743" endtime="20241125 21:58:31.743"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.748" endtime="20241125 21:58:31.749"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.740" endtime="20241125 21:58:31.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.752" endtime="20241125 21:58:31.753"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.750" endtime="20241125 21:58:31.753"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.757" endtime="20241125 21:58:31.757"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.753" endtime="20241125 21:58:31.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.759" endtime="20241125 21:58:31.760"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.760" endtime="20241125 21:58:31.760"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.760" endtime="20241125 21:58:31.760"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.760" endtime="20241125 21:58:31.760"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.758" endtime="20241125 21:58:31.760"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.761" endtime="20241125 21:58:31.762"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.760" endtime="20241125 21:58:31.762"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.763" endtime="20241125 21:58:31.763"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.763" endtime="20241125 21:58:31.764"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.763" endtime="20241125 21:58:31.764"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.764" endtime="20241125 21:58:31.764"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.764" endtime="20241125 21:58:31.764"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.763" endtime="20241125 21:58:31.764"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.762" endtime="20241125 21:58:31.764"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.770" endtime="20241125 21:58:31.770"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.774" endtime="20241125 21:58:31.775"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.764" endtime="20241125 21:58:31.775"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.776" endtime="20241125 21:58:31.776"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.776" endtime="20241125 21:58:31.776"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.776" endtime="20241125 21:58:31.777"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.777" endtime="20241125 21:58:31.777"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.777" endtime="20241125 21:58:31.777"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.776" endtime="20241125 21:58:31.777"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.775" endtime="20241125 21:58:31.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.782" endtime="20241125 21:58:31.782"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.785" endtime="20241125 21:58:31.785"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.777" endtime="20241125 21:58:31.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.786" endtime="20241125 21:58:31.786"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.787" endtime="20241125 21:58:31.787"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.786" endtime="20241125 21:58:31.787"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.788" endtime="20241125 21:58:31.788"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.787" endtime="20241125 21:58:31.788"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.786" endtime="20241125 21:58:31.789"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.785" endtime="20241125 21:58:31.789"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.791" endtime="20241125 21:58:31.791"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.789" endtime="20241125 21:58:31.791"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.796" endtime="20241125 21:58:31.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.796" endtime="20241125 21:58:31.796"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.791" endtime="20241125 21:58:31.796"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.495" endtime="20241125 21:58:31.796"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.797" endtime="20241125 21:58:31.797"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:31.797" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:31.797" endtime="20241125 21:58:31.798"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:31.798" endtime="20241125 21:58:31.798"/>
</return>
<msg timestamp="20241125 21:58:31.798" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:31.493" endtime="20241125 21:58:31.798"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.799" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:9</msg>
<status status="PASS" starttime="20241125 21:58:31.799" endtime="20241125 21:58:31.799"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.800" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:31.799" endtime="20241125 21:58:31.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.800" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:31.800" endtime="20241125 21:58:31.800"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.801" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.800" endtime="20241125 21:58:31.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.801" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:31.801" endtime="20241125 21:58:31.801"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.802" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.801" endtime="20241125 21:58:31.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.802" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:31.802" endtime="20241125 21:58:31.802"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.803" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:31.802" endtime="20241125 21:58:31.803"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.803" endtime="20241125 21:58:31.803"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.806" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.806" endtime="20241125 21:58:31.806"/>
</kw>
<msg timestamp="20241125 21:58:31.806" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.805" endtime="20241125 21:58:31.806"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.807"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.807"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.808"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.808" endtime="20241125 21:58:31.808"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.808" endtime="20241125 21:58:31.808"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.808"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.808"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.807" endtime="20241125 21:58:31.808"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.808" endtime="20241125 21:58:31.808"/>
</return>
<msg timestamp="20241125 21:58:31.809" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.805" endtime="20241125 21:58:31.809"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.811" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.811" endtime="20241125 21:58:31.811"/>
</kw>
<msg timestamp="20241125 21:58:31.811" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.810" endtime="20241125 21:58:31.811"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.812"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.812"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.812"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.813" endtime="20241125 21:58:31.813"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.813"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.813"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.813"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.812" endtime="20241125 21:58:31.813"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.813" endtime="20241125 21:58:31.813"/>
</return>
<msg timestamp="20241125 21:58:31.813" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.810" endtime="20241125 21:58:31.813"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.814"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.814"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.814"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.814"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.815" endtime="20241125 21:58:31.815"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.815"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.815"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.815" endtime="20241125 21:58:31.815"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.815" endtime="20241125 21:58:31.815"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.815" endtime="20241125 21:58:31.815"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.815" endtime="20241125 21:58:31.815"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.814" endtime="20241125 21:58:31.815"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.813" endtime="20241125 21:58:31.815"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.816"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.816"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.816"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.817" endtime="20241125 21:58:31.817"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.817"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.817"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.817" endtime="20241125 21:58:31.817"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.817" endtime="20241125 21:58:31.817"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.817" endtime="20241125 21:58:31.817"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.817" endtime="20241125 21:58:31.817"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.817"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.816" endtime="20241125 21:58:31.817"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.799" endtime="20241125 21:58:31.818"/>
</iter>
<status status="PASS" starttime="20241125 21:58:31.799" endtime="20241125 21:58:31.818"/>
</for>
<msg timestamp="20241125 21:58:31.818" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:31.798" endtime="20241125 21:58:31.818"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.818" endtime="20241125 21:58:31.819"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.822" endtime="20241125 21:58:31.823"/>
</kw>
<msg timestamp="20241125 21:58:31.823" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.822" endtime="20241125 21:58:31.823"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.823" level="INFO">${values} = {'id': '8', 'name': 'Add vehicle icon', 'xpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T10:44:06.334Z', 'updatedAt': '2024-11-25T10:44:06...</msg>
<status status="PASS" starttime="20241125 21:58:31.823" endtime="20241125 21:58:31.824"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.824" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.824" endtime="20241125 21:58:31.824"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.824" endtime="20241125 21:58:31.824"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.824" endtime="20241125 21:58:31.825"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.824" endtime="20241125 21:58:31.825"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.824" endtime="20241125 21:58:31.825"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.823" endtime="20241125 21:58:31.825"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.823" endtime="20241125 21:58:31.825"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.825" endtime="20241125 21:58:31.825"/>
</return>
<msg timestamp="20241125 21:58:31.825" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.822" endtime="20241125 21:58:31.825"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.826" level="INFO">${xpath} = //p[text()="VEHICLE"]//parent::div//following-sibling::img</msg>
<status status="PASS" starttime="20241125 21:58:31.826" endtime="20241125 21:58:31.826"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.825" endtime="20241125 21:58:31.826"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.826" endtime="20241125 21:58:31.826"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.826" endtime="20241125 21:58:31.826"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.825" endtime="20241125 21:58:31.826"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.827" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '376', 'status': 'COMPLETED', 'actionName': 'Click Add vehicle icon', 'actionType': 'CLICK', 'actionXpath': '//p[text()="VEHICLE"]//parent::div//following-sibling::img'...</msg>
<status status="PASS" starttime="20241125 21:58:31.827" endtime="20241125 21:58:31.827"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:31.828" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "376", "status": "COMPLETED", "actionName": "Click Add vehicle icon", "actionType": "CLICK", "actionXpath": "//p[text()=\"VEHICLE\"]//parent::div//following-sibling::im...</msg>
<status status="PASS" starttime="20241125 21:58:31.828" endtime="20241125 21:58:31.828"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:31.831" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:31.831" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:31.829" endtime="20241125 21:58:31.832"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.832" endtime="20241125 21:58:31.832"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:31.832" endtime="20241125 21:58:31.833"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.828" endtime="20241125 21:58:31.833"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.819" endtime="20241125 21:58:31.833"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.486" endtime="20241125 21:58:31.833"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.834" endtime="20241125 21:58:31.834"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.834" endtime="20241125 21:58:31.834"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.834" endtime="20241125 21:58:31.834"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.833" endtime="20241125 21:58:31.834"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.486" endtime="20241125 21:58:31.835"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.485" endtime="20241125 21:58:31.835"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '10', 'actionId': '10', 'flowId': '4', 'order': 1, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.853Z', 'action': {'id': '10', 'name': 'Is vehicle details popup fou...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.836" level="INFO">${action} = {'id': '10', 'name': 'Is vehicle details popup found', 'type': 'IS_ELEMENT_VISIBLE', 'selectorI': '9', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:46:45.996Z', 'updat...</msg>
<status status="PASS" starttime="20241125 21:58:31.835" endtime="20241125 21:58:31.836"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.836" endtime="20241125 21:58:31.837"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:31.838" level="INFO">${input} = {'id': '11', 'actionId': '10', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:46:46.217Z', 'updatedAt': '2024-11-25T10:46:46.217Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.838" endtime="20241125 21:58:31.838"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.839" endtime="20241125 21:58:31.839"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.839" endtime="20241125 21:58:31.840"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.839" endtime="20241125 21:58:31.840"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.839" endtime="20241125 21:58:31.840"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.841" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:31.840" endtime="20241125 21:58:31.841"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.841" endtime="20241125 21:58:31.841"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.841" endtime="20241125 21:58:31.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.841" endtime="20241125 21:58:31.842"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.841" endtime="20241125 21:58:31.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.843" endtime="20241125 21:58:31.843"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.842" endtime="20241125 21:58:31.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.845" endtime="20241125 21:58:31.845"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.847" endtime="20241125 21:58:31.847"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.843" endtime="20241125 21:58:31.847"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.848" endtime="20241125 21:58:31.848"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.847" endtime="20241125 21:58:31.849"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.851" endtime="20241125 21:58:31.851"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.849" endtime="20241125 21:58:31.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.853" endtime="20241125 21:58:31.853"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.854" endtime="20241125 21:58:31.854"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.854" endtime="20241125 21:58:31.854"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.853" endtime="20241125 21:58:31.854"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.851" endtime="20241125 21:58:31.854"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.855" endtime="20241125 21:58:31.856"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.854" endtime="20241125 21:58:31.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.857" endtime="20241125 21:58:31.857"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.857" endtime="20241125 21:58:31.858"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.857" endtime="20241125 21:58:31.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.858" endtime="20241125 21:58:31.858"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.858" endtime="20241125 21:58:31.858"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.857" endtime="20241125 21:58:31.858"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.856" endtime="20241125 21:58:31.858"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.863" endtime="20241125 21:58:31.863"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.865" endtime="20241125 21:58:31.865"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.858" endtime="20241125 21:58:31.865"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.866" endtime="20241125 21:58:31.866"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.867"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.867"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.867"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.867"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.867"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.866" endtime="20241125 21:58:31.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:31.872" endtime="20241125 21:58:31.873"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.875" endtime="20241125 21:58:31.875"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.867" endtime="20241125 21:58:31.875"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.885" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:31.879" endtime="20241125 21:58:31.885"/>
</kw>
<msg timestamp="20241125 21:58:31.885" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.879" endtime="20241125 21:58:31.885"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.885" endtime="20241125 21:58:31.885"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.879" endtime="20241125 21:58:31.885"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.886" endtime="20241125 21:58:31.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.886" endtime="20241125 21:58:31.886"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.885" endtime="20241125 21:58:31.886"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.878" endtime="20241125 21:58:31.886"/>
</try>
<msg timestamp="20241125 21:58:31.887" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.878" endtime="20241125 21:58:31.887"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.887" endtime="20241125 21:58:31.887"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.877" endtime="20241125 21:58:31.887"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.887" endtime="20241125 21:58:31.887"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.887" endtime="20241125 21:58:31.887"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.877" endtime="20241125 21:58:31.888"/>
</try>
<msg timestamp="20241125 21:58:31.888" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.877" endtime="20241125 21:58:31.888"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.889" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241125 21:58:31.888" endtime="20241125 21:58:31.889"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.888" endtime="20241125 21:58:31.889"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.889" endtime="20241125 21:58:31.889"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.889" endtime="20241125 21:58:31.889"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.888" endtime="20241125 21:58:31.889"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.876" endtime="20241125 21:58:31.889"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.891" endtime="20241125 21:58:31.891"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.889" endtime="20241125 21:58:31.891"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.895" endtime="20241125 21:58:31.895"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.895" endtime="20241125 21:58:31.895"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.891" endtime="20241125 21:58:31.895"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.841" endtime="20241125 21:58:31.896"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.896" endtime="20241125 21:58:31.896"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:31.897" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:31.896" endtime="20241125 21:58:31.897"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:31.897" endtime="20241125 21:58:31.897"/>
</return>
<msg timestamp="20241125 21:58:31.897" level="INFO">${value} = TRUE</msg>
<status status="PASS" starttime="20241125 21:58:31.840" endtime="20241125 21:58:31.897"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.898" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:10</msg>
<status status="PASS" starttime="20241125 21:58:31.898" endtime="20241125 21:58:31.898"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.898" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:31.898" endtime="20241125 21:58:31.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.899" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:31.899" endtime="20241125 21:58:31.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.899" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.899" endtime="20241125 21:58:31.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.899" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:31.899" endtime="20241125 21:58:31.899"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.900" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.900" endtime="20241125 21:58:31.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.900" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:31.900" endtime="20241125 21:58:31.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.901" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:31.900" endtime="20241125 21:58:31.901"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.901" endtime="20241125 21:58:31.901"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.903" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.903" endtime="20241125 21:58:31.903"/>
</kw>
<msg timestamp="20241125 21:58:31.904" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.902" endtime="20241125 21:58:31.904"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.904"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.905"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.905"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.905" endtime="20241125 21:58:31.905"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.905" endtime="20241125 21:58:31.905"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.905"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.905"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.904" endtime="20241125 21:58:31.905"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.905" endtime="20241125 21:58:31.905"/>
</return>
<msg timestamp="20241125 21:58:31.905" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.902" endtime="20241125 21:58:31.905"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:31.908" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:31.907" endtime="20241125 21:58:31.908"/>
</kw>
<msg timestamp="20241125 21:58:31.908" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.907" endtime="20241125 21:58:31.908"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.908" endtime="20241125 21:58:31.908"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.909" endtime="20241125 21:58:31.909"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.908" endtime="20241125 21:58:31.909"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.909" endtime="20241125 21:58:31.909"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.909" endtime="20241125 21:58:31.909"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.908" endtime="20241125 21:58:31.909"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.908" endtime="20241125 21:58:31.909"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.908" endtime="20241125 21:58:31.909"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.909" endtime="20241125 21:58:31.909"/>
</return>
<msg timestamp="20241125 21:58:31.910" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:31.907" endtime="20241125 21:58:31.910"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.910"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.910"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.910"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.911"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.911"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.911"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.911"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.911"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.912"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.912"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.911" endtime="20241125 21:58:31.912"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.912"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.910" endtime="20241125 21:58:31.912"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.913"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.913"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.913"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.914" endtime="20241125 21:58:31.914"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.914"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.914"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.914" endtime="20241125 21:58:31.914"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.914" endtime="20241125 21:58:31.914"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.914" endtime="20241125 21:58:31.914"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:31.914" endtime="20241125 21:58:31.914"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:31.913" endtime="20241125 21:58:31.914"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.912" endtime="20241125 21:58:31.915"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.898" endtime="20241125 21:58:31.915"/>
</iter>
<status status="PASS" starttime="20241125 21:58:31.898" endtime="20241125 21:58:31.915"/>
</for>
<msg timestamp="20241125 21:58:31.915" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:31.897" endtime="20241125 21:58:31.915"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.915" endtime="20241125 21:58:31.916"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:31.919" endtime="20241125 21:58:31.919"/>
</kw>
<msg timestamp="20241125 21:58:31.919" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.918" endtime="20241125 21:58:31.919"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.920" level="INFO">${values} = {'id': '9', 'name': 'Add Vehicle popup heading', 'xpath': '//h6[text()="Add Vehicle Details"]', 'pageId': '3', 'createdAt': '2024-11-25T10:46:44.506Z', 'updatedAt': '2024-11-25T10:46:44.506Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.919" endtime="20241125 21:58:31.920"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.920" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.920" endtime="20241125 21:58:31.920"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.920" endtime="20241125 21:58:31.921"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.921" endtime="20241125 21:58:31.921"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.921" endtime="20241125 21:58:31.921"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.920" endtime="20241125 21:58:31.921"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.919" endtime="20241125 21:58:31.921"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.919" endtime="20241125 21:58:31.921"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:31.921" endtime="20241125 21:58:31.921"/>
</return>
<msg timestamp="20241125 21:58:31.922" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.918" endtime="20241125 21:58:31.922"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.923" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]</msg>
<status status="PASS" starttime="20241125 21:58:31.922" endtime="20241125 21:58:31.923"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.922" endtime="20241125 21:58:31.923"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.923" endtime="20241125 21:58:31.923"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.923" endtime="20241125 21:58:31.923"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.922" endtime="20241125 21:58:31.923"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:31.924" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '377', 'status': 'COMPLETED', 'actionName': 'Is vehicle details popup found', 'actionType': 'IS_ELEMENT_VISIBLE', 'actionXpath': '//h6[text()="Add Vehicle Details"]', '...</msg>
<status status="PASS" starttime="20241125 21:58:31.923" endtime="20241125 21:58:31.924"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:31.925" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "377", "status": "COMPLETED", "actionName": "Is vehicle details popup found", "actionType": "IS_ELEMENT_VISIBLE", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]",...</msg>
<status status="PASS" starttime="20241125 21:58:31.925" endtime="20241125 21:58:31.925"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:31.958" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:31.959" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:31.925" endtime="20241125 21:58:31.959"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.959" endtime="20241125 21:58:31.959"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:31.959" endtime="20241125 21:58:31.959"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.924" endtime="20241125 21:58:31.960"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.916" endtime="20241125 21:58:31.960"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.835" endtime="20241125 21:58:31.960"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.960" endtime="20241125 21:58:31.960"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.960" endtime="20241125 21:58:31.960"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.961" endtime="20241125 21:58:31.961"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.960" endtime="20241125 21:58:31.961"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.835" endtime="20241125 21:58:31.961"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.835" endtime="20241125 21:58:31.961"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '11', 'actionId': '11', 'flowId': '4', 'order': 2, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.858Z', 'action': {'id': '11', 'name': 'Enter Vehicle type', 'type':...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.962" level="INFO">${action} = {'id': '11', 'name': 'Enter Vehicle type', 'type': 'TYPE_TEXT', 'selectorI': '10', 'valueRege': '', 'projectId': '1', 'enter': True, 'createdAt': '2024-11-25T10:49:11.179Z', 'updatedAt': '2024-11-25T1...</msg>
<status status="PASS" starttime="20241125 21:58:31.961" endtime="20241125 21:58:31.962"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:31.962" endtime="20241125 21:58:31.962"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:31.963" level="INFO">${input} = {'id': '12', 'actionId': '11', 'name': 'Two wheeler', 'value': '2 Wheeler', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:49:11.397Z', 'updatedAt': '2024-11-25T12:27:35.774Z'}</msg>
<status status="PASS" starttime="20241125 21:58:31.962" endtime="20241125 21:58:31.963"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.963" endtime="20241125 21:58:31.963"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.963" endtime="20241125 21:58:31.963"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.963" endtime="20241125 21:58:31.963"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.963" endtime="20241125 21:58:31.963"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:31.964" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241125 21:58:31.964" endtime="20241125 21:58:31.964"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.965" endtime="20241125 21:58:31.965"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.965" endtime="20241125 21:58:31.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:31.965" endtime="20241125 21:58:31.965"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.965" endtime="20241125 21:58:31.965"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.967" endtime="20241125 21:58:31.967"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.965" endtime="20241125 21:58:31.967"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.969" endtime="20241125 21:58:31.969"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.970" endtime="20241125 21:58:31.970"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.967" endtime="20241125 21:58:31.971"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.972" endtime="20241125 21:58:31.972"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.971" endtime="20241125 21:58:31.972"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.975" endtime="20241125 21:58:31.975"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.972" endtime="20241125 21:58:31.975"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:31.987" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241125 21:58:31.982" endtime="20241125 21:58:31.987"/>
</kw>
<msg timestamp="20241125 21:58:31.987" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.981" endtime="20241125 21:58:31.987"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.987" endtime="20241125 21:58:31.987"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.981" endtime="20241125 21:58:31.987"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.988" endtime="20241125 21:58:31.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.988" endtime="20241125 21:58:31.988"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.987" endtime="20241125 21:58:31.988"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.981" endtime="20241125 21:58:31.988"/>
</try>
<msg timestamp="20241125 21:58:31.989" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.981" endtime="20241125 21:58:31.989"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:31.989" endtime="20241125 21:58:31.989"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.980" endtime="20241125 21:58:31.989"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:31.989" endtime="20241125 21:58:31.989"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:31.989" endtime="20241125 21:58:31.989"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.980" endtime="20241125 21:58:31.989"/>
</try>
<msg timestamp="20241125 21:58:31.990" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.980" endtime="20241125 21:58:31.990"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.992" endtime="20241125 21:58:31.992"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:31.992" endtime="20241125 21:58:31.992"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:31.991" endtime="20241125 21:58:31.992"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.991" endtime="20241125 21:58:31.992"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.991" endtime="20241125 21:58:31.992"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.979" endtime="20241125 21:58:31.992"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.006" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state attached</msg>
<status status="PASS" starttime="20241125 21:58:31.999" endtime="20241125 21:58:32.006"/>
</kw>
<msg timestamp="20241125 21:58:32.007" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.998" endtime="20241125 21:58:32.007"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.007" endtime="20241125 21:58:32.007"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.998" endtime="20241125 21:58:32.007"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.007" endtime="20241125 21:58:32.008"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.008" endtime="20241125 21:58:32.008"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.007" endtime="20241125 21:58:32.008"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.998" endtime="20241125 21:58:32.008"/>
</try>
<msg timestamp="20241125 21:58:32.008" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.998" endtime="20241125 21:58:32.008"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.008" endtime="20241125 21:58:32.009"/>
</return>
<status status="PASS" starttime="20241125 21:58:31.997" endtime="20241125 21:58:32.009"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.009" endtime="20241125 21:58:32.009"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.009" endtime="20241125 21:58:32.009"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.997" endtime="20241125 21:58:32.009"/>
</try>
<msg timestamp="20241125 21:58:32.009" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:31.997" endtime="20241125 21:58:32.009"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.012" endtime="20241125 21:58:32.012"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.012" endtime="20241125 21:58:32.012"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.012" endtime="20241125 21:58:32.012"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.012" endtime="20241125 21:58:32.013"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.011" endtime="20241125 21:58:32.013"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.996" endtime="20241125 21:58:32.013"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 21:58:32.024" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 21:58:32.024" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:32.013" endtime="20241125 21:58:32.024"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 21:58:32.024" endtime="20241125 21:58:32.024"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.013" endtime="20241125 21:58:32.024"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.024" endtime="20241125 21:58:32.025"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.025" endtime="20241125 21:58:32.025"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.024" endtime="20241125 21:58:32.025"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.013" endtime="20241125 21:58:32.025"/>
</try>
<msg timestamp="20241125 21:58:32.025" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:31.995" endtime="20241125 21:58:32.025"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.027" endtime="20241125 21:58:32.027"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.027" endtime="20241125 21:58:32.027"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.027" endtime="20241125 21:58:32.027"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.027" endtime="20241125 21:58:32.027"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.026" endtime="20241125 21:58:32.028"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.994" endtime="20241125 21:58:32.028"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.028" endtime="20241125 21:58:32.028"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.028" endtime="20241125 21:58:32.028"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.994" endtime="20241125 21:58:32.028"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.994" endtime="20241125 21:58:32.028"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.038" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state visible</msg>
<status status="PASS" starttime="20241125 21:58:32.032" endtime="20241125 21:58:32.038"/>
</kw>
<msg timestamp="20241125 21:58:32.039" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.031" endtime="20241125 21:58:32.039"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.039" endtime="20241125 21:58:32.039"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.031" endtime="20241125 21:58:32.039"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.039" endtime="20241125 21:58:32.039"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.039" endtime="20241125 21:58:32.039"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.039" endtime="20241125 21:58:32.039"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.031" endtime="20241125 21:58:32.039"/>
</try>
<msg timestamp="20241125 21:58:32.040" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.031" endtime="20241125 21:58:32.040"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.040" endtime="20241125 21:58:32.040"/>
</return>
<msg timestamp="20241125 21:58:32.040" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.030" endtime="20241125 21:58:32.040"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.042" endtime="20241125 21:58:32.042"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.042" endtime="20241125 21:58:32.042"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.042" endtime="20241125 21:58:32.042"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.042" endtime="20241125 21:58:32.042"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.041" endtime="20241125 21:58:32.043"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.030" endtime="20241125 21:58:32.043"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.977" endtime="20241125 21:58:32.043"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.059" level="INFO">Waited for Element with selector //div[text()="Select vehicle type"]//following-sibling::div/input at state editable</msg>
<status status="PASS" starttime="20241125 21:58:32.047" endtime="20241125 21:58:32.060"/>
</kw>
<msg timestamp="20241125 21:58:32.060" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.047" endtime="20241125 21:58:32.060"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.060" endtime="20241125 21:58:32.060"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.047" endtime="20241125 21:58:32.060"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.060" endtime="20241125 21:58:32.060"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.061" endtime="20241125 21:58:32.061"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.060" endtime="20241125 21:58:32.061"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.046" endtime="20241125 21:58:32.061"/>
</try>
<msg timestamp="20241125 21:58:32.061" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.046" endtime="20241125 21:58:32.061"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.061" endtime="20241125 21:58:32.061"/>
</return>
<msg timestamp="20241125 21:58:32.061" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.045" endtime="20241125 21:58:32.061"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.063" endtime="20241125 21:58:32.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.064" endtime="20241125 21:58:32.064"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.063" endtime="20241125 21:58:32.064"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.063" endtime="20241125 21:58:32.064"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.062" endtime="20241125 21:58:32.064"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.045" endtime="20241125 21:58:32.064"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.065" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:32.064" endtime="20241125 21:58:32.065"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//div[text()="Select vehicle type"]//following-sibling::div/input: string</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.066" endtime="20241125 21:58:32.066"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.068" endtime="20241125 21:58:32.068"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.066" endtime="20241125 21:58:32.068"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.068" endtime="20241125 21:58:32.069"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.068" endtime="20241125 21:58:32.069"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.066" endtime="20241125 21:58:32.069"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 21:58:32.069" level="INFO">Fills the text '2 Wheeler' in the given field.</msg>
<status status="PASS" starttime="20241125 21:58:32.069" endtime="20241125 21:58:32.099"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.069" endtime="20241125 21:58:32.099"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.100" endtime="20241125 21:58:32.100"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.100" endtime="20241125 21:58:32.100"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.099" endtime="20241125 21:58:32.100"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.069" endtime="20241125 21:58:32.100"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.065" endtime="20241125 21:58:32.100"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.065" endtime="20241125 21:58:32.101"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.065" endtime="20241125 21:58:32.101"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.101" endtime="20241125 21:58:32.101"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.101" endtime="20241125 21:58:32.101"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.065" endtime="20241125 21:58:32.101"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.977" endtime="20241125 21:58:32.101"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="PASS" starttime="20241125 21:58:32.102" endtime="20241125 21:58:32.113"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.102" endtime="20241125 21:58:32.113"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.101" endtime="20241125 21:58:32.114"/>
</if>
<status status="PASS" starttime="20241125 21:58:31.975" endtime="20241125 21:58:32.114"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.115" endtime="20241125 21:58:32.116"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.114" endtime="20241125 21:58:32.116"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.117" endtime="20241125 21:58:32.117"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.117" endtime="20241125 21:58:32.117"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.117" endtime="20241125 21:58:32.118"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.118" endtime="20241125 21:58:32.118"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.118" endtime="20241125 21:58:32.118"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.117" endtime="20241125 21:58:32.118"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.116" endtime="20241125 21:58:32.118"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.123" endtime="20241125 21:58:32.123"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.125" endtime="20241125 21:58:32.125"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.118" endtime="20241125 21:58:32.126"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.127"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.127"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.127"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.127"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.127"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.127" endtime="20241125 21:58:32.128"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.126" endtime="20241125 21:58:32.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.132" endtime="20241125 21:58:32.133"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.135" endtime="20241125 21:58:32.135"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.128" endtime="20241125 21:58:32.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.137"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.137"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.137"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.138"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.138"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.137" endtime="20241125 21:58:32.138"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.135" endtime="20241125 21:58:32.138"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.140" endtime="20241125 21:58:32.140"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.138" endtime="20241125 21:58:32.140"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.144" endtime="20241125 21:58:32.144"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.145" endtime="20241125 21:58:32.145"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.140" endtime="20241125 21:58:32.145"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.964" endtime="20241125 21:58:32.145"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.145" endtime="20241125 21:58:32.146"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:32.146" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:32.146" endtime="20241125 21:58:32.146"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:32.146" endtime="20241125 21:58:32.146"/>
</return>
<msg timestamp="20241125 21:58:32.146" level="INFO">${value} = 2 Wheeler</msg>
<status status="PASS" starttime="20241125 21:58:31.964" endtime="20241125 21:58:32.146"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.147" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:11</msg>
<status status="PASS" starttime="20241125 21:58:32.147" endtime="20241125 21:58:32.147"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.148" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:32.148" endtime="20241125 21:58:32.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.148" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:32.148" endtime="20241125 21:58:32.148"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.149" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.148" endtime="20241125 21:58:32.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.149" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:32.149" endtime="20241125 21:58:32.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.149" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.149" endtime="20241125 21:58:32.149"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.150" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.150" endtime="20241125 21:58:32.150"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.150" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:32.150" endtime="20241125 21:58:32.150"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.150" endtime="20241125 21:58:32.151"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:32.153" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:32.152" endtime="20241125 21:58:32.153"/>
</kw>
<msg timestamp="20241125 21:58:32.153" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.152" endtime="20241125 21:58:32.153"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.154"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.154"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.154"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.154"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.154"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.154" endtime="20241125 21:58:32.155"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.153" endtime="20241125 21:58:32.155"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.153" endtime="20241125 21:58:32.155"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.155" endtime="20241125 21:58:32.155"/>
</return>
<msg timestamp="20241125 21:58:32.155" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.152" endtime="20241125 21:58:32.155"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:32.158" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:13'.</msg>
<status status="FAIL" starttime="20241125 21:58:32.157" endtime="20241125 21:58:32.158"/>
</kw>
<msg timestamp="20241125 21:58:32.158" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.157" endtime="20241125 21:58:32.158"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.159" endtime="20241125 21:58:32.159"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.158" endtime="20241125 21:58:32.160"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.158" endtime="20241125 21:58:32.160"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.160" endtime="20241125 21:58:32.160"/>
</return>
<msg timestamp="20241125 21:58:32.160" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.156" endtime="20241125 21:58:32.160"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.161"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.161"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.161"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.162"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.162"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.162"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.162"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.162"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.162"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.163"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.162" endtime="20241125 21:58:32.163"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.161" endtime="20241125 21:58:32.163"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.160" endtime="20241125 21:58:32.163"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.163" endtime="20241125 21:58:32.164"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.163" endtime="20241125 21:58:32.164"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.163" endtime="20241125 21:58:32.164"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.164"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.164"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.164"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.164"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.165"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.165"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.164" endtime="20241125 21:58:32.165"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.163" endtime="20241125 21:58:32.165"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.163" endtime="20241125 21:58:32.165"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.148" endtime="20241125 21:58:32.165"/>
</iter>
<status status="PASS" starttime="20241125 21:58:32.147" endtime="20241125 21:58:32.165"/>
</for>
<msg timestamp="20241125 21:58:32.165" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:32.147" endtime="20241125 21:58:32.165"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.165" endtime="20241125 21:58:32.166"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.169" endtime="20241125 21:58:32.169"/>
</kw>
<msg timestamp="20241125 21:58:32.169" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.169" endtime="20241125 21:58:32.169"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.170" level="INFO">${values} = {'id': '10', 'name': 'Vehicle type', 'xpath': '//div[text()="Select vehicle type"]//following-sibling::div/input', 'pageId': '3', 'createdAt': '2024-11-25T10:49:09.637Z', 'updatedAt': '2024-11-25T11:1...</msg>
<status status="PASS" starttime="20241125 21:58:32.170" endtime="20241125 21:58:32.170"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.171" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.171" endtime="20241125 21:58:32.171"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.170" endtime="20241125 21:58:32.171"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.171" endtime="20241125 21:58:32.171"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.171" endtime="20241125 21:58:32.171"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.170" endtime="20241125 21:58:32.171"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.170" endtime="20241125 21:58:32.172"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.169" endtime="20241125 21:58:32.172"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.172" endtime="20241125 21:58:32.172"/>
</return>
<msg timestamp="20241125 21:58:32.172" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.168" endtime="20241125 21:58:32.172"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.173" level="INFO">${xpath} = //div[text()="Select vehicle type"]//following-sibling::div/input</msg>
<status status="PASS" starttime="20241125 21:58:32.172" endtime="20241125 21:58:32.173"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.172" endtime="20241125 21:58:32.173"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.173" endtime="20241125 21:58:32.173"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.173" endtime="20241125 21:58:32.173"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.172" endtime="20241125 21:58:32.173"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.174" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '378', 'status': 'COMPLETED', 'actionName': 'Enter Vehicle type', 'actionType': 'TYPE_TEXT', 'actionXpath': '//div[text()="Select vehicle type"]//following-sibling::div...</msg>
<status status="PASS" starttime="20241125 21:58:32.173" endtime="20241125 21:58:32.174"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:32.175" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "378", "status": "COMPLETED", "actionName": "Enter Vehicle type", "actionType": "TYPE_TEXT", "actionXpath": "//div[text()=\"Select vehicle type\"]//following-sibling::d...</msg>
<status status="PASS" starttime="20241125 21:58:32.174" endtime="20241125 21:58:32.175"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:32.217" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:32.217" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:32.175" endtime="20241125 21:58:32.217"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.218" endtime="20241125 21:58:32.218"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:32.218" endtime="20241125 21:58:32.218"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.174" endtime="20241125 21:58:32.218"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.166" endtime="20241125 21:58:32.219"/>
</kw>
<status status="PASS" starttime="20241125 21:58:31.961" endtime="20241125 21:58:32.219"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.219" endtime="20241125 21:58:32.220"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.220" endtime="20241125 21:58:32.220"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.220" endtime="20241125 21:58:32.220"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.219" endtime="20241125 21:58:32.220"/>
</branch>
<status status="PASS" starttime="20241125 21:58:31.961" endtime="20241125 21:58:32.220"/>
</try>
<status status="PASS" starttime="20241125 21:58:31.961" endtime="20241125 21:58:32.220"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '13', 'actionId': '12', 'flowId': '4', 'order': 3, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.860Z', 'action': {'id': '12', 'name': 'Enter vehicle number', 'type...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.222" level="INFO">${action} = {'id': '12', 'name': 'Enter vehicle number', 'type': 'TYPE_TEXT', 'selectorI': '11', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:54:49.286Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241125 21:58:32.221" endtime="20241125 21:58:32.222"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.222" endtime="20241125 21:58:32.222"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:32.223" level="INFO">${input} = {'id': '13', 'actionId': '12', 'name': 'Bharani Bike number', 'value': 'TN91 T9861', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:54:49.735Z', 'updatedAt': '2024-11-25T11:18:...</msg>
<status status="PASS" starttime="20241125 21:58:32.223" endtime="20241125 21:58:32.223"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.224" endtime="20241125 21:58:32.224"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.224" endtime="20241125 21:58:32.224"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.224" endtime="20241125 21:58:32.224"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.223" endtime="20241125 21:58:32.224"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.225" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:32.225" endtime="20241125 21:58:32.225"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.226" endtime="20241125 21:58:32.226"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.226" endtime="20241125 21:58:32.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.226" endtime="20241125 21:58:32.226"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.226" endtime="20241125 21:58:32.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.228" endtime="20241125 21:58:32.228"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.227" endtime="20241125 21:58:32.228"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.230" endtime="20241125 21:58:32.230"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.232" endtime="20241125 21:58:32.232"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.228" endtime="20241125 21:58:32.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.233" endtime="20241125 21:58:32.233"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.232" endtime="20241125 21:58:32.233"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.235" endtime="20241125 21:58:32.236"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.233" endtime="20241125 21:58:32.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.250" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241125 21:58:32.246" endtime="20241125 21:58:32.250"/>
</kw>
<msg timestamp="20241125 21:58:32.250" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.246" endtime="20241125 21:58:32.250"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.250" endtime="20241125 21:58:32.250"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.245" endtime="20241125 21:58:32.250"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.251" endtime="20241125 21:58:32.251"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.251" endtime="20241125 21:58:32.251"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.251" endtime="20241125 21:58:32.251"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.245" endtime="20241125 21:58:32.251"/>
</try>
<msg timestamp="20241125 21:58:32.251" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.245" endtime="20241125 21:58:32.251"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.251" endtime="20241125 21:58:32.251"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.244" endtime="20241125 21:58:32.252"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.252" endtime="20241125 21:58:32.252"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.252" endtime="20241125 21:58:32.252"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.244" endtime="20241125 21:58:32.252"/>
</try>
<msg timestamp="20241125 21:58:32.253" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.244" endtime="20241125 21:58:32.253"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.255" endtime="20241125 21:58:32.255"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.256" endtime="20241125 21:58:32.256"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.255" endtime="20241125 21:58:32.256"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.255" endtime="20241125 21:58:32.256"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.254" endtime="20241125 21:58:32.256"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.243" endtime="20241125 21:58:32.256"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.269" level="INFO">Waited for Element with selector id=vehicleNumber at state attached</msg>
<status status="PASS" starttime="20241125 21:58:32.263" endtime="20241125 21:58:32.269"/>
</kw>
<msg timestamp="20241125 21:58:32.269" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.263" endtime="20241125 21:58:32.270"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.270" endtime="20241125 21:58:32.270"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.263" endtime="20241125 21:58:32.270"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.270" endtime="20241125 21:58:32.271"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.271" endtime="20241125 21:58:32.271"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.270" endtime="20241125 21:58:32.271"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.263" endtime="20241125 21:58:32.271"/>
</try>
<msg timestamp="20241125 21:58:32.272" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.262" endtime="20241125 21:58:32.272"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.272" endtime="20241125 21:58:32.272"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.261" endtime="20241125 21:58:32.272"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.272" endtime="20241125 21:58:32.272"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.272" endtime="20241125 21:58:32.272"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.261" endtime="20241125 21:58:32.272"/>
</try>
<msg timestamp="20241125 21:58:32.272" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.261" endtime="20241125 21:58:32.272"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.274" endtime="20241125 21:58:32.275"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.275" endtime="20241125 21:58:32.275"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.274" endtime="20241125 21:58:32.275"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.274" endtime="20241125 21:58:32.275"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.273" endtime="20241125 21:58:32.275"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.261" endtime="20241125 21:58:32.275"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 21:58:32.285" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241125 21:58:32.285" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:32.276" endtime="20241125 21:58:32.285"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 21:58:32.285" endtime="20241125 21:58:32.285"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.275" endtime="20241125 21:58:32.286"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.286" endtime="20241125 21:58:32.286"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.286" endtime="20241125 21:58:32.286"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.286" endtime="20241125 21:58:32.286"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.275" endtime="20241125 21:58:32.286"/>
</try>
<msg timestamp="20241125 21:58:32.287" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241125 21:58:32.259" endtime="20241125 21:58:32.287"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.289" endtime="20241125 21:58:32.289"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.289" endtime="20241125 21:58:32.289"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.288" endtime="20241125 21:58:32.289"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.288" endtime="20241125 21:58:32.289"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.288" endtime="20241125 21:58:32.289"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.258" endtime="20241125 21:58:32.289"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.289" endtime="20241125 21:58:32.289"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.289" endtime="20241125 21:58:32.290"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.258" endtime="20241125 21:58:32.290"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.258" endtime="20241125 21:58:32.290"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.299" level="INFO">Waited for Element with selector id=vehicleNumber at state visible</msg>
<status status="PASS" starttime="20241125 21:58:32.294" endtime="20241125 21:58:32.299"/>
</kw>
<msg timestamp="20241125 21:58:32.299" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.293" endtime="20241125 21:58:32.299"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.299" endtime="20241125 21:58:32.299"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.293" endtime="20241125 21:58:32.299"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.299" endtime="20241125 21:58:32.299"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.300" endtime="20241125 21:58:32.300"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.299" endtime="20241125 21:58:32.300"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.293" endtime="20241125 21:58:32.300"/>
</try>
<msg timestamp="20241125 21:58:32.300" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.293" endtime="20241125 21:58:32.300"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.300" endtime="20241125 21:58:32.300"/>
</return>
<msg timestamp="20241125 21:58:32.300" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.292" endtime="20241125 21:58:32.300"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.303" endtime="20241125 21:58:32.303"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.303" endtime="20241125 21:58:32.303"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.302" endtime="20241125 21:58:32.303"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.302" endtime="20241125 21:58:32.303"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.301" endtime="20241125 21:58:32.303"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.291" endtime="20241125 21:58:32.303"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.242" endtime="20241125 21:58:32.303"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.320" level="INFO">Waited for Element with selector id=vehicleNumber at state editable</msg>
<status status="PASS" starttime="20241125 21:58:32.308" endtime="20241125 21:58:32.320"/>
</kw>
<msg timestamp="20241125 21:58:32.320" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.308" endtime="20241125 21:58:32.320"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.320" endtime="20241125 21:58:32.320"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.307" endtime="20241125 21:58:32.320"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.320" endtime="20241125 21:58:32.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.321" endtime="20241125 21:58:32.321"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.320" endtime="20241125 21:58:32.321"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.307" endtime="20241125 21:58:32.321"/>
</try>
<msg timestamp="20241125 21:58:32.321" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.307" endtime="20241125 21:58:32.321"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.321" endtime="20241125 21:58:32.321"/>
</return>
<msg timestamp="20241125 21:58:32.321" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.306" endtime="20241125 21:58:32.322"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.323" endtime="20241125 21:58:32.324"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.324" endtime="20241125 21:58:32.324"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.323" endtime="20241125 21:58:32.324"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.323" endtime="20241125 21:58:32.324"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.322" endtime="20241125 21:58:32.324"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.305" endtime="20241125 21:58:32.324"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.325" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:32.324" endtime="20241125 21:58:32.325"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=vehicleNumber: string</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.326" endtime="20241125 21:58:32.326"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.327" endtime="20241125 21:58:32.327"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.326" endtime="20241125 21:58:32.327"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.328" endtime="20241125 21:58:32.328"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.328" endtime="20241125 21:58:32.328"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.325" endtime="20241125 21:58:32.328"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241125 21:58:32.329" level="INFO">Fills the text 'TN91 T9861' in the given field.</msg>
<status status="PASS" starttime="20241125 21:58:32.328" endtime="20241125 21:58:32.361"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.328" endtime="20241125 21:58:32.361"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.362" endtime="20241125 21:58:32.362"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.362" endtime="20241125 21:58:32.362"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.361" endtime="20241125 21:58:32.362"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.328" endtime="20241125 21:58:32.362"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.325" endtime="20241125 21:58:32.363"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.325" endtime="20241125 21:58:32.363"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.325" endtime="20241125 21:58:32.363"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.363" endtime="20241125 21:58:32.363"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.363" endtime="20241125 21:58:32.363"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.325" endtime="20241125 21:58:32.363"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.241" endtime="20241125 21:58:32.364"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.364" endtime="20241125 21:58:32.364"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.364" endtime="20241125 21:58:32.364"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.364" endtime="20241125 21:58:32.364"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.238" endtime="20241125 21:58:32.364"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.365" endtime="20241125 21:58:32.365"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.364" endtime="20241125 21:58:32.365"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.366" endtime="20241125 21:58:32.366"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.367" endtime="20241125 21:58:32.367"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.367" endtime="20241125 21:58:32.367"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.367" endtime="20241125 21:58:32.367"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.367" endtime="20241125 21:58:32.367"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.366" endtime="20241125 21:58:32.367"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.365" endtime="20241125 21:58:32.367"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.372" endtime="20241125 21:58:32.372"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.375" endtime="20241125 21:58:32.375"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.367" endtime="20241125 21:58:32.375"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.376" endtime="20241125 21:58:32.376"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.376" endtime="20241125 21:58:32.376"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.376" endtime="20241125 21:58:32.376"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.377" endtime="20241125 21:58:32.377"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.377" endtime="20241125 21:58:32.377"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.376" endtime="20241125 21:58:32.377"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.375" endtime="20241125 21:58:32.377"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.382" endtime="20241125 21:58:32.382"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.384" endtime="20241125 21:58:32.384"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.377" endtime="20241125 21:58:32.384"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.385" endtime="20241125 21:58:32.385"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.385" endtime="20241125 21:58:32.385"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.385" endtime="20241125 21:58:32.385"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.386" endtime="20241125 21:58:32.386"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.385" endtime="20241125 21:58:32.386"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.385" endtime="20241125 21:58:32.386"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.384" endtime="20241125 21:58:32.386"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.388" endtime="20241125 21:58:32.388"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.386" endtime="20241125 21:58:32.388"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.393" endtime="20241125 21:58:32.393"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.393" endtime="20241125 21:58:32.393"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.388" endtime="20241125 21:58:32.393"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.225" endtime="20241125 21:58:32.393"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.394" endtime="20241125 21:58:32.394"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:32.395" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:32.394" endtime="20241125 21:58:32.395"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:32.395" endtime="20241125 21:58:32.395"/>
</return>
<msg timestamp="20241125 21:58:32.395" level="INFO">${value} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:32.225" endtime="20241125 21:58:32.395"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.396" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:32.396" endtime="20241125 21:58:32.396"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.397" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:32.396" endtime="20241125 21:58:32.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.397" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:32.397" endtime="20241125 21:58:32.397"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.398" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.397" endtime="20241125 21:58:32.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.398" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:32.398" endtime="20241125 21:58:32.398"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.398" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.398" endtime="20241125 21:58:32.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.399" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.399" endtime="20241125 21:58:32.399"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.399" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:32.399" endtime="20241125 21:58:32.399"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.400" endtime="20241125 21:58:32.400"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:32.402" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:32.402" endtime="20241125 21:58:32.403"/>
</kw>
<msg timestamp="20241125 21:58:32.403" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.402" endtime="20241125 21:58:32.403"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.403"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.404"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.404"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.404" endtime="20241125 21:58:32.404"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.404" endtime="20241125 21:58:32.404"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.404"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.404"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.403" endtime="20241125 21:58:32.404"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.404" endtime="20241125 21:58:32.404"/>
</return>
<msg timestamp="20241125 21:58:32.405" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.401" endtime="20241125 21:58:32.405"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.407" endtime="20241125 21:58:32.407"/>
</kw>
<msg timestamp="20241125 21:58:32.407" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.406" endtime="20241125 21:58:32.407"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.408" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:32.408" endtime="20241125 21:58:32.408"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.409" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.408" endtime="20241125 21:58:32.409"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.408" endtime="20241125 21:58:32.409"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.409" endtime="20241125 21:58:32.409"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.409" endtime="20241125 21:58:32.409"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.408" endtime="20241125 21:58:32.410"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.407" endtime="20241125 21:58:32.410"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.407" endtime="20241125 21:58:32.410"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.410" endtime="20241125 21:58:32.410"/>
</return>
<msg timestamp="20241125 21:58:32.410" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.406" endtime="20241125 21:58:32.410"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.411"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.411"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.411"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.411"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.411"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.412"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.412"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.412" endtime="20241125 21:58:32.412"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.412" endtime="20241125 21:58:32.412"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.412" endtime="20241125 21:58:32.412"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.412" endtime="20241125 21:58:32.412"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.411" endtime="20241125 21:58:32.412"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.410" endtime="20241125 21:58:32.412"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.413"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.413"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.413"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.414" endtime="20241125 21:58:32.414"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.414"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.414"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.414" endtime="20241125 21:58:32.414"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.414" endtime="20241125 21:58:32.414"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.414" endtime="20241125 21:58:32.414"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.414" endtime="20241125 21:58:32.414"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.415"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.413" endtime="20241125 21:58:32.415"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.396" endtime="20241125 21:58:32.415"/>
</iter>
<status status="PASS" starttime="20241125 21:58:32.396" endtime="20241125 21:58:32.415"/>
</for>
<msg timestamp="20241125 21:58:32.415" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:32.395" endtime="20241125 21:58:32.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.415" endtime="20241125 21:58:32.415"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.419" endtime="20241125 21:58:32.419"/>
</kw>
<msg timestamp="20241125 21:58:32.419" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.418" endtime="20241125 21:58:32.419"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.420" level="INFO">${values} = {'id': '11', 'name': 'Vehicle number', 'xpath': 'id=vehicleNumber', 'pageId': '3', 'createdAt': '2024-11-25T10:54:47.928Z', 'updatedAt': '2024-11-25T10:54:47.928Z'}</msg>
<status status="PASS" starttime="20241125 21:58:32.420" endtime="20241125 21:58:32.420"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.421" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.420" endtime="20241125 21:58:32.421"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.420" endtime="20241125 21:58:32.421"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.421" endtime="20241125 21:58:32.421"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.421" endtime="20241125 21:58:32.421"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.420" endtime="20241125 21:58:32.421"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.419" endtime="20241125 21:58:32.421"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.419" endtime="20241125 21:58:32.421"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.421" endtime="20241125 21:58:32.422"/>
</return>
<msg timestamp="20241125 21:58:32.422" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.418" endtime="20241125 21:58:32.422"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.422" level="INFO">${xpath} = id=vehicleNumber</msg>
<status status="PASS" starttime="20241125 21:58:32.422" endtime="20241125 21:58:32.422"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.422" endtime="20241125 21:58:32.422"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.423" endtime="20241125 21:58:32.423"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.423" endtime="20241125 21:58:32.423"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.422" endtime="20241125 21:58:32.423"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.424" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '379', 'status': 'COMPLETED', 'actionName': 'Enter vehicle number', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=vehicleNumber', 'inputValue': 'TN91 T9861', 'errorMess...</msg>
<status status="PASS" starttime="20241125 21:58:32.423" endtime="20241125 21:58:32.424"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:32.425" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "379", "status": "COMPLETED", "actionName": "Enter vehicle number", "actionType": "TYPE_TEXT", "actionXpath": "id=vehicleNumber", "inputValue": "TN91 T9861", "errorMess...</msg>
<status status="PASS" starttime="20241125 21:58:32.424" endtime="20241125 21:58:32.425"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:32.458" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:32.458" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:32.425" endtime="20241125 21:58:32.458"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.459" endtime="20241125 21:58:32.459"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:32.459" endtime="20241125 21:58:32.459"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.424" endtime="20241125 21:58:32.459"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.416" endtime="20241125 21:58:32.460"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.221" endtime="20241125 21:58:32.460"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.460" endtime="20241125 21:58:32.460"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.460" endtime="20241125 21:58:32.460"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.460" endtime="20241125 21:58:32.460"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.460" endtime="20241125 21:58:32.460"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.221" endtime="20241125 21:58:32.460"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.221" endtime="20241125 21:58:32.461"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '14', 'actionId': '13', 'flowId': '4', 'order': 4, 'createdAt': '2024-11-25T11:15:26.507Z', 'updatedAt': '2024-11-25T12:28:37.863Z', 'action': {'id': '13', 'name': 'Click add vehicle button', '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.461" level="INFO">${action} = {'id': '13', 'name': 'Click add vehicle button', 'type': 'CLICK', 'selectorI': '12', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T10:56:26.254Z', 'updatedAt': '2024-11-25...</msg>
<status status="PASS" starttime="20241125 21:58:32.461" endtime="20241125 21:58:32.461"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.461" endtime="20241125 21:58:32.462"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:32.462" level="INFO">${input} = {'id': '14', 'actionId': '13', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T10:56:26.592Z', 'updatedAt': '2024-11-25T10:56:26.592Z'}</msg>
<status status="PASS" starttime="20241125 21:58:32.462" endtime="20241125 21:58:32.462"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.463" endtime="20241125 21:58:32.463"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.463" endtime="20241125 21:58:32.463"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.462" endtime="20241125 21:58:32.463"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.462" endtime="20241125 21:58:32.463"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.464" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:32.464" endtime="20241125 21:58:32.464"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.464" endtime="20241125 21:58:32.464"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.464" endtime="20241125 21:58:32.464"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.465" endtime="20241125 21:58:32.465"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.465" endtime="20241125 21:58:32.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.477" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state attached</msg>
<status status="PASS" starttime="20241125 21:58:32.472" endtime="20241125 21:58:32.477"/>
</kw>
<msg timestamp="20241125 21:58:32.477" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.472" endtime="20241125 21:58:32.477"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.478" endtime="20241125 21:58:32.478"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.471" endtime="20241125 21:58:32.478"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.478" endtime="20241125 21:58:32.478"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.478" endtime="20241125 21:58:32.478"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.478" endtime="20241125 21:58:32.478"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.471" endtime="20241125 21:58:32.478"/>
</try>
<msg timestamp="20241125 21:58:32.479" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.471" endtime="20241125 21:58:32.479"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.479" endtime="20241125 21:58:32.479"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.470" endtime="20241125 21:58:32.479"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.479" endtime="20241125 21:58:32.479"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.479" endtime="20241125 21:58:32.479"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.470" endtime="20241125 21:58:32.479"/>
</try>
<msg timestamp="20241125 21:58:32.479" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.470" endtime="20241125 21:58:32.479"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.481" endtime="20241125 21:58:32.481"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.481" endtime="20241125 21:58:32.482"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.481" endtime="20241125 21:58:32.482"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.481" endtime="20241125 21:58:32.482"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.480" endtime="20241125 21:58:32.482"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.469" endtime="20241125 21:58:32.482"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.492" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state visible</msg>
<status status="PASS" starttime="20241125 21:58:32.486" endtime="20241125 21:58:32.493"/>
</kw>
<msg timestamp="20241125 21:58:32.493" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.486" endtime="20241125 21:58:32.493"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.493" endtime="20241125 21:58:32.493"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.486" endtime="20241125 21:58:32.493"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.493" endtime="20241125 21:58:32.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.494" endtime="20241125 21:58:32.494"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.493" endtime="20241125 21:58:32.494"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.485" endtime="20241125 21:58:32.494"/>
</try>
<msg timestamp="20241125 21:58:32.494" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.485" endtime="20241125 21:58:32.494"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.494" endtime="20241125 21:58:32.494"/>
</return>
<msg timestamp="20241125 21:58:32.495" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.484" endtime="20241125 21:58:32.495"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.497" endtime="20241125 21:58:32.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.497" endtime="20241125 21:58:32.497"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.496" endtime="20241125 21:58:32.497"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.496" endtime="20241125 21:58:32.497"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.495" endtime="20241125 21:58:32.497"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.484" endtime="20241125 21:58:32.497"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.514" level="INFO">Waited for Element with selector //button[@type="submit"]//p[text()="Add"] at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:32.502" endtime="20241125 21:58:32.514"/>
</kw>
<msg timestamp="20241125 21:58:32.515" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.501" endtime="20241125 21:58:32.515"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.515" endtime="20241125 21:58:32.515"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.501" endtime="20241125 21:58:32.515"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.515" endtime="20241125 21:58:32.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.515" endtime="20241125 21:58:32.515"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.515" endtime="20241125 21:58:32.515"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.501" endtime="20241125 21:58:32.515"/>
</try>
<msg timestamp="20241125 21:58:32.516" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.501" endtime="20241125 21:58:32.516"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.516" endtime="20241125 21:58:32.516"/>
</return>
<msg timestamp="20241125 21:58:32.516" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.500" endtime="20241125 21:58:32.516"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.518" endtime="20241125 21:58:32.518"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.518" endtime="20241125 21:58:32.518"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.518" endtime="20241125 21:58:32.518"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.518" endtime="20241125 21:58:32.518"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.517" endtime="20241125 21:58:32.519"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.499" endtime="20241125 21:58:32.519"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.467" endtime="20241125 21:58:32.519"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.520" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:32.519" endtime="20241125 21:58:32.520"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.521" endtime="20241125 21:58:32.521"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.521" endtime="20241125 21:58:32.521"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.522" endtime="20241125 21:58:32.522"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.521" endtime="20241125 21:58:32.522"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.521" endtime="20241125 21:58:32.522"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:32.522" endtime="20241125 21:58:32.582"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.522" endtime="20241125 21:58:32.582"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.582" endtime="20241125 21:58:32.582"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.583" endtime="20241125 21:58:32.583"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.582" endtime="20241125 21:58:32.583"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.522" endtime="20241125 21:58:32.583"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.520" endtime="20241125 21:58:32.583"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.520" endtime="20241125 21:58:32.583"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.520" endtime="20241125 21:58:32.583"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.583" endtime="20241125 21:58:32.583"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.583" endtime="20241125 21:58:32.583"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.520" endtime="20241125 21:58:32.584"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.467" endtime="20241125 21:58:32.584"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.465" endtime="20241125 21:58:32.584"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.585" endtime="20241125 21:58:32.585"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.587" endtime="20241125 21:58:32.587"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.584" endtime="20241125 21:58:32.587"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.590" endtime="20241125 21:58:32.590"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.587" endtime="20241125 21:58:32.590"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.593" endtime="20241125 21:58:32.593"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.590" endtime="20241125 21:58:32.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.595"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.595"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.595"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.595"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.593" endtime="20241125 21:58:32.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.597"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.595" endtime="20241125 21:58:32.597"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.598"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.597" endtime="20241125 21:58:32.598"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.602" endtime="20241125 21:58:32.603"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.606" endtime="20241125 21:58:32.606"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.598" endtime="20241125 21:58:32.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.607" endtime="20241125 21:58:32.607"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.607" endtime="20241125 21:58:32.607"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.607" endtime="20241125 21:58:32.607"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.608" endtime="20241125 21:58:32.608"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.607" endtime="20241125 21:58:32.608"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.607" endtime="20241125 21:58:32.608"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.606" endtime="20241125 21:58:32.608"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.612" endtime="20241125 21:58:32.612"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.614" endtime="20241125 21:58:32.615"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.608" endtime="20241125 21:58:32.615"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.616"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.616"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.616"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.616"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.617"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.616" endtime="20241125 21:58:32.617"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.615" endtime="20241125 21:58:32.617"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.619" endtime="20241125 21:58:32.619"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.617" endtime="20241125 21:58:32.619"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.625" endtime="20241125 21:58:32.625"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.625" endtime="20241125 21:58:32.625"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.619" endtime="20241125 21:58:32.625"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.464" endtime="20241125 21:58:32.625"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.625" endtime="20241125 21:58:32.626"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:32.626" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:32.626" endtime="20241125 21:58:32.626"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:32.626" endtime="20241125 21:58:32.626"/>
</return>
<msg timestamp="20241125 21:58:32.627" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:32.463" endtime="20241125 21:58:32.627"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.628" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:14</msg>
<status status="PASS" starttime="20241125 21:58:32.627" endtime="20241125 21:58:32.628"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.628" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:32.628" endtime="20241125 21:58:32.628"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.629" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:32.628" endtime="20241125 21:58:32.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.629" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.629" endtime="20241125 21:58:32.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.629" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:32.629" endtime="20241125 21:58:32.629"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.630" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.630" endtime="20241125 21:58:32.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.630" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.630" endtime="20241125 21:58:32.630"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.630" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:32.630" endtime="20241125 21:58:32.631"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.631" endtime="20241125 21:58:32.631"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:32.633" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:32.633" endtime="20241125 21:58:32.633"/>
</kw>
<msg timestamp="20241125 21:58:32.633" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.632" endtime="20241125 21:58:32.633"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.634"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.634"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.635"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.635" endtime="20241125 21:58:32.635"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.635" endtime="20241125 21:58:32.635"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.635"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.635"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.634" endtime="20241125 21:58:32.635"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.635" endtime="20241125 21:58:32.635"/>
</return>
<msg timestamp="20241125 21:58:32.636" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.632" endtime="20241125 21:58:32.636"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.639" endtime="20241125 21:58:32.639"/>
</kw>
<msg timestamp="20241125 21:58:32.639" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.639" endtime="20241125 21:58:32.639"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.640" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:32.640" endtime="20241125 21:58:32.640"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.641" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.640" endtime="20241125 21:58:32.641"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.640" endtime="20241125 21:58:32.641"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.641" endtime="20241125 21:58:32.641"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.641" endtime="20241125 21:58:32.641"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.640" endtime="20241125 21:58:32.641"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.640" endtime="20241125 21:58:32.641"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.639" endtime="20241125 21:58:32.641"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.641" endtime="20241125 21:58:32.642"/>
</return>
<msg timestamp="20241125 21:58:32.642" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.638" endtime="20241125 21:58:32.642"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.642" endtime="20241125 21:58:32.642"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.642" endtime="20241125 21:58:32.642"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.642" endtime="20241125 21:58:32.643"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.643"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.643"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.643"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.643"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.644"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.644"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.644"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.643" endtime="20241125 21:58:32.644"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.642" endtime="20241125 21:58:32.644"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.642" endtime="20241125 21:58:32.644"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.645"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.645"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.645"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.645"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.645"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.645"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.645"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.646" endtime="20241125 21:58:32.646"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.646"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.645" endtime="20241125 21:58:32.646"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.646"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.644" endtime="20241125 21:58:32.646"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.628" endtime="20241125 21:58:32.646"/>
</iter>
<status status="PASS" starttime="20241125 21:58:32.628" endtime="20241125 21:58:32.646"/>
</for>
<msg timestamp="20241125 21:58:32.646" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:32.627" endtime="20241125 21:58:32.646"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.646" endtime="20241125 21:58:32.648"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.651" endtime="20241125 21:58:32.651"/>
</kw>
<msg timestamp="20241125 21:58:32.652" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.651" endtime="20241125 21:58:32.652"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.652" level="INFO">${values} = {'id': '12', 'name': 'Add vehicle button', 'xpath': '//button[@type="submit"]//p[text()="Add"]', 'pageId': '3', 'createdAt': '2024-11-25T10:56:22.831Z', 'updatedAt': '2024-11-25T11:27:24.850Z'}</msg>
<status status="PASS" starttime="20241125 21:58:32.652" endtime="20241125 21:58:32.652"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.654" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.653" endtime="20241125 21:58:32.654"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.653" endtime="20241125 21:58:32.654"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.654" endtime="20241125 21:58:32.654"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.654" endtime="20241125 21:58:32.654"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.652" endtime="20241125 21:58:32.654"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.652" endtime="20241125 21:58:32.655"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.652" endtime="20241125 21:58:32.655"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.655" endtime="20241125 21:58:32.655"/>
</return>
<msg timestamp="20241125 21:58:32.656" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.650" endtime="20241125 21:58:32.656"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.656" level="INFO">${xpath} = //button[@type="submit"]//p[text()="Add"]</msg>
<status status="PASS" starttime="20241125 21:58:32.656" endtime="20241125 21:58:32.656"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.656" endtime="20241125 21:58:32.657"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.657" endtime="20241125 21:58:32.657"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.657" endtime="20241125 21:58:32.657"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.656" endtime="20241125 21:58:32.657"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.658" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '380', 'status': 'COMPLETED', 'actionName': 'Click add vehicle button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit"]//p[text()="Add"]', 'inputValue':...</msg>
<status status="PASS" starttime="20241125 21:58:32.657" endtime="20241125 21:58:32.658"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:32.659" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "380", "status": "COMPLETED", "actionName": "Click add vehicle button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\"]//p[text()=\"Add\"]", "inputVal...</msg>
<status status="PASS" starttime="20241125 21:58:32.659" endtime="20241125 21:58:32.659"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:32.691" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:32.691" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:32.659" endtime="20241125 21:58:32.691"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.692" endtime="20241125 21:58:32.692"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:32.692" endtime="20241125 21:58:32.692"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.658" endtime="20241125 21:58:32.693"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.648" endtime="20241125 21:58:32.693"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.461" endtime="20241125 21:58:32.693"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.693" endtime="20241125 21:58:32.693"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.693" endtime="20241125 21:58:32.693"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.694" endtime="20241125 21:58:32.694"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.693" endtime="20241125 21:58:32.694"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.461" endtime="20241125 21:58:32.694"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.461" endtime="20241125 21:58:32.694"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '15', 'actionId': '15', 'flowId': '4', 'order': 5, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.865Z', 'action': {'id': '15', 'name': 'Close add vehicle popup', 't...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.695" level="INFO">${action} = {'id': '15', 'name': 'Close add vehicle popup', 'type': 'CLICK', 'selectorI': '14', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:20:45.695Z', 'updatedAt': '2024-11-25T...</msg>
<status status="PASS" starttime="20241125 21:58:32.694" endtime="20241125 21:58:32.695"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.695" endtime="20241125 21:58:32.695"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:32.696" level="INFO">${input} = {'id': '16', 'actionId': '15', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:20:46.000Z', 'updatedAt': '2024-11-25T11:20:46.000Z'}</msg>
<status status="PASS" starttime="20241125 21:58:32.696" endtime="20241125 21:58:32.696"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.696" endtime="20241125 21:58:32.696"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.697" endtime="20241125 21:58:32.697"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.696" endtime="20241125 21:58:32.697"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.696" endtime="20241125 21:58:32.697"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.698" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:32.697" endtime="20241125 21:58:32.698"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.698" endtime="20241125 21:58:32.699"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.698" endtime="20241125 21:58:32.699"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.699" endtime="20241125 21:58:32.699"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.699" endtime="20241125 21:58:32.699"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.714" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state attached</msg>
<status status="PASS" starttime="20241125 21:58:32.709" endtime="20241125 21:58:32.714"/>
</kw>
<msg timestamp="20241125 21:58:32.714" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.708" endtime="20241125 21:58:32.714"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.714" endtime="20241125 21:58:32.714"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.708" endtime="20241125 21:58:32.714"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.715" endtime="20241125 21:58:32.715"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.715" endtime="20241125 21:58:32.715"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.715" endtime="20241125 21:58:32.715"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.708" endtime="20241125 21:58:32.715"/>
</try>
<msg timestamp="20241125 21:58:32.715" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.707" endtime="20241125 21:58:32.715"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.715" endtime="20241125 21:58:32.716"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.706" endtime="20241125 21:58:32.716"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.716" endtime="20241125 21:58:32.716"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.716" endtime="20241125 21:58:32.716"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.706" endtime="20241125 21:58:32.716"/>
</try>
<msg timestamp="20241125 21:58:32.716" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.705" endtime="20241125 21:58:32.716"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.718" endtime="20241125 21:58:32.718"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.718" endtime="20241125 21:58:32.718"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.718" endtime="20241125 21:58:32.718"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.718" endtime="20241125 21:58:32.719"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.717" endtime="20241125 21:58:32.719"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.704" endtime="20241125 21:58:32.719"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.731" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state visible</msg>
<status status="PASS" starttime="20241125 21:58:32.726" endtime="20241125 21:58:32.732"/>
</kw>
<msg timestamp="20241125 21:58:32.732" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.726" endtime="20241125 21:58:32.732"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.732" endtime="20241125 21:58:32.732"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.725" endtime="20241125 21:58:32.732"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.732" endtime="20241125 21:58:32.732"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.732" endtime="20241125 21:58:32.733"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.732" endtime="20241125 21:58:32.733"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.725" endtime="20241125 21:58:32.733"/>
</try>
<msg timestamp="20241125 21:58:32.733" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.725" endtime="20241125 21:58:32.733"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.733" endtime="20241125 21:58:32.733"/>
</return>
<msg timestamp="20241125 21:58:32.733" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.724" endtime="20241125 21:58:32.733"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.735" endtime="20241125 21:58:32.735"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.736" endtime="20241125 21:58:32.736"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.735" endtime="20241125 21:58:32.736"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.735" endtime="20241125 21:58:32.736"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.734" endtime="20241125 21:58:32.736"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.722" endtime="20241125 21:58:32.737"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.753" level="INFO">Waited for Element with selector //h6[text()="Add Vehicle Details"]//preceding-sibling::img at state enabled</msg>
<status status="PASS" starttime="20241125 21:58:32.743" endtime="20241125 21:58:32.754"/>
</kw>
<msg timestamp="20241125 21:58:32.754" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.743" endtime="20241125 21:58:32.754"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.754" endtime="20241125 21:58:32.755"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.742" endtime="20241125 21:58:32.755"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.755" endtime="20241125 21:58:32.755"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.755" endtime="20241125 21:58:32.756"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.755" endtime="20241125 21:58:32.756"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.742" endtime="20241125 21:58:32.756"/>
</try>
<msg timestamp="20241125 21:58:32.756" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.742" endtime="20241125 21:58:32.756"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.756" endtime="20241125 21:58:32.756"/>
</return>
<msg timestamp="20241125 21:58:32.756" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.741" endtime="20241125 21:58:32.756"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.758" endtime="20241125 21:58:32.759"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.759" endtime="20241125 21:58:32.759"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.758" endtime="20241125 21:58:32.759"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.758" endtime="20241125 21:58:32.759"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.757" endtime="20241125 21:58:32.759"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.740" endtime="20241125 21:58:32.759"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.701" endtime="20241125 21:58:32.759"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.760" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241125 21:58:32.759" endtime="20241125 21:58:32.760"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.761" endtime="20241125 21:58:32.761"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.761" endtime="20241125 21:58:32.761"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.761" endtime="20241125 21:58:32.762"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.761" endtime="20241125 21:58:32.762"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.761" endtime="20241125 21:58:32.762"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241125 21:58:32.762" endtime="20241125 21:58:32.826"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.762" endtime="20241125 21:58:32.827"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.827" endtime="20241125 21:58:32.827"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.827" endtime="20241125 21:58:32.827"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.827" endtime="20241125 21:58:32.827"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.762" endtime="20241125 21:58:32.827"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.760" endtime="20241125 21:58:32.827"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.760" endtime="20241125 21:58:32.828"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.760" endtime="20241125 21:58:32.828"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.828" endtime="20241125 21:58:32.828"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.828" endtime="20241125 21:58:32.828"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.760" endtime="20241125 21:58:32.828"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.701" endtime="20241125 21:58:32.828"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.699" endtime="20241125 21:58:32.828"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.830" endtime="20241125 21:58:32.830"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.833" endtime="20241125 21:58:32.833"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.828" endtime="20241125 21:58:32.833"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.835" endtime="20241125 21:58:32.835"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.833" endtime="20241125 21:58:32.835"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.838" endtime="20241125 21:58:32.838"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.835" endtime="20241125 21:58:32.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.840" endtime="20241125 21:58:32.840"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.840" endtime="20241125 21:58:32.840"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.840" endtime="20241125 21:58:32.840"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.840" endtime="20241125 21:58:32.840"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.838" endtime="20241125 21:58:32.840"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.841" endtime="20241125 21:58:32.841"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.840" endtime="20241125 21:58:32.841"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.842" endtime="20241125 21:58:32.842"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.843" endtime="20241125 21:58:32.843"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.842" endtime="20241125 21:58:32.843"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.843" endtime="20241125 21:58:32.843"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.843" endtime="20241125 21:58:32.843"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.842" endtime="20241125 21:58:32.843"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.841" endtime="20241125 21:58:32.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.847" endtime="20241125 21:58:32.847"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.850" endtime="20241125 21:58:32.850"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.843" endtime="20241125 21:58:32.850"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.851"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.851"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.851"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.851"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.852"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.851" endtime="20241125 21:58:32.852"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.850" endtime="20241125 21:58:32.852"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.856" endtime="20241125 21:58:32.856"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.859" endtime="20241125 21:58:32.859"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.852" endtime="20241125 21:58:32.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.860" endtime="20241125 21:58:32.860"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.860" endtime="20241125 21:58:32.860"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.860" endtime="20241125 21:58:32.860"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.861" endtime="20241125 21:58:32.861"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.861" endtime="20241125 21:58:32.861"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.860" endtime="20241125 21:58:32.861"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.859" endtime="20241125 21:58:32.861"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.863" endtime="20241125 21:58:32.863"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.861" endtime="20241125 21:58:32.863"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.868" endtime="20241125 21:58:32.868"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.868" endtime="20241125 21:58:32.868"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.863" endtime="20241125 21:58:32.868"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.698" endtime="20241125 21:58:32.868"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.868" endtime="20241125 21:58:32.869"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:32.869" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:32.869" endtime="20241125 21:58:32.869"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:32.869" endtime="20241125 21:58:32.870"/>
</return>
<msg timestamp="20241125 21:58:32.870" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:32.697" endtime="20241125 21:58:32.870"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.871" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:15</msg>
<status status="PASS" starttime="20241125 21:58:32.871" endtime="20241125 21:58:32.871"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.872" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:32.871" endtime="20241125 21:58:32.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.872" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:32.872" endtime="20241125 21:58:32.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.872" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.872" endtime="20241125 21:58:32.872"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.873" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:32.872" endtime="20241125 21:58:32.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.873" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.873" endtime="20241125 21:58:32.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.873" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.873" endtime="20241125 21:58:32.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.874" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:32.874" endtime="20241125 21:58:32.874"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.874" endtime="20241125 21:58:32.874"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241125 21:58:32.876" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:7::flowActionSequenceId:16'.</msg>
<status status="FAIL" starttime="20241125 21:58:32.876" endtime="20241125 21:58:32.876"/>
</kw>
<msg timestamp="20241125 21:58:32.877" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.876" endtime="20241125 21:58:32.877"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.877"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.877"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.877"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.878" endtime="20241125 21:58:32.878"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.878" endtime="20241125 21:58:32.878"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.878"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.878"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.877" endtime="20241125 21:58:32.878"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.878" endtime="20241125 21:58:32.878"/>
</return>
<msg timestamp="20241125 21:58:32.878" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241125 21:58:32.875" endtime="20241125 21:58:32.878"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.880" endtime="20241125 21:58:32.880"/>
</kw>
<msg timestamp="20241125 21:58:32.881" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.880" endtime="20241125 21:58:32.881"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.881" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.881"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.882" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.882"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.882"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.882" endtime="20241125 21:58:32.882"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.882" endtime="20241125 21:58:32.882"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.882"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.882"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.881" endtime="20241125 21:58:32.882"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.882" endtime="20241125 21:58:32.882"/>
</return>
<msg timestamp="20241125 21:58:32.882" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.880" endtime="20241125 21:58:32.882"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.883"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.884"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.884"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.884"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.884"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.884"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.883" endtime="20241125 21:58:32.884"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.885"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.885"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.885"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.885"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.885"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.885"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.885"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.886"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.886"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.885" endtime="20241125 21:58:32.886"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.886"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.884" endtime="20241125 21:58:32.886"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.871" endtime="20241125 21:58:32.886"/>
</iter>
<status status="PASS" starttime="20241125 21:58:32.871" endtime="20241125 21:58:32.886"/>
</for>
<msg timestamp="20241125 21:58:32.886" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241125 21:58:32.870" endtime="20241125 21:58:32.886"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.886" endtime="20241125 21:58:32.887"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:32.890" endtime="20241125 21:58:32.891"/>
</kw>
<msg timestamp="20241125 21:58:32.891" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.890" endtime="20241125 21:58:32.891"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.891" level="INFO">${values} = {'id': '14', 'name': 'Close add vehicle', 'xpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img', 'pageId': '3', 'createdAt': '2024-11-25T11:20:43.962Z', 'updatedAt': '2024-11-25T11:20:...</msg>
<status status="PASS" starttime="20241125 21:58:32.891" endtime="20241125 21:58:32.891"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.892" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.892" endtime="20241125 21:58:32.892"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.892" endtime="20241125 21:58:32.892"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.892" endtime="20241125 21:58:32.892"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.892" endtime="20241125 21:58:32.892"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.891" endtime="20241125 21:58:32.893"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.891" endtime="20241125 21:58:32.893"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.891" endtime="20241125 21:58:32.893"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:32.893" endtime="20241125 21:58:32.893"/>
</return>
<msg timestamp="20241125 21:58:32.893" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.889" endtime="20241125 21:58:32.893"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.894" level="INFO">${xpath} = //h6[text()="Add Vehicle Details"]//preceding-sibling::img</msg>
<status status="PASS" starttime="20241125 21:58:32.893" endtime="20241125 21:58:32.894"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.893" endtime="20241125 21:58:32.894"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.894" endtime="20241125 21:58:32.894"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.894" endtime="20241125 21:58:32.894"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.893" endtime="20241125 21:58:32.894"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:32.895" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '381', 'status': 'COMPLETED', 'actionName': 'Close add vehicle popup', 'actionType': 'CLICK', 'actionXpath': '//h6[text()="Add Vehicle Details"]//preceding-sibling::img...</msg>
<status status="PASS" starttime="20241125 21:58:32.894" endtime="20241125 21:58:32.895"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:32.896" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "381", "status": "COMPLETED", "actionName": "Close add vehicle popup", "actionType": "CLICK", "actionXpath": "//h6[text()=\"Add Vehicle Details\"]//preceding-sibling::i...</msg>
<status status="PASS" starttime="20241125 21:58:32.896" endtime="20241125 21:58:32.896"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:32.914" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:32.914" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:32.896" endtime="20241125 21:58:32.914"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.915" endtime="20241125 21:58:32.916"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:32.916" endtime="20241125 21:58:32.916"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.895" endtime="20241125 21:58:32.917"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.887" endtime="20241125 21:58:32.917"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.694" endtime="20241125 21:58:32.917"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.918" endtime="20241125 21:58:32.918"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.918" endtime="20241125 21:58:32.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.920" endtime="20241125 21:58:32.920"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.918" endtime="20241125 21:58:32.920"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.694" endtime="20241125 21:58:32.921"/>
</try>
<status status="PASS" starttime="20241125 21:58:32.694" endtime="20241125 21:58:32.921"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '16', 'actionId': '16', 'flowId': '4', 'order': 6, 'createdAt': '2024-11-25T11:24:20.716Z', 'updatedAt': '2024-11-25T12:28:37.873Z', 'action': {'id': '16', 'name': 'Get vehicle info', 'type': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.924" level="INFO">${action} = {'id': '16', 'name': 'Get vehicle info', 'type': 'GET_TEXT', 'selectorI': '15', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T11:23:13.728Z', 'updatedAt': '2024-11-25T11:2...</msg>
<status status="PASS" starttime="20241125 21:58:32.923" endtime="20241125 21:58:32.924"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:32.924" endtime="20241125 21:58:32.925"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241125 21:58:32.927" level="INFO">${input} = {'id': '17', 'actionId': '16', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T11:23:13.975Z', 'updatedAt': '2024-11-25T11:23:13.975Z'}</msg>
<status status="PASS" starttime="20241125 21:58:32.925" endtime="20241125 21:58:32.927"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.928" endtime="20241125 21:58:32.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.928" endtime="20241125 21:58:32.929"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.927" endtime="20241125 21:58:32.929"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.927" endtime="20241125 21:58:32.929"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:32.931" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241125 21:58:32.930" endtime="20241125 21:58:32.931"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.931" endtime="20241125 21:58:32.931"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.931" endtime="20241125 21:58:32.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241125 21:58:32.932" endtime="20241125 21:58:32.933"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.932" endtime="20241125 21:58:32.933"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.939" endtime="20241125 21:58:32.940"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.933" endtime="20241125 21:58:32.940"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.943" endtime="20241125 21:58:32.944"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.946" endtime="20241125 21:58:32.946"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.941" endtime="20241125 21:58:32.947"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.948" endtime="20241125 21:58:32.948"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.947" endtime="20241125 21:58:32.948"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.952" endtime="20241125 21:58:32.952"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.949" endtime="20241125 21:58:32.952"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.955" endtime="20241125 21:58:32.955"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.956" endtime="20241125 21:58:32.956"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.956" endtime="20241125 21:58:32.957"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.956" endtime="20241125 21:58:32.957"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.953" endtime="20241125 21:58:32.957"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.958" endtime="20241125 21:58:32.958"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.957" endtime="20241125 21:58:32.958"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.959" endtime="20241125 21:58:32.959"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.960" endtime="20241125 21:58:32.960"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.960" endtime="20241125 21:58:32.960"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.960" endtime="20241125 21:58:32.960"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.960" endtime="20241125 21:58:32.960"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.959" endtime="20241125 21:58:32.960"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.958" endtime="20241125 21:58:32.960"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.964" endtime="20241125 21:58:32.964"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.966" endtime="20241125 21:58:32.966"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.961" endtime="20241125 21:58:32.966"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.967" endtime="20241125 21:58:32.967"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.968" endtime="20241125 21:58:32.968"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.968" endtime="20241125 21:58:32.968"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.968" endtime="20241125 21:58:32.968"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.968" endtime="20241125 21:58:32.968"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.968" endtime="20241125 21:58:32.968"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.967" endtime="20241125 21:58:32.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241125 21:58:32.975" endtime="20241125 21:58:32.975"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.976" endtime="20241125 21:58:32.976"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.969" endtime="20241125 21:58:32.976"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.977" endtime="20241125 21:58:32.977"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.978" endtime="20241125 21:58:32.978"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.977" endtime="20241125 21:58:32.978"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.978" endtime="20241125 21:58:32.978"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.978" endtime="20241125 21:58:32.978"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:32.977" endtime="20241125 21:58:32.978"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:32.976" endtime="20241125 21:58:32.978"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241125 21:58:32.991" level="INFO">Waited for Element with selector //p[text()="VEHICLE"]/following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241125 21:58:32.984" endtime="20241125 21:58:32.991"/>
</kw>
<msg timestamp="20241125 21:58:32.991" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.984" endtime="20241125 21:58:32.991"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.991" endtime="20241125 21:58:32.991"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.983" endtime="20241125 21:58:32.991"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.991" endtime="20241125 21:58:32.991"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.991" endtime="20241125 21:58:32.991"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.991" endtime="20241125 21:58:32.991"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.983" endtime="20241125 21:58:32.991"/>
</try>
<msg timestamp="20241125 21:58:32.992" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.983" endtime="20241125 21:58:32.992"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:32.992" endtime="20241125 21:58:32.992"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.982" endtime="20241125 21:58:32.992"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241125 21:58:32.992" endtime="20241125 21:58:32.992"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:32.992" endtime="20241125 21:58:32.992"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.982" endtime="20241125 21:58:32.992"/>
</try>
<msg timestamp="20241125 21:58:32.992" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241125 21:58:32.982" endtime="20241125 21:58:32.992"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.994" endtime="20241125 21:58:32.994"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:32.994" endtime="20241125 21:58:32.994"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:32.994" endtime="20241125 21:58:32.995"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.994" endtime="20241125 21:58:32.995"/>
</if>
<status status="PASS" starttime="20241125 21:58:32.993" endtime="20241125 21:58:32.995"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.982" endtime="20241125 21:58:32.995"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241125 21:58:33.005" level="INFO">Property: 'TN91 T9861 ( Two-wheeler )'</msg>
<msg timestamp="20241125 21:58:33.005" level="INFO">${property} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.995" endtime="20241125 21:58:33.005"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241125 21:58:33.005" endtime="20241125 21:58:33.005"/>
</return>
<status status="PASS" starttime="20241125 21:58:32.995" endtime="20241125 21:58:33.005"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.005" endtime="20241125 21:58:33.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.006" endtime="20241125 21:58:33.006"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.005" endtime="20241125 21:58:33.006"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.995" endtime="20241125 21:58:33.006"/>
</try>
<msg timestamp="20241125 21:58:33.006" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.980" endtime="20241125 21:58:33.006"/>
</kw>
<status status="PASS" starttime="20241125 21:58:32.978" endtime="20241125 21:58:33.006"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241125 21:58:33.011" endtime="20241125 21:58:33.011"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.011" endtime="20241125 21:58:33.011"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.006" endtime="20241125 21:58:33.011"/>
</branch>
<status status="PASS" starttime="20241125 21:58:32.931" endtime="20241125 21:58:33.011"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.011" endtime="20241125 21:58:33.013"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241125 21:58:33.013" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241125 21:58:33.013" endtime="20241125 21:58:33.013"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241125 21:58:33.013" endtime="20241125 21:58:33.013"/>
</return>
<msg timestamp="20241125 21:58:33.013" level="INFO">${value} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:32.929" endtime="20241125 21:58:33.013"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.014" level="INFO">${key} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:33.014" endtime="20241125 21:58:33.014"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '3', 'testCaseId': '3', 'operator': 'SHOULD_NOT_CONTAIN', 'source': 'testCaseFlowSequenceId:7::flowActionSequenceId:16', 'target': 'testCaseFlowSequenceId:7::flowActionSequenceId:13', 'customTa...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.015" level="INFO">${source} = testCaseFlowSequenceId:7::flowActionSequenceId:16</msg>
<status status="PASS" starttime="20241125 21:58:33.015" endtime="20241125 21:58:33.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.015" level="INFO">${target} = testCaseFlowSequenceId:7::flowActionSequenceId:13</msg>
<status status="PASS" starttime="20241125 21:58:33.015" endtime="20241125 21:58:33.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.016" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241125 21:58:33.015" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.016" level="INFO">${operator} = SHOULD_NOT_CONTAIN</msg>
<status status="PASS" starttime="20241125 21:58:33.016" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.016" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241125 21:58:33.016" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.016" level="INFO">${customTargetValue} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:33.016" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.016" level="INFO">${errorMessage} = Vehicle number mismatch</msg>
<status status="PASS" starttime="20241125 21:58:33.016" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:33.016" endtime="20241125 21:58:33.016"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:33.019" endtime="20241125 21:58:33.019"/>
</kw>
<msg timestamp="20241125 21:58:33.019" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.018" endtime="20241125 21:58:33.019"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.021" level="INFO">${values} = TN91 T9861 ( Two-wheeler )</msg>
<status status="PASS" starttime="20241125 21:58:33.021" endtime="20241125 21:58:33.021"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.022" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.022" endtime="20241125 21:58:33.022"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.021" endtime="20241125 21:58:33.022"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.022" endtime="20241125 21:58:33.022"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.022" endtime="20241125 21:58:33.022"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.021" endtime="20241125 21:58:33.022"/>
</if>
<status status="PASS" starttime="20241125 21:58:33.021" endtime="20241125 21:58:33.022"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.021" endtime="20241125 21:58:33.022"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:33.022" endtime="20241125 21:58:33.023"/>
</return>
<msg timestamp="20241125 21:58:33.023" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.017" endtime="20241125 21:58:33.023"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:33.024" endtime="20241125 21:58:33.025"/>
</kw>
<msg timestamp="20241125 21:58:33.025" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.024" endtime="20241125 21:58:33.025"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.025" level="INFO">${values} = TN91 T9861</msg>
<status status="PASS" starttime="20241125 21:58:33.025" endtime="20241125 21:58:33.025"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.026" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.026" endtime="20241125 21:58:33.026"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.026" endtime="20241125 21:58:33.026"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.026" endtime="20241125 21:58:33.026"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.026" endtime="20241125 21:58:33.026"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.025" endtime="20241125 21:58:33.026"/>
</if>
<status status="PASS" starttime="20241125 21:58:33.025" endtime="20241125 21:58:33.026"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.025" endtime="20241125 21:58:33.026"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:33.026" endtime="20241125 21:58:33.027"/>
</return>
<msg timestamp="20241125 21:58:33.027" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.024" endtime="20241125 21:58:33.027"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.027"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.027"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.027"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.028"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} != ${target}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</kw>
<return>
<value>Assertion passed: ${source} == ${target}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.028"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${source}</arg>
<arg>${target}</arg>
<arg>${errorMessage}: ${source} == ${target}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.029"/>
</kw>
<return>
<value>Assertion passed: ${source} != ${target}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.029" endtime="20241125 21:58:33.029"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.029"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'CONTAINS'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.030" endtime="20241125 21:58:33.030"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${source} contains ${target}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.030" endtime="20241125 21:58:33.030"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.030" endtime="20241125 21:58:33.031"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.030" endtime="20241125 21:58:33.031"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} does not contain ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.031" endtime="20241125 21:58:33.031"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.029" endtime="20241125 21:58:33.031"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_CONTAINS_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.032" endtime="20241125 21:58:33.033"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<return>
<value>Assertion passed: ${target} contains ${source}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.033" endtime="20241125 21:58:33.033"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.033" endtime="20241125 21:58:33.033"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.033" endtime="20241125 21:58:33.033"/>
</if>
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} does not contain ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.033" endtime="20241125 21:58:33.033"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.031" endtime="20241125 21:58:33.033"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_CONTAIN'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${source}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}`.includes(`${string2}`)</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241125 21:58:33.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.036" endtime="20241125 21:58:33.041"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241125 21:58:33.041" endtime="20241125 21:58:33.042"/>
</return>
<msg timestamp="20241125 21:58:33.042" level="INFO">${contains} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.035" endtime="20241125 21:58:33.042"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${source} contains ${target}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241125 21:58:33.043" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241125 21:58:33.042" endtime="20241125 21:58:33.043"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.042" endtime="20241125 21:58:33.043"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:33.042" endtime="20241125 21:58:33.043"/>
</if>
<return>
<value>Assertion passed: ${source} does not contain ${target}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.043" endtime="20241125 21:58:33.043"/>
</return>
<status status="FAIL" starttime="20241125 21:58:33.033" endtime="20241125 21:58:33.044"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'TARGET_SHOULD_NOT_CONTAIN_SOURCE'">
<kw name="check-string-contains" library="UTIL_String">
<var>${contains}</var>
<arg>${target}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>Method used to check if string1 contains string2</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.045" endtime="20241125 21:58:33.045"/>
</kw>
<if>
<branch type="IF" condition="$contains">
<kw name="Fail" library="BuiltIn">
<arg>${errorMessage}: ${target} contains ${source}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.045" endtime="20241125 21:58:33.045"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.045" endtime="20241125 21:58:33.045"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.045" endtime="20241125 21:58:33.045"/>
</if>
<return>
<value>Assertion passed: ${target} does not contain (${source})</value>
<status status="NOT RUN" starttime="20241125 21:58:33.046" endtime="20241125 21:58:33.046"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.044" endtime="20241125 21:58:33.046"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.046"/>
</if>
<status status="FAIL" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.046"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.047" endtime="20241125 21:58:33.047"/>
</return>
<status status="FAIL" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.047"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:33.028" endtime="20241125 21:58:33.047"/>
</if>
<status status="FAIL" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.047"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:33.027" endtime="20241125 21:58:33.047"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.048"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241125 21:58:33.049" endtime="20241125 21:58:33.049"/>
</return>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.049"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.048" endtime="20241125 21:58:33.049"/>
</if>
<status status="NOT RUN" starttime="20241125 21:58:33.047" endtime="20241125 21:58:33.049"/>
</branch>
<status status="NOT RUN" starttime="20241125 21:58:33.047" endtime="20241125 21:58:33.049"/>
</if>
<status status="FAIL" starttime="20241125 21:58:33.014" endtime="20241125 21:58:33.049"/>
</iter>
<status status="FAIL" starttime="20241125 21:58:33.014" endtime="20241125 21:58:33.049"/>
</for>
<status status="FAIL" starttime="20241125 21:58:33.013" endtime="20241125 21:58:33.050"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.050" endtime="20241125 21:58:33.050"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241125 21:58:33.050" endtime="20241125 21:58:33.050"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:32.922" endtime="20241125 21:58:33.051"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.051" endtime="20241125 21:58:33.051"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241125 21:58:33.055" endtime="20241125 21:58:33.055"/>
</kw>
<msg timestamp="20241125 21:58:33.055" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.055" endtime="20241125 21:58:33.055"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.056" level="INFO">${values} = {'id': '15', 'name': 'Get vehicle info', 'xpath': '//p[text()="VEHICLE"]/following-sibling::p', 'pageId': '3', 'createdAt': '2024-11-25T11:23:12.124Z', 'updatedAt': '2024-11-25T11:23:12.124Z'}</msg>
<status status="PASS" starttime="20241125 21:58:33.056" endtime="20241125 21:58:33.056"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.057" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.057" endtime="20241125 21:58:33.057"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.056" endtime="20241125 21:58:33.057"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.057" endtime="20241125 21:58:33.057"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.057" endtime="20241125 21:58:33.057"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.056" endtime="20241125 21:58:33.057"/>
</if>
<status status="PASS" starttime="20241125 21:58:33.056" endtime="20241125 21:58:33.057"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.056" endtime="20241125 21:58:33.057"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241125 21:58:33.057" endtime="20241125 21:58:33.057"/>
</return>
<msg timestamp="20241125 21:58:33.058" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241125 21:58:33.054" endtime="20241125 21:58:33.058"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241125 21:58:33.058" level="INFO">${xpath} = //p[text()="VEHICLE"]/following-sibling::p</msg>
<status status="PASS" starttime="20241125 21:58:33.058" endtime="20241125 21:58:33.058"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.058" endtime="20241125 21:58:33.058"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.058" endtime="20241125 21:58:33.059"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.058" endtime="20241125 21:58:33.059"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.058" endtime="20241125 21:58:33.059"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:33.059" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '382', 'status': 'FAILED', 'actionName': 'Get vehicle info', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="VEHICLE"]/following-sibling::p', 'inputValue': '', 'e...</msg>
<status status="PASS" starttime="20241125 21:58:33.059" endtime="20241125 21:58:33.060"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:33.060" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "382", "status": "FAILED", "actionName": "Get vehicle info", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"VEHICLE\"]/following-sibling::p", "inputValue": "", ...</msg>
<status status="PASS" starttime="20241125 21:58:33.060" endtime="20241125 21:58:33.060"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:33.099" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:33.100" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:33.060" endtime="20241125 21:58:33.100"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.100" endtime="20241125 21:58:33.101"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:33.102" endtime="20241125 21:58:33.102"/>
</return>
<status status="PASS" starttime="20241125 21:58:33.060" endtime="20241125 21:58:33.103"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.051" endtime="20241125 21:58:33.103"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.105" endtime="20241125 21:58:33.106"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241125 21:58:33.109" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241125 21:58:33.107" endtime="20241125 21:58:33.109"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.104" endtime="20241125 21:58:33.111"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.051" endtime="20241125 21:58:33.111"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:32.922" endtime="20241125 21:58:33.112"/>
</try>
<status status="FAIL" starttime="20241125 21:58:32.921" endtime="20241125 21:58:33.112"/>
</iter>
<status status="FAIL" starttime="20241125 21:58:31.485" endtime="20241125 21:58:33.113"/>
</for>
<status status="FAIL" starttime="20241125 21:58:31.485" endtime="20241125 21:58:33.114"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:31.485" endtime="20241125 21:58:33.114"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241125 21:58:33.115" endtime="20241125 21:58:33.115"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:31.471" endtime="20241125 21:58:33.116"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.116" endtime="20241125 21:58:33.118"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:33.122" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '98', 'status': 'FAILED', 'errorMessage': 'Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861'}</msg>
<status status="PASS" starttime="20241125 21:58:33.120" endtime="20241125 21:58:33.122"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:33.123" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "98", "status": "FAILED", "errorMessage": "Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861"}</msg>
<status status="PASS" starttime="20241125 21:58:33.123" endtime="20241125 21:58:33.123"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:33.162" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:33.162" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:33.124" endtime="20241125 21:58:33.162"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.162" endtime="20241125 21:58:33.163"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:33.163" endtime="20241125 21:58:33.163"/>
</return>
<status status="PASS" starttime="20241125 21:58:33.122" endtime="20241125 21:58:33.164"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.119" endtime="20241125 21:58:33.164"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.166" endtime="20241125 21:58:33.166"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241125 21:58:33.168" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241125 21:58:33.167" endtime="20241125 21:58:33.168"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.165" endtime="20241125 21:58:33.170"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.116" endtime="20241125 21:58:33.171"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:31.471" endtime="20241125 21:58:33.171"/>
</try>
<status status="FAIL" starttime="20241125 21:58:31.470" endtime="20241125 21:58:33.172"/>
</iter>
<status status="FAIL" starttime="20241125 21:58:23.913" endtime="20241125 21:58:33.172"/>
</for>
<status status="FAIL" starttime="20241125 21:58:23.912" endtime="20241125 21:58:33.172"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:23.912" endtime="20241125 21:58:33.173"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241125 21:58:33.173" endtime="20241125 21:58:33.173"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:23.856" endtime="20241125 21:58:33.173"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.174" endtime="20241125 21:58:33.175"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241125 21:58:33.177" level="INFO">${response_message} = {'testCaseRunId': '34', 'status': 'FAIL', 'errorMessage': 'Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861'}</msg>
<status status="PASS" starttime="20241125 21:58:33.176" endtime="20241125 21:58:33.177"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241125 21:58:33.178" level="INFO">${json_response} = {"testCaseRunId": "34", "status": "FAIL", "errorMessage": "Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861"}</msg>
<status status="PASS" starttime="20241125 21:58:33.177" endtime="20241125 21:58:33.178"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241125 21:58:33.208" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241125 21:58:33.208" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241125 21:58:33.178" endtime="20241125 21:58:33.208"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.208" endtime="20241125 21:58:33.209"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241125 21:58:33.209" endtime="20241125 21:58:33.209"/>
</return>
<status status="PASS" starttime="20241125 21:58:33.177" endtime="20241125 21:58:33.209"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.175" endtime="20241125 21:58:33.209"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.210" endtime="20241125 21:58:33.211"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241125 21:58:33.211" level="FAIL">Vehicle number mismatch: TN91 T9861 ( Two-wheeler ) contains TN91 T9861</msg>
<status status="FAIL" starttime="20241125 21:58:33.211" endtime="20241125 21:58:33.212"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.210" endtime="20241125 21:58:33.212"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:33.174" endtime="20241125 21:58:33.213"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:23.856" endtime="20241125 21:58:33.213"/>
</try>
<status status="FAIL" starttime="20241125 21:58:23.839" endtime="20241125 21:58:33.213"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.213" endtime="20241125 21:58:33.213"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.213" endtime="20241125 21:58:33.213"/>
</branch>
<status status="FAIL" starttime="20241125 21:58:23.839" endtime="20241125 21:58:33.213"/>
</if>
<status status="FAIL" starttime="20241125 21:58:23.814" endtime="20241125 21:58:33.214"/>
</kw>
<status status="FAIL" starttime="20241125 21:58:23.814" endtime="20241125 21:58:33.214"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.215" endtime="20241125 21:58:33.215"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.214" endtime="20241125 21:58:33.215"/>
</branch>
<status status="PASS" starttime="20241125 21:58:23.814" endtime="20241125 21:58:33.215"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241125 21:58:33.465" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241125 21:58:33.216" endtime="20241125 21:58:33.465"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.216" endtime="20241125 21:58:33.465"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241125 21:58:33.466" endtime="20241125 21:58:33.466"/>
</kw>
<status status="NOT RUN" starttime="20241125 21:58:33.466" endtime="20241125 21:58:33.466"/>
</branch>
<status status="PASS" starttime="20241125 21:58:33.215" endtime="20241125 21:58:33.466"/>
</try>
<status status="PASS" starttime="20241125 21:58:33.215" endtime="20241125 21:58:33.467"/>
</kw>
<status status="PASS" starttime="20241125 21:58:10.594" endtime="20241125 21:58:33.467"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241125 21:58:33.467" endtime="20241125 21:58:33.468"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241126 20:22:50.350" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '35', 'testCaseId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T14:52:49.053Z', 'createdAt': '2024-11-26T14:52:49.053Z', 'errorMes...</msg>
<status status="PASS" starttime="20241125 21:58:33.468" endtime="20241126 20:22:50.354"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241126 20:22:50.426" endtime="20241126 20:22:50.427"/>
</break>
<status status="NOT RUN" starttime="20241126 20:22:50.426" endtime="20241126 20:22:50.427"/>
</branch>
<status status="PASS" starttime="20241126 20:22:50.410" endtime="20241126 20:22:50.427"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241126 20:22:50.472" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ab9268d0-1449-40fa-8422-acc7e0349372"}</msg>
<msg timestamp="20241126 20:22:52.288" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ab9268d0-1449-40fa-8422-acc7e0349372"}</msg>
<status status="PASS" starttime="20241126 20:22:50.442" endtime="20241126 20:22:52.288"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241126 20:22:52.297" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241126 20:22:52.318" level="INFO">Successfully created context. </msg>
<msg timestamp="20241126 20:22:52.318" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241126 20:22:52.289" endtime="20241126 20:22:52.318"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241126 20:22:52.319" endtime="20241126 20:22:52.324"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241126 20:22:54.754" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241126 20:22:54.755" level="INFO">${page_id} = {'page_id': 'page=f8283ca7-41ef-4db8-8ebb-f053cfeaecca', 'video_path': ''}</msg>
<status status="PASS" starttime="20241126 20:22:52.324" endtime="20241126 20:22:54.755"/>
</kw>
<status status="PASS" starttime="20241126 20:22:50.433" endtime="20241126 20:22:54.756"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:22:54.773" endtime="20241126 20:22:54.802"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:22:54.812" endtime="20241126 20:22:54.813"/>
</kw>
<msg timestamp="20241126 20:22:54.814" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.811" endtime="20241126 20:22:54.814"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.820" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241126 20:22:54.818" endtime="20241126 20:22:54.820"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.823" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.822" endtime="20241126 20:22:54.824"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.821" endtime="20241126 20:22:54.824"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.824" endtime="20241126 20:22:54.825"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.824" endtime="20241126 20:22:54.825"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.820" endtime="20241126 20:22:54.826"/>
</if>
<status status="PASS" starttime="20241126 20:22:54.816" endtime="20241126 20:22:54.826"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.814" endtime="20241126 20:22:54.826"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:22:54.826" endtime="20241126 20:22:54.827"/>
</return>
<msg timestamp="20241126 20:22:54.827" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.808" endtime="20241126 20:22:54.827"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.831" endtime="20241126 20:22:54.831"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241126 20:22:54.832" endtime="20241126 20:22:54.832"/>
</return>
<status status="NOT RUN" starttime="20241126 20:22:54.830" endtime="20241126 20:22:54.832"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.827" endtime="20241126 20:22:54.832"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:22:54.842" endtime="20241126 20:22:54.842"/>
</kw>
<msg timestamp="20241126 20:22:54.842" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.841" endtime="20241126 20:22:54.842"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.847" level="INFO">${values} = {'id': '6', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 20:22:09 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T14:52:09.038Z', 'updatedAt': '2024-11-26T14:52:09.038...</msg>
<status status="PASS" starttime="20241126 20:22:54.844" endtime="20241126 20:22:54.847"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.852" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.850" endtime="20241126 20:22:54.852"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.850" endtime="20241126 20:22:54.852"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.853" endtime="20241126 20:22:54.854"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.852" endtime="20241126 20:22:54.854"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.849" endtime="20241126 20:22:54.854"/>
</if>
<status status="PASS" starttime="20241126 20:22:54.844" endtime="20241126 20:22:54.855"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.843" endtime="20241126 20:22:54.855"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:22:54.855" endtime="20241126 20:22:54.855"/>
</return>
<msg timestamp="20241126 20:22:54.857" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.840" endtime="20241126 20:22:54.857"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:22:54.861" endtime="20241126 20:22:54.861"/>
</kw>
<msg timestamp="20241126 20:22:54.861" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.861" endtime="20241126 20:22:54.862"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.863" level="INFO">${values} = {'id': '35', 'testCaseId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T14:52:49.053Z', 'createdAt': '2024-11-26T14:52:49.053Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241126 20:22:54.862" endtime="20241126 20:22:54.863"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.865" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.864" endtime="20241126 20:22:54.865"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.864" endtime="20241126 20:22:54.865"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.865" endtime="20241126 20:22:54.865"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.865" endtime="20241126 20:22:54.865"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.864" endtime="20241126 20:22:54.867"/>
</if>
<status status="PASS" starttime="20241126 20:22:54.862" endtime="20241126 20:22:54.868"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.862" endtime="20241126 20:22:54.868"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:22:54.868" endtime="20241126 20:22:54.868"/>
</return>
<msg timestamp="20241126 20:22:54.869" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.860" endtime="20241126 20:22:54.869"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.872" endtime="20241126 20:22:54.872"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.871" endtime="20241126 20:22:54.872"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.869" endtime="20241126 20:22:54.872"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.873" level="INFO">${testCase} = {'id': '6', 'name': 'Enter vehicle::duplicate-Tue Nov 26 2024 20:22:09 GMT+0530 (India Standard Time)', 'projectId': '1', 'createdAt': '2024-11-26T14:52:09.038Z', 'updatedAt': '2024-11-26T14:52:09.038...</msg>
<status status="PASS" starttime="20241126 20:22:54.872" endtime="20241126 20:22:54.873"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.875" level="INFO">${testCaseRun} = {'id': '35', 'testCaseId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T14:52:49.053Z', 'createdAt': '2024-11-26T14:52:49.053Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241126 20:22:54.875" endtime="20241126 20:22:54.875"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.876" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241126 20:22:54.875" endtime="20241126 20:22:54.876"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:22:54.876" endtime="20241126 20:22:54.877"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:22:54.884" endtime="20241126 20:22:54.885"/>
</kw>
<msg timestamp="20241126 20:22:54.885" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.884" endtime="20241126 20:22:54.885"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.888" level="INFO">${values} = [{'id': '11', 'testCaseId': '6', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T14:52:09.061Z', 'updatedAt': '2024-11-26T14:52:09.061Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</msg>
<status status="PASS" starttime="20241126 20:22:54.886" endtime="20241126 20:22:54.888"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.890" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.889" endtime="20241126 20:22:54.890"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.889" endtime="20241126 20:22:54.890"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.891" endtime="20241126 20:22:54.891"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.890" endtime="20241126 20:22:54.891"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.888" endtime="20241126 20:22:54.891"/>
</if>
<status status="PASS" starttime="20241126 20:22:54.886" endtime="20241126 20:22:54.892"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.885" endtime="20241126 20:22:54.892"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:22:54.892" endtime="20241126 20:22:54.892"/>
</return>
<msg timestamp="20241126 20:22:54.893" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.882" endtime="20241126 20:22:54.893"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:22:54.894" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '35', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241126 20:22:54.893" endtime="20241126 20:22:54.894"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:22:54.898" level="INFO">${json_response} = {"testCaseRunId": "35", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241126 20:22:54.897" endtime="20241126 20:22:54.899"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:22:54.911" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:22:54.911" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:22:54.899" endtime="20241126 20:22:54.911"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:22:54.911" endtime="20241126 20:22:54.914"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:22:54.914" endtime="20241126 20:22:54.915"/>
</return>
<status status="PASS" starttime="20241126 20:22:54.895" endtime="20241126 20:22:54.916"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:22:54.920" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241126 20:22:54.918" endtime="20241126 20:22:54.920"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '11', 'testCaseId': '6', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T14:52:09.061Z', 'updatedAt': '2024-11-26T14:52:09.061Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.925" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '25', 'actionId': '1', 'flowId': '1', 'o...</msg>
<status status="PASS" starttime="20241126 20:22:54.923" endtime="20241126 20:22:54.925"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:22:54.925" endtime="20241126 20:22:54.926"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:22:54.946" endtime="20241126 20:22:54.948"/>
</kw>
<msg timestamp="20241126 20:22:54.950" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.945" endtime="20241126 20:22:54.950"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.955" level="INFO">${values} = [{'id': '25', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T14:52:09.077Z', 'updatedAt': '2024-11-26T14:52:09.077Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAU...</msg>
<status status="PASS" starttime="20241126 20:22:54.954" endtime="20241126 20:22:54.955"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.957" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.957" endtime="20241126 20:22:54.958"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.956" endtime="20241126 20:22:54.958"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.960" endtime="20241126 20:22:54.960"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.959" endtime="20241126 20:22:54.960"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.956" endtime="20241126 20:22:54.961"/>
</if>
<status status="PASS" starttime="20241126 20:22:54.953" endtime="20241126 20:22:54.961"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.950" endtime="20241126 20:22:54.962"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:22:54.962" endtime="20241126 20:22:54.962"/>
</return>
<msg timestamp="20241126 20:22:54.963" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241126 20:22:54.944" endtime="20241126 20:22:54.963"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '25', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T14:52:09.077Z', 'updatedAt': '2024-11-26T14:52:09.077Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.969" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241126 20:22:54.968" endtime="20241126 20:22:54.970"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:22:54.970" endtime="20241126 20:22:54.971"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:22:54.976" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241126 20:22:54.974" endtime="20241126 20:22:54.976"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.978" endtime="20241126 20:22:54.978"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:22:54.979" endtime="20241126 20:22:54.979"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:22:54.977" endtime="20241126 20:22:54.981"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.976" endtime="20241126 20:22:54.981"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:22:54.984" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:22:54.982" endtime="20241126 20:22:54.984"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241126 20:23:01.490" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241126 20:23:01.490" level="INFO">${page_id} = {'page_id': 'page=d2e9fd67-48dc-4d09-8724-50c6fd726df6', 'video_path': ''}</msg>
<status status="PASS" starttime="20241126 20:22:54.986" endtime="20241126 20:23:01.490"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241126 20:23:01.493" level="INFO">Switching to page {'page_id': 'page=d2e9fd67-48dc-4d09-8724-50c6fd726df6', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241126 20:23:01.557" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=48a85774-5400-4d4c-ba25-b25ebad3e7f2",
    "contexts": [
      {
        "type": "context",
        "id": "context=11b93c7e-890e-49b2-8f10-7b48ac4892b4",
        "activePage": "page=d2e9fd67-48dc-4d09-8724-50c6fd726df6",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=f8283ca7-41ef-4db8-8ebb-f053cfeaecca",
            "timestamp": 1732632772.63
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=d2e9fd67-48dc-4d09-8724-50c6fd726df6",
            "timestamp": 1732632775.04
          }
        ]
      }
    ],
    "activeContext": "context=11b93c7e-890e-49b2-8f10-7b48ac4892b4",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241126 20:23:01.581" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241126 20:23:01.491" endtime="20241126 20:23:01.582"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.985" endtime="20241126 20:23:01.582"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.984" endtime="20241126 20:23:01.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:01.583" endtime="20241126 20:23:01.583"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.583" endtime="20241126 20:23:01.583"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.589" endtime="20241126 20:23:01.589"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.583" endtime="20241126 20:23:01.589"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.595" endtime="20241126 20:23:01.595"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.601" endtime="20241126 20:23:01.601"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.589" endtime="20241126 20:23:01.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.603" endtime="20241126 20:23:01.603"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.601" endtime="20241126 20:23:01.603"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.609" endtime="20241126 20:23:01.610"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.604" endtime="20241126 20:23:01.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.617" endtime="20241126 20:23:01.617"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.617" endtime="20241126 20:23:01.618"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.617" endtime="20241126 20:23:01.618"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.617" endtime="20241126 20:23:01.618"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.611" endtime="20241126 20:23:01.618"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.622" endtime="20241126 20:23:01.622"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.619" endtime="20241126 20:23:01.622"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.624" endtime="20241126 20:23:01.624"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.625" endtime="20241126 20:23:01.625"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.625" endtime="20241126 20:23:01.625"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.626" endtime="20241126 20:23:01.626"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.625" endtime="20241126 20:23:01.627"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.624" endtime="20241126 20:23:01.627"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.622" endtime="20241126 20:23:01.627"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:01.643" endtime="20241126 20:23:01.643"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.648" endtime="20241126 20:23:01.649"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.627" endtime="20241126 20:23:01.649"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.652" endtime="20241126 20:23:01.652"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.653" endtime="20241126 20:23:01.653"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.653" endtime="20241126 20:23:01.654"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.654" endtime="20241126 20:23:01.654"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.654" endtime="20241126 20:23:01.654"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.652" endtime="20241126 20:23:01.654"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.649" endtime="20241126 20:23:01.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:01.668" endtime="20241126 20:23:01.669"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.676" endtime="20241126 20:23:01.676"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.655" endtime="20241126 20:23:01.677"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.679" endtime="20241126 20:23:01.679"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.680" endtime="20241126 20:23:01.680"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.679" endtime="20241126 20:23:01.680"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.680" endtime="20241126 20:23:01.680"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.680" endtime="20241126 20:23:01.680"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.679" endtime="20241126 20:23:01.681"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.677" endtime="20241126 20:23:01.681"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.684" endtime="20241126 20:23:01.684"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.681" endtime="20241126 20:23:01.684"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:01.691" endtime="20241126 20:23:01.691"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.691" endtime="20241126 20:23:01.691"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.684" endtime="20241126 20:23:01.691"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.984" endtime="20241126 20:23:01.691"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:01.692" endtime="20241126 20:23:01.693"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:01.694" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:01.693" endtime="20241126 20:23:01.694"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:01.694" endtime="20241126 20:23:01.694"/>
</return>
<msg timestamp="20241126 20:23:01.695" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:22:54.981" endtime="20241126 20:23:01.695"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:01.698" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:25</msg>
<status status="PASS" starttime="20241126 20:23:01.697" endtime="20241126 20:23:01.698"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.699" endtime="20241126 20:23:01.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.699" endtime="20241126 20:23:01.699"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.699" endtime="20241126 20:23:01.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.700" endtime="20241126 20:23:01.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.700" endtime="20241126 20:23:01.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.700" endtime="20241126 20:23:01.700"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.701" endtime="20241126 20:23:01.701"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.701" endtime="20241126 20:23:01.701"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.704" endtime="20241126 20:23:01.704"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.706" endtime="20241126 20:23:01.706"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.708"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.708"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.708"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.709"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:01.709" endtime="20241126 20:23:01.709"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.709"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.709"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.709" endtime="20241126 20:23:01.709"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:01.709" endtime="20241126 20:23:01.711"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:01.709" endtime="20241126 20:23:01.711"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.709" endtime="20241126 20:23:01.711"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.708" endtime="20241126 20:23:01.711"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.706" endtime="20241126 20:23:01.711"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:01.712" endtime="20241126 20:23:01.712"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:01.712" endtime="20241126 20:23:01.712"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.711" endtime="20241126 20:23:01.712"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.713" endtime="20241126 20:23:01.713"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.712" endtime="20241126 20:23:01.713"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.712" endtime="20241126 20:23:01.713"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.714" endtime="20241126 20:23:01.714"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:01.714" endtime="20241126 20:23:01.714"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:01.713" endtime="20241126 20:23:01.714"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.713" endtime="20241126 20:23:01.714"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.711" endtime="20241126 20:23:01.714"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.711" endtime="20241126 20:23:01.714"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.698" endtime="20241126 20:23:01.715"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:01.698" endtime="20241126 20:23:01.715"/>
</for>
<msg timestamp="20241126 20:23:01.715" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:01.695" endtime="20241126 20:23:01.715"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:01.716" endtime="20241126 20:23:01.717"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 20:23:01.722" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241126 20:23:01.721" endtime="20241126 20:23:01.722"/>
</kw>
<msg timestamp="20241126 20:23:01.722" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 20:23:01.720" endtime="20241126 20:23:01.722"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.724" endtime="20241126 20:23:01.724"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.725" endtime="20241126 20:23:01.725"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.724" endtime="20241126 20:23:01.725"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.725" endtime="20241126 20:23:01.725"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.725" endtime="20241126 20:23:01.725"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:01.724" endtime="20241126 20:23:01.725"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:01.722" endtime="20241126 20:23:01.726"/>
</branch>
<status status="PASS" starttime="20241126 20:23:01.722" endtime="20241126 20:23:01.726"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:01.726" endtime="20241126 20:23:01.726"/>
</return>
<msg timestamp="20241126 20:23:01.726" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241126 20:23:01.720" endtime="20241126 20:23:01.726"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.728" endtime="20241126 20:23:01.728"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.728" endtime="20241126 20:23:01.728"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:01.730" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241126 20:23:01.728" endtime="20241126 20:23:01.730"/>
</kw>
<status status="PASS" starttime="20241126 20:23:01.728" endtime="20241126 20:23:01.731"/>
</branch>
<status status="PASS" starttime="20241126 20:23:01.727" endtime="20241126 20:23:01.731"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:01.735" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '387', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241126 20:23:01.731" endtime="20241126 20:23:01.735"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:01.737" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "387", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241126 20:23:01.736" endtime="20241126 20:23:01.737"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:01.752" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:01.752" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:01.737" endtime="20241126 20:23:01.752"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:01.753" endtime="20241126 20:23:01.753"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:01.753" endtime="20241126 20:23:01.753"/>
</return>
<status status="PASS" starttime="20241126 20:23:01.735" endtime="20241126 20:23:01.754"/>
</kw>
<status status="PASS" starttime="20241126 20:23:01.717" endtime="20241126 20:23:01.754"/>
</kw>
<status status="PASS" starttime="20241126 20:22:54.967" endtime="20241126 20:23:01.754"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.755" endtime="20241126 20:23:01.755"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:01.755" endtime="20241126 20:23:01.755"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.755" endtime="20241126 20:23:01.755"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.754" endtime="20241126 20:23:01.755"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.967" endtime="20241126 20:23:01.756"/>
</try>
<status status="PASS" starttime="20241126 20:22:54.966" endtime="20241126 20:23:01.756"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:01.758" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241126 20:23:01.757" endtime="20241126 20:23:01.758"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:01.758" endtime="20241126 20:23:01.759"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:01.760" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241126 20:23:01.759" endtime="20241126 20:23:01.760"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.761" endtime="20241126 20:23:01.761"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:01.761" endtime="20241126 20:23:01.761"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:01.761" endtime="20241126 20:23:01.761"/>
</branch>
<status status="PASS" starttime="20241126 20:23:01.760" endtime="20241126 20:23:01.761"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:01.762" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:01.762" endtime="20241126 20:23:01.762"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241126 20:23:07.507" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241126 20:23:07.508" level="INFO">${page_id} = {'page_id': 'page=41a6e7e9-68c8-4f2d-a214-edb477ecbb1b', 'video_path': ''}</msg>
<status status="PASS" starttime="20241126 20:23:01.764" endtime="20241126 20:23:07.508"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241126 20:23:07.510" level="INFO">Switching to page {'page_id': 'page=41a6e7e9-68c8-4f2d-a214-edb477ecbb1b', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241126 20:23:07.601" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=48a85774-5400-4d4c-ba25-b25ebad3e7f2",
    "contexts": [
      {
        "type": "context",
        "id": "context=11b93c7e-890e-49b2-8f10-7b48ac4892b4",
        "activePage": "page=41a6e7e9-68c8-4f2d-a214-edb477ecbb1b",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=f8283ca7-41ef-4db8-8ebb-f053cfeaecca",
            "timestamp": 1732632772.63
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=d2e9fd67-48dc-4d09-8724-50c6fd726df6",
            "timestamp": 1732632775.04
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=41a6e7e9-68c8-4f2d-a214-edb477ecbb1b",
            "timestamp": 1732632781.821
          }
        ]
      }
    ],
    "activeContext": "context=11b93c7e-890e-49b2-8f10-7b48ac4892b4",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241126 20:23:07.606" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241126 20:23:07.508" endtime="20241126 20:23:07.606"/>
</kw>
<status status="PASS" starttime="20241126 20:23:01.763" endtime="20241126 20:23:07.607"/>
</kw>
<status status="PASS" starttime="20241126 20:23:01.763" endtime="20241126 20:23:07.607"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:07.607" endtime="20241126 20:23:07.607"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.607" endtime="20241126 20:23:07.607"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.611" endtime="20241126 20:23:07.611"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.607" endtime="20241126 20:23:07.611"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.615" endtime="20241126 20:23:07.615"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.621" endtime="20241126 20:23:07.621"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.611" endtime="20241126 20:23:07.621"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.623" endtime="20241126 20:23:07.623"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.622" endtime="20241126 20:23:07.623"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.627" endtime="20241126 20:23:07.627"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.623" endtime="20241126 20:23:07.627"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.630" endtime="20241126 20:23:07.630"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.630" endtime="20241126 20:23:07.630"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.630" endtime="20241126 20:23:07.630"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.630" endtime="20241126 20:23:07.630"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.627" endtime="20241126 20:23:07.632"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.633" endtime="20241126 20:23:07.633"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.632" endtime="20241126 20:23:07.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.636" endtime="20241126 20:23:07.636"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.637" endtime="20241126 20:23:07.637"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.637" endtime="20241126 20:23:07.637"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.637" endtime="20241126 20:23:07.638"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.637" endtime="20241126 20:23:07.638"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.636" endtime="20241126 20:23:07.638"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.634" endtime="20241126 20:23:07.638"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:07.646" endtime="20241126 20:23:07.646"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.649" endtime="20241126 20:23:07.649"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.638" endtime="20241126 20:23:07.649"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.650" endtime="20241126 20:23:07.650"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.652" endtime="20241126 20:23:07.652"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.652" endtime="20241126 20:23:07.652"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.653" endtime="20241126 20:23:07.653"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.652" endtime="20241126 20:23:07.653"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.650" endtime="20241126 20:23:07.653"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.649" endtime="20241126 20:23:07.653"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:07.659" endtime="20241126 20:23:07.659"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.663" endtime="20241126 20:23:07.663"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.653" endtime="20241126 20:23:07.663"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.665" endtime="20241126 20:23:07.665"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.666" endtime="20241126 20:23:07.666"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.665" endtime="20241126 20:23:07.666"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.666" endtime="20241126 20:23:07.666"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.666" endtime="20241126 20:23:07.666"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.665" endtime="20241126 20:23:07.666"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.663" endtime="20241126 20:23:07.667"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.672" endtime="20241126 20:23:07.672"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.667" endtime="20241126 20:23:07.673"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:07.682" endtime="20241126 20:23:07.682"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.683" endtime="20241126 20:23:07.683"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.673" endtime="20241126 20:23:07.683"/>
</branch>
<status status="PASS" starttime="20241126 20:23:01.763" endtime="20241126 20:23:07.683"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:07.683" endtime="20241126 20:23:07.684"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:07.686" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:07.684" endtime="20241126 20:23:07.686"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:07.686" endtime="20241126 20:23:07.686"/>
</return>
<msg timestamp="20241126 20:23:07.686" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:01.762" endtime="20241126 20:23:07.686"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:07.688" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241126 20:23:07.687" endtime="20241126 20:23:07.688"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.689" endtime="20241126 20:23:07.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.689" endtime="20241126 20:23:07.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.689" endtime="20241126 20:23:07.689"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.690" endtime="20241126 20:23:07.690"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.690" endtime="20241126 20:23:07.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.692" endtime="20241126 20:23:07.692"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.692" endtime="20241126 20:23:07.692"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.693" endtime="20241126 20:23:07.693"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.694" endtime="20241126 20:23:07.695"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.696"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.696"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.696"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.697"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.698" endtime="20241126 20:23:07.698"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:07.698" endtime="20241126 20:23:07.698"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.697" endtime="20241126 20:23:07.698"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.697" endtime="20241126 20:23:07.698"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.698" endtime="20241126 20:23:07.698"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:07.699" endtime="20241126 20:23:07.699"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.698" endtime="20241126 20:23:07.699"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.698" endtime="20241126 20:23:07.699"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.699"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.696" endtime="20241126 20:23:07.699"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:07.700" endtime="20241126 20:23:07.700"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.700" endtime="20241126 20:23:07.700"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.700" endtime="20241126 20:23:07.701"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.703" endtime="20241126 20:23:07.703"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.702" endtime="20241126 20:23:07.703"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.701" endtime="20241126 20:23:07.703"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.703" endtime="20241126 20:23:07.704"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:07.704" endtime="20241126 20:23:07.704"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.703" endtime="20241126 20:23:07.704"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.703" endtime="20241126 20:23:07.704"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.699" endtime="20241126 20:23:07.704"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.699" endtime="20241126 20:23:07.704"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.688" endtime="20241126 20:23:07.704"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:07.688" endtime="20241126 20:23:07.704"/>
</for>
<msg timestamp="20241126 20:23:07.705" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:07.686" endtime="20241126 20:23:07.705"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:07.705" endtime="20241126 20:23:07.706"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 20:23:07.715" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241126 20:23:07.714" endtime="20241126 20:23:07.715"/>
</kw>
<msg timestamp="20241126 20:23:07.715" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 20:23:07.712" endtime="20241126 20:23:07.715"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.716" endtime="20241126 20:23:07.716"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.717" endtime="20241126 20:23:07.717"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.717" endtime="20241126 20:23:07.717"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.718" endtime="20241126 20:23:07.718"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.717" endtime="20241126 20:23:07.720"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:07.716" endtime="20241126 20:23:07.720"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:07.716" endtime="20241126 20:23:07.720"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.715" endtime="20241126 20:23:07.720"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:07.720" endtime="20241126 20:23:07.720"/>
</return>
<msg timestamp="20241126 20:23:07.722" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241126 20:23:07.712" endtime="20241126 20:23:07.722"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.724" endtime="20241126 20:23:07.724"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.724" endtime="20241126 20:23:07.724"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:07.726" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241126 20:23:07.725" endtime="20241126 20:23:07.726"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.724" endtime="20241126 20:23:07.726"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.723" endtime="20241126 20:23:07.726"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:07.728" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '388', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241126 20:23:07.727" endtime="20241126 20:23:07.728"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:07.732" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "388", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241126 20:23:07.730" endtime="20241126 20:23:07.732"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:07.759" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:07.760" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:07.732" endtime="20241126 20:23:07.760"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:07.761" endtime="20241126 20:23:07.762"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:07.762" endtime="20241126 20:23:07.762"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.730" endtime="20241126 20:23:07.763"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.706" endtime="20241126 20:23:07.763"/>
</kw>
<status status="PASS" starttime="20241126 20:23:01.757" endtime="20241126 20:23:07.763"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.764" endtime="20241126 20:23:07.765"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:07.765" endtime="20241126 20:23:07.765"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.767" endtime="20241126 20:23:07.767"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.764" endtime="20241126 20:23:07.768"/>
</branch>
<status status="PASS" starttime="20241126 20:23:01.757" endtime="20241126 20:23:07.769"/>
</try>
<status status="PASS" starttime="20241126 20:23:01.756" endtime="20241126 20:23:07.769"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '26', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-26T14:52:09.078Z', 'updatedAt': '2024-11-26T14:52:09.078Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:07.772" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241126 20:23:07.771" endtime="20241126 20:23:07.772"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:07.772" endtime="20241126 20:23:07.781"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:07.782" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241126 20:23:07.781" endtime="20241126 20:23:07.782"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.784" endtime="20241126 20:23:07.784"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.787" endtime="20241126 20:23:07.788"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.783" endtime="20241126 20:23:07.789"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.783" endtime="20241126 20:23:07.789"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:07.793" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:07.792" endtime="20241126 20:23:07.793"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:07.795" endtime="20241126 20:23:07.796"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.794" endtime="20241126 20:23:07.797"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:07.798" endtime="20241126 20:23:07.798"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.798" endtime="20241126 20:23:07.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.811" endtime="20241126 20:23:07.811"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.800" endtime="20241126 20:23:07.812"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.825" endtime="20241126 20:23:07.825"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.832" endtime="20241126 20:23:07.832"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.812" endtime="20241126 20:23:07.833"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.837" endtime="20241126 20:23:07.838"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.834" endtime="20241126 20:23:07.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.853" endtime="20241126 20:23:07.853"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.839" endtime="20241126 20:23:07.854"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:07.919" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:07.888" endtime="20241126 20:23:07.919"/>
</kw>
<msg timestamp="20241126 20:23:07.919" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.887" endtime="20241126 20:23:07.919"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:07.920" endtime="20241126 20:23:07.920"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.887" endtime="20241126 20:23:07.920"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.920" endtime="20241126 20:23:07.920"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.921" endtime="20241126 20:23:07.921"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.920" endtime="20241126 20:23:07.921"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.887" endtime="20241126 20:23:07.921"/>
</try>
<msg timestamp="20241126 20:23:07.921" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.884" endtime="20241126 20:23:07.921"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:07.921" endtime="20241126 20:23:07.921"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.879" endtime="20241126 20:23:07.921"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:07.923" endtime="20241126 20:23:07.923"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.923" endtime="20241126 20:23:07.923"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.879" endtime="20241126 20:23:07.923"/>
</try>
<msg timestamp="20241126 20:23:07.923" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.878" endtime="20241126 20:23:07.923"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.926" endtime="20241126 20:23:07.926"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.926" endtime="20241126 20:23:07.926"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.926" endtime="20241126 20:23:07.926"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.925" endtime="20241126 20:23:07.926"/>
</if>
<status status="PASS" starttime="20241126 20:23:07.924" endtime="20241126 20:23:07.926"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.877" endtime="20241126 20:23:07.927"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:07.944" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:07.937" endtime="20241126 20:23:07.945"/>
</kw>
<msg timestamp="20241126 20:23:07.945" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.937" endtime="20241126 20:23:07.945"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:07.945" endtime="20241126 20:23:07.945"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.937" endtime="20241126 20:23:07.945"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.946" endtime="20241126 20:23:07.947"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.948" endtime="20241126 20:23:07.948"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.945" endtime="20241126 20:23:07.948"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.937" endtime="20241126 20:23:07.948"/>
</try>
<msg timestamp="20241126 20:23:07.948" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.936" endtime="20241126 20:23:07.948"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:07.948" endtime="20241126 20:23:07.950"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.935" endtime="20241126 20:23:07.950"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:07.950" endtime="20241126 20:23:07.950"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:07.950" endtime="20241126 20:23:07.950"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.935" endtime="20241126 20:23:07.950"/>
</try>
<msg timestamp="20241126 20:23:07.951" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:07.935" endtime="20241126 20:23:07.951"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.957" endtime="20241126 20:23:07.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.958" endtime="20241126 20:23:07.959"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.957" endtime="20241126 20:23:07.959"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.956" endtime="20241126 20:23:07.959"/>
</if>
<status status="PASS" starttime="20241126 20:23:07.953" endtime="20241126 20:23:07.959"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.933" endtime="20241126 20:23:07.959"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241126 20:23:07.996" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241126 20:23:07.996" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:07.960" endtime="20241126 20:23:07.996"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241126 20:23:07.997" endtime="20241126 20:23:07.997"/>
</return>
<status status="PASS" starttime="20241126 20:23:07.959" endtime="20241126 20:23:07.997"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.997" endtime="20241126 20:23:07.997"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:07.997" endtime="20241126 20:23:07.998"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:07.997" endtime="20241126 20:23:07.998"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.959" endtime="20241126 20:23:07.998"/>
</try>
<msg timestamp="20241126 20:23:07.998" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:07.931" endtime="20241126 20:23:07.998"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.004" endtime="20241126 20:23:08.005"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.005" endtime="20241126 20:23:08.005"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.004" endtime="20241126 20:23:08.005"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.004" endtime="20241126 20:23:08.005"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.000" endtime="20241126 20:23:08.005"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.929" endtime="20241126 20:23:08.005"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.006" endtime="20241126 20:23:08.006"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.006" endtime="20241126 20:23:08.006"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.929" endtime="20241126 20:23:08.006"/>
</try>
<status status="PASS" starttime="20241126 20:23:07.929" endtime="20241126 20:23:08.006"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.024" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:08.012" endtime="20241126 20:23:08.024"/>
</kw>
<msg timestamp="20241126 20:23:08.024" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.012" endtime="20241126 20:23:08.024"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.025" endtime="20241126 20:23:08.025"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.011" endtime="20241126 20:23:08.025"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.026" endtime="20241126 20:23:08.026"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.026" endtime="20241126 20:23:08.026"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.025" endtime="20241126 20:23:08.026"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.011" endtime="20241126 20:23:08.026"/>
</try>
<msg timestamp="20241126 20:23:08.027" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.011" endtime="20241126 20:23:08.027"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.027" endtime="20241126 20:23:08.027"/>
</return>
<msg timestamp="20241126 20:23:08.027" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.010" endtime="20241126 20:23:08.027"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.033" endtime="20241126 20:23:08.034"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.036" endtime="20241126 20:23:08.036"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.033" endtime="20241126 20:23:08.036"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.032" endtime="20241126 20:23:08.036"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.030" endtime="20241126 20:23:08.037"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.008" endtime="20241126 20:23:08.037"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.864" endtime="20241126 20:23:08.037"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.093" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241126 20:23:08.050" endtime="20241126 20:23:08.094"/>
</kw>
<msg timestamp="20241126 20:23:08.094" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.049" endtime="20241126 20:23:08.094"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.094" endtime="20241126 20:23:08.094"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.048" endtime="20241126 20:23:08.096"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.096" endtime="20241126 20:23:08.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.097" endtime="20241126 20:23:08.097"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.096" endtime="20241126 20:23:08.097"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.048" endtime="20241126 20:23:08.097"/>
</try>
<msg timestamp="20241126 20:23:08.098" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.047" endtime="20241126 20:23:08.098"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.098" endtime="20241126 20:23:08.098"/>
</return>
<msg timestamp="20241126 20:23:08.099" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.044" endtime="20241126 20:23:08.099"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.107" endtime="20241126 20:23:08.107"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.108" endtime="20241126 20:23:08.108"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.107" endtime="20241126 20:23:08.108"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.106" endtime="20241126 20:23:08.109"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.104" endtime="20241126 20:23:08.109"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.043" endtime="20241126 20:23:08.109"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:08.112" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:08.111" endtime="20241126 20:23:08.114"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.124" endtime="20241126 20:23:08.124"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.127" endtime="20241126 20:23:08.128"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.123" endtime="20241126 20:23:08.128"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:08.129" endtime="20241126 20:23:08.129"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.128" endtime="20241126 20:23:08.129"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.123" endtime="20241126 20:23:08.130"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241126 20:23:08.131" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241126 20:23:08.130" endtime="20241126 20:23:08.191"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.130" endtime="20241126 20:23:08.191"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.192" endtime="20241126 20:23:08.192"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.192" endtime="20241126 20:23:08.192"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.191" endtime="20241126 20:23:08.192"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.130" endtime="20241126 20:23:08.193"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.120" endtime="20241126 20:23:08.193"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.116" endtime="20241126 20:23:08.193"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.114" endtime="20241126 20:23:08.193"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.194" endtime="20241126 20:23:08.194"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.193" endtime="20241126 20:23:08.194"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.114" endtime="20241126 20:23:08.195"/>
</try>
<status status="PASS" starttime="20241126 20:23:07.860" endtime="20241126 20:23:08.195"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.196" endtime="20241126 20:23:08.197"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.196" endtime="20241126 20:23:08.197"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.195" endtime="20241126 20:23:08.197"/>
</if>
<status status="PASS" starttime="20241126 20:23:07.854" endtime="20241126 20:23:08.197"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.200" endtime="20241126 20:23:08.200"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.197" endtime="20241126 20:23:08.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.206" endtime="20241126 20:23:08.206"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.207" endtime="20241126 20:23:08.208"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.206" endtime="20241126 20:23:08.208"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.208" endtime="20241126 20:23:08.209"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.208" endtime="20241126 20:23:08.209"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.206" endtime="20241126 20:23:08.209"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.201" endtime="20241126 20:23:08.209"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:08.223" endtime="20241126 20:23:08.223"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.232" endtime="20241126 20:23:08.232"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.209" endtime="20241126 20:23:08.232"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.237" endtime="20241126 20:23:08.238"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.238" endtime="20241126 20:23:08.238"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.238" endtime="20241126 20:23:08.238"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.239" endtime="20241126 20:23:08.240"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.239" endtime="20241126 20:23:08.240"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.238" endtime="20241126 20:23:08.240"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.232" endtime="20241126 20:23:08.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:08.247" endtime="20241126 20:23:08.247"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.250" endtime="20241126 20:23:08.252"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.240" endtime="20241126 20:23:08.252"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.256" endtime="20241126 20:23:08.256"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.257" endtime="20241126 20:23:08.257"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.256" endtime="20241126 20:23:08.257"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.257" endtime="20241126 20:23:08.257"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.257" endtime="20241126 20:23:08.257"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.256" endtime="20241126 20:23:08.257"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.253" endtime="20241126 20:23:08.257"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.259" endtime="20241126 20:23:08.260"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.257" endtime="20241126 20:23:08.260"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.269" endtime="20241126 20:23:08.270"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.271" endtime="20241126 20:23:08.271"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.260" endtime="20241126 20:23:08.271"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.793" endtime="20241126 20:23:08.272"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.272" endtime="20241126 20:23:08.273"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:08.274" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:08.273" endtime="20241126 20:23:08.274"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:08.275" endtime="20241126 20:23:08.275"/>
</return>
<msg timestamp="20241126 20:23:08.276" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:07.790" endtime="20241126 20:23:08.276"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.277" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:26</msg>
<status status="PASS" starttime="20241126 20:23:08.277" endtime="20241126 20:23:08.277"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.277" endtime="20241126 20:23:08.277"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.278" endtime="20241126 20:23:08.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.278" endtime="20241126 20:23:08.278"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.279" endtime="20241126 20:23:08.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.279" endtime="20241126 20:23:08.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.279" endtime="20241126 20:23:08.279"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.280" endtime="20241126 20:23:08.280"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.280" endtime="20241126 20:23:08.280"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.282" endtime="20241126 20:23:08.282"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.285" endtime="20241126 20:23:08.287"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:08.289" endtime="20241126 20:23:08.289"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.289" endtime="20241126 20:23:08.289"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.289" endtime="20241126 20:23:08.289"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.290" endtime="20241126 20:23:08.291"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.291" endtime="20241126 20:23:08.291"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.290" endtime="20241126 20:23:08.291"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.290" endtime="20241126 20:23:08.291"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.292" endtime="20241126 20:23:08.292"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.292" endtime="20241126 20:23:08.292"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.291" endtime="20241126 20:23:08.292"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.291" endtime="20241126 20:23:08.292"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.288" endtime="20241126 20:23:08.292"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.287" endtime="20241126 20:23:08.292"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:08.293" endtime="20241126 20:23:08.293"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.293" endtime="20241126 20:23:08.293"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.293" endtime="20241126 20:23:08.293"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.294" endtime="20241126 20:23:08.294"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.293" endtime="20241126 20:23:08.294"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.293" endtime="20241126 20:23:08.294"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.294" endtime="20241126 20:23:08.294"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.294" endtime="20241126 20:23:08.295"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.294" endtime="20241126 20:23:08.295"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.294" endtime="20241126 20:23:08.295"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.292" endtime="20241126 20:23:08.295"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.292" endtime="20241126 20:23:08.295"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.277" endtime="20241126 20:23:08.295"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:08.277" endtime="20241126 20:23:08.295"/>
</for>
<msg timestamp="20241126 20:23:08.296" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:08.276" endtime="20241126 20:23:08.296"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.296" endtime="20241126 20:23:08.297"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:08.308" endtime="20241126 20:23:08.309"/>
</kw>
<msg timestamp="20241126 20:23:08.309" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.307" endtime="20241126 20:23:08.309"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.310" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241126 20:23:08.309" endtime="20241126 20:23:08.310"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.312" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.311" endtime="20241126 20:23:08.312"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.311" endtime="20241126 20:23:08.312"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.313" endtime="20241126 20:23:08.313"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.312" endtime="20241126 20:23:08.313"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.310" endtime="20241126 20:23:08.313"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.309" endtime="20241126 20:23:08.313"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.309" endtime="20241126 20:23:08.314"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:08.314" endtime="20241126 20:23:08.314"/>
</return>
<msg timestamp="20241126 20:23:08.314" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.306" endtime="20241126 20:23:08.315"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.316" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241126 20:23:08.315" endtime="20241126 20:23:08.316"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.315" endtime="20241126 20:23:08.318"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.322" endtime="20241126 20:23:08.326"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.318" endtime="20241126 20:23:08.327"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.315" endtime="20241126 20:23:08.327"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:08.331" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '389', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241126 20:23:08.327" endtime="20241126 20:23:08.331"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:08.337" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "389", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241126 20:23:08.333" endtime="20241126 20:23:08.337"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:08.357" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:08.357" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:08.337" endtime="20241126 20:23:08.357"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.358" endtime="20241126 20:23:08.359"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:08.359" endtime="20241126 20:23:08.359"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.332" endtime="20241126 20:23:08.360"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.297" endtime="20241126 20:23:08.360"/>
</kw>
<status status="PASS" starttime="20241126 20:23:07.770" endtime="20241126 20:23:08.360"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.360" endtime="20241126 20:23:08.361"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.361" endtime="20241126 20:23:08.361"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.361" endtime="20241126 20:23:08.361"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.360" endtime="20241126 20:23:08.361"/>
</branch>
<status status="PASS" starttime="20241126 20:23:07.770" endtime="20241126 20:23:08.361"/>
</try>
<status status="PASS" starttime="20241126 20:23:07.770" endtime="20241126 20:23:08.361"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '2', 'name': 'Enter username', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.364" level="INFO">${action} = {'id': '2', 'name': 'Enter username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:58:57.423Z', 'updatedAt': '2024-11-25T07:58:5...</msg>
<status status="PASS" starttime="20241126 20:23:08.363" endtime="20241126 20:23:08.364"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.364" endtime="20241126 20:23:08.366"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:08.375" level="INFO">${input} = {'id': '3', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:57.620Z', 'updatedAt': '2024-11-25T11:16:10.6...</msg>
<status status="PASS" starttime="20241126 20:23:08.369" endtime="20241126 20:23:08.375"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.376" endtime="20241126 20:23:08.376"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.377" endtime="20241126 20:23:08.377"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.375" endtime="20241126 20:23:08.377"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.375" endtime="20241126 20:23:08.377"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.381" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:08.380" endtime="20241126 20:23:08.381"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.382" endtime="20241126 20:23:08.382"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.382" endtime="20241126 20:23:08.383"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.383" endtime="20241126 20:23:08.383"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.383" endtime="20241126 20:23:08.383"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.390" endtime="20241126 20:23:08.391"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.384" endtime="20241126 20:23:08.391"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.394" endtime="20241126 20:23:08.394"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.397" endtime="20241126 20:23:08.397"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.391" endtime="20241126 20:23:08.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.399" endtime="20241126 20:23:08.399"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.397" endtime="20241126 20:23:08.399"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.408" endtime="20241126 20:23:08.408"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.399" endtime="20241126 20:23:08.408"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.433" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:08.425" endtime="20241126 20:23:08.434"/>
</kw>
<msg timestamp="20241126 20:23:08.436" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.425" endtime="20241126 20:23:08.436"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.436" endtime="20241126 20:23:08.436"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.425" endtime="20241126 20:23:08.437"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.437" endtime="20241126 20:23:08.437"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.437" endtime="20241126 20:23:08.437"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.437" endtime="20241126 20:23:08.437"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.424" endtime="20241126 20:23:08.437"/>
</try>
<msg timestamp="20241126 20:23:08.438" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.423" endtime="20241126 20:23:08.438"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.438" endtime="20241126 20:23:08.438"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.420" endtime="20241126 20:23:08.438"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.438" endtime="20241126 20:23:08.439"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.438" endtime="20241126 20:23:08.439"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.418" endtime="20241126 20:23:08.439"/>
</try>
<msg timestamp="20241126 20:23:08.439" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.416" endtime="20241126 20:23:08.439"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.443" endtime="20241126 20:23:08.443"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.443" endtime="20241126 20:23:08.443"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.443" endtime="20241126 20:23:08.443"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.442" endtime="20241126 20:23:08.444"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.441" endtime="20241126 20:23:08.444"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.416" endtime="20241126 20:23:08.444"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.466" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:08.458" endtime="20241126 20:23:08.467"/>
</kw>
<msg timestamp="20241126 20:23:08.467" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.457" endtime="20241126 20:23:08.467"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.468" endtime="20241126 20:23:08.468"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.457" endtime="20241126 20:23:08.468"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.471" endtime="20241126 20:23:08.471"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.472" endtime="20241126 20:23:08.472"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.468" endtime="20241126 20:23:08.472"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.457" endtime="20241126 20:23:08.472"/>
</try>
<msg timestamp="20241126 20:23:08.473" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.456" endtime="20241126 20:23:08.473"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.473" endtime="20241126 20:23:08.473"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.454" endtime="20241126 20:23:08.473"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.474" endtime="20241126 20:23:08.474"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.474" endtime="20241126 20:23:08.474"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.454" endtime="20241126 20:23:08.474"/>
</try>
<msg timestamp="20241126 20:23:08.475" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.453" endtime="20241126 20:23:08.475"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.478" endtime="20241126 20:23:08.478"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.478" endtime="20241126 20:23:08.478"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.477" endtime="20241126 20:23:08.478"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.477" endtime="20241126 20:23:08.478"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.477" endtime="20241126 20:23:08.479"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.451" endtime="20241126 20:23:08.479"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241126 20:23:08.495" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241126 20:23:08.496" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:08.479" endtime="20241126 20:23:08.496"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241126 20:23:08.496" endtime="20241126 20:23:08.496"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.479" endtime="20241126 20:23:08.496"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.497" endtime="20241126 20:23:08.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.497" endtime="20241126 20:23:08.497"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.497" endtime="20241126 20:23:08.497"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.479" endtime="20241126 20:23:08.497"/>
</try>
<msg timestamp="20241126 20:23:08.498" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:08.448" endtime="20241126 20:23:08.498"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.506" endtime="20241126 20:23:08.506"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.507" endtime="20241126 20:23:08.507"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.505" endtime="20241126 20:23:08.507"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.505" endtime="20241126 20:23:08.507"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.502" endtime="20241126 20:23:08.507"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.446" endtime="20241126 20:23:08.508"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.509" endtime="20241126 20:23:08.509"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.508" endtime="20241126 20:23:08.509"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.446" endtime="20241126 20:23:08.509"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.446" endtime="20241126 20:23:08.510"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.535" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:08.524" endtime="20241126 20:23:08.535"/>
</kw>
<msg timestamp="20241126 20:23:08.536" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.523" endtime="20241126 20:23:08.536"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.536" endtime="20241126 20:23:08.536"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.523" endtime="20241126 20:23:08.538"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.538" endtime="20241126 20:23:08.538"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.539" endtime="20241126 20:23:08.539"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.538" endtime="20241126 20:23:08.539"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.522" endtime="20241126 20:23:08.539"/>
</try>
<msg timestamp="20241126 20:23:08.540" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.521" endtime="20241126 20:23:08.540"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.540" endtime="20241126 20:23:08.540"/>
</return>
<msg timestamp="20241126 20:23:08.541" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.514" endtime="20241126 20:23:08.541"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.546" endtime="20241126 20:23:08.546"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.547" endtime="20241126 20:23:08.547"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.546" endtime="20241126 20:23:08.547"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.545" endtime="20241126 20:23:08.547"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.543" endtime="20241126 20:23:08.548"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.513" endtime="20241126 20:23:08.548"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.412" endtime="20241126 20:23:08.549"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.591" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241126 20:23:08.560" endtime="20241126 20:23:08.591"/>
</kw>
<msg timestamp="20241126 20:23:08.591" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.560" endtime="20241126 20:23:08.592"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.592" endtime="20241126 20:23:08.592"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.558" endtime="20241126 20:23:08.592"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.593" endtime="20241126 20:23:08.593"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.593" endtime="20241126 20:23:08.593"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.592" endtime="20241126 20:23:08.593"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.558" endtime="20241126 20:23:08.593"/>
</try>
<msg timestamp="20241126 20:23:08.595" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.558" endtime="20241126 20:23:08.595"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.595" endtime="20241126 20:23:08.595"/>
</return>
<msg timestamp="20241126 20:23:08.595" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.556" endtime="20241126 20:23:08.595"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.603" endtime="20241126 20:23:08.603"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.604" endtime="20241126 20:23:08.604"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.601" endtime="20241126 20:23:08.605"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.601" endtime="20241126 20:23:08.605"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.598" endtime="20241126 20:23:08.606"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.555" endtime="20241126 20:23:08.606"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:08.607" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:08.606" endtime="20241126 20:23:08.607"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.611" endtime="20241126 20:23:08.611"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.615" endtime="20241126 20:23:08.616"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.611" endtime="20241126 20:23:08.616"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:08.617" endtime="20241126 20:23:08.620"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.616" endtime="20241126 20:23:08.620"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.609" endtime="20241126 20:23:08.620"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241126 20:23:08.623" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241126 20:23:08.622" endtime="20241126 20:23:08.649"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.622" endtime="20241126 20:23:08.649"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.651" endtime="20241126 20:23:08.652"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.653" endtime="20241126 20:23:08.653"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.649" endtime="20241126 20:23:08.653"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.621" endtime="20241126 20:23:08.653"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.609" endtime="20241126 20:23:08.654"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.608" endtime="20241126 20:23:08.654"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.608" endtime="20241126 20:23:08.655"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.656" endtime="20241126 20:23:08.656"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.655" endtime="20241126 20:23:08.656"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.608" endtime="20241126 20:23:08.656"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.411" endtime="20241126 20:23:08.657"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.658" endtime="20241126 20:23:08.658"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.657" endtime="20241126 20:23:08.658"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.657" endtime="20241126 20:23:08.658"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.408" endtime="20241126 20:23:08.660"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.663" endtime="20241126 20:23:08.664"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.660" endtime="20241126 20:23:08.664"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.666" endtime="20241126 20:23:08.667"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.669" endtime="20241126 20:23:08.669"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.668" endtime="20241126 20:23:08.669"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.670" endtime="20241126 20:23:08.670"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.669" endtime="20241126 20:23:08.670"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.667" endtime="20241126 20:23:08.670"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.664" endtime="20241126 20:23:08.670"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:08.682" endtime="20241126 20:23:08.682"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.688" endtime="20241126 20:23:08.689"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.671" endtime="20241126 20:23:08.689"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.691" endtime="20241126 20:23:08.691"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.691" endtime="20241126 20:23:08.692"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.691" endtime="20241126 20:23:08.692"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.692" endtime="20241126 20:23:08.693"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.692" endtime="20241126 20:23:08.693"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.691" endtime="20241126 20:23:08.693"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.689" endtime="20241126 20:23:08.693"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:08.705" endtime="20241126 20:23:08.705"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.710" endtime="20241126 20:23:08.711"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.693" endtime="20241126 20:23:08.711"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.714" endtime="20241126 20:23:08.714"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.715" endtime="20241126 20:23:08.715"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.714" endtime="20241126 20:23:08.715"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.715" endtime="20241126 20:23:08.716"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.715" endtime="20241126 20:23:08.716"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.714" endtime="20241126 20:23:08.716"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.711" endtime="20241126 20:23:08.716"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.721" endtime="20241126 20:23:08.721"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.717" endtime="20241126 20:23:08.721"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.734" endtime="20241126 20:23:08.734"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.735" endtime="20241126 20:23:08.735"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.721" endtime="20241126 20:23:08.735"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.382" endtime="20241126 20:23:08.736"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.736" endtime="20241126 20:23:08.737"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:08.739" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:08.737" endtime="20241126 20:23:08.739"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:08.739" endtime="20241126 20:23:08.739"/>
</return>
<msg timestamp="20241126 20:23:08.740" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241126 20:23:08.378" endtime="20241126 20:23:08.740"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.742" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241126 20:23:08.741" endtime="20241126 20:23:08.742"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.743" endtime="20241126 20:23:08.743"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.744" endtime="20241126 20:23:08.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.744" endtime="20241126 20:23:08.744"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.745" endtime="20241126 20:23:08.745"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.745" endtime="20241126 20:23:08.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.746" endtime="20241126 20:23:08.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.746" endtime="20241126 20:23:08.746"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.746" endtime="20241126 20:23:08.746"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.749" endtime="20241126 20:23:08.749"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.752" endtime="20241126 20:23:08.753"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:08.754" endtime="20241126 20:23:08.754"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.754" endtime="20241126 20:23:08.755"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.753" endtime="20241126 20:23:08.755"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.755" endtime="20241126 20:23:08.756"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.756" endtime="20241126 20:23:08.756"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.755" endtime="20241126 20:23:08.756"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.755" endtime="20241126 20:23:08.756"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.757" endtime="20241126 20:23:08.757"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.757" endtime="20241126 20:23:08.757"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.757" endtime="20241126 20:23:08.757"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.757" endtime="20241126 20:23:08.757"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.753" endtime="20241126 20:23:08.757"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.753" endtime="20241126 20:23:08.758"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:08.759" endtime="20241126 20:23:08.759"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.758" endtime="20241126 20:23:08.759"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.758" endtime="20241126 20:23:08.759"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.760" endtime="20241126 20:23:08.760"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.759" endtime="20241126 20:23:08.760"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.759" endtime="20241126 20:23:08.760"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.762" endtime="20241126 20:23:08.762"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.762" endtime="20241126 20:23:08.762"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.760" endtime="20241126 20:23:08.762"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.760" endtime="20241126 20:23:08.762"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.758" endtime="20241126 20:23:08.762"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:08.758" endtime="20241126 20:23:08.763"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:08.743" endtime="20241126 20:23:08.763"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:08.742" endtime="20241126 20:23:08.763"/>
</for>
<msg timestamp="20241126 20:23:08.763" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:08.740" endtime="20241126 20:23:08.763"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.764" endtime="20241126 20:23:08.765"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:08.772" endtime="20241126 20:23:08.774"/>
</kw>
<msg timestamp="20241126 20:23:08.774" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.772" endtime="20241126 20:23:08.774"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.775" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-25T07:57:32.992Z', 'updatedAt': '2024-11-25T07:57:32.992Z'}</msg>
<status status="PASS" starttime="20241126 20:23:08.775" endtime="20241126 20:23:08.775"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.777" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.777" endtime="20241126 20:23:08.777"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.776" endtime="20241126 20:23:08.778"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.778" endtime="20241126 20:23:08.778"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.778" endtime="20241126 20:23:08.778"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.776" endtime="20241126 20:23:08.778"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.774" endtime="20241126 20:23:08.779"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.774" endtime="20241126 20:23:08.779"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:08.779" endtime="20241126 20:23:08.779"/>
</return>
<msg timestamp="20241126 20:23:08.781" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.771" endtime="20241126 20:23:08.781"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.783" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241126 20:23:08.782" endtime="20241126 20:23:08.783"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.782" endtime="20241126 20:23:08.783"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.783" endtime="20241126 20:23:08.783"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.783" endtime="20241126 20:23:08.784"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.781" endtime="20241126 20:23:08.784"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:08.787" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '390', 'status': 'COMPLETED', 'actionName': 'Enter username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com',...</msg>
<status status="PASS" starttime="20241126 20:23:08.784" endtime="20241126 20:23:08.787"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:08.789" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "390", "status": "COMPLETED", "actionName": "Enter username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com...</msg>
<status status="PASS" starttime="20241126 20:23:08.788" endtime="20241126 20:23:08.789"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:08.808" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:08.808" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:08.790" endtime="20241126 20:23:08.808"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.809" endtime="20241126 20:23:08.810"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:08.810" endtime="20241126 20:23:08.810"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.787" endtime="20241126 20:23:08.811"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.765" endtime="20241126 20:23:08.811"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.363" endtime="20241126 20:23:08.811"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.812" endtime="20241126 20:23:08.812"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.812" endtime="20241126 20:23:08.812"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.812" endtime="20241126 20:23:08.814"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.811" endtime="20241126 20:23:08.814"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.363" endtime="20241126 20:23:08.814"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.363" endtime="20241126 20:23:08.814"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '27', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-26T14:52:09.078Z', 'updatedAt': '2024-11-26T14:52:09.078Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.817" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241126 20:23:08.816" endtime="20241126 20:23:08.817"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:08.817" endtime="20241126 20:23:08.819"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:08.822" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241126 20:23:08.820" endtime="20241126 20:23:08.823"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.827" endtime="20241126 20:23:08.828"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.829" endtime="20241126 20:23:08.830"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.826" endtime="20241126 20:23:08.831"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.825" endtime="20241126 20:23:08.831"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:08.840" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 20:23:08.837" endtime="20241126 20:23:08.840"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.845" endtime="20241126 20:23:08.845"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.844" endtime="20241126 20:23:08.846"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:08.847" endtime="20241126 20:23:08.848"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.847" endtime="20241126 20:23:08.848"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.886" endtime="20241126 20:23:08.887"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.849" endtime="20241126 20:23:08.887"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.910" endtime="20241126 20:23:08.910"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.921" endtime="20241126 20:23:08.922"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.891" endtime="20241126 20:23:08.922"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.925" endtime="20241126 20:23:08.926"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.923" endtime="20241126 20:23:08.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.934" endtime="20241126 20:23:08.935"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.927" endtime="20241126 20:23:08.935"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:08.974" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:08.957" endtime="20241126 20:23:08.974"/>
</kw>
<msg timestamp="20241126 20:23:08.975" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.957" endtime="20241126 20:23:08.975"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.975" endtime="20241126 20:23:08.976"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.956" endtime="20241126 20:23:08.976"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.977" endtime="20241126 20:23:08.977"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.977" endtime="20241126 20:23:08.977"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.976" endtime="20241126 20:23:08.977"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.956" endtime="20241126 20:23:08.977"/>
</try>
<msg timestamp="20241126 20:23:08.978" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.955" endtime="20241126 20:23:08.978"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:08.978" endtime="20241126 20:23:08.979"/>
</return>
<status status="PASS" starttime="20241126 20:23:08.952" endtime="20241126 20:23:08.979"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:08.979" endtime="20241126 20:23:08.981"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:08.979" endtime="20241126 20:23:08.981"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.951" endtime="20241126 20:23:08.981"/>
</try>
<msg timestamp="20241126 20:23:08.982" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:08.949" endtime="20241126 20:23:08.982"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.990" endtime="20241126 20:23:08.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:08.990" endtime="20241126 20:23:08.991"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:08.989" endtime="20241126 20:23:08.991"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.989" endtime="20241126 20:23:08.991"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.986" endtime="20241126 20:23:08.992"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.948" endtime="20241126 20:23:08.992"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.029" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:09.018" endtime="20241126 20:23:09.029"/>
</kw>
<msg timestamp="20241126 20:23:09.030" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.016" endtime="20241126 20:23:09.030"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.030" endtime="20241126 20:23:09.030"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.015" endtime="20241126 20:23:09.030"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.031" endtime="20241126 20:23:09.031"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.031" endtime="20241126 20:23:09.032"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.030" endtime="20241126 20:23:09.032"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.015" endtime="20241126 20:23:09.032"/>
</try>
<msg timestamp="20241126 20:23:09.032" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.014" endtime="20241126 20:23:09.033"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.033" endtime="20241126 20:23:09.033"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.010" endtime="20241126 20:23:09.033"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.034" endtime="20241126 20:23:09.034"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.033" endtime="20241126 20:23:09.034"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.010" endtime="20241126 20:23:09.034"/>
</try>
<msg timestamp="20241126 20:23:09.035" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.009" endtime="20241126 20:23:09.035"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.040" endtime="20241126 20:23:09.040"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.041" endtime="20241126 20:23:09.041"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.040" endtime="20241126 20:23:09.041"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.039" endtime="20241126 20:23:09.041"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.037" endtime="20241126 20:23:09.042"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.006" endtime="20241126 20:23:09.042"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241126 20:23:09.063" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241126 20:23:09.063" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:09.043" endtime="20241126 20:23:09.063"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241126 20:23:09.063" endtime="20241126 20:23:09.063"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.042" endtime="20241126 20:23:09.064"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.064" endtime="20241126 20:23:09.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.065" endtime="20241126 20:23:09.066"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.064" endtime="20241126 20:23:09.066"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.042" endtime="20241126 20:23:09.066"/>
</try>
<msg timestamp="20241126 20:23:09.068" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:09.001" endtime="20241126 20:23:09.068"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.073" endtime="20241126 20:23:09.073"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.074" endtime="20241126 20:23:09.074"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.072" endtime="20241126 20:23:09.074"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.072" endtime="20241126 20:23:09.074"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.070" endtime="20241126 20:23:09.074"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.999" endtime="20241126 20:23:09.074"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.074" endtime="20241126 20:23:09.074"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.074" endtime="20241126 20:23:09.074"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.998" endtime="20241126 20:23:09.074"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.997" endtime="20241126 20:23:09.074"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.088" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:09.080" endtime="20241126 20:23:09.088"/>
</kw>
<msg timestamp="20241126 20:23:09.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.080" endtime="20241126 20:23:09.088"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.088" endtime="20241126 20:23:09.088"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.079" endtime="20241126 20:23:09.088"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.089" endtime="20241126 20:23:09.089"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.089" endtime="20241126 20:23:09.089"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.089" endtime="20241126 20:23:09.089"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.079" endtime="20241126 20:23:09.089"/>
</try>
<msg timestamp="20241126 20:23:09.090" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.079" endtime="20241126 20:23:09.090"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.090" endtime="20241126 20:23:09.090"/>
</return>
<msg timestamp="20241126 20:23:09.091" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.077" endtime="20241126 20:23:09.091"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.095" endtime="20241126 20:23:09.095"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.095" endtime="20241126 20:23:09.095"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.094" endtime="20241126 20:23:09.096"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.094" endtime="20241126 20:23:09.096"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.092" endtime="20241126 20:23:09.096"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.077" endtime="20241126 20:23:09.096"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.943" endtime="20241126 20:23:09.097"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.134" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241126 20:23:09.107" endtime="20241126 20:23:09.134"/>
</kw>
<msg timestamp="20241126 20:23:09.135" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.106" endtime="20241126 20:23:09.135"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.135" endtime="20241126 20:23:09.135"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.106" endtime="20241126 20:23:09.135"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.136" endtime="20241126 20:23:09.136"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.138" endtime="20241126 20:23:09.138"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.135" endtime="20241126 20:23:09.138"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.106" endtime="20241126 20:23:09.138"/>
</try>
<msg timestamp="20241126 20:23:09.138" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.105" endtime="20241126 20:23:09.138"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.138" endtime="20241126 20:23:09.139"/>
</return>
<msg timestamp="20241126 20:23:09.140" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.101" endtime="20241126 20:23:09.140"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.145" endtime="20241126 20:23:09.145"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.145" endtime="20241126 20:23:09.146"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.144" endtime="20241126 20:23:09.146"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.144" endtime="20241126 20:23:09.146"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.142" endtime="20241126 20:23:09.146"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.099" endtime="20241126 20:23:09.147"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:09.147" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:09.147" endtime="20241126 20:23:09.147"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.153" endtime="20241126 20:23:09.153"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.157" endtime="20241126 20:23:09.157"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.152" endtime="20241126 20:23:09.157"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:09.158" endtime="20241126 20:23:09.158"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.157" endtime="20241126 20:23:09.159"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.151" endtime="20241126 20:23:09.159"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241126 20:23:09.161" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241126 20:23:09.159" endtime="20241126 20:23:09.201"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.159" endtime="20241126 20:23:09.201"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.203" endtime="20241126 20:23:09.203"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.204" endtime="20241126 20:23:09.204"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.203" endtime="20241126 20:23:09.204"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.159" endtime="20241126 20:23:09.205"/>
</try>
<status status="PASS" starttime="20241126 20:23:09.150" endtime="20241126 20:23:09.205"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.148" endtime="20241126 20:23:09.206"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.148" endtime="20241126 20:23:09.206"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.207" endtime="20241126 20:23:09.207"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.206" endtime="20241126 20:23:09.208"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.147" endtime="20241126 20:23:09.208"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.941" endtime="20241126 20:23:09.209"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.211" endtime="20241126 20:23:09.211"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.210" endtime="20241126 20:23:09.211"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.209" endtime="20241126 20:23:09.212"/>
</if>
<status status="PASS" starttime="20241126 20:23:08.936" endtime="20241126 20:23:09.212"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.215" endtime="20241126 20:23:09.216"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.212" endtime="20241126 20:23:09.216"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.220" endtime="20241126 20:23:09.221"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.221" endtime="20241126 20:23:09.221"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.221" endtime="20241126 20:23:09.222"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.222" endtime="20241126 20:23:09.223"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.222" endtime="20241126 20:23:09.223"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.221" endtime="20241126 20:23:09.224"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.216" endtime="20241126 20:23:09.224"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:09.241" endtime="20241126 20:23:09.241"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.248" endtime="20241126 20:23:09.248"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.224" endtime="20241126 20:23:09.248"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.251" endtime="20241126 20:23:09.251"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.253" endtime="20241126 20:23:09.253"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.252" endtime="20241126 20:23:09.253"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.254" endtime="20241126 20:23:09.254"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.254" endtime="20241126 20:23:09.255"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.252" endtime="20241126 20:23:09.255"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.248" endtime="20241126 20:23:09.255"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:09.272" endtime="20241126 20:23:09.272"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.276" endtime="20241126 20:23:09.276"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.256" endtime="20241126 20:23:09.276"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.279"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.279"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.279"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.279"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.281"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.279" endtime="20241126 20:23:09.281"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.276" endtime="20241126 20:23:09.281"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.283" endtime="20241126 20:23:09.285"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.281" endtime="20241126 20:23:09.285"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:09.294" endtime="20241126 20:23:09.294"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.294" endtime="20241126 20:23:09.294"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.285" endtime="20241126 20:23:09.295"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.842" endtime="20241126 20:23:09.295"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.295" endtime="20241126 20:23:09.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:09.298" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:09.297" endtime="20241126 20:23:09.298"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:09.298" endtime="20241126 20:23:09.298"/>
</return>
<msg timestamp="20241126 20:23:09.299" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 20:23:08.832" endtime="20241126 20:23:09.299"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.302" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:27</msg>
<status status="PASS" starttime="20241126 20:23:09.301" endtime="20241126 20:23:09.302"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.303" endtime="20241126 20:23:09.303"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.304" endtime="20241126 20:23:09.304"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.304" endtime="20241126 20:23:09.304"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.305" endtime="20241126 20:23:09.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.305" endtime="20241126 20:23:09.305"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.306" endtime="20241126 20:23:09.306"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.306" endtime="20241126 20:23:09.306"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.307" endtime="20241126 20:23:09.307"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.309" endtime="20241126 20:23:09.309"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.312" endtime="20241126 20:23:09.313"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:09.315" endtime="20241126 20:23:09.315"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.314" endtime="20241126 20:23:09.315"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.313" endtime="20241126 20:23:09.315"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.316" endtime="20241126 20:23:09.316"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.316" endtime="20241126 20:23:09.317"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.315" endtime="20241126 20:23:09.317"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.315" endtime="20241126 20:23:09.317"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.318" endtime="20241126 20:23:09.318"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.318" endtime="20241126 20:23:09.318"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.318" endtime="20241126 20:23:09.318"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.318" endtime="20241126 20:23:09.318"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.313" endtime="20241126 20:23:09.318"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.313" endtime="20241126 20:23:09.318"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:09.319" endtime="20241126 20:23:09.319"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.319" endtime="20241126 20:23:09.319"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.319" endtime="20241126 20:23:09.321"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.322" endtime="20241126 20:23:09.323"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.321" endtime="20241126 20:23:09.323"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.321" endtime="20241126 20:23:09.323"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.323" endtime="20241126 20:23:09.323"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.325" endtime="20241126 20:23:09.325"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.323" endtime="20241126 20:23:09.325"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.323" endtime="20241126 20:23:09.325"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.319" endtime="20241126 20:23:09.325"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.319" endtime="20241126 20:23:09.325"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.303" endtime="20241126 20:23:09.326"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:09.302" endtime="20241126 20:23:09.326"/>
</for>
<msg timestamp="20241126 20:23:09.326" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:09.299" endtime="20241126 20:23:09.327"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.327" endtime="20241126 20:23:09.329"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:09.338" endtime="20241126 20:23:09.339"/>
</kw>
<msg timestamp="20241126 20:23:09.340" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.338" endtime="20241126 20:23:09.340"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.343" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241126 20:23:09.342" endtime="20241126 20:23:09.343"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.344" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.344" endtime="20241126 20:23:09.344"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.343" endtime="20241126 20:23:09.345"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.345" endtime="20241126 20:23:09.345"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.345" endtime="20241126 20:23:09.345"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.343" endtime="20241126 20:23:09.345"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.341" endtime="20241126 20:23:09.346"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.341" endtime="20241126 20:23:09.346"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:09.346" endtime="20241126 20:23:09.346"/>
</return>
<msg timestamp="20241126 20:23:09.347" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.337" endtime="20241126 20:23:09.347"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.349" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241126 20:23:09.347" endtime="20241126 20:23:09.349"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.347" endtime="20241126 20:23:09.349"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.350" endtime="20241126 20:23:09.350"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.349" endtime="20241126 20:23:09.350"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.347" endtime="20241126 20:23:09.350"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:09.355" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '391', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241126 20:23:09.352" endtime="20241126 20:23:09.355"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:09.357" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "391", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241126 20:23:09.357" endtime="20241126 20:23:09.357"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:09.375" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:09.377" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:09.359" endtime="20241126 20:23:09.377"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.377" endtime="20241126 20:23:09.378"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:09.378" endtime="20241126 20:23:09.378"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.356" endtime="20241126 20:23:09.379"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.329" endtime="20241126 20:23:09.379"/>
</kw>
<status status="PASS" starttime="20241126 20:23:08.815" endtime="20241126 20:23:09.379"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.380" endtime="20241126 20:23:09.381"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:09.381" endtime="20241126 20:23:09.382"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.383" endtime="20241126 20:23:09.383"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.380" endtime="20241126 20:23:09.383"/>
</branch>
<status status="PASS" starttime="20241126 20:23:08.815" endtime="20241126 20:23:09.384"/>
</try>
<status status="PASS" starttime="20241126 20:23:08.814" endtime="20241126 20:23:09.384"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.387" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241126 20:23:09.387" endtime="20241126 20:23:09.387"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.388" endtime="20241126 20:23:09.389"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:09.390" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241126 20:23:09.389" endtime="20241126 20:23:09.390"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.391" endtime="20241126 20:23:09.391"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.393" endtime="20241126 20:23:09.393"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.391" endtime="20241126 20:23:09.393"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.390" endtime="20241126 20:23:09.393"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.395" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 20:23:09.395" endtime="20241126 20:23:09.395"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:09.397" endtime="20241126 20:23:09.397"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.396" endtime="20241126 20:23:09.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:09.397" endtime="20241126 20:23:09.397"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.397" endtime="20241126 20:23:09.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.403" endtime="20241126 20:23:09.403"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.398" endtime="20241126 20:23:09.403"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.409" endtime="20241126 20:23:09.409"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.413" endtime="20241126 20:23:09.413"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.404" endtime="20241126 20:23:09.413"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.418" endtime="20241126 20:23:09.418"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.414" endtime="20241126 20:23:09.419"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.428" endtime="20241126 20:23:09.428"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.421" endtime="20241126 20:23:09.428"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.448" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:09.440" endtime="20241126 20:23:09.448"/>
</kw>
<msg timestamp="20241126 20:23:09.448" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.440" endtime="20241126 20:23:09.448"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.448" endtime="20241126 20:23:09.449"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.440" endtime="20241126 20:23:09.449"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.449" endtime="20241126 20:23:09.449"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.451" endtime="20241126 20:23:09.451"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.449" endtime="20241126 20:23:09.451"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.440" endtime="20241126 20:23:09.451"/>
</try>
<msg timestamp="20241126 20:23:09.452" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.439" endtime="20241126 20:23:09.452"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.452" endtime="20241126 20:23:09.453"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.436" endtime="20241126 20:23:09.453"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.453" endtime="20241126 20:23:09.453"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.453" endtime="20241126 20:23:09.453"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.436" endtime="20241126 20:23:09.453"/>
</try>
<msg timestamp="20241126 20:23:09.455" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.436" endtime="20241126 20:23:09.455"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.460" endtime="20241126 20:23:09.460"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.460" endtime="20241126 20:23:09.460"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.459" endtime="20241126 20:23:09.461"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.459" endtime="20241126 20:23:09.461"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.457" endtime="20241126 20:23:09.461"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.435" endtime="20241126 20:23:09.461"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.491" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:09.481" endtime="20241126 20:23:09.491"/>
</kw>
<msg timestamp="20241126 20:23:09.492" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.481" endtime="20241126 20:23:09.492"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.492" endtime="20241126 20:23:09.492"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.480" endtime="20241126 20:23:09.492"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.493" endtime="20241126 20:23:09.493"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.493" endtime="20241126 20:23:09.494"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.493" endtime="20241126 20:23:09.494"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.480" endtime="20241126 20:23:09.494"/>
</try>
<msg timestamp="20241126 20:23:09.494" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.480" endtime="20241126 20:23:09.494"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.495" endtime="20241126 20:23:09.495"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.477" endtime="20241126 20:23:09.495"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.495" endtime="20241126 20:23:09.496"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.495" endtime="20241126 20:23:09.496"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.477" endtime="20241126 20:23:09.496"/>
</try>
<msg timestamp="20241126 20:23:09.497" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.477" endtime="20241126 20:23:09.497"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.502" endtime="20241126 20:23:09.502"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.503" endtime="20241126 20:23:09.503"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.502" endtime="20241126 20:23:09.503"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.502" endtime="20241126 20:23:09.503"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.499" endtime="20241126 20:23:09.504"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.475" endtime="20241126 20:23:09.504"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241126 20:23:09.522" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241126 20:23:09.522" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:09.505" endtime="20241126 20:23:09.522"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241126 20:23:09.523" endtime="20241126 20:23:09.523"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.504" endtime="20241126 20:23:09.523"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.524" endtime="20241126 20:23:09.524"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.524" endtime="20241126 20:23:09.525"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.523" endtime="20241126 20:23:09.525"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.504" endtime="20241126 20:23:09.525"/>
</try>
<msg timestamp="20241126 20:23:09.526" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241126 20:23:09.469" endtime="20241126 20:23:09.526"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.531" endtime="20241126 20:23:09.532"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.532" endtime="20241126 20:23:09.532"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.531" endtime="20241126 20:23:09.532"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.531" endtime="20241126 20:23:09.532"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.529" endtime="20241126 20:23:09.533"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.466" endtime="20241126 20:23:09.533"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.534" endtime="20241126 20:23:09.534"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.533" endtime="20241126 20:23:09.534"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.466" endtime="20241126 20:23:09.534"/>
</try>
<status status="PASS" starttime="20241126 20:23:09.465" endtime="20241126 20:23:09.534"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.555" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:09.545" endtime="20241126 20:23:09.555"/>
</kw>
<msg timestamp="20241126 20:23:09.555" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.544" endtime="20241126 20:23:09.555"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.555" endtime="20241126 20:23:09.556"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.544" endtime="20241126 20:23:09.556"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.557" endtime="20241126 20:23:09.557"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.557" endtime="20241126 20:23:09.557"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.556" endtime="20241126 20:23:09.557"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.544" endtime="20241126 20:23:09.558"/>
</try>
<msg timestamp="20241126 20:23:09.559" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.543" endtime="20241126 20:23:09.559"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.559" endtime="20241126 20:23:09.559"/>
</return>
<msg timestamp="20241126 20:23:09.560" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.540" endtime="20241126 20:23:09.560"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.565" endtime="20241126 20:23:09.566"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.566" endtime="20241126 20:23:09.567"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.565" endtime="20241126 20:23:09.567"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.565" endtime="20241126 20:23:09.567"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.562" endtime="20241126 20:23:09.567"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.538" endtime="20241126 20:23:09.567"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.432" endtime="20241126 20:23:09.568"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:09.640" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241126 20:23:09.588" endtime="20241126 20:23:09.640"/>
</kw>
<msg timestamp="20241126 20:23:09.641" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.586" endtime="20241126 20:23:09.641"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.642" endtime="20241126 20:23:09.642"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.585" endtime="20241126 20:23:09.642"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.644" endtime="20241126 20:23:09.644"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.646" endtime="20241126 20:23:09.646"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.643" endtime="20241126 20:23:09.646"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.585" endtime="20241126 20:23:09.647"/>
</try>
<msg timestamp="20241126 20:23:09.649" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.583" endtime="20241126 20:23:09.649"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:09.649" endtime="20241126 20:23:09.650"/>
</return>
<msg timestamp="20241126 20:23:09.651" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.578" endtime="20241126 20:23:09.652"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.663" endtime="20241126 20:23:09.664"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.665" endtime="20241126 20:23:09.665"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.663" endtime="20241126 20:23:09.666"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.662" endtime="20241126 20:23:09.666"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.656" endtime="20241126 20:23:09.668"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.576" endtime="20241126 20:23:09.668"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:09.671" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:09.669" endtime="20241126 20:23:09.672"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.686" endtime="20241126 20:23:09.687"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.693" endtime="20241126 20:23:09.693"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.685" endtime="20241126 20:23:09.693"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:09.694" endtime="20241126 20:23:09.695"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.694" endtime="20241126 20:23:09.695"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.683" endtime="20241126 20:23:09.696"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241126 20:23:09.697" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241126 20:23:09.697" endtime="20241126 20:23:09.741"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.696" endtime="20241126 20:23:09.743"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.743" endtime="20241126 20:23:09.744"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.746" endtime="20241126 20:23:09.746"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.743" endtime="20241126 20:23:09.746"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.696" endtime="20241126 20:23:09.747"/>
</try>
<status status="PASS" starttime="20241126 20:23:09.679" endtime="20241126 20:23:09.747"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.675" endtime="20241126 20:23:09.747"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.673" endtime="20241126 20:23:09.748"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.749" endtime="20241126 20:23:09.750"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.748" endtime="20241126 20:23:09.750"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.672" endtime="20241126 20:23:09.751"/>
</try>
<status status="PASS" starttime="20241126 20:23:09.431" endtime="20241126 20:23:09.751"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.754" endtime="20241126 20:23:09.754"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.752" endtime="20241126 20:23:09.756"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.752" endtime="20241126 20:23:09.756"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.429" endtime="20241126 20:23:09.756"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.761" endtime="20241126 20:23:09.761"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.756" endtime="20241126 20:23:09.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.767" endtime="20241126 20:23:09.769"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.771" endtime="20241126 20:23:09.771"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.770" endtime="20241126 20:23:09.772"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.773" endtime="20241126 20:23:09.773"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.772" endtime="20241126 20:23:09.774"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.769" endtime="20241126 20:23:09.774"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.762" endtime="20241126 20:23:09.775"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:09.802" endtime="20241126 20:23:09.802"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.817" endtime="20241126 20:23:09.819"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.775" endtime="20241126 20:23:09.819"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.825" endtime="20241126 20:23:09.826"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.827" endtime="20241126 20:23:09.828"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.826" endtime="20241126 20:23:09.828"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.829" endtime="20241126 20:23:09.830"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.829" endtime="20241126 20:23:09.830"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.826" endtime="20241126 20:23:09.830"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.820" endtime="20241126 20:23:09.831"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:09.854" endtime="20241126 20:23:09.854"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.866" endtime="20241126 20:23:09.867"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.831" endtime="20241126 20:23:09.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.873" endtime="20241126 20:23:09.873"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.875" endtime="20241126 20:23:09.875"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.874" endtime="20241126 20:23:09.875"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.876" endtime="20241126 20:23:09.876"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.875" endtime="20241126 20:23:09.876"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.874" endtime="20241126 20:23:09.876"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.869" endtime="20241126 20:23:09.877"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.882" endtime="20241126 20:23:09.883"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.877" endtime="20241126 20:23:09.883"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:09.898" endtime="20241126 20:23:09.899"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.899" endtime="20241126 20:23:09.899"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.883" endtime="20241126 20:23:09.900"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.396" endtime="20241126 20:23:09.900"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.900" endtime="20241126 20:23:09.901"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:09.902" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:09.902" endtime="20241126 20:23:09.902"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:09.902" endtime="20241126 20:23:09.903"/>
</return>
<msg timestamp="20241126 20:23:09.903" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 20:23:09.393" endtime="20241126 20:23:09.903"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.905" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241126 20:23:09.905" endtime="20241126 20:23:09.905"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.906" endtime="20241126 20:23:09.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.907" endtime="20241126 20:23:09.907"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.908" endtime="20241126 20:23:09.908"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.909" endtime="20241126 20:23:09.909"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.909" endtime="20241126 20:23:09.909"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.909" endtime="20241126 20:23:09.909"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.909" endtime="20241126 20:23:09.910"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.910" endtime="20241126 20:23:09.910"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.913" endtime="20241126 20:23:09.913"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.917" endtime="20241126 20:23:09.917"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:09.918" endtime="20241126 20:23:09.918"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.917" endtime="20241126 20:23:09.918"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.917" endtime="20241126 20:23:09.918"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.920" endtime="20241126 20:23:09.920"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.920" endtime="20241126 20:23:09.920"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.919" endtime="20241126 20:23:09.921"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.918" endtime="20241126 20:23:09.921"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.922" endtime="20241126 20:23:09.922"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.922" endtime="20241126 20:23:09.922"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.921" endtime="20241126 20:23:09.923"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.921" endtime="20241126 20:23:09.923"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.917" endtime="20241126 20:23:09.923"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.917" endtime="20241126 20:23:09.923"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:09.924" endtime="20241126 20:23:09.924"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.924" endtime="20241126 20:23:09.924"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.923" endtime="20241126 20:23:09.924"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.925" endtime="20241126 20:23:09.925"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.924" endtime="20241126 20:23:09.925"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.924" endtime="20241126 20:23:09.925"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.927" endtime="20241126 20:23:09.927"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:09.927" endtime="20241126 20:23:09.927"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:09.925" endtime="20241126 20:23:09.927"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.925" endtime="20241126 20:23:09.927"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.923" endtime="20241126 20:23:09.927"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:09.923" endtime="20241126 20:23:09.927"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:09.906" endtime="20241126 20:23:09.928"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:09.906" endtime="20241126 20:23:09.928"/>
</for>
<msg timestamp="20241126 20:23:09.928" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:09.903" endtime="20241126 20:23:09.928"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.929" endtime="20241126 20:23:09.929"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:09.939" endtime="20241126 20:23:09.939"/>
</kw>
<msg timestamp="20241126 20:23:09.939" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.938" endtime="20241126 20:23:09.939"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.941" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241126 20:23:09.940" endtime="20241126 20:23:09.941"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.942" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.942" endtime="20241126 20:23:09.942"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.942" endtime="20241126 20:23:09.942"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.944" endtime="20241126 20:23:09.944"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.944" endtime="20241126 20:23:09.944"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.941" endtime="20241126 20:23:09.944"/>
</if>
<status status="PASS" starttime="20241126 20:23:09.940" endtime="20241126 20:23:09.945"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.940" endtime="20241126 20:23:09.945"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:09.945" endtime="20241126 20:23:09.945"/>
</return>
<msg timestamp="20241126 20:23:09.946" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:09.937" endtime="20241126 20:23:09.946"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:09.948" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241126 20:23:09.947" endtime="20241126 20:23:09.948"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.947" endtime="20241126 20:23:09.948"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:09.949" endtime="20241126 20:23:09.949"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:09.948" endtime="20241126 20:23:09.949"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.946" endtime="20241126 20:23:09.949"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:09.953" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '392', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241126 20:23:09.950" endtime="20241126 20:23:09.953"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:09.955" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "392", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241126 20:23:09.955" endtime="20241126 20:23:09.956"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:09.996" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:09.996" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:09.956" endtime="20241126 20:23:09.997"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:09.997" endtime="20241126 20:23:09.999"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:10.000" endtime="20241126 20:23:10.000"/>
</return>
<status status="PASS" starttime="20241126 20:23:09.953" endtime="20241126 20:23:10.001"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.930" endtime="20241126 20:23:10.001"/>
</kw>
<status status="PASS" starttime="20241126 20:23:09.386" endtime="20241126 20:23:10.002"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.003" endtime="20241126 20:23:10.003"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.004" endtime="20241126 20:23:10.004"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.005" endtime="20241126 20:23:10.005"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.002" endtime="20241126 20:23:10.006"/>
</branch>
<status status="PASS" starttime="20241126 20:23:09.386" endtime="20241126 20:23:10.006"/>
</try>
<status status="PASS" starttime="20241126 20:23:09.385" endtime="20241126 20:23:10.007"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.011" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241126 20:23:10.010" endtime="20241126 20:23:10.011"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:10.012" endtime="20241126 20:23:10.013"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:10.016" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241126 20:23:10.015" endtime="20241126 20:23:10.017"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.017" endtime="20241126 20:23:10.018"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.019" endtime="20241126 20:23:10.019"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.017" endtime="20241126 20:23:10.020"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.017" endtime="20241126 20:23:10.020"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.023" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241126 20:23:10.023" endtime="20241126 20:23:10.023"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.025" endtime="20241126 20:23:10.025"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.024" endtime="20241126 20:23:10.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.026" endtime="20241126 20:23:10.026"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.026" endtime="20241126 20:23:10.026"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:10.067" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:10.053" endtime="20241126 20:23:10.067"/>
</kw>
<msg timestamp="20241126 20:23:10.068" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.052" endtime="20241126 20:23:10.068"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.068" endtime="20241126 20:23:10.068"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.051" endtime="20241126 20:23:10.068"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.068" endtime="20241126 20:23:10.070"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.070" endtime="20241126 20:23:10.070"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.068" endtime="20241126 20:23:10.070"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.051" endtime="20241126 20:23:10.071"/>
</try>
<msg timestamp="20241126 20:23:10.072" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.048" endtime="20241126 20:23:10.072"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.074" endtime="20241126 20:23:10.074"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.045" endtime="20241126 20:23:10.075"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:10.075" endtime="20241126 20:23:10.075"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.075" endtime="20241126 20:23:10.076"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.045" endtime="20241126 20:23:10.076"/>
</try>
<msg timestamp="20241126 20:23:10.077" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.044" endtime="20241126 20:23:10.077"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.085" endtime="20241126 20:23:10.085"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.085" endtime="20241126 20:23:10.085"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.084" endtime="20241126 20:23:10.086"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.084" endtime="20241126 20:23:10.086"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.080" endtime="20241126 20:23:10.087"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.043" endtime="20241126 20:23:10.087"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:10.120" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:10.106" endtime="20241126 20:23:10.120"/>
</kw>
<msg timestamp="20241126 20:23:10.120" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.105" endtime="20241126 20:23:10.120"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.121" endtime="20241126 20:23:10.122"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.105" endtime="20241126 20:23:10.122"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.123" endtime="20241126 20:23:10.123"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.125" endtime="20241126 20:23:10.125"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.122" endtime="20241126 20:23:10.125"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.104" endtime="20241126 20:23:10.127"/>
</try>
<msg timestamp="20241126 20:23:10.127" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.103" endtime="20241126 20:23:10.128"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.128" endtime="20241126 20:23:10.128"/>
</return>
<msg timestamp="20241126 20:23:10.129" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.097" endtime="20241126 20:23:10.129"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.137" endtime="20241126 20:23:10.138"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.139" endtime="20241126 20:23:10.139"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.137" endtime="20241126 20:23:10.139"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.136" endtime="20241126 20:23:10.140"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.133" endtime="20241126 20:23:10.140"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.094" endtime="20241126 20:23:10.140"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:10.188" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241126 20:23:10.154" endtime="20241126 20:23:10.188"/>
</kw>
<msg timestamp="20241126 20:23:10.188" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.154" endtime="20241126 20:23:10.188"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.189" endtime="20241126 20:23:10.189"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.153" endtime="20241126 20:23:10.189"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.190" endtime="20241126 20:23:10.190"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.190" endtime="20241126 20:23:10.190"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.189" endtime="20241126 20:23:10.190"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.153" endtime="20241126 20:23:10.191"/>
</try>
<msg timestamp="20241126 20:23:10.191" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.152" endtime="20241126 20:23:10.191"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.191" endtime="20241126 20:23:10.191"/>
</return>
<msg timestamp="20241126 20:23:10.193" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.148" endtime="20241126 20:23:10.193"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.197" endtime="20241126 20:23:10.197"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.197" endtime="20241126 20:23:10.197"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.197" endtime="20241126 20:23:10.197"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.197" endtime="20241126 20:23:10.197"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.195" endtime="20241126 20:23:10.198"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.146" endtime="20241126 20:23:10.198"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.037" endtime="20241126 20:23:10.198"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:10.199" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:10.199" endtime="20241126 20:23:10.199"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.202" endtime="20241126 20:23:10.202"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.202" endtime="20241126 20:23:10.202"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:10.203" endtime="20241126 20:23:10.203"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.202" endtime="20241126 20:23:10.203"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.201" endtime="20241126 20:23:10.203"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241126 20:23:10.204" endtime="20241126 20:23:10.282"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.203" endtime="20241126 20:23:10.282"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.283" endtime="20241126 20:23:10.283"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.283" endtime="20241126 20:23:10.284"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.282" endtime="20241126 20:23:10.284"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.203" endtime="20241126 20:23:10.284"/>
</try>
<status status="PASS" starttime="20241126 20:23:10.201" endtime="20241126 20:23:10.285"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.201" endtime="20241126 20:23:10.285"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.201" endtime="20241126 20:23:10.285"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.286" endtime="20241126 20:23:10.286"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.285" endtime="20241126 20:23:10.286"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.199" endtime="20241126 20:23:10.286"/>
</try>
<status status="PASS" starttime="20241126 20:23:10.033" endtime="20241126 20:23:10.287"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.027" endtime="20241126 20:23:10.288"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.293" endtime="20241126 20:23:10.293"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.298" endtime="20241126 20:23:10.298"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.288" endtime="20241126 20:23:10.298"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.301" endtime="20241126 20:23:10.301"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.298" endtime="20241126 20:23:10.301"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.309" endtime="20241126 20:23:10.309"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.301" endtime="20241126 20:23:10.309"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.314" endtime="20241126 20:23:10.314"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.315" endtime="20241126 20:23:10.315"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.315" endtime="20241126 20:23:10.316"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.314" endtime="20241126 20:23:10.316"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.310" endtime="20241126 20:23:10.316"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.319" endtime="20241126 20:23:10.320"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.316" endtime="20241126 20:23:10.321"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.324" endtime="20241126 20:23:10.324"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.325" endtime="20241126 20:23:10.325"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.325" endtime="20241126 20:23:10.326"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.326" endtime="20241126 20:23:10.327"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.326" endtime="20241126 20:23:10.327"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.325" endtime="20241126 20:23:10.327"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.322" endtime="20241126 20:23:10.327"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:10.341" endtime="20241126 20:23:10.341"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.347" endtime="20241126 20:23:10.347"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.328" endtime="20241126 20:23:10.347"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.352" endtime="20241126 20:23:10.352"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.353" endtime="20241126 20:23:10.353"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.353" endtime="20241126 20:23:10.353"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.356" endtime="20241126 20:23:10.356"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.355" endtime="20241126 20:23:10.356"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.352" endtime="20241126 20:23:10.356"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.347" endtime="20241126 20:23:10.356"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:10.374" endtime="20241126 20:23:10.374"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.387" endtime="20241126 20:23:10.388"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.356" endtime="20241126 20:23:10.389"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.392" endtime="20241126 20:23:10.392"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.394" endtime="20241126 20:23:10.394"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.394" endtime="20241126 20:23:10.395"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.395" endtime="20241126 20:23:10.395"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.395" endtime="20241126 20:23:10.395"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.394" endtime="20241126 20:23:10.395"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.389" endtime="20241126 20:23:10.396"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.407" endtime="20241126 20:23:10.408"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.396" endtime="20241126 20:23:10.409"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.438" endtime="20241126 20:23:10.438"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.439" endtime="20241126 20:23:10.439"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.409" endtime="20241126 20:23:10.439"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.024" endtime="20241126 20:23:10.440"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:10.440" endtime="20241126 20:23:10.442"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 20:23:10.443" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 20:23:10.442" endtime="20241126 20:23:10.443"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 20:23:10.444" endtime="20241126 20:23:10.444"/>
</return>
<msg timestamp="20241126 20:23:10.445" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241126 20:23:10.021" endtime="20241126 20:23:10.445"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.453" level="INFO">${key} = testCaseFlowSequenceId:11::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241126 20:23:10.450" endtime="20241126 20:23:10.453"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.456" endtime="20241126 20:23:10.456"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.457" endtime="20241126 20:23:10.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.457" endtime="20241126 20:23:10.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.458" endtime="20241126 20:23:10.458"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.458" endtime="20241126 20:23:10.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.459" endtime="20241126 20:23:10.459"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.459" endtime="20241126 20:23:10.459"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.461" endtime="20241126 20:23:10.461"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.467" endtime="20241126 20:23:10.467"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.476" endtime="20241126 20:23:10.476"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:10.477" endtime="20241126 20:23:10.478"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.477" endtime="20241126 20:23:10.478"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.477" endtime="20241126 20:23:10.478"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.479" endtime="20241126 20:23:10.480"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:10.480" endtime="20241126 20:23:10.480"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.479" endtime="20241126 20:23:10.480"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.479" endtime="20241126 20:23:10.480"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.482" endtime="20241126 20:23:10.484"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:10.484" endtime="20241126 20:23:10.485"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.481" endtime="20241126 20:23:10.486"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.481" endtime="20241126 20:23:10.487"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.477" endtime="20241126 20:23:10.487"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.477" endtime="20241126 20:23:10.487"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 20:23:10.489" endtime="20241126 20:23:10.489"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.489" endtime="20241126 20:23:10.489"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.489" endtime="20241126 20:23:10.489"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.492" endtime="20241126 20:23:10.493"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.490" endtime="20241126 20:23:10.493"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.490" endtime="20241126 20:23:10.493"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.494" endtime="20241126 20:23:10.494"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 20:23:10.494" endtime="20241126 20:23:10.495"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.494" endtime="20241126 20:23:10.495"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.494" endtime="20241126 20:23:10.495"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.487" endtime="20241126 20:23:10.495"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:10.487" endtime="20241126 20:23:10.495"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:10.455" endtime="20241126 20:23:10.495"/>
</iter>
<status status="NOT RUN" starttime="20241126 20:23:10.455" endtime="20241126 20:23:10.495"/>
</for>
<msg timestamp="20241126 20:23:10.496" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 20:23:10.446" endtime="20241126 20:23:10.496"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:10.496" endtime="20241126 20:23:10.499"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:10.512" endtime="20241126 20:23:10.513"/>
</kw>
<msg timestamp="20241126 20:23:10.513" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.511" endtime="20241126 20:23:10.513"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.525" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241126 20:23:10.521" endtime="20241126 20:23:10.525"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.527" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.526" endtime="20241126 20:23:10.527"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.526" endtime="20241126 20:23:10.527"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.528" endtime="20241126 20:23:10.528"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.527" endtime="20241126 20:23:10.528"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.525" endtime="20241126 20:23:10.528"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.517" endtime="20241126 20:23:10.528"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.514" endtime="20241126 20:23:10.529"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:10.529" endtime="20241126 20:23:10.529"/>
</return>
<msg timestamp="20241126 20:23:10.530" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.510" endtime="20241126 20:23:10.530"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.533" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241126 20:23:10.531" endtime="20241126 20:23:10.533"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.530" endtime="20241126 20:23:10.534"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.537" endtime="20241126 20:23:10.538"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.536" endtime="20241126 20:23:10.538"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.530" endtime="20241126 20:23:10.539"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:10.542" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '393', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': ''...</msg>
<status status="PASS" starttime="20241126 20:23:10.539" endtime="20241126 20:23:10.542"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:10.545" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "393", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": ...</msg>
<status status="PASS" starttime="20241126 20:23:10.544" endtime="20241126 20:23:10.545"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:10.562" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:10.562" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:10.545" endtime="20241126 20:23:10.562"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:10.562" endtime="20241126 20:23:10.563"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:10.564" endtime="20241126 20:23:10.564"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.542" endtime="20241126 20:23:10.565"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.502" endtime="20241126 20:23:10.567"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.009" endtime="20241126 20:23:10.568"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.572" endtime="20241126 20:23:10.573"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.573" endtime="20241126 20:23:10.575"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.576" endtime="20241126 20:23:10.576"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.570" endtime="20241126 20:23:10.576"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.008" endtime="20241126 20:23:10.577"/>
</try>
<status status="PASS" starttime="20241126 20:23:10.007" endtime="20241126 20:23:10.577"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '28', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-26T14:52:09.078Z', 'updatedAt': '2024-11-26T14:52:09.078Z', 'action': {'id': '4', 'name': 'Click login button', 'type': '...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.580" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241126 20:23:10.579" endtime="20241126 20:23:10.580"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:10.583" endtime="20241126 20:23:10.588"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 20:23:10.590" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241126 20:23:10.590" endtime="20241126 20:23:10.590"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.593" endtime="20241126 20:23:10.593"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.594" endtime="20241126 20:23:10.594"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.592" endtime="20241126 20:23:10.594"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.591" endtime="20241126 20:23:10.594"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:10.597" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241126 20:23:10.596" endtime="20241126 20:23:10.597"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.599" endtime="20241126 20:23:10.600"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.599" endtime="20241126 20:23:10.601"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 20:23:10.605" endtime="20241126 20:23:10.606"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.604" endtime="20241126 20:23:10.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:10.647" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241126 20:23:10.637" endtime="20241126 20:23:10.647"/>
</kw>
<msg timestamp="20241126 20:23:10.647" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.635" endtime="20241126 20:23:10.647"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.647" endtime="20241126 20:23:10.648"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.633" endtime="20241126 20:23:10.648"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.649" endtime="20241126 20:23:10.649"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.650" endtime="20241126 20:23:10.651"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.648" endtime="20241126 20:23:10.652"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.632" endtime="20241126 20:23:10.653"/>
</try>
<msg timestamp="20241126 20:23:10.654" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.629" endtime="20241126 20:23:10.654"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.654" endtime="20241126 20:23:10.654"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.627" endtime="20241126 20:23:10.654"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 20:23:10.656" endtime="20241126 20:23:10.656"/>
</return>
<status status="NOT RUN" starttime="20241126 20:23:10.654" endtime="20241126 20:23:10.656"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.627" endtime="20241126 20:23:10.656"/>
</try>
<msg timestamp="20241126 20:23:10.656" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.627" endtime="20241126 20:23:10.656"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.663" endtime="20241126 20:23:10.663"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.663" endtime="20241126 20:23:10.663"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.662" endtime="20241126 20:23:10.663"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.662" endtime="20241126 20:23:10.663"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.660" endtime="20241126 20:23:10.664"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.626" endtime="20241126 20:23:10.664"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:10.685" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241126 20:23:10.675" endtime="20241126 20:23:10.685"/>
</kw>
<msg timestamp="20241126 20:23:10.686" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.675" endtime="20241126 20:23:10.686"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.686" endtime="20241126 20:23:10.686"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.675" endtime="20241126 20:23:10.686"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.687" endtime="20241126 20:23:10.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.687" endtime="20241126 20:23:10.687"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.686" endtime="20241126 20:23:10.687"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.674" endtime="20241126 20:23:10.687"/>
</try>
<msg timestamp="20241126 20:23:10.687" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.674" endtime="20241126 20:23:10.687"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:10.687" endtime="20241126 20:23:10.687"/>
</return>
<msg timestamp="20241126 20:23:10.688" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.668" endtime="20241126 20:23:10.688"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.694" endtime="20241126 20:23:10.694"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:10.694" endtime="20241126 20:23:10.695"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:10.692" endtime="20241126 20:23:10.695"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.692" endtime="20241126 20:23:10.695"/>
</if>
<status status="PASS" starttime="20241126 20:23:10.690" endtime="20241126 20:23:10.696"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.667" endtime="20241126 20:23:10.696"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 20:23:11.137" level="INFO">Waited for Element with selector //button[text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241126 20:23:10.707" endtime="20241126 20:23:11.137"/>
</kw>
<msg timestamp="20241126 20:23:11.137" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.707" endtime="20241126 20:23:11.137"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:11.137" endtime="20241126 20:23:11.138"/>
</return>
<status status="PASS" starttime="20241126 20:23:10.706" endtime="20241126 20:23:11.138"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:11.138" endtime="20241126 20:23:11.138"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:11.139" endtime="20241126 20:23:11.139"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:11.138" endtime="20241126 20:23:11.139"/>
</branch>
<status status="PASS" starttime="20241126 20:23:10.706" endtime="20241126 20:23:11.139"/>
</try>
<msg timestamp="20241126 20:23:11.140" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.706" endtime="20241126 20:23:11.140"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 20:23:11.140" endtime="20241126 20:23:11.140"/>
</return>
<msg timestamp="20241126 20:23:11.141" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241126 20:23:10.704" endtime="20241126 20:23:11.141"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:11.146" endtime="20241126 20:23:11.146"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:11.146" endtime="20241126 20:23:11.146"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:11.145" endtime="20241126 20:23:11.147"/>
</branch>
<status status="PASS" starttime="20241126 20:23:11.145" endtime="20241126 20:23:11.147"/>
</if>
<status status="PASS" starttime="20241126 20:23:11.143" endtime="20241126 20:23:11.147"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.700" endtime="20241126 20:23:11.147"/>
</kw>
<status status="PASS" starttime="20241126 20:23:10.622" endtime="20241126 20:23:11.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:11.149" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 20:23:11.149" endtime="20241126 20:23:11.149"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241126 20:23:11.152" endtime="20241126 20:23:11.152"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:11.152" endtime="20241126 20:23:11.152"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:11.153" endtime="20241126 20:23:11.153"/>
</kw>
<status status="PASS" starttime="20241126 20:23:11.152" endtime="20241126 20:23:11.153"/>
</branch>
<status status="PASS" starttime="20241126 20:23:11.152" endtime="20241126 20:23:11.154"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<msg timestamp="20241126 20:23:31.701" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241126 20:23:31.704" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241126 20:23:31.705" level="FAIL">TimeoutError: locator.click: Timeout 20000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//button[text()="Login"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241126 20:23:11.154" endtime="20241126 20:23:31.883"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:11.154" endtime="20241126 20:23:31.884"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:31.884" endtime="20241126 20:23:31.886"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:31.887" endtime="20241126 20:23:31.889"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 20:23:31.890" level="FAIL">UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:31.889" endtime="20241126 20:23:31.890"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:31.886" endtime="20241126 20:23:31.893"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:31.884" endtime="20241126 20:23:31.894"/>
</branch>
<status status="FAIL" starttime="20241126 20:23:11.154" endtime="20241126 20:23:31.894"/>
</try>
<status status="FAIL" starttime="20241126 20:23:11.151" endtime="20241126 20:23:31.899"/>
</kw>
<msg timestamp="20241126 20:23:31.901" level="FAIL">Keyword 'COMP_Button.perform-click-and-validate-post-condition' failed after retrying for 5 seconds. The last error was: UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:11.150" endtime="20241126 20:23:32.146"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:11.149" endtime="20241126 20:23:32.148"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<kw name="Split String" library="String">
<var>@{exception_slip}</var>
<arg>${exception}</arg>
<arg>separator=The last error was:</arg>
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<msg timestamp="20241126 20:23:32.155" level="INFO">@{exception_slip} = [ Keyword 'COMP_Button.perform-click-and-validate-post-condition' failed after retrying for 5 seconds.  |  UNKNOWN_ERROR_OCCURRED ]</msg>
<status status="PASS" starttime="20241126 20:23:32.152" endtime="20241126 20:23:32.155"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${exception_slip[1].strip()}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.161" endtime="20241126 20:23:32.164"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 20:23:32.168" level="FAIL">UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:32.165" endtime="20241126 20:23:32.168"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.156" endtime="20241126 20:23:32.176"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.150" endtime="20241126 20:23:32.184"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.149" endtime="20241126 20:23:32.185"/>
</branch>
<status status="FAIL" starttime="20241126 20:23:11.149" endtime="20241126 20:23:32.186"/>
</try>
<status status="FAIL" starttime="20241126 20:23:10.612" endtime="20241126 20:23:32.191"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:10.606" endtime="20241126 20:23:32.193"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.203" endtime="20241126 20:23:32.203"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.213" endtime="20241126 20:23:32.214"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.194" endtime="20241126 20:23:32.214"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.220" endtime="20241126 20:23:32.220"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.215" endtime="20241126 20:23:32.220"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.236" endtime="20241126 20:23:32.236"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.221" endtime="20241126 20:23:32.237"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.246" endtime="20241126 20:23:32.246"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.249" endtime="20241126 20:23:32.250"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.247" endtime="20241126 20:23:32.250"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:32.247" endtime="20241126 20:23:32.250"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:32.237" endtime="20241126 20:23:32.250"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.253" endtime="20241126 20:23:32.253"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.250" endtime="20241126 20:23:32.253"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.257" endtime="20241126 20:23:32.257"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.258" endtime="20241126 20:23:32.258"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.257" endtime="20241126 20:23:32.258"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.259" endtime="20241126 20:23:32.259"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.259" endtime="20241126 20:23:32.259"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:32.257" endtime="20241126 20:23:32.259"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:32.253" endtime="20241126 20:23:32.259"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:32.282" endtime="20241126 20:23:32.283"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.292" endtime="20241126 20:23:32.292"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.261" endtime="20241126 20:23:32.292"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.298" endtime="20241126 20:23:32.298"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.300" endtime="20241126 20:23:32.300"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.299" endtime="20241126 20:23:32.300"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.302" endtime="20241126 20:23:32.302"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.301" endtime="20241126 20:23:32.302"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:32.299" endtime="20241126 20:23:32.303"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:32.293" endtime="20241126 20:23:32.303"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 20:23:32.319" endtime="20241126 20:23:32.319"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.329" endtime="20241126 20:23:32.330"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.303" endtime="20241126 20:23:32.330"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.332" endtime="20241126 20:23:32.332"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.333" endtime="20241126 20:23:32.333"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.333" endtime="20241126 20:23:32.334"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.334" endtime="20241126 20:23:32.334"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.334" endtime="20241126 20:23:32.335"/>
</branch>
<status status="NOT RUN" starttime="20241126 20:23:32.333" endtime="20241126 20:23:32.335"/>
</if>
<status status="NOT RUN" starttime="20241126 20:23:32.330" endtime="20241126 20:23:32.335"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.340" endtime="20241126 20:23:32.340"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.335" endtime="20241126 20:23:32.340"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 20:23:32.359" endtime="20241126 20:23:32.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.360" endtime="20241126 20:23:32.361"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.341" endtime="20241126 20:23:32.361"/>
</branch>
<status status="FAIL" starttime="20241126 20:23:10.597" endtime="20241126 20:23:32.361"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.362" endtime="20241126 20:23:32.363"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.363" endtime="20241126 20:23:32.363"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241126 20:23:32.363" endtime="20241126 20:23:32.364"/>
</return>
<status status="FAIL" starttime="20241126 20:23:10.594" endtime="20241126 20:23:32.365"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241126 20:23:32.366" endtime="20241126 20:23:32.366"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.366" endtime="20241126 20:23:32.366"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241126 20:23:32.367" endtime="20241126 20:23:32.367"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:10.578" endtime="20241126 20:23:32.367"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.368" endtime="20241126 20:23:32.370"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 20:23:32.378" endtime="20241126 20:23:32.379"/>
</kw>
<msg timestamp="20241126 20:23:32.379" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:32.377" endtime="20241126 20:23:32.380"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:32.382" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241126 20:23:32.381" endtime="20241126 20:23:32.382"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:32.383" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:32.383" endtime="20241126 20:23:32.383"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.382" endtime="20241126 20:23:32.384"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.384" endtime="20241126 20:23:32.384"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.384" endtime="20241126 20:23:32.385"/>
</branch>
<status status="PASS" starttime="20241126 20:23:32.382" endtime="20241126 20:23:32.385"/>
</if>
<status status="PASS" starttime="20241126 20:23:32.381" endtime="20241126 20:23:32.385"/>
</branch>
<status status="PASS" starttime="20241126 20:23:32.380" endtime="20241126 20:23:32.385"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 20:23:32.385" endtime="20241126 20:23:32.385"/>
</return>
<msg timestamp="20241126 20:23:32.386" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 20:23:32.377" endtime="20241126 20:23:32.386"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 20:23:32.387" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241126 20:23:32.387" endtime="20241126 20:23:32.387"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.387" endtime="20241126 20:23:32.387"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.388" endtime="20241126 20:23:32.388"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.388" endtime="20241126 20:23:32.388"/>
</branch>
<status status="PASS" starttime="20241126 20:23:32.386" endtime="20241126 20:23:32.388"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:32.391" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '394', 'status': 'FAILED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': 'UNKN...</msg>
<status status="PASS" starttime="20241126 20:23:32.389" endtime="20241126 20:23:32.391"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:32.405" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "394", "status": "FAILED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": "UN...</msg>
<status status="PASS" starttime="20241126 20:23:32.392" endtime="20241126 20:23:32.405"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:32.414" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:32.414" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:32.407" endtime="20241126 20:23:32.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.415" endtime="20241126 20:23:32.417"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:32.417" endtime="20241126 20:23:32.418"/>
</return>
<status status="PASS" starttime="20241126 20:23:32.391" endtime="20241126 20:23:32.419"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.370" endtime="20241126 20:23:32.420"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.422" endtime="20241126 20:23:32.423"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 20:23:32.425" level="FAIL">UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:32.424" endtime="20241126 20:23:32.425"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.420" endtime="20241126 20:23:32.427"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.368" endtime="20241126 20:23:32.429"/>
</branch>
<status status="FAIL" starttime="20241126 20:23:10.578" endtime="20241126 20:23:32.429"/>
</try>
<status status="FAIL" starttime="20241126 20:23:10.578" endtime="20241126 20:23:32.430"/>
</iter>
<status status="FAIL" starttime="20241126 20:22:54.965" endtime="20241126 20:23:32.431"/>
</for>
<status status="FAIL" starttime="20241126 20:22:54.965" endtime="20241126 20:23:32.431"/>
</branch>
<status status="FAIL" starttime="20241126 20:22:54.964" endtime="20241126 20:23:32.432"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241126 20:23:32.433" endtime="20241126 20:23:32.433"/>
</kw>
<status status="FAIL" starttime="20241126 20:22:54.923" endtime="20241126 20:23:32.434"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.435" endtime="20241126 20:23:32.436"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:32.441" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '99', 'status': 'FAILED', 'errorMessage': 'UNKNOWN_ERROR_OCCURRED'}</msg>
<status status="PASS" starttime="20241126 20:23:32.438" endtime="20241126 20:23:32.441"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:32.445" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "99", "status": "FAILED", "errorMessage": "UNKNOWN_ERROR_OCCURRED"}</msg>
<status status="PASS" starttime="20241126 20:23:32.443" endtime="20241126 20:23:32.446"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:32.452" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:32.454" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:32.446" endtime="20241126 20:23:32.454"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.454" endtime="20241126 20:23:32.455"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:32.455" endtime="20241126 20:23:32.455"/>
</return>
<status status="PASS" starttime="20241126 20:23:32.442" endtime="20241126 20:23:32.456"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.436" endtime="20241126 20:23:32.456"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.458" endtime="20241126 20:23:32.459"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 20:23:32.462" level="FAIL">UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:32.459" endtime="20241126 20:23:32.462"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.457" endtime="20241126 20:23:32.465"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.434" endtime="20241126 20:23:32.466"/>
</branch>
<status status="FAIL" starttime="20241126 20:22:54.923" endtime="20241126 20:23:32.466"/>
</try>
<status status="FAIL" starttime="20241126 20:22:54.922" endtime="20241126 20:23:32.467"/>
</iter>
<status status="FAIL" starttime="20241126 20:22:54.921" endtime="20241126 20:23:32.469"/>
</for>
<status status="FAIL" starttime="20241126 20:22:54.917" endtime="20241126 20:23:32.471"/>
</branch>
<status status="FAIL" starttime="20241126 20:22:54.917" endtime="20241126 20:23:32.471"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241126 20:23:32.473" endtime="20241126 20:23:32.473"/>
</kw>
<status status="FAIL" starttime="20241126 20:22:54.877" endtime="20241126 20:23:32.473"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.474" endtime="20241126 20:23:32.474"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 20:23:32.479" level="INFO">${response_message} = {'testCaseRunId': '35', 'status': 'FAIL', 'errorMessage': 'UNKNOWN_ERROR_OCCURRED'}</msg>
<status status="PASS" starttime="20241126 20:23:32.477" endtime="20241126 20:23:32.480"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 20:23:32.482" level="INFO">${json_response} = {"testCaseRunId": "35", "status": "FAIL", "errorMessage": "UNKNOWN_ERROR_OCCURRED"}</msg>
<status status="PASS" starttime="20241126 20:23:32.482" endtime="20241126 20:23:32.483"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 20:23:32.492" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 20:23:32.493" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 20:23:32.483" endtime="20241126 20:23:32.493"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.494" endtime="20241126 20:23:32.495"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 20:23:32.496" endtime="20241126 20:23:32.496"/>
</return>
<status status="PASS" starttime="20241126 20:23:32.480" endtime="20241126 20:23:32.497"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.476" endtime="20241126 20:23:32.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.499" endtime="20241126 20:23:32.500"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 20:23:32.501" level="FAIL">UNKNOWN_ERROR_OCCURRED</msg>
<status status="FAIL" starttime="20241126 20:23:32.500" endtime="20241126 20:23:32.501"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.497" endtime="20241126 20:23:32.504"/>
</kw>
<status status="FAIL" starttime="20241126 20:23:32.473" endtime="20241126 20:23:32.505"/>
</branch>
<status status="FAIL" starttime="20241126 20:22:54.877" endtime="20241126 20:23:32.506"/>
</try>
<status status="FAIL" starttime="20241126 20:22:54.833" endtime="20241126 20:23:32.507"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.509" endtime="20241126 20:23:32.509"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.507" endtime="20241126 20:23:32.510"/>
</branch>
<status status="FAIL" starttime="20241126 20:22:54.832" endtime="20241126 20:23:32.510"/>
</if>
<status status="FAIL" starttime="20241126 20:22:54.757" endtime="20241126 20:23:32.513"/>
</kw>
<status status="FAIL" starttime="20241126 20:22:54.756" endtime="20241126 20:23:32.514"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.516" endtime="20241126 20:23:32.519"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.515" endtime="20241126 20:23:32.519"/>
</branch>
<status status="PASS" starttime="20241126 20:22:54.756" endtime="20241126 20:23:32.519"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241126 20:23:32.877" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241126 20:23:32.522" endtime="20241126 20:23:32.877"/>
</kw>
<status status="PASS" starttime="20241126 20:23:32.521" endtime="20241126 20:23:32.877"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 20:23:32.878" endtime="20241126 20:23:32.878"/>
</kw>
<status status="NOT RUN" starttime="20241126 20:23:32.877" endtime="20241126 20:23:32.878"/>
</branch>
<status status="PASS" starttime="20241126 20:23:32.521" endtime="20241126 20:23:32.878"/>
</try>
<status status="PASS" starttime="20241126 20:23:32.520" endtime="20241126 20:23:32.879"/>
</kw>
<status status="PASS" starttime="20241125 21:58:33.467" endtime="20241126 20:23:32.879"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 20:23:32.879" endtime="20241126 20:23:32.880"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241126 21:55:34.904" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '36', 'testCaseId': '14', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T16:25:34.751Z', 'createdAt': '2024-11-26T16:25:34.751Z', 'errorMe...</msg>
<status status="PASS" starttime="20241126 20:23:32.880" endtime="20241126 21:55:34.907"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241126 21:55:34.921" endtime="20241126 21:55:34.921"/>
</break>
<status status="NOT RUN" starttime="20241126 21:55:34.920" endtime="20241126 21:55:34.921"/>
</branch>
<status status="PASS" starttime="20241126 21:55:34.915" endtime="20241126 21:55:34.922"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241126 21:55:34.938" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\88563aa9-6a09-4f90-8ec6-9e865e5051cf"}</msg>
<msg timestamp="20241126 21:55:36.025" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\88563aa9-6a09-4f90-8ec6-9e865e5051cf"}</msg>
<status status="PASS" starttime="20241126 21:55:34.931" endtime="20241126 21:55:36.025"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241126 21:55:36.031" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241126 21:55:36.057" level="INFO">Successfully created context. </msg>
<msg timestamp="20241126 21:55:36.057" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241126 21:55:36.026" endtime="20241126 21:55:36.058"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241126 21:55:36.059" endtime="20241126 21:55:36.061"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241126 21:55:39.442" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241126 21:55:39.442" level="INFO">${page_id} = {'page_id': 'page=4cf3b91d-8e38-4469-8099-c9cf12fcfa3d', 'video_path': ''}</msg>
<status status="PASS" starttime="20241126 21:55:36.063" endtime="20241126 21:55:39.442"/>
</kw>
<status status="PASS" starttime="20241126 21:55:34.924" endtime="20241126 21:55:39.443"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:39.445" endtime="20241126 21:55:39.458"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:39.467" endtime="20241126 21:55:39.468"/>
</kw>
<msg timestamp="20241126 21:55:39.469" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.466" endtime="20241126 21:55:39.469"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.472" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241126 21:55:39.471" endtime="20241126 21:55:39.472"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.473" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.473" endtime="20241126 21:55:39.474"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.473" endtime="20241126 21:55:39.474"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.474" endtime="20241126 21:55:39.474"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.474" endtime="20241126 21:55:39.475"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.472" endtime="20241126 21:55:39.475"/>
</if>
<status status="PASS" starttime="20241126 21:55:39.471" endtime="20241126 21:55:39.475"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.469" endtime="20241126 21:55:39.475"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:39.475" endtime="20241126 21:55:39.475"/>
</return>
<msg timestamp="20241126 21:55:39.476" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.465" endtime="20241126 21:55:39.476"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.478" endtime="20241126 21:55:39.478"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241126 21:55:39.478" endtime="20241126 21:55:39.479"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:39.477" endtime="20241126 21:55:39.479"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.476" endtime="20241126 21:55:39.479"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:39.485" endtime="20241126 21:55:39.486"/>
</kw>
<msg timestamp="20241126 21:55:39.486" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.485" endtime="20241126 21:55:39.486"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.488" level="INFO">${values} = {'id': '14', 'name': 'New testcase 05', 'projectId': '1', 'createdAt': '2024-11-26T16:24:52.135Z', 'updatedAt': '2024-11-26T16:24:52.135Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241126 21:55:39.487" endtime="20241126 21:55:39.488"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.490" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.489" endtime="20241126 21:55:39.490"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.489" endtime="20241126 21:55:39.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.490" endtime="20241126 21:55:39.490"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.490" endtime="20241126 21:55:39.491"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.488" endtime="20241126 21:55:39.491"/>
</if>
<status status="PASS" starttime="20241126 21:55:39.487" endtime="20241126 21:55:39.491"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.487" endtime="20241126 21:55:39.491"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:39.491" endtime="20241126 21:55:39.492"/>
</return>
<msg timestamp="20241126 21:55:39.492" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.484" endtime="20241126 21:55:39.492"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:39.499" endtime="20241126 21:55:39.499"/>
</kw>
<msg timestamp="20241126 21:55:39.500" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.498" endtime="20241126 21:55:39.500"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.501" level="INFO">${values} = {'id': '36', 'testCaseId': '14', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T16:25:34.751Z', 'createdAt': '2024-11-26T16:25:34.751Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241126 21:55:39.501" endtime="20241126 21:55:39.502"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.503" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.502" endtime="20241126 21:55:39.503"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.502" endtime="20241126 21:55:39.503"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.503" endtime="20241126 21:55:39.503"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.503" endtime="20241126 21:55:39.503"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.502" endtime="20241126 21:55:39.504"/>
</if>
<status status="PASS" starttime="20241126 21:55:39.500" endtime="20241126 21:55:39.504"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.500" endtime="20241126 21:55:39.504"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:39.504" endtime="20241126 21:55:39.504"/>
</return>
<msg timestamp="20241126 21:55:39.505" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.497" endtime="20241126 21:55:39.505"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.506" endtime="20241126 21:55:39.506"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.506" endtime="20241126 21:55:39.506"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.505" endtime="20241126 21:55:39.507"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.509" level="INFO">${testCase} = {'id': '14', 'name': 'New testcase 05', 'projectId': '1', 'createdAt': '2024-11-26T16:24:52.135Z', 'updatedAt': '2024-11-26T16:24:52.135Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2...</msg>
<status status="PASS" starttime="20241126 21:55:39.507" endtime="20241126 21:55:39.509"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.510" level="INFO">${testCaseRun} = {'id': '36', 'testCaseId': '14', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-26T16:25:34.751Z', 'createdAt': '2024-11-26T16:25:34.751Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241126 21:55:39.510" endtime="20241126 21:55:39.510"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.512" level="INFO">${assertions} = [{'id': '7', 'testCaseId': '14', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:24::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:23::flowActionSequenceId:3', 'custom...</msg>
<status status="PASS" starttime="20241126 21:55:39.512" endtime="20241126 21:55:39.512"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:39.512" endtime="20241126 21:55:39.513"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:39.520" endtime="20241126 21:55:39.521"/>
</kw>
<msg timestamp="20241126 21:55:39.521" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.519" endtime="20241126 21:55:39.521"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.524" level="INFO">${values} = [{'id': '23', 'testCaseId': '14', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:24:52.244Z', 'updatedAt': '2024-11-26T16:24:52.244Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'c...</msg>
<status status="PASS" starttime="20241126 21:55:39.522" endtime="20241126 21:55:39.524"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.525" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.525" endtime="20241126 21:55:39.525"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.524" endtime="20241126 21:55:39.525"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.526" endtime="20241126 21:55:39.526"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.526" endtime="20241126 21:55:39.526"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.524" endtime="20241126 21:55:39.527"/>
</if>
<status status="PASS" starttime="20241126 21:55:39.522" endtime="20241126 21:55:39.527"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.521" endtime="20241126 21:55:39.527"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:39.527" endtime="20241126 21:55:39.527"/>
</return>
<msg timestamp="20241126 21:55:39.528" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.518" endtime="20241126 21:55:39.528"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:39.529" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '36', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241126 21:55:39.528" endtime="20241126 21:55:39.530"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 21:55:39.531" level="INFO">${json_response} = {"testCaseRunId": "36", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241126 21:55:39.530" endtime="20241126 21:55:39.531"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 21:55:39.552" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 21:55:39.552" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 21:55:39.532" endtime="20241126 21:55:39.552"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:39.553" endtime="20241126 21:55:39.554"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 21:55:39.554" endtime="20241126 21:55:39.554"/>
</return>
<status status="PASS" starttime="20241126 21:55:39.530" endtime="20241126 21:55:39.555"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:39.556" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241126 21:55:39.556" endtime="20241126 21:55:39.556"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '23', 'testCaseId': '14', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-26T16:24:52.244Z', 'updatedAt': '2024-11-26T16:24:52.244Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cr...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.561" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-25T08:01:13.814Z', 'updatedAt': '2024-11-25T08:01:13.814Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241126 21:55:39.560" endtime="20241126 21:55:39.562"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:39.562" endtime="20241126 21:55:39.564"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:39.574" endtime="20241126 21:55:39.575"/>
</kw>
<msg timestamp="20241126 21:55:39.575" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.573" endtime="20241126 21:55:39.575"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.578" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241126 21:55:39.576" endtime="20241126 21:55:39.578"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.580" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.579" endtime="20241126 21:55:39.580"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.579" endtime="20241126 21:55:39.581"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.581" endtime="20241126 21:55:39.581"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.581" endtime="20241126 21:55:39.581"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.578" endtime="20241126 21:55:39.582"/>
</if>
<status status="PASS" starttime="20241126 21:55:39.576" endtime="20241126 21:55:39.582"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.575" endtime="20241126 21:55:39.582"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:39.582" endtime="20241126 21:55:39.582"/>
</return>
<msg timestamp="20241126 21:55:39.583" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:39.572" endtime="20241126 21:55:39.583"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-25T08:01:13.885Z', 'updatedAt': '2024-11-25T08:01:13.885Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.587" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:57:55.381Z', 'updatedAt': '2024-11-25T0...</msg>
<status status="PASS" starttime="20241126 21:55:39.586" endtime="20241126 21:55:39.587"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:39.587" endtime="20241126 21:55:39.588"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 21:55:39.589" level="INFO">${input} = {'id': '2', 'actionId': '1', 'name': 'Dev', 'value': 'https://iassistant.ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:58:31.930Z', 'updatedAt': '2024-11-25T11:...</msg>
<status status="PASS" starttime="20241126 21:55:39.589" endtime="20241126 21:55:39.589"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.590" endtime="20241126 21:55:39.590"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:39.591" endtime="20241126 21:55:39.591"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:39.590" endtime="20241126 21:55:39.591"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.589" endtime="20241126 21:55:39.591"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:39.595" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 21:55:39.593" endtime="20241126 21:55:39.595"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241126 21:55:45.071" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com</msg>
<msg timestamp="20241126 21:55:45.072" level="INFO">${page_id} = {'page_id': 'page=8a0b555d-9770-483e-882b-7146f6a70250', 'video_path': ''}</msg>
<status status="PASS" starttime="20241126 21:55:39.600" endtime="20241126 21:55:45.072"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241126 21:55:45.074" level="INFO">Switching to page {'page_id': 'page=8a0b555d-9770-483e-882b-7146f6a70250', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241126 21:55:45.140" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=105cbcaf-4f6d-4cba-be6e-fc750a92acde",
    "contexts": [
      {
        "type": "context",
        "id": "context=7ee8f503-f853-48b4-853a-8e81f6a79c0f",
        "activePage": "page=8a0b555d-9770-483e-882b-7146f6a70250",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=4cf3b91d-8e38-4469-8099-c9cf12fcfa3d",
            "timestamp": 1732638336.486
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=8a0b555d-9770-483e-882b-7146f6a70250",
            "timestamp": 1732638339.681
          }
        ]
      }
    ],
    "activeContext": "context=7ee8f503-f853-48b4-853a-8e81f6a79c0f",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241126 21:55:45.150" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241126 21:55:45.073" endtime="20241126 21:55:45.150"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.598" endtime="20241126 21:55:45.151"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.597" endtime="20241126 21:55:45.151"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 21:55:45.152" endtime="20241126 21:55:45.152"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.152" endtime="20241126 21:55:45.152"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.159" endtime="20241126 21:55:45.161"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.152" endtime="20241126 21:55:45.161"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.170" endtime="20241126 21:55:45.170"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.178" endtime="20241126 21:55:45.178"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.161" endtime="20241126 21:55:45.178"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.182" endtime="20241126 21:55:45.182"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.179" endtime="20241126 21:55:45.183"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.190" endtime="20241126 21:55:45.190"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.183" endtime="20241126 21:55:45.190"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.195" endtime="20241126 21:55:45.195"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.197" endtime="20241126 21:55:45.197"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.196" endtime="20241126 21:55:45.198"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.196" endtime="20241126 21:55:45.198"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.191" endtime="20241126 21:55:45.198"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.200" endtime="20241126 21:55:45.200"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.198" endtime="20241126 21:55:45.201"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.205" endtime="20241126 21:55:45.205"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.206" endtime="20241126 21:55:45.208"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.205" endtime="20241126 21:55:45.209"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.209" endtime="20241126 21:55:45.210"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.209" endtime="20241126 21:55:45.210"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.205" endtime="20241126 21:55:45.211"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.201" endtime="20241126 21:55:45.211"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:45.228" endtime="20241126 21:55:45.228"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.234" endtime="20241126 21:55:45.234"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.211" endtime="20241126 21:55:45.235"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.237" endtime="20241126 21:55:45.237"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.239" endtime="20241126 21:55:45.239"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.237" endtime="20241126 21:55:45.239"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.240" endtime="20241126 21:55:45.240"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.239" endtime="20241126 21:55:45.240"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.237" endtime="20241126 21:55:45.240"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.235" endtime="20241126 21:55:45.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:45.254" endtime="20241126 21:55:45.255"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.267" endtime="20241126 21:55:45.268"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.240" endtime="20241126 21:55:45.269"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.273" endtime="20241126 21:55:45.273"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.274" endtime="20241126 21:55:45.275"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.274" endtime="20241126 21:55:45.275"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.276" endtime="20241126 21:55:45.276"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.275" endtime="20241126 21:55:45.276"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.274" endtime="20241126 21:55:45.276"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.269" endtime="20241126 21:55:45.277"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.282" endtime="20241126 21:55:45.282"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.277" endtime="20241126 21:55:45.282"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 21:55:45.295" endtime="20241126 21:55:45.295"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.295" endtime="20241126 21:55:45.296"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.282" endtime="20241126 21:55:45.297"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.596" endtime="20241126 21:55:45.297"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:45.298" endtime="20241126 21:55:45.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 21:55:45.301" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 21:55:45.300" endtime="20241126 21:55:45.301"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 21:55:45.301" endtime="20241126 21:55:45.301"/>
</return>
<msg timestamp="20241126 21:55:45.302" level="INFO">${value} = https://iassistant.ideas2it.com</msg>
<status status="PASS" starttime="20241126 21:55:39.592" endtime="20241126 21:55:45.302"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.305" level="INFO">${key} = testCaseFlowSequenceId:23::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241126 21:55:45.304" endtime="20241126 21:55:45.305"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '7', 'testCaseId': '14', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:24::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:23::flowActionSequenceId:3', 'customT...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.308" level="INFO">${source} = testCaseFlowSequenceId:24::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241126 21:55:45.307" endtime="20241126 21:55:45.308"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.309" level="INFO">${target} = testCaseFlowSequenceId:23::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241126 21:55:45.308" endtime="20241126 21:55:45.309"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.310" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.309" endtime="20241126 21:55:45.310"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.311" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241126 21:55:45.310" endtime="20241126 21:55:45.311"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.316" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.312" endtime="20241126 21:55:45.316"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.318" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241126 21:55:45.317" endtime="20241126 21:55:45.318"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.322" level="INFO">${errorMessage} = </msg>
<status status="PASS" starttime="20241126 21:55:45.319" endtime="20241126 21:55:45.322"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:45.324" endtime="20241126 21:55:45.327"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 21:55:45.341" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:24::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241126 21:55:45.336" endtime="20241126 21:55:45.342"/>
</kw>
<msg timestamp="20241126 21:55:45.342" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.335" endtime="20241126 21:55:45.342"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.344" endtime="20241126 21:55:45.344"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.346" endtime="20241126 21:55:45.346"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.344" endtime="20241126 21:55:45.346"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.347" endtime="20241126 21:55:45.347"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.347" endtime="20241126 21:55:45.347"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.344" endtime="20241126 21:55:45.347"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.343" endtime="20241126 21:55:45.348"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.342" endtime="20241126 21:55:45.348"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:45.348" endtime="20241126 21:55:45.348"/>
</return>
<msg timestamp="20241126 21:55:45.349" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.333" endtime="20241126 21:55:45.349"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 21:55:45.356" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:23::flowActionSequenceId:3'.</msg>
<status status="FAIL" starttime="20241126 21:55:45.353" endtime="20241126 21:55:45.356"/>
</kw>
<msg timestamp="20241126 21:55:45.356" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.353" endtime="20241126 21:55:45.357"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.359" endtime="20241126 21:55:45.359"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.361" endtime="20241126 21:55:45.363"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.360" endtime="20241126 21:55:45.363"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.364" endtime="20241126 21:55:45.365"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.364" endtime="20241126 21:55:45.365"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.360" endtime="20241126 21:55:45.365"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.358" endtime="20241126 21:55:45.365"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.357" endtime="20241126 21:55:45.365"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:45.365" endtime="20241126 21:55:45.366"/>
</return>
<msg timestamp="20241126 21:55:45.367" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.352" endtime="20241126 21:55:45.367"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 21:55:45.369" endtime="20241126 21:55:45.369"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.369" endtime="20241126 21:55:45.370"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.369" endtime="20241126 21:55:45.370"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.371" endtime="20241126 21:55:45.371"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:45.372" endtime="20241126 21:55:45.372"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.371" endtime="20241126 21:55:45.372"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.370" endtime="20241126 21:55:45.372"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.375" endtime="20241126 21:55:45.375"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:45.375" endtime="20241126 21:55:45.375"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.374" endtime="20241126 21:55:45.376"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.374" endtime="20241126 21:55:45.376"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.368" endtime="20241126 21:55:45.376"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.367" endtime="20241126 21:55:45.376"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 21:55:45.378" endtime="20241126 21:55:45.379"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.378" endtime="20241126 21:55:45.379"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.378" endtime="20241126 21:55:45.379"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.380" endtime="20241126 21:55:45.381"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.380" endtime="20241126 21:55:45.381"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.380" endtime="20241126 21:55:45.381"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.382" endtime="20241126 21:55:45.382"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:45.382" endtime="20241126 21:55:45.382"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.381" endtime="20241126 21:55:45.382"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.381" endtime="20241126 21:55:45.382"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.377" endtime="20241126 21:55:45.382"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.377" endtime="20241126 21:55:45.382"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.306" endtime="20241126 21:55:45.383"/>
</iter>
<status status="PASS" starttime="20241126 21:55:45.306" endtime="20241126 21:55:45.383"/>
</for>
<msg timestamp="20241126 21:55:45.383" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 21:55:45.302" endtime="20241126 21:55:45.383"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:45.384" endtime="20241126 21:55:45.385"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 21:55:45.400" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241126 21:55:45.398" endtime="20241126 21:55:45.401"/>
</kw>
<msg timestamp="20241126 21:55:45.401" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.397" endtime="20241126 21:55:45.401"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.402" endtime="20241126 21:55:45.403"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.404" endtime="20241126 21:55:45.404"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.403" endtime="20241126 21:55:45.404"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.406" endtime="20241126 21:55:45.406"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.404" endtime="20241126 21:55:45.406"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.403" endtime="20241126 21:55:45.407"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.402" endtime="20241126 21:55:45.407"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.401" endtime="20241126 21:55:45.407"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:45.407" endtime="20241126 21:55:45.408"/>
</return>
<msg timestamp="20241126 21:55:45.408" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:45.395" endtime="20241126 21:55:45.408"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.409" endtime="20241126 21:55:45.410"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.409" endtime="20241126 21:55:45.410"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.414" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241126 21:55:45.411" endtime="20241126 21:55:45.414"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.410" endtime="20241126 21:55:45.414"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.408" endtime="20241126 21:55:45.414"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:45.419" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '409', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com', 'error...</msg>
<status status="PASS" starttime="20241126 21:55:45.415" endtime="20241126 21:55:45.419"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 21:55:45.422" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "409", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com", "error...</msg>
<status status="PASS" starttime="20241126 21:55:45.421" endtime="20241126 21:55:45.422"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 21:55:45.432" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 21:55:45.432" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 21:55:45.423" endtime="20241126 21:55:45.432"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:45.433" endtime="20241126 21:55:45.434"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 21:55:45.434" endtime="20241126 21:55:45.434"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.420" endtime="20241126 21:55:45.435"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.386" endtime="20241126 21:55:45.436"/>
</kw>
<status status="PASS" starttime="20241126 21:55:39.586" endtime="20241126 21:55:45.436"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.437" endtime="20241126 21:55:45.437"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 21:55:45.439" endtime="20241126 21:55:45.439"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.439" endtime="20241126 21:55:45.440"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.437" endtime="20241126 21:55:45.440"/>
</branch>
<status status="PASS" starttime="20241126 21:55:39.585" endtime="20241126 21:55:45.440"/>
</try>
<status status="PASS" starttime="20241126 21:55:39.585" endtime="20241126 21:55:45.441"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '3', 'name': 'Enter password', 'type': 'TYPE_...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.443" level="INFO">${action} = {'id': '3', 'name': 'Enter password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T07:59:59.273Z', 'updatedAt': '2024-11-25T07:59:5...</msg>
<status status="PASS" starttime="20241126 21:55:45.442" endtime="20241126 21:55:45.443"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:45.444" endtime="20241126 21:55:45.446"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 21:55:45.449" level="INFO">${input} = {'id': '4', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T07:59:59.430Z', 'updatedAt': '2024-11-25T08:01:54.489Z'}</msg>
<status status="PASS" starttime="20241126 21:55:45.447" endtime="20241126 21:55:45.449"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.453" endtime="20241126 21:55:45.453"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.454" endtime="20241126 21:55:45.455"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.452" endtime="20241126 21:55:45.455"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.449" endtime="20241126 21:55:45.455"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:45.470" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 21:55:45.465" endtime="20241126 21:55:45.471"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 21:55:45.474" endtime="20241126 21:55:45.475"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.473" endtime="20241126 21:55:45.475"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 21:55:45.481" endtime="20241126 21:55:45.481"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.479" endtime="20241126 21:55:45.483"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.492" endtime="20241126 21:55:45.493"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.484" endtime="20241126 21:55:45.493"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.504" endtime="20241126 21:55:45.504"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.510" endtime="20241126 21:55:45.511"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.494" endtime="20241126 21:55:45.511"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.520" endtime="20241126 21:55:45.520"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.515" endtime="20241126 21:55:45.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.528" endtime="20241126 21:55:45.528"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.521" endtime="20241126 21:55:45.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:45.644" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 21:55:45.558" endtime="20241126 21:55:45.644"/>
</kw>
<msg timestamp="20241126 21:55:45.645" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.556" endtime="20241126 21:55:45.645"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.645" endtime="20241126 21:55:45.645"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.556" endtime="20241126 21:55:45.646"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.646" endtime="20241126 21:55:45.647"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.647" endtime="20241126 21:55:45.648"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.646" endtime="20241126 21:55:45.648"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.556" endtime="20241126 21:55:45.648"/>
</try>
<msg timestamp="20241126 21:55:45.649" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.554" endtime="20241126 21:55:45.649"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.649" endtime="20241126 21:55:45.649"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.552" endtime="20241126 21:55:45.649"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 21:55:45.650" endtime="20241126 21:55:45.650"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.650" endtime="20241126 21:55:45.650"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.551" endtime="20241126 21:55:45.650"/>
</try>
<msg timestamp="20241126 21:55:45.651" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.551" endtime="20241126 21:55:45.651"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.658" endtime="20241126 21:55:45.658"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.659" endtime="20241126 21:55:45.660"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.657" endtime="20241126 21:55:45.660"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.657" endtime="20241126 21:55:45.660"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.654" endtime="20241126 21:55:45.660"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.549" endtime="20241126 21:55:45.661"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:45.693" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241126 21:55:45.682" endtime="20241126 21:55:45.693"/>
</kw>
<msg timestamp="20241126 21:55:45.693" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.681" endtime="20241126 21:55:45.693"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.693" endtime="20241126 21:55:45.694"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.681" endtime="20241126 21:55:45.694"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.694" endtime="20241126 21:55:45.695"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.695" endtime="20241126 21:55:45.695"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.694" endtime="20241126 21:55:45.696"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.680" endtime="20241126 21:55:45.696"/>
</try>
<msg timestamp="20241126 21:55:45.696" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.679" endtime="20241126 21:55:45.697"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.697" endtime="20241126 21:55:45.697"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.676" endtime="20241126 21:55:45.697"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 21:55:45.698" endtime="20241126 21:55:45.698"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:45.697" endtime="20241126 21:55:45.698"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.676" endtime="20241126 21:55:45.698"/>
</try>
<msg timestamp="20241126 21:55:45.699" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.675" endtime="20241126 21:55:45.699"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.706" endtime="20241126 21:55:45.706"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.706" endtime="20241126 21:55:45.707"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.705" endtime="20241126 21:55:45.707"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.705" endtime="20241126 21:55:45.707"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.702" endtime="20241126 21:55:45.708"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.674" endtime="20241126 21:55:45.708"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241126 21:55:45.754" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241126 21:55:45.755" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241126 21:55:45.710" endtime="20241126 21:55:45.755"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241126 21:55:45.755" endtime="20241126 21:55:45.755"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.709" endtime="20241126 21:55:45.755"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.756" endtime="20241126 21:55:45.756"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.757" endtime="20241126 21:55:45.757"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.756" endtime="20241126 21:55:45.757"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.708" endtime="20241126 21:55:45.757"/>
</try>
<msg timestamp="20241126 21:55:45.758" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241126 21:55:45.670" endtime="20241126 21:55:45.758"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.767" endtime="20241126 21:55:45.768"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.769" endtime="20241126 21:55:45.769"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.766" endtime="20241126 21:55:45.769"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.765" endtime="20241126 21:55:45.769"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.760" endtime="20241126 21:55:45.770"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.666" endtime="20241126 21:55:45.770"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.771" endtime="20241126 21:55:45.772"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.771" endtime="20241126 21:55:45.772"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.666" endtime="20241126 21:55:45.772"/>
</try>
<status status="PASS" starttime="20241126 21:55:45.665" endtime="20241126 21:55:45.772"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:45.800" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241126 21:55:45.787" endtime="20241126 21:55:45.800"/>
</kw>
<msg timestamp="20241126 21:55:45.801" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.786" endtime="20241126 21:55:45.801"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.801" endtime="20241126 21:55:45.801"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.785" endtime="20241126 21:55:45.802"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.803" endtime="20241126 21:55:45.803"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.804" endtime="20241126 21:55:45.804"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.802" endtime="20241126 21:55:45.805"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.785" endtime="20241126 21:55:45.805"/>
</try>
<msg timestamp="20241126 21:55:45.806" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.783" endtime="20241126 21:55:45.806"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.806" endtime="20241126 21:55:45.807"/>
</return>
<msg timestamp="20241126 21:55:45.808" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.778" endtime="20241126 21:55:45.808"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.817" endtime="20241126 21:55:45.818"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.819" endtime="20241126 21:55:45.819"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.817" endtime="20241126 21:55:45.819"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.816" endtime="20241126 21:55:45.820"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.812" endtime="20241126 21:55:45.820"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.776" endtime="20241126 21:55:45.821"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.539" endtime="20241126 21:55:45.821"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:45.875" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241126 21:55:45.841" endtime="20241126 21:55:45.875"/>
</kw>
<msg timestamp="20241126 21:55:45.876" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.840" endtime="20241126 21:55:45.876"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.876" endtime="20241126 21:55:45.876"/>
</return>
<status status="PASS" starttime="20241126 21:55:45.839" endtime="20241126 21:55:45.876"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.877" endtime="20241126 21:55:45.877"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.877" endtime="20241126 21:55:45.878"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.876" endtime="20241126 21:55:45.878"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.839" endtime="20241126 21:55:45.878"/>
</try>
<msg timestamp="20241126 21:55:45.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.837" endtime="20241126 21:55:45.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:45.879" endtime="20241126 21:55:45.879"/>
</return>
<msg timestamp="20241126 21:55:45.879" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241126 21:55:45.832" endtime="20241126 21:55:45.879"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.884" endtime="20241126 21:55:45.884"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.884" endtime="20241126 21:55:45.884"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.883" endtime="20241126 21:55:45.884"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.883" endtime="20241126 21:55:45.885"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.882" endtime="20241126 21:55:45.885"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.830" endtime="20241126 21:55:45.885"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:45.886" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241126 21:55:45.885" endtime="20241126 21:55:45.886"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.889" endtime="20241126 21:55:45.889"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.893" endtime="20241126 21:55:45.893"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.889" endtime="20241126 21:55:45.893"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:45.894" endtime="20241126 21:55:45.894"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.894" endtime="20241126 21:55:45.895"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.889" endtime="20241126 21:55:45.895"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241126 21:55:45.897" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241126 21:55:45.896" endtime="20241126 21:55:45.956"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.895" endtime="20241126 21:55:45.956"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.958" endtime="20241126 21:55:45.958"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.958" endtime="20241126 21:55:45.959"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.957" endtime="20241126 21:55:45.959"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.895" endtime="20241126 21:55:45.959"/>
</try>
<status status="PASS" starttime="20241126 21:55:45.888" endtime="20241126 21:55:45.960"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.887" endtime="20241126 21:55:45.960"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.887" endtime="20241126 21:55:45.961"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.962" endtime="20241126 21:55:45.963"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.961" endtime="20241126 21:55:45.963"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.886" endtime="20241126 21:55:45.963"/>
</try>
<status status="PASS" starttime="20241126 21:55:45.538" endtime="20241126 21:55:45.965"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.965" endtime="20241126 21:55:45.966"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.965" endtime="20241126 21:55:45.966"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.965" endtime="20241126 21:55:45.966"/>
</if>
<status status="PASS" starttime="20241126 21:55:45.529" endtime="20241126 21:55:45.966"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.968" endtime="20241126 21:55:45.968"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.966" endtime="20241126 21:55:45.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.971" endtime="20241126 21:55:45.971"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.971" endtime="20241126 21:55:45.972"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.971" endtime="20241126 21:55:45.972"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.972" endtime="20241126 21:55:45.972"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.972" endtime="20241126 21:55:45.972"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.971" endtime="20241126 21:55:45.973"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.969" endtime="20241126 21:55:45.973"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:45.985" endtime="20241126 21:55:45.985"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.990" endtime="20241126 21:55:45.990"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.973" endtime="20241126 21:55:45.991"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.992" endtime="20241126 21:55:45.993"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.994" endtime="20241126 21:55:45.994"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.993" endtime="20241126 21:55:45.994"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:45.994" endtime="20241126 21:55:45.995"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.994" endtime="20241126 21:55:45.995"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:45.993" endtime="20241126 21:55:45.995"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:45.991" endtime="20241126 21:55:45.995"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:46.006" endtime="20241126 21:55:46.006"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.013" endtime="20241126 21:55:46.013"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:45.996" endtime="20241126 21:55:46.013"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.017" endtime="20241126 21:55:46.017"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.018" endtime="20241126 21:55:46.018"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.017" endtime="20241126 21:55:46.018"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.018" endtime="20241126 21:55:46.019"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.018" endtime="20241126 21:55:46.019"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.017" endtime="20241126 21:55:46.019"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:46.013" endtime="20241126 21:55:46.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.023" endtime="20241126 21:55:46.023"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.019" endtime="20241126 21:55:46.023"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 21:55:46.035" endtime="20241126 21:55:46.035"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.035" endtime="20241126 21:55:46.036"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.024" endtime="20241126 21:55:46.036"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.471" endtime="20241126 21:55:46.036"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:46.036" endtime="20241126 21:55:46.037"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241126 21:55:46.039" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241126 21:55:46.037" endtime="20241126 21:55:46.039"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241126 21:55:46.039" endtime="20241126 21:55:46.039"/>
</return>
<msg timestamp="20241126 21:55:46.040" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241126 21:55:45.458" endtime="20241126 21:55:46.040"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.042" level="INFO">${key} = testCaseFlowSequenceId:23::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241126 21:55:46.041" endtime="20241126 21:55:46.042"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '7', 'testCaseId': '14', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:24::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:23::flowActionSequenceId:3', 'customT...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.044" level="INFO">${source} = testCaseFlowSequenceId:24::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241126 21:55:46.043" endtime="20241126 21:55:46.044"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.045" level="INFO">${target} = testCaseFlowSequenceId:23::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241126 21:55:46.044" endtime="20241126 21:55:46.045"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.046" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.045" endtime="20241126 21:55:46.046"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.048" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241126 21:55:46.047" endtime="20241126 21:55:46.048"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.049" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.048" endtime="20241126 21:55:46.049"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.050" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241126 21:55:46.049" endtime="20241126 21:55:46.050"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.051" level="INFO">${errorMessage} = </msg>
<status status="PASS" starttime="20241126 21:55:46.050" endtime="20241126 21:55:46.051"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:46.051" endtime="20241126 21:55:46.052"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 21:55:46.057" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:24::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241126 21:55:46.055" endtime="20241126 21:55:46.058"/>
</kw>
<msg timestamp="20241126 21:55:46.058" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.055" endtime="20241126 21:55:46.058"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.060" endtime="20241126 21:55:46.060"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.061" endtime="20241126 21:55:46.061"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.060" endtime="20241126 21:55:46.061"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.062" endtime="20241126 21:55:46.062"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.062" endtime="20241126 21:55:46.063"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.060" endtime="20241126 21:55:46.063"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:46.059" endtime="20241126 21:55:46.064"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.058" endtime="20241126 21:55:46.064"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:46.064" endtime="20241126 21:55:46.064"/>
</return>
<msg timestamp="20241126 21:55:46.065" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.054" endtime="20241126 21:55:46.065"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241126 21:55:46.071" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:23::flowActionSequenceId:3'.</msg>
<status status="FAIL" starttime="20241126 21:55:46.069" endtime="20241126 21:55:46.071"/>
</kw>
<msg timestamp="20241126 21:55:46.071" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.068" endtime="20241126 21:55:46.071"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.072" endtime="20241126 21:55:46.072"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.073" endtime="20241126 21:55:46.073"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.072" endtime="20241126 21:55:46.073"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.073" endtime="20241126 21:55:46.073"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.073" endtime="20241126 21:55:46.073"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.072" endtime="20241126 21:55:46.073"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:46.072" endtime="20241126 21:55:46.074"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.072" endtime="20241126 21:55:46.074"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:46.074" endtime="20241126 21:55:46.074"/>
</return>
<msg timestamp="20241126 21:55:46.074" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.067" endtime="20241126 21:55:46.074"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 21:55:46.075" endtime="20241126 21:55:46.076"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.075" endtime="20241126 21:55:46.076"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.075" endtime="20241126 21:55:46.076"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.076" endtime="20241126 21:55:46.076"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:46.076" endtime="20241126 21:55:46.077"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.076" endtime="20241126 21:55:46.077"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.076" endtime="20241126 21:55:46.077"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.077" endtime="20241126 21:55:46.078"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:46.078" endtime="20241126 21:55:46.078"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.077" endtime="20241126 21:55:46.078"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.077" endtime="20241126 21:55:46.078"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:46.075" endtime="20241126 21:55:46.079"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.075" endtime="20241126 21:55:46.079"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241126 21:55:46.080" endtime="20241126 21:55:46.080"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.080" endtime="20241126 21:55:46.080"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.080" endtime="20241126 21:55:46.080"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.081" endtime="20241126 21:55:46.081"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.080" endtime="20241126 21:55:46.081"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.080" endtime="20241126 21:55:46.081"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.081" endtime="20241126 21:55:46.081"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241126 21:55:46.081" endtime="20241126 21:55:46.081"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.081" endtime="20241126 21:55:46.081"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:46.081" endtime="20241126 21:55:46.081"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:46.079" endtime="20241126 21:55:46.083"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.079" endtime="20241126 21:55:46.083"/>
</if>
<status status="PASS" starttime="20241126 21:55:46.042" endtime="20241126 21:55:46.083"/>
</iter>
<status status="PASS" starttime="20241126 21:55:46.042" endtime="20241126 21:55:46.083"/>
</for>
<msg timestamp="20241126 21:55:46.083" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241126 21:55:46.040" endtime="20241126 21:55:46.083"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:46.084" endtime="20241126 21:55:46.084"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:46.090" endtime="20241126 21:55:46.090"/>
</kw>
<msg timestamp="20241126 21:55:46.091" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.090" endtime="20241126 21:55:46.091"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.092" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': '//input[@id="password"]', 'pageId': '1', 'createdAt': '2024-11-25T07:59:56.602Z', 'updatedAt': '2024-11-25T08:03:57.471Z'}</msg>
<status status="PASS" starttime="20241126 21:55:46.091" endtime="20241126 21:55:46.092"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.093" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.093" endtime="20241126 21:55:46.093"/>
</kw>
<status status="PASS" starttime="20241126 21:55:46.092" endtime="20241126 21:55:46.093"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.094" endtime="20241126 21:55:46.094"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.093" endtime="20241126 21:55:46.094"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.092" endtime="20241126 21:55:46.094"/>
</if>
<status status="PASS" starttime="20241126 21:55:46.091" endtime="20241126 21:55:46.094"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.091" endtime="20241126 21:55:46.094"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:46.094" endtime="20241126 21:55:46.095"/>
</return>
<msg timestamp="20241126 21:55:46.095" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.089" endtime="20241126 21:55:46.095"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.097" level="INFO">${xpath} = //input[@id="password"]</msg>
<status status="PASS" starttime="20241126 21:55:46.096" endtime="20241126 21:55:46.097"/>
</kw>
<status status="PASS" starttime="20241126 21:55:46.096" endtime="20241126 21:55:46.097"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.097" endtime="20241126 21:55:46.097"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.097" endtime="20241126 21:55:46.098"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.095" endtime="20241126 21:55:46.098"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:46.100" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '410', 'status': 'COMPLETED', 'actionName': 'Enter password', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="password"]', 'inputValue': 'vijaybharani', 'errorM...</msg>
<status status="PASS" starttime="20241126 21:55:46.098" endtime="20241126 21:55:46.100"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 21:55:46.101" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "410", "status": "COMPLETED", "actionName": "Enter password", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"password\"]", "inputValue": "vijaybharani", "erro...</msg>
<status status="PASS" starttime="20241126 21:55:46.101" endtime="20241126 21:55:46.101"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 21:55:46.111" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 21:55:46.111" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 21:55:46.101" endtime="20241126 21:55:46.111"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:46.112" endtime="20241126 21:55:46.113"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 21:55:46.114" endtime="20241126 21:55:46.114"/>
</return>
<status status="PASS" starttime="20241126 21:55:46.100" endtime="20241126 21:55:46.114"/>
</kw>
<status status="PASS" starttime="20241126 21:55:46.084" endtime="20241126 21:55:46.116"/>
</kw>
<status status="PASS" starttime="20241126 21:55:45.442" endtime="20241126 21:55:46.116"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.116" endtime="20241126 21:55:46.116"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241126 21:55:46.117" endtime="20241126 21:55:46.117"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.117" endtime="20241126 21:55:46.117"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.116" endtime="20241126 21:55:46.117"/>
</branch>
<status status="PASS" starttime="20241126 21:55:45.442" endtime="20241126 21:55:46.117"/>
</try>
<status status="PASS" starttime="20241126 21:55:45.441" endtime="20241126 21:55:46.118"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-25T08:01:13.886Z', 'updatedAt': '2024-11-25T08:01:13.886Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.119" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-25T08:01:01.163Z', 'updatedAt': '2024-11-25T08:01:0...</msg>
<status status="PASS" starttime="20241126 21:55:46.118" endtime="20241126 21:55:46.120"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:46.120" endtime="20241126 21:55:46.121"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241126 21:55:46.122" level="INFO">${input} = {'id': '5', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-25T08:01:01.351Z', 'updatedAt': '2024-11-25T08:01:01.351Z'}</msg>
<status status="PASS" starttime="20241126 21:55:46.121" endtime="20241126 21:55:46.122"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.123" endtime="20241126 21:55:46.123"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.124" endtime="20241126 21:55:46.124"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.123" endtime="20241126 21:55:46.124"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.122" endtime="20241126 21:55:46.124"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:46.127" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241126 21:55:46.126" endtime="20241126 21:55:46.127"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 21:55:46.128" endtime="20241126 21:55:46.129"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.127" endtime="20241126 21:55:46.129"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241126 21:55:46.130" endtime="20241126 21:55:46.130"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.129" endtime="20241126 21:55:46.130"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:46.159" level="INFO">Waited for Element with selector //button[text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241126 21:55:46.148" endtime="20241126 21:55:46.159"/>
</kw>
<msg timestamp="20241126 21:55:46.159" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.147" endtime="20241126 21:55:46.159"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:46.159" endtime="20241126 21:55:46.160"/>
</return>
<status status="PASS" starttime="20241126 21:55:46.147" endtime="20241126 21:55:46.160"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.160" endtime="20241126 21:55:46.160"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.161" endtime="20241126 21:55:46.161"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.160" endtime="20241126 21:55:46.161"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.147" endtime="20241126 21:55:46.161"/>
</try>
<msg timestamp="20241126 21:55:46.162" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.146" endtime="20241126 21:55:46.162"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:46.162" endtime="20241126 21:55:46.163"/>
</return>
<status status="PASS" starttime="20241126 21:55:46.143" endtime="20241126 21:55:46.163"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241126 21:55:46.164" endtime="20241126 21:55:46.164"/>
</return>
<status status="NOT RUN" starttime="20241126 21:55:46.164" endtime="20241126 21:55:46.164"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.143" endtime="20241126 21:55:46.164"/>
</try>
<msg timestamp="20241126 21:55:46.165" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.142" endtime="20241126 21:55:46.165"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.171" endtime="20241126 21:55:46.171"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.171" endtime="20241126 21:55:46.171"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.170" endtime="20241126 21:55:46.172"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.170" endtime="20241126 21:55:46.172"/>
</if>
<status status="PASS" starttime="20241126 21:55:46.168" endtime="20241126 21:55:46.172"/>
</kw>
<status status="PASS" starttime="20241126 21:55:46.141" endtime="20241126 21:55:46.172"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:46.189" level="INFO">Waited for Element with selector //button[text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241126 21:55:46.181" endtime="20241126 21:55:46.189"/>
</kw>
<msg timestamp="20241126 21:55:46.190" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.180" endtime="20241126 21:55:46.190"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:46.190" endtime="20241126 21:55:46.190"/>
</return>
<status status="PASS" starttime="20241126 21:55:46.179" endtime="20241126 21:55:46.190"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.191" endtime="20241126 21:55:46.191"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.191" endtime="20241126 21:55:46.191"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.190" endtime="20241126 21:55:46.191"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.179" endtime="20241126 21:55:46.191"/>
</try>
<msg timestamp="20241126 21:55:46.191" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.178" endtime="20241126 21:55:46.191"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:46.191" endtime="20241126 21:55:46.193"/>
</return>
<msg timestamp="20241126 21:55:46.193" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241126 21:55:46.175" endtime="20241126 21:55:46.193"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.199" endtime="20241126 21:55:46.199"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:46.199" endtime="20241126 21:55:46.199"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:46.198" endtime="20241126 21:55:46.200"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.198" endtime="20241126 21:55:46.200"/>
</if>
<status status="PASS" starttime="20241126 21:55:46.195" endtime="20241126 21:55:46.200"/>
</kw>
<status status="PASS" starttime="20241126 21:55:46.175" endtime="20241126 21:55:46.201"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241126 21:55:59.042" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241126 21:55:59.043" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241126 21:55:59.045" level="FAIL">TimeoutError: elementHandle.waitForElementState: Timeout 12000ms exceeded.
=========================== logs ===========================
  waiting for element to be enabled
    element is not enabled - waiting...
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241126 21:55:46.209" endtime="20241126 21:55:59.074"/>
</kw>
<msg timestamp="20241126 21:55:59.074" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.209" endtime="20241126 21:55:59.074"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:59.074" endtime="20241126 21:55:59.074"/>
</return>
<status status="PASS" starttime="20241126 21:55:46.208" endtime="20241126 21:55:59.075"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.075" endtime="20241126 21:55:59.075"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.076" endtime="20241126 21:55:59.076"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.075" endtime="20241126 21:55:59.076"/>
</branch>
<status status="PASS" starttime="20241126 21:55:46.208" endtime="20241126 21:55:59.076"/>
</try>
<msg timestamp="20241126 21:55:59.077" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.207" endtime="20241126 21:55:59.077"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241126 21:55:59.077" endtime="20241126 21:55:59.077"/>
</return>
<msg timestamp="20241126 21:55:59.078" level="INFO">${is_enabled} = False</msg>
<status status="PASS" starttime="20241126 21:55:46.204" endtime="20241126 21:55:59.078"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:59.082" endtime="20241126 21:55:59.082"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:59.083" endtime="20241126 21:55:59.084"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 21:55:59.086" level="FAIL">ELEMENT_NOT_ENABLED</msg>
<status status="FAIL" starttime="20241126 21:55:59.084" endtime="20241126 21:55:59.086"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:59.082" endtime="20241126 21:55:59.089"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:59.081" endtime="20241126 21:55:59.090"/>
</branch>
<status status="FAIL" starttime="20241126 21:55:59.081" endtime="20241126 21:55:59.090"/>
</if>
<status status="FAIL" starttime="20241126 21:55:59.079" endtime="20241126 21:55:59.092"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:46.204" endtime="20241126 21:55:59.094"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:46.138" endtime="20241126 21:55:59.096"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.097" endtime="20241126 21:55:59.097"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.098" endtime="20241126 21:55:59.098"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.097" endtime="20241126 21:55:59.098"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.098" endtime="20241126 21:55:59.099"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.098" endtime="20241126 21:55:59.099"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:59.097" endtime="20241126 21:55:59.099"/>
</try>
<status status="FAIL" starttime="20241126 21:55:46.133" endtime="20241126 21:55:59.101"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:46.130" endtime="20241126 21:55:59.102"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.107" endtime="20241126 21:55:59.107"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.112" endtime="20241126 21:55:59.112"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.102" endtime="20241126 21:55:59.112"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.114" endtime="20241126 21:55:59.114"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.112" endtime="20241126 21:55:59.114"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.121" endtime="20241126 21:55:59.121"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.114" endtime="20241126 21:55:59.121"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.125" endtime="20241126 21:55:59.125"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.126" endtime="20241126 21:55:59.126"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.125" endtime="20241126 21:55:59.126"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:59.125" endtime="20241126 21:55:59.126"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:59.121" endtime="20241126 21:55:59.126"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.128" endtime="20241126 21:55:59.128"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.126" endtime="20241126 21:55:59.128"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.130" endtime="20241126 21:55:59.131"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.131" endtime="20241126 21:55:59.132"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.131" endtime="20241126 21:55:59.132"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.132" endtime="20241126 21:55:59.132"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.132" endtime="20241126 21:55:59.133"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:59.131" endtime="20241126 21:55:59.133"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:59.129" endtime="20241126 21:55:59.133"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:59.142" endtime="20241126 21:55:59.142"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.147" endtime="20241126 21:55:59.147"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.134" endtime="20241126 21:55:59.148"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.150" endtime="20241126 21:55:59.150"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.151" endtime="20241126 21:55:59.151"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.151" endtime="20241126 21:55:59.151"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.152" endtime="20241126 21:55:59.152"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.151" endtime="20241126 21:55:59.152"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:59.150" endtime="20241126 21:55:59.152"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:59.148" endtime="20241126 21:55:59.152"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241126 21:55:59.162" endtime="20241126 21:55:59.162"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.169" endtime="20241126 21:55:59.169"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.152" endtime="20241126 21:55:59.169"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.171" endtime="20241126 21:55:59.171"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.172" endtime="20241126 21:55:59.172"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.171" endtime="20241126 21:55:59.172"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.172" endtime="20241126 21:55:59.172"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.172" endtime="20241126 21:55:59.173"/>
</branch>
<status status="NOT RUN" starttime="20241126 21:55:59.171" endtime="20241126 21:55:59.173"/>
</if>
<status status="NOT RUN" starttime="20241126 21:55:59.169" endtime="20241126 21:55:59.173"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.176" endtime="20241126 21:55:59.176"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.173" endtime="20241126 21:55:59.176"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241126 21:55:59.186" endtime="20241126 21:55:59.186"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.186" endtime="20241126 21:55:59.187"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.177" endtime="20241126 21:55:59.187"/>
</branch>
<status status="FAIL" starttime="20241126 21:55:46.127" endtime="20241126 21:55:59.187"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.187" endtime="20241126 21:55:59.188"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.188" endtime="20241126 21:55:59.188"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241126 21:55:59.188" endtime="20241126 21:55:59.188"/>
</return>
<status status="FAIL" starttime="20241126 21:55:46.124" endtime="20241126 21:55:59.189"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241126 21:55:59.189" endtime="20241126 21:55:59.190"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.190" endtime="20241126 21:55:59.190"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241126 21:55:59.190" endtime="20241126 21:55:59.190"/>
</kw>
<status status="FAIL" starttime="20241126 21:55:46.118" endtime="20241126 21:55:59.190"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:59.191" endtime="20241126 21:55:59.192"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241126 21:55:59.197" endtime="20241126 21:55:59.197"/>
</kw>
<msg timestamp="20241126 21:55:59.197" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:59.196" endtime="20241126 21:55:59.197"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:59.198" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-25T08:00:59.739Z', 'updatedAt': '2024-11-25T08:00:59.739Z'}</msg>
<status status="PASS" starttime="20241126 21:55:59.198" endtime="20241126 21:55:59.198"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:59.199" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:59.199" endtime="20241126 21:55:59.200"/>
</kw>
<status status="PASS" starttime="20241126 21:55:59.199" endtime="20241126 21:55:59.200"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.201" endtime="20241126 21:55:59.201"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.200" endtime="20241126 21:55:59.201"/>
</branch>
<status status="PASS" starttime="20241126 21:55:59.198" endtime="20241126 21:55:59.201"/>
</if>
<status status="PASS" starttime="20241126 21:55:59.198" endtime="20241126 21:55:59.201"/>
</branch>
<status status="PASS" starttime="20241126 21:55:59.197" endtime="20241126 21:55:59.201"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241126 21:55:59.201" endtime="20241126 21:55:59.202"/>
</return>
<msg timestamp="20241126 21:55:59.202" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241126 21:55:59.194" endtime="20241126 21:55:59.202"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241126 21:55:59.203" level="INFO">${xpath} = //button[text()="Login"]</msg>
<status status="PASS" starttime="20241126 21:55:59.202" endtime="20241126 21:55:59.203"/>
</kw>
<status status="PASS" starttime="20241126 21:55:59.202" endtime="20241126 21:55:59.203"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241126 21:55:59.203" endtime="20241126 21:55:59.203"/>
</kw>
<status status="NOT RUN" starttime="20241126 21:55:59.203" endtime="20241126 21:55:59.203"/>
</branch>
<status status="PASS" starttime="20241126 21:55:59.202" endtime="20241126 21:55:59.203"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241126 21:55:59.205" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '411', 'status': 'FAILED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[text()="Login"]', 'inputValue': '', 'errorMessage': 'ELEM...</msg>
<status status="PASS" starttime="20241126 21:55:59.204" endtime="20241126 21:55:59.205"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241126 21:55:59.209" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "411", "status": "FAILED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[text()=\"Login\"]", "inputValue": "", "errorMessage": "EL...</msg>
<status status="PASS" starttime="20241126 21:55:59.206" endtime="20241126 21:55:59.209"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241126 21:55:59.226" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241126 21:55:59.226" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000226A865A430&gt;</msg>
<status status="PASS" starttime="20241126 21:55:59.209" endtime="20241126 21:55:59.227"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:59.227" endtime="20241126 21:55:59.228"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241126 21:55:59.228" endtime="20241126 21:55:59.228"/>
</return>
<status status="PASS" starttime="20241126 21:55:59.205" endtime="20241126 21:55:59.228"/>
</kw>
<status status="PASS" starttime="20241126 21:55:59.192" endtime="20241126 21:55:59.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241126 21:55:59.230" endtime="20241126 21:55:59.230"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241126 21:55:59.231" level="FAIL">ELEMENT_NOT_ENABLED</msg>
<status status="FAIL" starttime="20241126 21:55:59.231" endtime="20241126 21:55:59.232"/>
</kw>
