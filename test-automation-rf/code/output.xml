<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241121 23:08:17.468" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:08:19.739" endtime="20241121 23:08:19.739"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:09:08.243" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '49', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:39:08.096Z', 'createdAt': '2024-11-21T17:39:08.096Z'}, 'testCase': {'...</msg>
<status status="PASS" starttime="20241121 23:08:19.739" endtime="20241121 23:09:08.243"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:08.244" endtime="20241121 23:09:08.249"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:08.255" endtime="20241121 23:09:08.255"/>
</kw>
<msg timestamp="20241121 23:09:08.255" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.254" endtime="20241121 23:09:08.255"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.264" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241121 23:09:08.263" endtime="20241121 23:09:08.264"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.266" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.265" endtime="20241121 23:09:08.266"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.265" endtime="20241121 23:09:08.266"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.267" endtime="20241121 23:09:08.267"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.266" endtime="20241121 23:09:08.267"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.264" endtime="20241121 23:09:08.268"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.262" endtime="20241121 23:09:08.268"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.256" endtime="20241121 23:09:08.268"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:08.269" endtime="20241121 23:09:08.269"/>
</return>
<msg timestamp="20241121 23:09:08.269" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.253" endtime="20241121 23:09:08.270"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.271" endtime="20241121 23:09:08.271"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:09:08.272" endtime="20241121 23:09:08.272"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:08.270" endtime="20241121 23:09:08.272"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.270" endtime="20241121 23:09:08.272"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:08.276" endtime="20241121 23:09:08.277"/>
</kw>
<msg timestamp="20241121 23:09:08.277" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.276" endtime="20241121 23:09:08.277"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.278" level="INFO">${values} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:09:08.277" endtime="20241121 23:09:08.278"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.279" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.278" endtime="20241121 23:09:08.279"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.278" endtime="20241121 23:09:08.279"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.279" endtime="20241121 23:09:08.280"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.279" endtime="20241121 23:09:08.280"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.278" endtime="20241121 23:09:08.280"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.277" endtime="20241121 23:09:08.280"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.277" endtime="20241121 23:09:08.280"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:08.280" endtime="20241121 23:09:08.280"/>
</return>
<msg timestamp="20241121 23:09:08.280" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.275" endtime="20241121 23:09:08.280"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:08.285" endtime="20241121 23:09:08.286"/>
</kw>
<msg timestamp="20241121 23:09:08.287" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.285" endtime="20241121 23:09:08.287"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.288" level="INFO">${values} = {'id': '49', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:39:08.096Z', 'createdAt': '2024-11-21T17:39:08.096Z'}</msg>
<status status="PASS" starttime="20241121 23:09:08.288" endtime="20241121 23:09:08.288"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.289" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.289" endtime="20241121 23:09:08.289"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.289" endtime="20241121 23:09:08.290"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.290" endtime="20241121 23:09:08.293"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.290" endtime="20241121 23:09:08.293"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.288" endtime="20241121 23:09:08.293"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.287" endtime="20241121 23:09:08.293"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.287" endtime="20241121 23:09:08.293"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:08.294" endtime="20241121 23:09:08.294"/>
</return>
<msg timestamp="20241121 23:09:08.295" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.283" endtime="20241121 23:09:08.295"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.296" endtime="20241121 23:09:08.296"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.295" endtime="20241121 23:09:08.296"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.295" endtime="20241121 23:09:08.296"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.297" level="INFO">${testCase} = {'id': '27', 'name': 'Login positive', 'projectId': '4', 'createdAt': '2024-11-21T16:43:35.118Z', 'updatedAt': '2024-11-21T17:34:46.418Z', 'testCaseFlowSequences': [{'id': '46', 'testCaseId': '27', 'f...</msg>
<status status="PASS" starttime="20241121 23:09:08.296" endtime="20241121 23:09:08.297"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.297" level="INFO">${testCaseRun} = {'id': '49', 'testCaseId': '27', 'status': 'STARTED', 'updatedAt': '2024-11-21T17:39:08.096Z', 'createdAt': '2024-11-21T17:39:08.096Z'}</msg>
<status status="PASS" starttime="20241121 23:09:08.297" endtime="20241121 23:09:08.297"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:08.297" endtime="20241121 23:09:08.298"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:08.304" endtime="20241121 23:09:08.305"/>
</kw>
<msg timestamp="20241121 23:09:08.305" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.303" endtime="20241121 23:09:08.305"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.307" level="INFO">${values} = [{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', ...</msg>
<status status="PASS" starttime="20241121 23:09:08.306" endtime="20241121 23:09:08.307"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.309" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.308" endtime="20241121 23:09:08.309"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.308" endtime="20241121 23:09:08.309"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.309" endtime="20241121 23:09:08.310"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.309" endtime="20241121 23:09:08.310"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.307" endtime="20241121 23:09:08.310"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.306" endtime="20241121 23:09:08.310"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.306" endtime="20241121 23:09:08.310"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:08.310" endtime="20241121 23:09:08.311"/>
</return>
<msg timestamp="20241121 23:09:08.311" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.301" endtime="20241121 23:09:08.311"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '46', 'testCaseId': '27', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:35.233Z', 'updatedAt': '2024-11-21T17:34:46.459Z', 'flow': {'id': '14', 'name': 'Login', 'projectId': '4', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.314" level="INFO">${flow} = {'id': '14', 'name': 'Login', 'projectId': '4', 'createdAt': '2024-11-21T16:43:09.327Z', 'updatedAt': '2024-11-21T16:43:09.327Z', 'flowActionSequences': [{'id': '41', 'actionId': '28', 'flowId': '14',...</msg>
<status status="PASS" starttime="20241121 23:09:08.313" endtime="20241121 23:09:08.314"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:08.314" endtime="20241121 23:09:08.315"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:08.322" endtime="20241121 23:09:08.323"/>
</kw>
<msg timestamp="20241121 23:09:08.323" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.322" endtime="20241121 23:09:08.323"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.325" level="INFO">${values} = [{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': '...</msg>
<status status="PASS" starttime="20241121 23:09:08.325" endtime="20241121 23:09:08.325"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.327" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.326" endtime="20241121 23:09:08.327"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.326" endtime="20241121 23:09:08.327"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.327" endtime="20241121 23:09:08.327"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.327" endtime="20241121 23:09:08.328"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.325" endtime="20241121 23:09:08.328"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.325" endtime="20241121 23:09:08.328"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.323" endtime="20241121 23:09:08.328"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:08.328" endtime="20241121 23:09:08.328"/>
</return>
<msg timestamp="20241121 23:09:08.329" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:08.322" endtime="20241121 23:09:08.329"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '41', 'actionId': '28', 'flowId': '14', 'order': 0, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '28', 'name': 'Launch browser', 'type': 'L...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.331" level="INFO">${action} = {'id': '28', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'xpath': '', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:38:00.836Z', 'updatedAt': '2024-11-21T16:38:00.836Z', 'inpu...</msg>
<status status="PASS" starttime="20241121 23:09:08.331" endtime="20241121 23:09:08.332"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:08.332" endtime="20241121 23:09:08.333"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:08.334" level="INFO">${input} = {'id': '25', 'actionId': '28', 'name': 'Login page', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:38:01.166Z', 'updatedAt': ...</msg>
<status status="PASS" starttime="20241121 23:09:08.333" endtime="20241121 23:09:08.335"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.337" endtime="20241121 23:09:08.340"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:08.341" endtime="20241121 23:09:08.342"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:08.335" endtime="20241121 23:09:08.342"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.335" endtime="20241121 23:09:08.342"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:08.344" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241121 23:09:08.344" endtime="20241121 23:09:08.344"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241121 23:09:08.346" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\231b9003-7542-4616-a210-d0c11071b9e6"}</msg>
<msg timestamp="20241121 23:09:09.052" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\231b9003-7542-4616-a210-d0c11071b9e6"}</msg>
<status status="PASS" starttime="20241121 23:09:08.345" endtime="20241121 23:09:09.053"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241121 23:09:09.055" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "height": 720,
    "width": 1280
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241121 23:09:09.096" level="INFO">Successfully created context. </msg>
<msg timestamp="20241121 23:09:09.096" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'height': 720, 'width': 1280}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241121 23:09:09.053" endtime="20241121 23:09:09.096"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241121 23:09:09.103" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241121 23:09:09.096" endtime="20241121 23:09:09.103"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241121 23:09:16.588" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241121 23:09:16.589" level="INFO">${page_id} = {'page_id': 'page=bbab7b56-1130-4b5d-9437-c45b150b77a6', 'video_path': ''}</msg>
<status status="PASS" starttime="20241121 23:09:09.103" endtime="20241121 23:09:16.589"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241121 23:09:16.590" level="INFO">Switching to page {'page_id': 'page=bbab7b56-1130-4b5d-9437-c45b150b77a6', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241121 23:09:16.613" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=d1edd618-8383-4677-999e-5c0ea18d67ef",
    "contexts": [
      {
        "type": "context",
        "id": "context=e50b2329-8d72-45d8-8a47-5614bd9dca4c",
        "activePage": "page=bbab7b56-1130-4b5d-9437-c45b150b77a6",
        "pages": [
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=bbab7b56-1130-4b5d-9437-c45b150b77a6",
            "timestamp": 1732210749.378
          }
        ]
      }
    ],
    "activeContext": "context=e50b2329-8d72-45d8-8a47-5614bd9dca4c",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241121 23:09:16.622" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241121 23:09:16.589" endtime="20241121 23:09:16.623"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.345" endtime="20241121 23:09:16.623"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.345" endtime="20241121 23:09:16.623"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.623" endtime="20241121 23:09:16.624"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.623" endtime="20241121 23:09:16.624"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.627" endtime="20241121 23:09:16.628"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.624" endtime="20241121 23:09:16.628"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.630" endtime="20241121 23:09:16.630"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.632" endtime="20241121 23:09:16.633"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.628" endtime="20241121 23:09:16.633"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.634" endtime="20241121 23:09:16.634"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.633" endtime="20241121 23:09:16.634"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.637" endtime="20241121 23:09:16.637"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.634" endtime="20241121 23:09:16.637"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.639" endtime="20241121 23:09:16.640"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.637" endtime="20241121 23:09:16.640"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.641" endtime="20241121 23:09:16.641"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.640" endtime="20241121 23:09:16.641"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.643" endtime="20241121 23:09:16.643"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.644" endtime="20241121 23:09:16.644"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.643" endtime="20241121 23:09:16.644"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.645" endtime="20241121 23:09:16.645"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.644" endtime="20241121 23:09:16.645"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:16.643" endtime="20241121 23:09:16.645"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:16.641" endtime="20241121 23:09:16.645"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:16.655" endtime="20241121 23:09:16.655"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.659" endtime="20241121 23:09:16.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.645" endtime="20241121 23:09:16.660"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.661" endtime="20241121 23:09:16.661"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.662" endtime="20241121 23:09:16.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.662" endtime="20241121 23:09:16.662"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.662" endtime="20241121 23:09:16.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.662" endtime="20241121 23:09:16.663"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:16.662" endtime="20241121 23:09:16.663"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:16.660" endtime="20241121 23:09:16.663"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:16.669" endtime="20241121 23:09:16.669"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.674" endtime="20241121 23:09:16.674"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.663" endtime="20241121 23:09:16.674"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.676" endtime="20241121 23:09:16.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.674" endtime="20241121 23:09:16.676"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.678" endtime="20241121 23:09:16.678"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.676" endtime="20241121 23:09:16.678"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:16.684" endtime="20241121 23:09:16.684"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:16.685" endtime="20241121 23:09:16.685"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:16.678" endtime="20241121 23:09:16.685"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.344" endtime="20241121 23:09:16.685"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:16.685" endtime="20241121 23:09:16.686"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:17.695" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:09:16.686" endtime="20241121 23:09:17.695"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.343" endtime="20241121 23:09:17.696"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.343" endtime="20241121 23:09:17.696"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.697" endtime="20241121 23:09:17.697"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.696" endtime="20241121 23:09:17.697"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.343" endtime="20241121 23:09:17.698"/>
</try>
<status status="PASS" starttime="20241121 23:09:08.330" endtime="20241121 23:09:17.698"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '42', 'actionId': '29', 'flowId': '14', 'order': 1, 'createdAt': '2024-11-21T16:43:09.645Z', 'updatedAt': '2024-11-21T16:43:09.645Z', 'action': {'id': '29', 'name': 'Set login username', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:17.700" level="INFO">${action} = {'id': '29', 'name': 'Set login username', 'type': 'TYPE_TEXT', 'xpath': 'id=username', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:14.809Z', 'updatedAt': '2024-11-21T17:13:35.53...</msg>
<status status="PASS" starttime="20241121 23:09:17.699" endtime="20241121 23:09:17.700"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:17.700" endtime="20241121 23:09:17.701"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:17.702" level="INFO">${input} = {'id': '26', 'actionId': '29', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:15.038Z', 'updatedAt': '2024-11-21T17:23:16...</msg>
<status status="PASS" starttime="20241121 23:09:17.702" endtime="20241121 23:09:17.703"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.704" endtime="20241121 23:09:17.704"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.705" endtime="20241121 23:09:17.705"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.703" endtime="20241121 23:09:17.705"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.703" endtime="20241121 23:09:17.706"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:17.709" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:09:17.708" endtime="20241121 23:09:17.709"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:17.711" endtime="20241121 23:09:17.711"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.710" endtime="20241121 23:09:17.711"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.713" endtime="20241121 23:09:17.713"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.712" endtime="20241121 23:09:17.713"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.718" endtime="20241121 23:09:17.719"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.714" endtime="20241121 23:09:17.719"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.722" endtime="20241121 23:09:17.722"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.725" endtime="20241121 23:09:17.725"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.719" endtime="20241121 23:09:17.725"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.727" endtime="20241121 23:09:17.728"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.726" endtime="20241121 23:09:17.728"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.732" endtime="20241121 23:09:17.732"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.729" endtime="20241121 23:09:17.732"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.773" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:09:17.741" endtime="20241121 23:09:17.773"/>
</kw>
<msg timestamp="20241121 23:09:17.773" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.740" endtime="20241121 23:09:17.773"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.774" endtime="20241121 23:09:17.774"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.740" endtime="20241121 23:09:17.774"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.774" endtime="20241121 23:09:17.774"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.774" endtime="20241121 23:09:17.774"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.774" endtime="20241121 23:09:17.775"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.740" endtime="20241121 23:09:17.775"/>
</try>
<msg timestamp="20241121 23:09:17.775" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.739" endtime="20241121 23:09:17.775"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.775" endtime="20241121 23:09:17.775"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.738" endtime="20241121 23:09:17.775"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:17.776" endtime="20241121 23:09:17.776"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:17.775" endtime="20241121 23:09:17.776"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.738" endtime="20241121 23:09:17.776"/>
</try>
<msg timestamp="20241121 23:09:17.776" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.738" endtime="20241121 23:09:17.776"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.779" endtime="20241121 23:09:17.779"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.779" endtime="20241121 23:09:17.779"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.779" endtime="20241121 23:09:17.779"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.778" endtime="20241121 23:09:17.779"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.777" endtime="20241121 23:09:17.779"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.737" endtime="20241121 23:09:17.780"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.795" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:09:17.788" endtime="20241121 23:09:17.795"/>
</kw>
<msg timestamp="20241121 23:09:17.796" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.788" endtime="20241121 23:09:17.796"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.796" endtime="20241121 23:09:17.796"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.787" endtime="20241121 23:09:17.796"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.796" endtime="20241121 23:09:17.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.796" endtime="20241121 23:09:17.797"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.796" endtime="20241121 23:09:17.797"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.787" endtime="20241121 23:09:17.797"/>
</try>
<msg timestamp="20241121 23:09:17.797" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.787" endtime="20241121 23:09:17.797"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.797" endtime="20241121 23:09:17.797"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.786" endtime="20241121 23:09:17.797"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:17.797" endtime="20241121 23:09:17.797"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:17.797" endtime="20241121 23:09:17.798"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.786" endtime="20241121 23:09:17.798"/>
</try>
<msg timestamp="20241121 23:09:17.798" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.785" endtime="20241121 23:09:17.798"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.800" endtime="20241121 23:09:17.800"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.801" endtime="20241121 23:09:17.801"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.800" endtime="20241121 23:09:17.801"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.800" endtime="20241121 23:09:17.801"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.799" endtime="20241121 23:09:17.801"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.785" endtime="20241121 23:09:17.801"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:17.825" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:09:17.826" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:17.801" endtime="20241121 23:09:17.826"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:17.826" endtime="20241121 23:09:17.826"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.801" endtime="20241121 23:09:17.826"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.826" endtime="20241121 23:09:17.826"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.827" endtime="20241121 23:09:17.827"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.826" endtime="20241121 23:09:17.827"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.801" endtime="20241121 23:09:17.827"/>
</try>
<msg timestamp="20241121 23:09:17.827" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:17.783" endtime="20241121 23:09:17.827"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.830" endtime="20241121 23:09:17.830"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.830" endtime="20241121 23:09:17.830"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.829" endtime="20241121 23:09:17.830"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.829" endtime="20241121 23:09:17.830"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.828" endtime="20241121 23:09:17.830"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.782" endtime="20241121 23:09:17.830"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.831" endtime="20241121 23:09:17.831"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.830" endtime="20241121 23:09:17.831"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.782" endtime="20241121 23:09:17.831"/>
</try>
<status status="PASS" starttime="20241121 23:09:17.781" endtime="20241121 23:09:17.831"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.842" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:09:17.836" endtime="20241121 23:09:17.843"/>
</kw>
<msg timestamp="20241121 23:09:17.843" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.835" endtime="20241121 23:09:17.843"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.843" endtime="20241121 23:09:17.843"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.835" endtime="20241121 23:09:17.843"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.843" endtime="20241121 23:09:17.843"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.844" endtime="20241121 23:09:17.844"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.843" endtime="20241121 23:09:17.844"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.835" endtime="20241121 23:09:17.844"/>
</try>
<msg timestamp="20241121 23:09:17.844" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.835" endtime="20241121 23:09:17.844"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.844" endtime="20241121 23:09:17.844"/>
</return>
<msg timestamp="20241121 23:09:17.845" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.833" endtime="20241121 23:09:17.845"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.847" endtime="20241121 23:09:17.847"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.847" endtime="20241121 23:09:17.847"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.847" endtime="20241121 23:09:17.847"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.847" endtime="20241121 23:09:17.847"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.846" endtime="20241121 23:09:17.848"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.833" endtime="20241121 23:09:17.848"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.735" endtime="20241121 23:09:17.848"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.872" level="INFO">Waited for Element with selector id=username at state editable</msg>
<status status="PASS" starttime="20241121 23:09:17.853" endtime="20241121 23:09:17.872"/>
</kw>
<msg timestamp="20241121 23:09:17.872" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.852" endtime="20241121 23:09:17.872"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.872" endtime="20241121 23:09:17.872"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.852" endtime="20241121 23:09:17.872"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.873" endtime="20241121 23:09:17.873"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.873" endtime="20241121 23:09:17.873"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.873" endtime="20241121 23:09:17.873"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.852" endtime="20241121 23:09:17.873"/>
</try>
<msg timestamp="20241121 23:09:17.874" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.851" endtime="20241121 23:09:17.874"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.874" endtime="20241121 23:09:17.874"/>
</return>
<msg timestamp="20241121 23:09:17.874" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.850" endtime="20241121 23:09:17.874"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.876" endtime="20241121 23:09:17.876"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.877" endtime="20241121 23:09:17.877"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.876" endtime="20241121 23:09:17.877"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.876" endtime="20241121 23:09:17.877"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.875" endtime="20241121 23:09:17.877"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.850" endtime="20241121 23:09:17.877"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:09:17.878" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:09:17.877" endtime="20241121 23:09:17.878"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.880" endtime="20241121 23:09:17.880"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.881" endtime="20241121 23:09:17.881"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.879" endtime="20241121 23:09:17.882"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:17.882" endtime="20241121 23:09:17.882"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.882" endtime="20241121 23:09:17.882"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.879" endtime="20241121 23:09:17.882"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:09:17.883" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241121 23:09:17.883" endtime="20241121 23:09:17.917"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.882" endtime="20241121 23:09:17.917"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.918" endtime="20241121 23:09:17.918"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.918" endtime="20241121 23:09:17.918"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.917" endtime="20241121 23:09:17.918"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.882" endtime="20241121 23:09:17.918"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.931" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:09:17.924" endtime="20241121 23:09:17.931"/>
</kw>
<msg timestamp="20241121 23:09:17.931" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.924" endtime="20241121 23:09:17.931"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.931" endtime="20241121 23:09:17.931"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.924" endtime="20241121 23:09:17.931"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.932" endtime="20241121 23:09:17.932"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.932" endtime="20241121 23:09:17.932"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.931" endtime="20241121 23:09:17.932"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.924" endtime="20241121 23:09:17.932"/>
</try>
<msg timestamp="20241121 23:09:17.932" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.923" endtime="20241121 23:09:17.932"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.932" endtime="20241121 23:09:17.933"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.922" endtime="20241121 23:09:17.933"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:17.933" endtime="20241121 23:09:17.933"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:17.933" endtime="20241121 23:09:17.933"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.922" endtime="20241121 23:09:17.933"/>
</try>
<msg timestamp="20241121 23:09:17.933" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.922" endtime="20241121 23:09:17.933"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.936" endtime="20241121 23:09:17.936"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.936" endtime="20241121 23:09:17.936"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.935" endtime="20241121 23:09:17.936"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.935" endtime="20241121 23:09:17.936"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.934" endtime="20241121 23:09:17.936"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.921" endtime="20241121 23:09:17.936"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.951" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:09:17.945" endtime="20241121 23:09:17.951"/>
</kw>
<msg timestamp="20241121 23:09:17.951" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.944" endtime="20241121 23:09:17.951"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.951" endtime="20241121 23:09:17.951"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.944" endtime="20241121 23:09:17.951"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.952" endtime="20241121 23:09:17.952"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.952" endtime="20241121 23:09:17.952"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.952" endtime="20241121 23:09:17.952"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.944" endtime="20241121 23:09:17.952"/>
</try>
<msg timestamp="20241121 23:09:17.953" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.944" endtime="20241121 23:09:17.953"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.953" endtime="20241121 23:09:17.953"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.943" endtime="20241121 23:09:17.953"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:17.953" endtime="20241121 23:09:17.953"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:17.953" endtime="20241121 23:09:17.953"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.943" endtime="20241121 23:09:17.953"/>
</try>
<msg timestamp="20241121 23:09:17.954" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.942" endtime="20241121 23:09:17.954"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.956" endtime="20241121 23:09:17.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.957" endtime="20241121 23:09:17.957"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.956" endtime="20241121 23:09:17.957"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.956" endtime="20241121 23:09:17.957"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.955" endtime="20241121 23:09:17.957"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.942" endtime="20241121 23:09:17.957"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:17.970" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:09:17.970" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:17.958" endtime="20241121 23:09:17.970"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:17.970" endtime="20241121 23:09:17.970"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.957" endtime="20241121 23:09:17.970"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.971" endtime="20241121 23:09:17.971"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.971" endtime="20241121 23:09:17.971"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.970" endtime="20241121 23:09:17.971"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.957" endtime="20241121 23:09:17.971"/>
</try>
<msg timestamp="20241121 23:09:17.971" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:17.940" endtime="20241121 23:09:17.972"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.974" endtime="20241121 23:09:17.974"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.974" endtime="20241121 23:09:17.974"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.974" endtime="20241121 23:09:17.974"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.974" endtime="20241121 23:09:17.975"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.973" endtime="20241121 23:09:17.975"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.939" endtime="20241121 23:09:17.975"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.975" endtime="20241121 23:09:17.975"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.975" endtime="20241121 23:09:17.975"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.939" endtime="20241121 23:09:17.975"/>
</try>
<status status="PASS" starttime="20241121 23:09:17.938" endtime="20241121 23:09:17.975"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:17.987" level="INFO">Waited for Element with selector id=username at state visible</msg>
<status status="PASS" starttime="20241121 23:09:17.980" endtime="20241121 23:09:17.987"/>
</kw>
<msg timestamp="20241121 23:09:17.987" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.980" endtime="20241121 23:09:17.987"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.987" endtime="20241121 23:09:17.988"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.979" endtime="20241121 23:09:17.988"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.988" endtime="20241121 23:09:17.988"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.988" endtime="20241121 23:09:17.988"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.988" endtime="20241121 23:09:17.988"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.979" endtime="20241121 23:09:17.989"/>
</try>
<msg timestamp="20241121 23:09:17.989" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.979" endtime="20241121 23:09:17.989"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:17.989" endtime="20241121 23:09:17.989"/>
</return>
<msg timestamp="20241121 23:09:17.989" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.978" endtime="20241121 23:09:17.989"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.992" endtime="20241121 23:09:17.992"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:17.992" endtime="20241121 23:09:17.992"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:17.992" endtime="20241121 23:09:17.992"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.991" endtime="20241121 23:09:17.992"/>
</if>
<status status="PASS" starttime="20241121 23:09:17.990" endtime="20241121 23:09:17.992"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.977" endtime="20241121 23:09:17.992"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.919" endtime="20241121 23:09:17.993"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:18.005" level="INFO">Waited for Element with selector id=username at state attached</msg>
<status status="PASS" starttime="20241121 23:09:17.999" endtime="20241121 23:09:18.005"/>
</kw>
<msg timestamp="20241121 23:09:18.005" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.998" endtime="20241121 23:09:18.005"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:18.005" endtime="20241121 23:09:18.005"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.998" endtime="20241121 23:09:18.005"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.006" endtime="20241121 23:09:18.006"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.006" endtime="20241121 23:09:18.006"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.005" endtime="20241121 23:09:18.006"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.998" endtime="20241121 23:09:18.006"/>
</try>
<msg timestamp="20241121 23:09:18.006" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.998" endtime="20241121 23:09:18.006"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:18.007" endtime="20241121 23:09:18.007"/>
</return>
<status status="PASS" starttime="20241121 23:09:17.997" endtime="20241121 23:09:18.007"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:18.007" endtime="20241121 23:09:18.007"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:18.007" endtime="20241121 23:09:18.007"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.997" endtime="20241121 23:09:18.007"/>
</try>
<msg timestamp="20241121 23:09:18.007" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:17.996" endtime="20241121 23:09:18.007"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.010" endtime="20241121 23:09:18.010"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.010" endtime="20241121 23:09:18.010"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.010" endtime="20241121 23:09:18.010"/>
</branch>
<status status="PASS" starttime="20241121 23:09:18.010" endtime="20241121 23:09:18.010"/>
</if>
<status status="PASS" starttime="20241121 23:09:18.009" endtime="20241121 23:09:18.011"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.996" endtime="20241121 23:09:18.011"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:18.022" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241121 23:09:18.022" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:09:18.011" endtime="20241121 23:09:18.022"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:18.022" endtime="20241121 23:09:18.022"/>
</return>
<status status="PASS" starttime="20241121 23:09:18.011" endtime="20241121 23:09:18.022"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.023" endtime="20241121 23:09:18.023"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.023" endtime="20241121 23:09:18.023"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.022" endtime="20241121 23:09:18.023"/>
</branch>
<status status="PASS" starttime="20241121 23:09:18.011" endtime="20241121 23:09:18.023"/>
</try>
<msg timestamp="20241121 23:09:18.024" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:09:17.994" endtime="20241121 23:09:18.024"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:09:18.024" endtime="20241121 23:09:18.024"/>
</return>
<msg timestamp="20241121 23:09:18.024" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241121 23:09:17.919" endtime="20241121 23:09:18.024"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:09:18.032" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:18.026" endtime="20241121 23:09:18.032"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:18.032" endtime="20241121 23:09:18.032"/>
</return>
<msg timestamp="20241121 23:09:18.033" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:09:18.026" endtime="20241121 23:09:18.033"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.037" endtime="20241121 23:09:18.037"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.037" endtime="20241121 23:09:18.037"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.036" endtime="20241121 23:09:18.037"/>
</branch>
<status status="PASS" starttime="20241121 23:09:18.036" endtime="20241121 23:09:18.037"/>
</if>
<status status="PASS" starttime="20241121 23:09:18.035" endtime="20241121 23:09:18.037"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.918" endtime="20241121 23:09:18.037"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.879" endtime="20241121 23:09:18.038"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.878" endtime="20241121 23:09:18.038"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.878" endtime="20241121 23:09:18.038"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.038" endtime="20241121 23:09:18.038"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.038" endtime="20241121 23:09:18.038"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.878" endtime="20241121 23:09:18.038"/>
</try>
<status status="PASS" starttime="20241121 23:09:17.734" endtime="20241121 23:09:18.039"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.732" endtime="20241121 23:09:18.039"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.040" endtime="20241121 23:09:18.040"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.039" endtime="20241121 23:09:18.040"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.041" endtime="20241121 23:09:18.041"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.041" endtime="20241121 23:09:18.041"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.041" endtime="20241121 23:09:18.042"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.042" endtime="20241121 23:09:18.042"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.042" endtime="20241121 23:09:18.042"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:18.041" endtime="20241121 23:09:18.042"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:18.040" endtime="20241121 23:09:18.042"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:18.047" endtime="20241121 23:09:18.047"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.050" endtime="20241121 23:09:18.050"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.042" endtime="20241121 23:09:18.050"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.051" endtime="20241121 23:09:18.051"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.051" endtime="20241121 23:09:18.051"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.051" endtime="20241121 23:09:18.052"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.052" endtime="20241121 23:09:18.052"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.052" endtime="20241121 23:09:18.052"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:18.051" endtime="20241121 23:09:18.052"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:18.050" endtime="20241121 23:09:18.052"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:18.057" endtime="20241121 23:09:18.057"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.059" endtime="20241121 23:09:18.059"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.052" endtime="20241121 23:09:18.060"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.061" endtime="20241121 23:09:18.061"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.060" endtime="20241121 23:09:18.061"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.063" endtime="20241121 23:09:18.063"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.061" endtime="20241121 23:09:18.063"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:18.068" endtime="20241121 23:09:18.068"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:18.068" endtime="20241121 23:09:18.068"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:18.063" endtime="20241121 23:09:18.069"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.709" endtime="20241121 23:09:18.069"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:18.069" endtime="20241121 23:09:18.069"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:19.080" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:09:18.070" endtime="20241121 23:09:19.080"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.706" endtime="20241121 23:09:19.080"/>
</kw>
<status status="PASS" starttime="20241121 23:09:17.706" endtime="20241121 23:09:19.080"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.081" endtime="20241121 23:09:19.081"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.080" endtime="20241121 23:09:19.081"/>
</branch>
<status status="PASS" starttime="20241121 23:09:17.706" endtime="20241121 23:09:19.081"/>
</try>
<status status="PASS" starttime="20241121 23:09:17.698" endtime="20241121 23:09:19.081"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '43', 'actionId': '30', 'flowId': '14', 'order': 2, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '30', 'name': 'Set login password', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:19.082" level="INFO">${action} = {'id': '30', 'name': 'Set login password', 'type': 'TYPE_TEXT', 'xpath': '//input[@id="password"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:39:54.768Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:09:19.081" endtime="20241121 23:09:19.082"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:19.082" endtime="20241121 23:09:19.083"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:19.084" level="INFO">${input} = {'id': '27', 'actionId': '30', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '1', 'isDefault': True, 'createdAt': '2024-11-21T16:39:55.091Z', 'updatedAt': '2024-11-21T17:23:21.466Z'}</msg>
<status status="PASS" starttime="20241121 23:09:19.084" endtime="20241121 23:09:19.084"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.085" endtime="20241121 23:09:19.085"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.085" endtime="20241121 23:09:19.085"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.084" endtime="20241121 23:09:19.085"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.084" endtime="20241121 23:09:19.085"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:19.086" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:09:19.086" endtime="20241121 23:09:19.086"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:19.087" endtime="20241121 23:09:19.087"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.087" endtime="20241121 23:09:19.087"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.087" endtime="20241121 23:09:19.088"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.087" endtime="20241121 23:09:19.088"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.090" endtime="20241121 23:09:19.090"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.088" endtime="20241121 23:09:19.090"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.093" endtime="20241121 23:09:19.093"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.095" endtime="20241121 23:09:19.095"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.091" endtime="20241121 23:09:19.096"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.098" endtime="20241121 23:09:19.098"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.096" endtime="20241121 23:09:19.098"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.103" endtime="20241121 23:09:19.104"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.099" endtime="20241121 23:09:19.104"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.126" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:19.118" endtime="20241121 23:09:19.126"/>
</kw>
<msg timestamp="20241121 23:09:19.126" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.118" endtime="20241121 23:09:19.126"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.127" endtime="20241121 23:09:19.127"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.118" endtime="20241121 23:09:19.127"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.127" endtime="20241121 23:09:19.127"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.128" endtime="20241121 23:09:19.128"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.127" endtime="20241121 23:09:19.128"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.117" endtime="20241121 23:09:19.128"/>
</try>
<msg timestamp="20241121 23:09:19.128" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.117" endtime="20241121 23:09:19.128"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.129" endtime="20241121 23:09:19.129"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.116" endtime="20241121 23:09:19.129"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:19.129" endtime="20241121 23:09:19.129"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:19.129" endtime="20241121 23:09:19.129"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.115" endtime="20241121 23:09:19.129"/>
</try>
<msg timestamp="20241121 23:09:19.130" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.115" endtime="20241121 23:09:19.130"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.134" endtime="20241121 23:09:19.134"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.134" endtime="20241121 23:09:19.134"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.134" endtime="20241121 23:09:19.134"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.133" endtime="20241121 23:09:19.134"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.131" endtime="20241121 23:09:19.135"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.114" endtime="20241121 23:09:19.135"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.156" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:19.150" endtime="20241121 23:09:19.157"/>
</kw>
<msg timestamp="20241121 23:09:19.157" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.149" endtime="20241121 23:09:19.157"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.157" endtime="20241121 23:09:19.157"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.149" endtime="20241121 23:09:19.157"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.158" endtime="20241121 23:09:19.158"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.158" endtime="20241121 23:09:19.158"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.157" endtime="20241121 23:09:19.158"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.148" endtime="20241121 23:09:19.158"/>
</try>
<msg timestamp="20241121 23:09:19.159" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.147" endtime="20241121 23:09:19.159"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.159" endtime="20241121 23:09:19.159"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.145" endtime="20241121 23:09:19.159"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:19.159" endtime="20241121 23:09:19.159"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:19.159" endtime="20241121 23:09:19.160"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.145" endtime="20241121 23:09:19.160"/>
</try>
<msg timestamp="20241121 23:09:19.160" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.144" endtime="20241121 23:09:19.160"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.163" endtime="20241121 23:09:19.163"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.163" endtime="20241121 23:09:19.163"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.163" endtime="20241121 23:09:19.163"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.162" endtime="20241121 23:09:19.163"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.161" endtime="20241121 23:09:19.164"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.143" endtime="20241121 23:09:19.164"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:19.177" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:09:19.177" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:19.164" endtime="20241121 23:09:19.177"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:19.177" endtime="20241121 23:09:19.177"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.164" endtime="20241121 23:09:19.178"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.178" endtime="20241121 23:09:19.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.178" endtime="20241121 23:09:19.178"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.178" endtime="20241121 23:09:19.178"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.164" endtime="20241121 23:09:19.179"/>
</try>
<msg timestamp="20241121 23:09:19.179" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:19.140" endtime="20241121 23:09:19.179"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.182" endtime="20241121 23:09:19.182"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.182" endtime="20241121 23:09:19.182"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.182" endtime="20241121 23:09:19.182"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.181" endtime="20241121 23:09:19.182"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.180" endtime="20241121 23:09:19.183"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.138" endtime="20241121 23:09:19.183"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.183" endtime="20241121 23:09:19.183"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.183" endtime="20241121 23:09:19.183"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.138" endtime="20241121 23:09:19.184"/>
</try>
<status status="PASS" starttime="20241121 23:09:19.137" endtime="20241121 23:09:19.184"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.197" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:09:19.190" endtime="20241121 23:09:19.197"/>
</kw>
<msg timestamp="20241121 23:09:19.197" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.189" endtime="20241121 23:09:19.197"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.198" endtime="20241121 23:09:19.198"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.189" endtime="20241121 23:09:19.198"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.198" endtime="20241121 23:09:19.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.198" endtime="20241121 23:09:19.199"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.198" endtime="20241121 23:09:19.199"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.189" endtime="20241121 23:09:19.199"/>
</try>
<msg timestamp="20241121 23:09:19.199" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.188" endtime="20241121 23:09:19.199"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.199" endtime="20241121 23:09:19.199"/>
</return>
<msg timestamp="20241121 23:09:19.200" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.187" endtime="20241121 23:09:19.200"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.203" endtime="20241121 23:09:19.203"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.203" endtime="20241121 23:09:19.203"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.202" endtime="20241121 23:09:19.203"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.202" endtime="20241121 23:09:19.203"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.201" endtime="20241121 23:09:19.204"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.186" endtime="20241121 23:09:19.204"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.110" endtime="20241121 23:09:19.204"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.226" level="INFO">Waited for Element with selector //input[@id="password"] at state editable</msg>
<status status="PASS" starttime="20241121 23:09:19.212" endtime="20241121 23:09:19.226"/>
</kw>
<msg timestamp="20241121 23:09:19.226" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.211" endtime="20241121 23:09:19.226"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.226" endtime="20241121 23:09:19.226"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.211" endtime="20241121 23:09:19.227"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.227" endtime="20241121 23:09:19.227"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.227" endtime="20241121 23:09:19.227"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.227" endtime="20241121 23:09:19.228"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.211" endtime="20241121 23:09:19.228"/>
</try>
<msg timestamp="20241121 23:09:19.228" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.211" endtime="20241121 23:09:19.228"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.228" endtime="20241121 23:09:19.228"/>
</return>
<msg timestamp="20241121 23:09:19.229" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.206" endtime="20241121 23:09:19.229"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.232" endtime="20241121 23:09:19.232"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.233" endtime="20241121 23:09:19.233"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.232" endtime="20241121 23:09:19.233"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.232" endtime="20241121 23:09:19.233"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.231" endtime="20241121 23:09:19.233"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.206" endtime="20241121 23:09:19.233"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:09:19.234" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:09:19.233" endtime="20241121 23:09:19.234"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.236" endtime="20241121 23:09:19.236"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.239" endtime="20241121 23:09:19.239"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.236" endtime="20241121 23:09:19.239"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:19.239" endtime="20241121 23:09:19.239"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.239" endtime="20241121 23:09:19.240"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.236" endtime="20241121 23:09:19.240"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241121 23:09:19.241" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241121 23:09:19.240" endtime="20241121 23:09:19.268"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.240" endtime="20241121 23:09:19.268"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.269" endtime="20241121 23:09:19.269"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.269" endtime="20241121 23:09:19.269"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.269" endtime="20241121 23:09:19.269"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.240" endtime="20241121 23:09:19.269"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="password"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.285" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:19.278" endtime="20241121 23:09:19.285"/>
</kw>
<msg timestamp="20241121 23:09:19.286" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.278" endtime="20241121 23:09:19.286"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.286" endtime="20241121 23:09:19.286"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.277" endtime="20241121 23:09:19.286"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.287" endtime="20241121 23:09:19.287"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.287" endtime="20241121 23:09:19.287"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.286" endtime="20241121 23:09:19.287"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.277" endtime="20241121 23:09:19.287"/>
</try>
<msg timestamp="20241121 23:09:19.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.277" endtime="20241121 23:09:19.288"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.288" endtime="20241121 23:09:19.288"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.275" endtime="20241121 23:09:19.288"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:19.288" endtime="20241121 23:09:19.288"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:19.288" endtime="20241121 23:09:19.288"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.275" endtime="20241121 23:09:19.288"/>
</try>
<msg timestamp="20241121 23:09:19.289" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.275" endtime="20241121 23:09:19.289"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.292" endtime="20241121 23:09:19.293"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.293" endtime="20241121 23:09:19.293"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.292" endtime="20241121 23:09:19.293"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.292" endtime="20241121 23:09:19.293"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.290" endtime="20241121 23:09:19.293"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.274" endtime="20241121 23:09:19.293"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.312" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:19.304" endtime="20241121 23:09:19.312"/>
</kw>
<msg timestamp="20241121 23:09:19.312" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.304" endtime="20241121 23:09:19.313"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.313" endtime="20241121 23:09:19.313"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.303" endtime="20241121 23:09:19.313"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.313" endtime="20241121 23:09:19.313"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.314" endtime="20241121 23:09:19.314"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.313" endtime="20241121 23:09:19.314"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.303" endtime="20241121 23:09:19.314"/>
</try>
<msg timestamp="20241121 23:09:19.314" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.303" endtime="20241121 23:09:19.314"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.315" endtime="20241121 23:09:19.315"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.302" endtime="20241121 23:09:19.315"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:19.315" endtime="20241121 23:09:19.315"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:19.315" endtime="20241121 23:09:19.315"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.301" endtime="20241121 23:09:19.315"/>
</try>
<msg timestamp="20241121 23:09:19.316" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.301" endtime="20241121 23:09:19.316"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.319" endtime="20241121 23:09:19.319"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.319" endtime="20241121 23:09:19.319"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.319" endtime="20241121 23:09:19.320"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.318" endtime="20241121 23:09:19.320"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.317" endtime="20241121 23:09:19.320"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.300" endtime="20241121 23:09:19.320"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:19.334" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241121 23:09:19.334" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:19.321" endtime="20241121 23:09:19.334"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:19.334" endtime="20241121 23:09:19.334"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.320" endtime="20241121 23:09:19.334"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.336" endtime="20241121 23:09:19.336"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.336" endtime="20241121 23:09:19.336"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.336" endtime="20241121 23:09:19.336"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.320" endtime="20241121 23:09:19.336"/>
</try>
<msg timestamp="20241121 23:09:19.337" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241121 23:09:19.298" endtime="20241121 23:09:19.337"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.339" endtime="20241121 23:09:19.339"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.339" endtime="20241121 23:09:19.340"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.339" endtime="20241121 23:09:19.340"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.339" endtime="20241121 23:09:19.340"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.337" endtime="20241121 23:09:19.340"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.296" endtime="20241121 23:09:19.340"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.340" endtime="20241121 23:09:19.341"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.340" endtime="20241121 23:09:19.341"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.296" endtime="20241121 23:09:19.341"/>
</try>
<status status="PASS" starttime="20241121 23:09:19.296" endtime="20241121 23:09:19.341"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.354" level="INFO">Waited for Element with selector //input[@id="password"] at state visible</msg>
<status status="PASS" starttime="20241121 23:09:19.347" endtime="20241121 23:09:19.354"/>
</kw>
<msg timestamp="20241121 23:09:19.354" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.346" endtime="20241121 23:09:19.354"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.354" endtime="20241121 23:09:19.355"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.346" endtime="20241121 23:09:19.355"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.355" endtime="20241121 23:09:19.355"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.355" endtime="20241121 23:09:19.355"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.355" endtime="20241121 23:09:19.356"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.346" endtime="20241121 23:09:19.356"/>
</try>
<msg timestamp="20241121 23:09:19.356" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.346" endtime="20241121 23:09:19.356"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.356" endtime="20241121 23:09:19.356"/>
</return>
<msg timestamp="20241121 23:09:19.356" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.344" endtime="20241121 23:09:19.356"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.359" endtime="20241121 23:09:19.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.360" endtime="20241121 23:09:19.360"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.359" endtime="20241121 23:09:19.360"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.359" endtime="20241121 23:09:19.360"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.358" endtime="20241121 23:09:19.360"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.343" endtime="20241121 23:09:19.360"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.271" endtime="20241121 23:09:19.360"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:19.374" level="INFO">Waited for Element with selector //input[@id="password"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:19.367" endtime="20241121 23:09:19.374"/>
</kw>
<msg timestamp="20241121 23:09:19.374" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.367" endtime="20241121 23:09:19.375"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.375" endtime="20241121 23:09:19.375"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.367" endtime="20241121 23:09:19.375"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.375" endtime="20241121 23:09:19.375"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.376" endtime="20241121 23:09:19.376"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.375" endtime="20241121 23:09:19.376"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.366" endtime="20241121 23:09:19.376"/>
</try>
<msg timestamp="20241121 23:09:19.376" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.366" endtime="20241121 23:09:19.376"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.376" endtime="20241121 23:09:19.376"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.365" endtime="20241121 23:09:19.377"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:19.377" endtime="20241121 23:09:19.377"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:19.377" endtime="20241121 23:09:19.377"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.365" endtime="20241121 23:09:19.377"/>
</try>
<msg timestamp="20241121 23:09:19.377" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.364" endtime="20241121 23:09:19.377"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.380" endtime="20241121 23:09:19.380"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.381" endtime="20241121 23:09:19.381"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.380" endtime="20241121 23:09:19.381"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.380" endtime="20241121 23:09:19.381"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.379" endtime="20241121 23:09:19.381"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.364" endtime="20241121 23:09:19.381"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241121 23:09:19.393" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241121 23:09:19.393" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:09:19.382" endtime="20241121 23:09:19.393"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241121 23:09:19.393" endtime="20241121 23:09:19.394"/>
</return>
<status status="PASS" starttime="20241121 23:09:19.381" endtime="20241121 23:09:19.394"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.394" endtime="20241121 23:09:19.394"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.394" endtime="20241121 23:09:19.394"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.394" endtime="20241121 23:09:19.394"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.381" endtime="20241121 23:09:19.395"/>
</try>
<msg timestamp="20241121 23:09:19.395" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:09:19.362" endtime="20241121 23:09:19.395"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241121 23:09:19.395" endtime="20241121 23:09:19.395"/>
</return>
<msg timestamp="20241121 23:09:19.395" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241121 23:09:19.271" endtime="20241121 23:09:19.395"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241121 23:09:19.402" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.398" endtime="20241121 23:09:19.403"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:19.403" endtime="20241121 23:09:19.403"/>
</return>
<msg timestamp="20241121 23:09:19.403" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241121 23:09:19.398" endtime="20241121 23:09:19.403"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.408" endtime="20241121 23:09:19.408"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.408" endtime="20241121 23:09:19.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.408" endtime="20241121 23:09:19.408"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.407" endtime="20241121 23:09:19.408"/>
</if>
<status status="PASS" starttime="20241121 23:09:19.406" endtime="20241121 23:09:19.409"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.270" endtime="20241121 23:09:19.409"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.235" endtime="20241121 23:09:19.409"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.234" endtime="20241121 23:09:19.409"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.234" endtime="20241121 23:09:19.409"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.410" endtime="20241121 23:09:19.411"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.409" endtime="20241121 23:09:19.411"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.234" endtime="20241121 23:09:19.411"/>
</try>
<status status="PASS" starttime="20241121 23:09:19.108" endtime="20241121 23:09:19.411"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.104" endtime="20241121 23:09:19.411"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.412" endtime="20241121 23:09:19.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.411" endtime="20241121 23:09:19.412"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.414" endtime="20241121 23:09:19.414"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.414" endtime="20241121 23:09:19.414"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.414" endtime="20241121 23:09:19.414"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.415" endtime="20241121 23:09:19.415"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.415" endtime="20241121 23:09:19.415"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:19.414" endtime="20241121 23:09:19.415"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:19.413" endtime="20241121 23:09:19.415"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:19.421" endtime="20241121 23:09:19.421"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.424" endtime="20241121 23:09:19.425"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.415" endtime="20241121 23:09:19.425"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.426" endtime="20241121 23:09:19.426"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.426" endtime="20241121 23:09:19.426"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.426" endtime="20241121 23:09:19.426"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.427" endtime="20241121 23:09:19.427"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.427" endtime="20241121 23:09:19.427"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:19.426" endtime="20241121 23:09:19.427"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:19.425" endtime="20241121 23:09:19.427"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:19.432" endtime="20241121 23:09:19.432"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.435" endtime="20241121 23:09:19.435"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.427" endtime="20241121 23:09:19.435"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.437" endtime="20241121 23:09:19.437"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.435" endtime="20241121 23:09:19.437"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.439" endtime="20241121 23:09:19.440"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.437" endtime="20241121 23:09:19.440"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:19.446" endtime="20241121 23:09:19.446"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:19.446" endtime="20241121 23:09:19.446"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:19.440" endtime="20241121 23:09:19.447"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.086" endtime="20241121 23:09:19.447"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:19.447" endtime="20241121 23:09:19.448"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:20.455" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20241121 23:09:19.448" endtime="20241121 23:09:20.455"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.085" endtime="20241121 23:09:20.455"/>
</kw>
<status status="PASS" starttime="20241121 23:09:19.085" endtime="20241121 23:09:20.455"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.456" endtime="20241121 23:09:20.456"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.455" endtime="20241121 23:09:20.456"/>
</branch>
<status status="PASS" starttime="20241121 23:09:19.085" endtime="20241121 23:09:20.456"/>
</try>
<status status="PASS" starttime="20241121 23:09:19.081" endtime="20241121 23:09:20.456"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '44', 'actionId': '31', 'flowId': '14', 'order': 3, 'createdAt': '2024-11-21T16:43:09.646Z', 'updatedAt': '2024-11-21T16:43:09.646Z', 'action': {'id': '31', 'name': 'Click login button', 'type'...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:20.457" level="INFO">${action} = {'id': '31', 'name': 'Click login button', 'type': 'CLICK', 'xpath': '//button[@type="submit" and text()="Login"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T16:41:25.179Z', 'updated...</msg>
<status status="PASS" starttime="20241121 23:09:20.456" endtime="20241121 23:09:20.457"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:20.457" endtime="20241121 23:09:20.458"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:20.458" level="INFO">${input} = {'id': '28', 'actionId': '31', 'name': 'Input 01', 'value': '', 'waitAfterAction': '5', 'isDefault': True, 'createdAt': '2024-11-21T16:41:25.706Z', 'updatedAt': '2024-11-21T17:38:31.563Z'}</msg>
<status status="PASS" starttime="20241121 23:09:20.458" endtime="20241121 23:09:20.458"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.459" endtime="20241121 23:09:20.459"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.459" endtime="20241121 23:09:20.459"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.458" endtime="20241121 23:09:20.459"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.458" endtime="20241121 23:09:20.459"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:20.460" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:09:20.460" endtime="20241121 23:09:20.460"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:20.461" endtime="20241121 23:09:20.461"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.461" endtime="20241121 23:09:20.461"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.461" endtime="20241121 23:09:20.461"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.461" endtime="20241121 23:09:20.461"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:20.477" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:20.470" endtime="20241121 23:09:20.477"/>
</kw>
<msg timestamp="20241121 23:09:20.477" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.469" endtime="20241121 23:09:20.478"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.478" endtime="20241121 23:09:20.478"/>
</return>
<status status="PASS" starttime="20241121 23:09:20.469" endtime="20241121 23:09:20.478"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.478" endtime="20241121 23:09:20.478"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.478" endtime="20241121 23:09:20.478"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.478" endtime="20241121 23:09:20.479"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.469" endtime="20241121 23:09:20.479"/>
</try>
<msg timestamp="20241121 23:09:20.479" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.469" endtime="20241121 23:09:20.479"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.479" endtime="20241121 23:09:20.479"/>
</return>
<status status="PASS" starttime="20241121 23:09:20.468" endtime="20241121 23:09:20.479"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:20.479" endtime="20241121 23:09:20.479"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:20.479" endtime="20241121 23:09:20.479"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.467" endtime="20241121 23:09:20.480"/>
</try>
<msg timestamp="20241121 23:09:20.480" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.467" endtime="20241121 23:09:20.480"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.482" endtime="20241121 23:09:20.482"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.483" endtime="20241121 23:09:20.483"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.482" endtime="20241121 23:09:20.483"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.482" endtime="20241121 23:09:20.483"/>
</if>
<status status="PASS" starttime="20241121 23:09:20.481" endtime="20241121 23:09:20.483"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.467" endtime="20241121 23:09:20.483"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:20.496" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241121 23:09:20.490" endtime="20241121 23:09:20.496"/>
</kw>
<msg timestamp="20241121 23:09:20.496" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.489" endtime="20241121 23:09:20.496"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.496" endtime="20241121 23:09:20.497"/>
</return>
<status status="PASS" starttime="20241121 23:09:20.489" endtime="20241121 23:09:20.497"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.497" endtime="20241121 23:09:20.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.497" endtime="20241121 23:09:20.497"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.497" endtime="20241121 23:09:20.498"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.489" endtime="20241121 23:09:20.498"/>
</try>
<msg timestamp="20241121 23:09:20.498" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.489" endtime="20241121 23:09:20.498"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.498" endtime="20241121 23:09:20.498"/>
</return>
<msg timestamp="20241121 23:09:20.498" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.487" endtime="20241121 23:09:20.498"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.501" endtime="20241121 23:09:20.501"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.501" endtime="20241121 23:09:20.501"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.501" endtime="20241121 23:09:20.501"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.501" endtime="20241121 23:09:20.501"/>
</if>
<status status="PASS" starttime="20241121 23:09:20.500" endtime="20241121 23:09:20.502"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.486" endtime="20241121 23:09:20.502"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:20.523" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:09:20.508" endtime="20241121 23:09:20.523"/>
</kw>
<msg timestamp="20241121 23:09:20.524" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.507" endtime="20241121 23:09:20.524"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.524" endtime="20241121 23:09:20.524"/>
</return>
<status status="PASS" starttime="20241121 23:09:20.507" endtime="20241121 23:09:20.524"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.525" endtime="20241121 23:09:20.525"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.525" endtime="20241121 23:09:20.525"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.525" endtime="20241121 23:09:20.525"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.506" endtime="20241121 23:09:20.525"/>
</try>
<msg timestamp="20241121 23:09:20.526" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.506" endtime="20241121 23:09:20.526"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:20.526" endtime="20241121 23:09:20.526"/>
</return>
<msg timestamp="20241121 23:09:20.526" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:09:20.504" endtime="20241121 23:09:20.526"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.529" endtime="20241121 23:09:20.529"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.529" endtime="20241121 23:09:20.529"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.528" endtime="20241121 23:09:20.529"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.528" endtime="20241121 23:09:20.529"/>
</if>
<status status="PASS" starttime="20241121 23:09:20.527" endtime="20241121 23:09:20.529"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.504" endtime="20241121 23:09:20.530"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.465" endtime="20241121 23:09:20.530"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:09:20.530" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:09:20.530" endtime="20241121 23:09:20.530"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.532" endtime="20241121 23:09:20.532"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.532" endtime="20241121 23:09:20.532"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:20.533" endtime="20241121 23:09:20.533"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.532" endtime="20241121 23:09:20.533"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.532" endtime="20241121 23:09:20.533"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:09:20.534" endtime="20241121 23:09:20.584"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.533" endtime="20241121 23:09:20.584"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.585" endtime="20241121 23:09:20.585"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.585" endtime="20241121 23:09:20.585"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.584" endtime="20241121 23:09:20.585"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.533" endtime="20241121 23:09:20.585"/>
</try>
<status status="PASS" starttime="20241121 23:09:20.531" endtime="20241121 23:09:20.586"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.531" endtime="20241121 23:09:20.586"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.530" endtime="20241121 23:09:20.586"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.586" endtime="20241121 23:09:20.586"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.586" endtime="20241121 23:09:20.586"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.530" endtime="20241121 23:09:20.586"/>
</try>
<status status="PASS" starttime="20241121 23:09:20.464" endtime="20241121 23:09:20.587"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.462" endtime="20241121 23:09:20.587"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.589" endtime="20241121 23:09:20.589"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.591" endtime="20241121 23:09:20.591"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.587" endtime="20241121 23:09:20.591"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.593" endtime="20241121 23:09:20.593"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.591" endtime="20241121 23:09:20.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.596" endtime="20241121 23:09:20.596"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.593" endtime="20241121 23:09:20.596"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.599" endtime="20241121 23:09:20.599"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.596" endtime="20241121 23:09:20.599"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.600" endtime="20241121 23:09:20.600"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.599" endtime="20241121 23:09:20.600"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.602" endtime="20241121 23:09:20.602"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.602" endtime="20241121 23:09:20.602"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.602" endtime="20241121 23:09:20.602"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.603" endtime="20241121 23:09:20.603"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.602" endtime="20241121 23:09:20.603"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:20.602" endtime="20241121 23:09:20.603"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:20.600" endtime="20241121 23:09:20.603"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:20.612" endtime="20241121 23:09:20.613"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.616" endtime="20241121 23:09:20.617"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.603" endtime="20241121 23:09:20.617"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.618" endtime="20241121 23:09:20.618"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.619" endtime="20241121 23:09:20.619"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.618" endtime="20241121 23:09:20.619"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.619" endtime="20241121 23:09:20.619"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.619" endtime="20241121 23:09:20.619"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:20.618" endtime="20241121 23:09:20.619"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:20.617" endtime="20241121 23:09:20.620"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:20.626" endtime="20241121 23:09:20.626"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.630" endtime="20241121 23:09:20.630"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.620" endtime="20241121 23:09:20.630"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.631" endtime="20241121 23:09:20.632"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.630" endtime="20241121 23:09:20.632"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.634" endtime="20241121 23:09:20.634"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.632" endtime="20241121 23:09:20.634"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:20.641" endtime="20241121 23:09:20.641"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:20.642" endtime="20241121 23:09:20.642"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:20.634" endtime="20241121 23:09:20.642"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.460" endtime="20241121 23:09:20.642"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:20.642" endtime="20241121 23:09:20.643"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:25.655" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20241121 23:09:20.643" endtime="20241121 23:09:25.656"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.459" endtime="20241121 23:09:25.657"/>
</kw>
<status status="PASS" starttime="20241121 23:09:20.459" endtime="20241121 23:09:25.657"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.658" endtime="20241121 23:09:25.659"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.658" endtime="20241121 23:09:25.660"/>
</branch>
<status status="PASS" starttime="20241121 23:09:20.459" endtime="20241121 23:09:25.660"/>
</try>
<status status="PASS" starttime="20241121 23:09:20.456" endtime="20241121 23:09:25.660"/>
</iter>
<status status="PASS" starttime="20241121 23:09:08.330" endtime="20241121 23:09:25.661"/>
</for>
<status status="PASS" starttime="20241121 23:09:08.330" endtime="20241121 23:09:25.661"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.329" endtime="20241121 23:09:25.662"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.313" endtime="20241121 23:09:25.662"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '47', 'testCaseId': '27', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:46.435Z', 'updatedAt': '2024-11-21T17:34:46.435Z', 'flow': {'id': '15', 'name': 'Navigate to profile', 'proj...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.665" level="INFO">${flow} = {'id': '15', 'name': 'Navigate to profile', 'projectId': '4', 'createdAt': '2024-11-21T17:34:26.845Z', 'updatedAt': '2024-11-21T17:34:26.845Z', 'flowActionSequences': [{'id': '45', 'actionId': '32', '...</msg>
<status status="PASS" starttime="20241121 23:09:25.663" endtime="20241121 23:09:25.665"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:25.666" endtime="20241121 23:09:25.667"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:25.678" endtime="20241121 23:09:25.679"/>
</kw>
<msg timestamp="20241121 23:09:25.680" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.677" endtime="20241121 23:09:25.680"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.683" level="INFO">${values} = [{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon',...</msg>
<status status="PASS" starttime="20241121 23:09:25.681" endtime="20241121 23:09:25.683"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.686" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.685" endtime="20241121 23:09:25.686"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.684" endtime="20241121 23:09:25.686"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.687" endtime="20241121 23:09:25.687"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.687" endtime="20241121 23:09:25.688"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.683" endtime="20241121 23:09:25.688"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.681" endtime="20241121 23:09:25.688"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.680" endtime="20241121 23:09:25.689"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241121 23:09:25.689" endtime="20241121 23:09:25.689"/>
</return>
<msg timestamp="20241121 23:09:25.692" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.675" endtime="20241121 23:09:25.692"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '45', 'actionId': '32', 'flowId': '15', 'order': 0, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '32', 'name': 'Click Profile image icon', ...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.696" level="INFO">${action} = {'id': '32', 'name': 'Click Profile image icon', 'type': 'CLICK', 'xpath': 'id=headerProfileImage', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:30:46.836Z', 'updatedAt': '2024-11-21...</msg>
<status status="PASS" starttime="20241121 23:09:25.695" endtime="20241121 23:09:25.696"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:25.697" endtime="20241121 23:09:25.699"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:25.701" level="INFO">${input} = {'id': '29', 'actionId': '32', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:30:47.048Z', 'updatedAt': '2024-11-21T17:30:47.048Z'}</msg>
<status status="PASS" starttime="20241121 23:09:25.700" endtime="20241121 23:09:25.702"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.704" endtime="20241121 23:09:25.704"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.705" endtime="20241121 23:09:25.706"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.703" endtime="20241121 23:09:25.706"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.702" endtime="20241121 23:09:25.707"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.712" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:09:25.711" endtime="20241121 23:09:25.712"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:25.714" endtime="20241121 23:09:25.715"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.714" endtime="20241121 23:09:25.715"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.717" endtime="20241121 23:09:25.717"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.716" endtime="20241121 23:09:25.718"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.740" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241121 23:09:25.732" endtime="20241121 23:09:25.741"/>
</kw>
<msg timestamp="20241121 23:09:25.741" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.732" endtime="20241121 23:09:25.741"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.741" endtime="20241121 23:09:25.741"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.732" endtime="20241121 23:09:25.741"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.741" endtime="20241121 23:09:25.741"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.742" endtime="20241121 23:09:25.742"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.741" endtime="20241121 23:09:25.742"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.732" endtime="20241121 23:09:25.742"/>
</try>
<msg timestamp="20241121 23:09:25.742" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.731" endtime="20241121 23:09:25.742"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.742" endtime="20241121 23:09:25.742"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.730" endtime="20241121 23:09:25.742"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:25.743" endtime="20241121 23:09:25.743"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:25.743" endtime="20241121 23:09:25.743"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.730" endtime="20241121 23:09:25.743"/>
</try>
<msg timestamp="20241121 23:09:25.743" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.729" endtime="20241121 23:09:25.743"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.746" endtime="20241121 23:09:25.746"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.746" endtime="20241121 23:09:25.746"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.745" endtime="20241121 23:09:25.746"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.745" endtime="20241121 23:09:25.746"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.744" endtime="20241121 23:09:25.746"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.729" endtime="20241121 23:09:25.746"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.759" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241121 23:09:25.751" endtime="20241121 23:09:25.759"/>
</kw>
<msg timestamp="20241121 23:09:25.760" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.751" endtime="20241121 23:09:25.760"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.760" endtime="20241121 23:09:25.760"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.751" endtime="20241121 23:09:25.760"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.760" endtime="20241121 23:09:25.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.760" endtime="20241121 23:09:25.760"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.760" endtime="20241121 23:09:25.760"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.751" endtime="20241121 23:09:25.760"/>
</try>
<msg timestamp="20241121 23:09:25.761" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.750" endtime="20241121 23:09:25.761"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.761" endtime="20241121 23:09:25.761"/>
</return>
<msg timestamp="20241121 23:09:25.761" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.749" endtime="20241121 23:09:25.761"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.763" endtime="20241121 23:09:25.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.764" endtime="20241121 23:09:25.764"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.763" endtime="20241121 23:09:25.764"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.763" endtime="20241121 23:09:25.764"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.762" endtime="20241121 23:09:25.764"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.748" endtime="20241121 23:09:25.764"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.785" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241121 23:09:25.769" endtime="20241121 23:09:25.785"/>
</kw>
<msg timestamp="20241121 23:09:25.786" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.769" endtime="20241121 23:09:25.786"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.786" endtime="20241121 23:09:25.786"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.769" endtime="20241121 23:09:25.786"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.786" endtime="20241121 23:09:25.786"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.786" endtime="20241121 23:09:25.787"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.786" endtime="20241121 23:09:25.787"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.769" endtime="20241121 23:09:25.787"/>
</try>
<msg timestamp="20241121 23:09:25.787" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.768" endtime="20241121 23:09:25.787"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.787" endtime="20241121 23:09:25.787"/>
</return>
<msg timestamp="20241121 23:09:25.787" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.767" endtime="20241121 23:09:25.787"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.790" endtime="20241121 23:09:25.790"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.790" endtime="20241121 23:09:25.790"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.790" endtime="20241121 23:09:25.790"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.790" endtime="20241121 23:09:25.790"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.789" endtime="20241121 23:09:25.790"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.766" endtime="20241121 23:09:25.791"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.726" endtime="20241121 23:09:25.791"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:09:25.791" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:09:25.791" endtime="20241121 23:09:25.791"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.793" endtime="20241121 23:09:25.793"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.793" endtime="20241121 23:09:25.793"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:25.793" endtime="20241121 23:09:25.794"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.793" endtime="20241121 23:09:25.794"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.792" endtime="20241121 23:09:25.794"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:09:25.794" endtime="20241121 23:09:25.835"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.794" endtime="20241121 23:09:25.835"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.836" endtime="20241121 23:09:25.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.836" endtime="20241121 23:09:25.836"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.835" endtime="20241121 23:09:25.836"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.794" endtime="20241121 23:09:25.836"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.792" endtime="20241121 23:09:25.836"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.792" endtime="20241121 23:09:25.837"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.791" endtime="20241121 23:09:25.837"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.837" endtime="20241121 23:09:25.837"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.837" endtime="20241121 23:09:25.837"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.791" endtime="20241121 23:09:25.837"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.724" endtime="20241121 23:09:25.837"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.719" endtime="20241121 23:09:25.837"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.840" endtime="20241121 23:09:25.840"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.842" endtime="20241121 23:09:25.842"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.837" endtime="20241121 23:09:25.842"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.843" endtime="20241121 23:09:25.843"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.842" endtime="20241121 23:09:25.843"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.848" endtime="20241121 23:09:25.848"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.844" endtime="20241121 23:09:25.848"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.851" endtime="20241121 23:09:25.851"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.848" endtime="20241121 23:09:25.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.852" endtime="20241121 23:09:25.853"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.851" endtime="20241121 23:09:25.853"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.854" endtime="20241121 23:09:25.855"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.855" endtime="20241121 23:09:25.855"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.855" endtime="20241121 23:09:25.856"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.856" endtime="20241121 23:09:25.856"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.856" endtime="20241121 23:09:25.856"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:25.855" endtime="20241121 23:09:25.856"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:25.853" endtime="20241121 23:09:25.856"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:25.861" endtime="20241121 23:09:25.861"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.864" endtime="20241121 23:09:25.864"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.856" endtime="20241121 23:09:25.864"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.865" endtime="20241121 23:09:25.865"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.865" endtime="20241121 23:09:25.865"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.865" endtime="20241121 23:09:25.866"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.866" endtime="20241121 23:09:25.866"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.866" endtime="20241121 23:09:25.866"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:25.865" endtime="20241121 23:09:25.866"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:25.864" endtime="20241121 23:09:25.866"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:25.872" endtime="20241121 23:09:25.872"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.874" endtime="20241121 23:09:25.874"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.866" endtime="20241121 23:09:25.875"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.876" endtime="20241121 23:09:25.876"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.875" endtime="20241121 23:09:25.876"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.878" endtime="20241121 23:09:25.878"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.876" endtime="20241121 23:09:25.878"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:25.883" endtime="20241121 23:09:25.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.883" endtime="20241121 23:09:25.884"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.878" endtime="20241121 23:09:25.884"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.713" endtime="20241121 23:09:25.884"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:25.884" endtime="20241121 23:09:25.884"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:25.885" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:09:25.885" endtime="20241121 23:09:25.885"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.708" endtime="20241121 23:09:25.885"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.708" endtime="20241121 23:09:25.885"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.886" endtime="20241121 23:09:25.886"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.885" endtime="20241121 23:09:25.886"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.707" endtime="20241121 23:09:25.886"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.694" endtime="20241121 23:09:25.886"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '46', 'actionId': '33', 'flowId': '15', 'order': 1, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '33', 'name': 'Click Profile Dropdown acti...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.887" level="INFO">${action} = {'id': '33', 'name': 'Click Profile Dropdown action', 'type': 'CLICK', 'xpath': '//p[text()="Profile"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:32:01.896Z', 'updatedAt': '2024-...</msg>
<status status="PASS" starttime="20241121 23:09:25.886" endtime="20241121 23:09:25.887"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:25.887" endtime="20241121 23:09:25.888"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:25.888" level="INFO">${input} = {'id': '30', 'actionId': '33', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:32:02.118Z', 'updatedAt': '2024-11-21T17:32:02.118Z'}</msg>
<status status="PASS" starttime="20241121 23:09:25.888" endtime="20241121 23:09:25.888"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.889" endtime="20241121 23:09:25.889"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.889" endtime="20241121 23:09:25.889"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.888" endtime="20241121 23:09:25.889"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.888" endtime="20241121 23:09:25.889"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:25.890" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:09:25.890" endtime="20241121 23:09:25.890"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:25.891" endtime="20241121 23:09:25.891"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.890" endtime="20241121 23:09:25.891"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.891" endtime="20241121 23:09:25.891"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.891" endtime="20241121 23:09:25.891"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.906" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:25.900" endtime="20241121 23:09:25.906"/>
</kw>
<msg timestamp="20241121 23:09:25.906" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.899" endtime="20241121 23:09:25.906"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.906" endtime="20241121 23:09:25.906"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.899" endtime="20241121 23:09:25.906"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.907" endtime="20241121 23:09:25.907"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.907" endtime="20241121 23:09:25.907"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.907" endtime="20241121 23:09:25.907"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.899" endtime="20241121 23:09:25.907"/>
</try>
<msg timestamp="20241121 23:09:25.907" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.898" endtime="20241121 23:09:25.908"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.908" endtime="20241121 23:09:25.908"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.897" endtime="20241121 23:09:25.908"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:25.908" endtime="20241121 23:09:25.908"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:25.908" endtime="20241121 23:09:25.908"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.897" endtime="20241121 23:09:25.908"/>
</try>
<msg timestamp="20241121 23:09:25.908" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.897" endtime="20241121 23:09:25.908"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.911" endtime="20241121 23:09:25.911"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.911" endtime="20241121 23:09:25.911"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.911" endtime="20241121 23:09:25.911"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.910" endtime="20241121 23:09:25.912"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.909" endtime="20241121 23:09:25.912"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.896" endtime="20241121 23:09:25.912"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.924" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241121 23:09:25.917" endtime="20241121 23:09:25.924"/>
</kw>
<msg timestamp="20241121 23:09:25.924" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.916" endtime="20241121 23:09:25.924"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.924" endtime="20241121 23:09:25.924"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.916" endtime="20241121 23:09:25.924"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.925" endtime="20241121 23:09:25.925"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.925" endtime="20241121 23:09:25.925"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.924" endtime="20241121 23:09:25.925"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.916" endtime="20241121 23:09:25.925"/>
</try>
<msg timestamp="20241121 23:09:25.925" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.916" endtime="20241121 23:09:25.925"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.926" endtime="20241121 23:09:25.926"/>
</return>
<msg timestamp="20241121 23:09:25.926" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.914" endtime="20241121 23:09:25.926"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.928" endtime="20241121 23:09:25.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.929" endtime="20241121 23:09:25.929"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.928" endtime="20241121 23:09:25.929"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.928" endtime="20241121 23:09:25.929"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.927" endtime="20241121 23:09:25.929"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.914" endtime="20241121 23:09:25.929"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:25.950" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241121 23:09:25.934" endtime="20241121 23:09:25.950"/>
</kw>
<msg timestamp="20241121 23:09:25.950" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.933" endtime="20241121 23:09:25.950"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.950" endtime="20241121 23:09:25.950"/>
</return>
<status status="PASS" starttime="20241121 23:09:25.933" endtime="20241121 23:09:25.951"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.951" endtime="20241121 23:09:25.951"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.951" endtime="20241121 23:09:25.951"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.951" endtime="20241121 23:09:25.951"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.933" endtime="20241121 23:09:25.951"/>
</try>
<msg timestamp="20241121 23:09:25.952" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.933" endtime="20241121 23:09:25.952"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:25.952" endtime="20241121 23:09:25.952"/>
</return>
<msg timestamp="20241121 23:09:25.952" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241121 23:09:25.931" endtime="20241121 23:09:25.952"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.955" endtime="20241121 23:09:25.955"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.955" endtime="20241121 23:09:25.955"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.955" endtime="20241121 23:09:25.955"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.954" endtime="20241121 23:09:25.955"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.953" endtime="20241121 23:09:25.955"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.931" endtime="20241121 23:09:25.956"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.894" endtime="20241121 23:09:25.956"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241121 23:09:25.956" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241121 23:09:25.956" endtime="20241121 23:09:25.956"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241121 23:09:25.958" endtime="20241121 23:09:25.958"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:25.958" endtime="20241121 23:09:25.958"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241121 23:09:25.958" endtime="20241121 23:09:25.959"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.958" endtime="20241121 23:09:25.959"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.957" endtime="20241121 23:09:25.959"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241121 23:09:25.959" endtime="20241121 23:09:26.095"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.959" endtime="20241121 23:09:26.095"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.096" endtime="20241121 23:09:26.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.096" endtime="20241121 23:09:26.096"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.095" endtime="20241121 23:09:26.096"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.959" endtime="20241121 23:09:26.096"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.957" endtime="20241121 23:09:26.097"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.957" endtime="20241121 23:09:26.097"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.956" endtime="20241121 23:09:26.097"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.097" endtime="20241121 23:09:26.098"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.097" endtime="20241121 23:09:26.098"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.956" endtime="20241121 23:09:26.098"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.893" endtime="20241121 23:09:26.098"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.891" endtime="20241121 23:09:26.098"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.102" endtime="20241121 23:09:26.102"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.105" endtime="20241121 23:09:26.105"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.098" endtime="20241121 23:09:26.105"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.107" endtime="20241121 23:09:26.107"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.106" endtime="20241121 23:09:26.107"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.111" endtime="20241121 23:09:26.111"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.107" endtime="20241121 23:09:26.111"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.113" endtime="20241121 23:09:26.114"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.111" endtime="20241121 23:09:26.114"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.116" endtime="20241121 23:09:26.116"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.114" endtime="20241121 23:09:26.116"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.119" endtime="20241121 23:09:26.119"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.119" endtime="20241121 23:09:26.119"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.119" endtime="20241121 23:09:26.119"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.120" endtime="20241121 23:09:26.120"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.120" endtime="20241121 23:09:26.120"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:26.119" endtime="20241121 23:09:26.120"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:26.116" endtime="20241121 23:09:26.120"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:26.128" endtime="20241121 23:09:26.128"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.131" endtime="20241121 23:09:26.132"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.121" endtime="20241121 23:09:26.132"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.133" endtime="20241121 23:09:26.133"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.134" endtime="20241121 23:09:26.134"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.133" endtime="20241121 23:09:26.134"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.134" endtime="20241121 23:09:26.135"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.134" endtime="20241121 23:09:26.135"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:26.133" endtime="20241121 23:09:26.135"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:26.132" endtime="20241121 23:09:26.135"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:26.142" endtime="20241121 23:09:26.142"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.145" endtime="20241121 23:09:26.145"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.135" endtime="20241121 23:09:26.145"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.147" endtime="20241121 23:09:26.147"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.146" endtime="20241121 23:09:26.147"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.150" endtime="20241121 23:09:26.150"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.147" endtime="20241121 23:09:26.150"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:26.159" endtime="20241121 23:09:26.159"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.159" endtime="20241121 23:09:26.159"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.150" endtime="20241121 23:09:26.160"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.890" endtime="20241121 23:09:26.160"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:26.160" endtime="20241121 23:09:26.160"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:26.161" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:09:26.161" endtime="20241121 23:09:26.161"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.889" endtime="20241121 23:09:26.161"/>
</kw>
<status status="PASS" starttime="20241121 23:09:25.889" endtime="20241121 23:09:26.161"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.162" endtime="20241121 23:09:26.162"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.162" endtime="20241121 23:09:26.162"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.889" endtime="20241121 23:09:26.162"/>
</try>
<status status="PASS" starttime="20241121 23:09:25.886" endtime="20241121 23:09:26.162"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '47', 'actionId': '34', 'flowId': '15', 'order': 2, 'createdAt': '2024-11-21T17:34:27.027Z', 'updatedAt': '2024-11-21T17:34:27.027Z', 'action': {'id': '34', 'name': 'Is Name heading visible', '...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:26.163" level="INFO">${action} = {'id': '34', 'name': 'Is Name heading visible', 'type': 'IS_ELEMENT_VISIBLE', 'xpath': '//h4[text()="bharani deepan"]', 'valueRege': '', 'projectId': '4', 'createdAt': '2024-11-21T17:33:53.346Z', 'upd...</msg>
<status status="PASS" starttime="20241121 23:09:26.163" endtime="20241121 23:09:26.163"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:26.163" endtime="20241121 23:09:26.164"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241121 23:09:26.165" level="INFO">${input} = {'id': '31', 'actionId': '34', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-21T17:33:53.666Z', 'updatedAt': '2024-11-21T17:33:53.666Z'}</msg>
<status status="PASS" starttime="20241121 23:09:26.164" endtime="20241121 23:09:26.165"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.165" endtime="20241121 23:09:26.166"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.166" endtime="20241121 23:09:26.166"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.165" endtime="20241121 23:09:26.166"/>
</branch>
<status status="PASS" starttime="20241121 23:09:26.165" endtime="20241121 23:09:26.166"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241121 23:09:26.167" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241121 23:09:26.167" endtime="20241121 23:09:26.168"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="launch-browser" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241121 23:09:26.168" endtime="20241121 23:09:26.168"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.168" endtime="20241121 23:09:26.169"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="New Page" library="RPA.Browser.Playwright">
<arg>${input}[value]</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.169" endtime="20241121 23:09:26.170"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.169" endtime="20241121 23:09:26.170"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.173" endtime="20241121 23:09:26.173"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.170" endtime="20241121 23:09:26.173"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.176" endtime="20241121 23:09:26.176"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.181" endtime="20241121 23:09:26.181"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.173" endtime="20241121 23:09:26.181"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.185" endtime="20241121 23:09:26.185"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.182" endtime="20241121 23:09:26.185"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.190" endtime="20241121 23:09:26.190"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.186" endtime="20241121 23:09:26.190"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.194" endtime="20241121 23:09:26.194"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.191" endtime="20241121 23:09:26.194"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.197" endtime="20241121 23:09:26.197"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.195" endtime="20241121 23:09:26.197"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.199" endtime="20241121 23:09:26.199"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.201" endtime="20241121 23:09:26.202"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.200" endtime="20241121 23:09:26.202"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.202" endtime="20241121 23:09:26.202"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.202" endtime="20241121 23:09:26.202"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:26.200" endtime="20241121 23:09:26.202"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:26.197" endtime="20241121 23:09:26.202"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:26.213" endtime="20241121 23:09:26.213"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.217" endtime="20241121 23:09:26.217"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.203" endtime="20241121 23:09:26.217"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.220" endtime="20241121 23:09:26.220"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.221" endtime="20241121 23:09:26.221"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.221" endtime="20241121 23:09:26.222"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>UN_SELECT</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.222" endtime="20241121 23:09:26.222"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.222" endtime="20241121 23:09:26.222"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:09:26.221" endtime="20241121 23:09:26.223"/>
</if>
<status status="NOT RUN" starttime="20241121 23:09:26.218" endtime="20241121 23:09:26.223"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == SELECT)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241121 23:09:26.235" endtime="20241121 23:09:26.235"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.240" endtime="20241121 23:09:26.241"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.223" endtime="20241121 23:09:26.241"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241121 23:09:26.382" level="INFO">Waited for Element with selector //h4[text()="bharani deepan"] at state attached</msg>
<status status="PASS" starttime="20241121 23:09:26.247" endtime="20241121 23:09:26.383"/>
</kw>
<msg timestamp="20241121 23:09:26.383" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:26.247" endtime="20241121 23:09:26.383"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:26.383" endtime="20241121 23:09:26.383"/>
</return>
<status status="PASS" starttime="20241121 23:09:26.246" endtime="20241121 23:09:26.383"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.384" endtime="20241121 23:09:26.384"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.385" endtime="20241121 23:09:26.385"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.384" endtime="20241121 23:09:26.385"/>
</branch>
<status status="PASS" starttime="20241121 23:09:26.246" endtime="20241121 23:09:26.385"/>
</try>
<msg timestamp="20241121 23:09:26.386" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241121 23:09:26.245" endtime="20241121 23:09:26.386"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241121 23:09:26.386" endtime="20241121 23:09:26.387"/>
</return>
<status status="PASS" starttime="20241121 23:09:26.244" endtime="20241121 23:09:26.387"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241121 23:09:26.387" endtime="20241121 23:09:26.387"/>
</return>
<status status="NOT RUN" starttime="20241121 23:09:26.387" endtime="20241121 23:09:26.387"/>
</branch>
<status status="PASS" starttime="20241121 23:09:26.244" endtime="20241121 23:09:26.388"/>
</try>
<msg timestamp="20241121 23:09:26.388" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20241121 23:09:26.243" endtime="20241121 23:09:26.388"/>
</kw>
<status status="PASS" starttime="20241121 23:09:26.241" endtime="20241121 23:09:26.388"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.393" endtime="20241121 23:09:26.393"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.388" endtime="20241121 23:09:26.393"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241121 23:09:26.404" endtime="20241121 23:09:26.404"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.405" endtime="20241121 23:09:26.405"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.393" endtime="20241121 23:09:26.405"/>
</branch>
<status status="PASS" starttime="20241121 23:09:26.168" endtime="20241121 23:09:26.405"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:26.405" endtime="20241121 23:09:26.406"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241121 23:09:26.407" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241121 23:09:26.406" endtime="20241121 23:09:26.407"/>
</kw>
<status status="PASS" starttime="20241121 23:09:26.166" endtime="20241121 23:09:26.407"/>
</kw>
<status status="PASS" starttime="20241121 23:09:26.166" endtime="20241121 23:09:26.408"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.408" endtime="20241121 23:09:26.408"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.408" endtime="20241121 23:09:26.408"/>
</branch>
<status status="PASS" starttime="20241121 23:09:26.166" endtime="20241121 23:09:26.409"/>
</try>
<status status="PASS" starttime="20241121 23:09:26.163" endtime="20241121 23:09:26.409"/>
</iter>
<status status="PASS" starttime="20241121 23:09:25.693" endtime="20241121 23:09:26.409"/>
</for>
<status status="PASS" starttime="20241121 23:09:25.693" endtime="20241121 23:09:26.409"/>
</branch>
<status status="PASS" starttime="20241121 23:09:25.692" endtime="20241121 23:09:26.410"/>
</if>
<status status="PASS" starttime="20241121 23:09:25.663" endtime="20241121 23:09:26.410"/>
</iter>
<status status="PASS" starttime="20241121 23:09:08.312" endtime="20241121 23:09:26.410"/>
</for>
<status status="PASS" starttime="20241121 23:09:08.312" endtime="20241121 23:09:26.410"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.312" endtime="20241121 23:09:26.411"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.274" endtime="20241121 23:09:26.411"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.411" endtime="20241121 23:09:26.412"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.411" endtime="20241121 23:09:26.412"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.272" endtime="20241121 23:09:26.412"/>
</if>
<status status="PASS" starttime="20241121 23:09:08.244" endtime="20241121 23:09:26.412"/>
</kw>
<status status="PASS" starttime="20241121 23:09:08.243" endtime="20241121 23:09:26.413"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:09:26.413" endtime="20241121 23:09:26.413"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:09:26.413" endtime="20241121 23:09:26.413"/>
</branch>
<status status="PASS" starttime="20241121 23:09:08.243" endtime="20241121 23:09:26.414"/>
</try>
<status status="PASS" starttime="20241121 23:08:19.739" endtime="20241121 23:09:26.414"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241121 23:09:26.415" endtime="20241121 23:09:26.415"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241121 23:10:53.641" level="INFO">Execution terminated by signal</msg>
<msg timestamp="20241121 23:10:53.641" level="INFO">${json} = None</msg>
<status status="PASS" starttime="20241121 23:09:26.416" endtime="20241121 23:10:53.641"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="FAIL" starttime="20241121 23:10:53.644" endtime="20241121 23:10:53.645"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.650" endtime="20241121 23:10:53.651"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.652" endtime="20241121 23:10:53.652"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241121 23:10:53.653" endtime="20241121 23:10:53.653"/>
</return>
<status status="NOT RUN" starttime="20241121 23:10:53.651" endtime="20241121 23:10:53.653"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.651" endtime="20241121 23:10:53.653"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.658" endtime="20241121 23:10:53.658"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.661" endtime="20241121 23:10:53.662"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.662" endtime="20241121 23:10:53.662"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:10:53.662" endtime="20241121 23:10:53.662"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.662" endtime="20241121 23:10:53.662"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.663" endtime="20241121 23:10:53.663"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.663" endtime="20241121 23:10:53.663"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.663" endtime="20241121 23:10:53.664"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.664"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.664"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.664"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.670" endtime="20241121 23:10:53.671"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.672" endtime="20241121 23:10:53.672"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.673" endtime="20241121 23:10:53.673"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<status status="NOT RUN" starttime="20241121 23:10:53.673" endtime="20241121 23:10:53.673"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.674" endtime="20241121 23:10:53.674"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.675" endtime="20241121 23:10:53.675"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:10:53.674" endtime="20241121 23:10:53.675"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.674" endtime="20241121 23:10:53.675"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-action">
<arg>${action}</arg>
<arg>${input}</arg>
<status status="NOT RUN" starttime="20241121 23:10:53.675" endtime="20241121 23:10:53.675"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:10:53.675" endtime="20241121 23:10:53.676"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.676" endtime="20241121 23:10:53.676"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:10:53.676" endtime="20241121 23:10:53.676"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.675" endtime="20241121 23:10:53.676"/>
</try>
<status status="NOT RUN" starttime="20241121 23:10:53.672" endtime="20241121 23:10:53.676"/>
</iter>
<status status="NOT RUN" starttime="20241121 23:10:53.672" endtime="20241121 23:10:53.676"/>
</for>
<status status="NOT RUN" starttime="20241121 23:10:53.672" endtime="20241121 23:10:53.676"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.672" endtime="20241121 23:10:53.676"/>
</if>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.677"/>
</iter>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.677"/>
</for>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.677"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.664" endtime="20241121 23:10:53.677"/>
</if>
<status status="NOT RUN" starttime="20241121 23:10:53.653" endtime="20241121 23:10:53.677"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241121 23:10:53.677" endtime="20241121 23:10:53.677"/>
</kw>
<status status="NOT RUN" starttime="20241121 23:10:53.677" endtime="20241121 23:10:53.677"/>
</branch>
<status status="NOT RUN" starttime="20241121 23:10:53.653" endtime="20241121 23:10:53.677"/>
</if>
<status status="FAIL" starttime="20241121 23:10:53.643" endtime="20241121 23:10:53.678"/>
</kw>
<status status="FAIL" starttime="20241121 23:10:53.642" endtime="20241121 23:10:53.678"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="FAIL" starttime="20241121 23:10:53.679" endtime="20241121 23:10:53.679"/>
</kw>
<status status="FAIL" starttime="20241121 23:10:53.678" endtime="20241121 23:10:53.679"/>
</branch>
<status status="FAIL" starttime="20241121 23:10:53.642" endtime="20241121 23:10:53.679"/>
</try>
<status status="FAIL" starttime="20241121 23:09:26.414" endtime="20241121 23:10:53.679"/>
</iter>
<status status="FAIL" starttime="20241121 23:08:19.739" endtime="20241121 23:10:53.679"/>
</while>
<status status="FAIL" starttime="20241121 23:08:19.739" endtime="20241121 23:10:53.679"/>
</kw>
<status status="FAIL" starttime="20241121 23:08:19.739" endtime="20241121 23:10:53.679">Execution terminated by signal</status>
</test>
<status status="FAIL" starttime="20241121 23:08:17.468" endtime="20241121 23:10:53.679"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Start">Start</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20241121 23:10:53.679" level="ERROR">Calling method '_end_test' of listener 'Playwright' failed: ConnectionError: Playwright process has been terminated with code 130</msg>
<msg timestamp="20241121 23:10:53.679" level="ERROR">Calling method '_end_suite' of listener 'Playwright' failed: ConnectionError: Playwright process has been terminated with code 130</msg>
</errors>
</robot>
