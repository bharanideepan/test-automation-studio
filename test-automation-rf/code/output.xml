<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241129 09:27:15.700" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:17.589" endtime="20241129 09:27:17.590"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241129 09:27:17.933" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '13', 'testCaseId': '2', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03...</msg>
<status status="PASS" starttime="20241129 09:27:17.590" endtime="20241129 09:27:17.933"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241129 09:27:17.934" endtime="20241129 09:27:17.934"/>
</break>
<status status="NOT RUN" starttime="20241129 09:27:17.934" endtime="20241129 09:27:17.934"/>
</branch>
<status status="PASS" starttime="20241129 09:27:17.934" endtime="20241129 09:27:17.934"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241129 09:27:17.938" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ee3d1c5e-14c5-43d7-96b5-ce679e3fb4af"}</msg>
<msg timestamp="20241129 09:27:18.435" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\ee3d1c5e-14c5-43d7-96b5-ce679e3fb4af"}</msg>
<status status="PASS" starttime="20241129 09:27:17.936" endtime="20241129 09:27:18.435"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241129 09:27:18.437" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241129 09:27:18.468" level="INFO">Successfully created context. </msg>
<msg timestamp="20241129 09:27:18.468" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241129 09:27:18.436" endtime="20241129 09:27:18.468"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241129 09:27:18.476" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241129 09:27:18.469" endtime="20241129 09:27:18.476"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:27:22.999" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241129 09:27:23.000" level="INFO">${page_id} = {'page_id': 'page=789ecb25-3a62-49c4-9d24-5d121f49f502', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:27:18.477" endtime="20241129 09:27:23.000"/>
</kw>
<status status="PASS" starttime="20241129 09:27:17.935" endtime="20241129 09:27:23.000"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:23.001" endtime="20241129 09:27:23.007"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:23.009" endtime="20241129 09:27:23.009"/>
</kw>
<msg timestamp="20241129 09:27:23.009" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.009" endtime="20241129 09:27:23.010"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.013" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241129 09:27:23.013" endtime="20241129 09:27:23.013"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.014" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.014" endtime="20241129 09:27:23.014"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.013" endtime="20241129 09:27:23.014"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.014" endtime="20241129 09:27:23.014"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.014" endtime="20241129 09:27:23.014"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.013" endtime="20241129 09:27:23.014"/>
</if>
<status status="PASS" starttime="20241129 09:27:23.013" endtime="20241129 09:27:23.014"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.010" endtime="20241129 09:27:23.014"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:23.015" endtime="20241129 09:27:23.015"/>
</return>
<msg timestamp="20241129 09:27:23.015" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.008" endtime="20241129 09:27:23.015"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.016" endtime="20241129 09:27:23.016"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241129 09:27:23.016" endtime="20241129 09:27:23.016"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:23.015" endtime="20241129 09:27:23.016"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.015" endtime="20241129 09:27:23.016"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:23.019" endtime="20241129 09:27:23.020"/>
</kw>
<msg timestamp="20241129 09:27:23.020" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.019" endtime="20241129 09:27:23.020"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.020" level="INFO">${values} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:27:23.020" endtime="20241129 09:27:23.020"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.021" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.021" endtime="20241129 09:27:23.021"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.021" endtime="20241129 09:27:23.021"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.021" endtime="20241129 09:27:23.021"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.021" endtime="20241129 09:27:23.021"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.021" endtime="20241129 09:27:23.022"/>
</if>
<status status="PASS" starttime="20241129 09:27:23.020" endtime="20241129 09:27:23.022"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.020" endtime="20241129 09:27:23.022"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:23.022" endtime="20241129 09:27:23.022"/>
</return>
<msg timestamp="20241129 09:27:23.022" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.019" endtime="20241129 09:27:23.022"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:23.024" endtime="20241129 09:27:23.024"/>
</kw>
<msg timestamp="20241129 09:27:23.024" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.024" endtime="20241129 09:27:23.024"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.025" level="INFO">${values} = {'id': '13', 'testCaseId': '2', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03:57:17.679Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:27:23.025" endtime="20241129 09:27:23.025"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.026" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.025" endtime="20241129 09:27:23.026"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.025" endtime="20241129 09:27:23.026"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.026" endtime="20241129 09:27:23.026"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.026" endtime="20241129 09:27:23.026"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.025" endtime="20241129 09:27:23.026"/>
</if>
<status status="PASS" starttime="20241129 09:27:23.025" endtime="20241129 09:27:23.026"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.024" endtime="20241129 09:27:23.026"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:23.026" endtime="20241129 09:27:23.026"/>
</return>
<msg timestamp="20241129 09:27:23.027" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.023" endtime="20241129 09:27:23.027"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.027" endtime="20241129 09:27:23.027"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.027" endtime="20241129 09:27:23.027"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.027" endtime="20241129 09:27:23.027"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.028" level="INFO">${testCase} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:27:23.027" endtime="20241129 09:27:23.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.028" level="INFO">${testCaseRun} = {'id': '13', 'testCaseId': '2', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03:57:17.679Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:27:23.028" endtime="20241129 09:27:23.028"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.029" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241129 09:27:23.028" endtime="20241129 09:27:23.029"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:23.029" endtime="20241129 09:27:23.029"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:23.034" endtime="20241129 09:27:23.035"/>
</kw>
<msg timestamp="20241129 09:27:23.035" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.033" endtime="20241129 09:27:23.035"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.037" level="INFO">${values} = [{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241129 09:27:23.036" endtime="20241129 09:27:23.037"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.037" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.037" endtime="20241129 09:27:23.037"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.037" endtime="20241129 09:27:23.038"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.038" endtime="20241129 09:27:23.038"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.038" endtime="20241129 09:27:23.038"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.037" endtime="20241129 09:27:23.038"/>
</if>
<status status="PASS" starttime="20241129 09:27:23.036" endtime="20241129 09:27:23.038"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.035" endtime="20241129 09:27:23.038"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:23.038" endtime="20241129 09:27:23.038"/>
</return>
<msg timestamp="20241129 09:27:23.038" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.032" endtime="20241129 09:27:23.039"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:23.039" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '13', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241129 09:27:23.039" endtime="20241129 09:27:23.039"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:23.040" level="INFO">${json_response} = {"testCaseRunId": "13", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241129 09:27:23.040" endtime="20241129 09:27:23.040"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:23.070" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:23.070" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:23.040" endtime="20241129 09:27:23.070"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:23.071" endtime="20241129 09:27:23.072"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:23.072" endtime="20241129 09:27:23.072"/>
</return>
<status status="PASS" starttime="20241129 09:27:23.040" endtime="20241129 09:27:23.072"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:23.074" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241129 09:27:23.073" endtime="20241129 09:27:23.074"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.076" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241129 09:27:23.076" endtime="20241129 09:27:23.076"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:23.077" endtime="20241129 09:27:23.078"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:23.085" endtime="20241129 09:27:23.085"/>
</kw>
<msg timestamp="20241129 09:27:23.085" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.084" endtime="20241129 09:27:23.085"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.086" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241129 09:27:23.086" endtime="20241129 09:27:23.087"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.087" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.087" endtime="20241129 09:27:23.088"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.087" endtime="20241129 09:27:23.088"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.088" endtime="20241129 09:27:23.088"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.088" endtime="20241129 09:27:23.088"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.087" endtime="20241129 09:27:23.088"/>
</if>
<status status="PASS" starttime="20241129 09:27:23.086" endtime="20241129 09:27:23.088"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.085" endtime="20241129 09:27:23.088"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:23.088" endtime="20241129 09:27:23.089"/>
</return>
<msg timestamp="20241129 09:27:23.089" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:23.083" endtime="20241129 09:27:23.089"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.090" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:27:23.090" endtime="20241129 09:27:23.091"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:23.091" endtime="20241129 09:27:23.092"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:27:23.092" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:27:23.092" endtime="20241129 09:27:23.092"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.092" endtime="20241129 09:27:23.092"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:23.093" endtime="20241129 09:27:23.093"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:23.092" endtime="20241129 09:27:23.093"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.092" endtime="20241129 09:27:23.093"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:23.094" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:27:23.094" endtime="20241129 09:27:23.094"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:27:27.609" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241129 09:27:27.609" level="INFO">${page_id} = {'page_id': 'page=40dfcecd-237a-4aa0-8974-d0854284cfdf', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:27:23.095" endtime="20241129 09:27:27.609"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241129 09:27:27.610" level="INFO">Switching to page {'page_id': 'page=40dfcecd-237a-4aa0-8974-d0854284cfdf', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241129 09:27:27.648" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=bd19fe63-c2d1-443f-88b6-69c250360451",
    "contexts": [
      {
        "type": "context",
        "id": "context=252dfbfa-51e8-4b38-b872-84b192fbf240",
        "activePage": "page=40dfcecd-237a-4aa0-8974-d0854284cfdf",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=789ecb25-3a62-49c4-9d24-5d121f49f502",
            "timestamp": 1732852638.637
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=40dfcecd-237a-4aa0-8974-d0854284cfdf",
            "timestamp": 1732852643.136
          }
        ]
      }
    ],
    "activeContext": "context=252dfbfa-51e8-4b38-b872-84b192fbf240",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241129 09:27:27.679" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241129 09:27:27.610" endtime="20241129 09:27:27.681"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.094" endtime="20241129 09:27:27.681"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.094" endtime="20241129 09:27:27.682"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:27.682" endtime="20241129 09:27:27.683"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.682" endtime="20241129 09:27:27.683"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.687" endtime="20241129 09:27:27.687"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.683" endtime="20241129 09:27:27.687"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.689" endtime="20241129 09:27:27.689"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.691" endtime="20241129 09:27:27.691"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.688" endtime="20241129 09:27:27.691"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.692" endtime="20241129 09:27:27.692"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.691" endtime="20241129 09:27:27.693"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.697" endtime="20241129 09:27:27.697"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.693" endtime="20241129 09:27:27.697"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.699" endtime="20241129 09:27:27.700"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.701" endtime="20241129 09:27:27.701"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.701" endtime="20241129 09:27:27.701"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.700" endtime="20241129 09:27:27.701"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.697" endtime="20241129 09:27:27.701"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.703" endtime="20241129 09:27:27.703"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.701" endtime="20241129 09:27:27.703"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.705" endtime="20241129 09:27:27.705"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.705" endtime="20241129 09:27:27.705"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.705" endtime="20241129 09:27:27.706"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.706" endtime="20241129 09:27:27.706"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.706" endtime="20241129 09:27:27.706"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.705" endtime="20241129 09:27:27.706"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.703" endtime="20241129 09:27:27.706"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:27.711" endtime="20241129 09:27:27.711"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.714" endtime="20241129 09:27:27.714"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.706" endtime="20241129 09:27:27.714"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.716" endtime="20241129 09:27:27.716"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.716" endtime="20241129 09:27:27.716"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.716" endtime="20241129 09:27:27.716"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.717" endtime="20241129 09:27:27.717"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.716" endtime="20241129 09:27:27.717"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.716" endtime="20241129 09:27:27.717"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.714" endtime="20241129 09:27:27.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:27.721" endtime="20241129 09:27:27.721"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.724" endtime="20241129 09:27:27.724"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.717" endtime="20241129 09:27:27.724"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.725" endtime="20241129 09:27:27.725"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.726" endtime="20241129 09:27:27.726"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.725" endtime="20241129 09:27:27.726"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.726" endtime="20241129 09:27:27.727"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.726" endtime="20241129 09:27:27.727"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.725" endtime="20241129 09:27:27.727"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.724" endtime="20241129 09:27:27.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.729" endtime="20241129 09:27:27.729"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.727" endtime="20241129 09:27:27.729"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:27:27.737" endtime="20241129 09:27:27.737"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.737" endtime="20241129 09:27:27.737"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.729" endtime="20241129 09:27:27.737"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.094" endtime="20241129 09:27:27.737"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:27.738" endtime="20241129 09:27:27.738"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 09:27:27.738" endtime="20241129 09:27:27.739"/>
</return>
<msg timestamp="20241129 09:27:27.740" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:27:23.093" endtime="20241129 09:27:27.740"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:27.744" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241129 09:27:27.742" endtime="20241129 09:27:27.744"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.746" endtime="20241129 09:27:27.746"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.747" endtime="20241129 09:27:27.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.749" endtime="20241129 09:27:27.752"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.753" endtime="20241129 09:27:27.753"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.754" endtime="20241129 09:27:27.754"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.756" endtime="20241129 09:27:27.757"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.757" endtime="20241129 09:27:27.758"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.758" endtime="20241129 09:27:27.759"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.766" endtime="20241129 09:27:27.767"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.771" endtime="20241129 09:27:27.771"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:27:27.772" endtime="20241129 09:27:27.772"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:27.772" endtime="20241129 09:27:27.772"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.772" endtime="20241129 09:27:27.772"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.773" endtime="20241129 09:27:27.773"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:27.773" endtime="20241129 09:27:27.774"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:27.773" endtime="20241129 09:27:27.774"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.773" endtime="20241129 09:27:27.774"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.774" endtime="20241129 09:27:27.775"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.775"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:27.774" endtime="20241129 09:27:27.775"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.774" endtime="20241129 09:27:27.775"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.772" endtime="20241129 09:27:27.775"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.771" endtime="20241129 09:27:27.775"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.776"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.776"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.776"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.777" endtime="20241129 09:27:27.778"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.776" endtime="20241129 09:27:27.778"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.776" endtime="20241129 09:27:27.778"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.779" endtime="20241129 09:27:27.779"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:27.779" endtime="20241129 09:27:27.782"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:27.778" endtime="20241129 09:27:27.787"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.778" endtime="20241129 09:27:27.787"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.787"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.775" endtime="20241129 09:27:27.788"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.745" endtime="20241129 09:27:27.788"/>
</iter>
<status status="NOT RUN" starttime="20241129 09:27:27.745" endtime="20241129 09:27:27.789"/>
</for>
<msg timestamp="20241129 09:27:27.789" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 09:27:27.740" endtime="20241129 09:27:27.789"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:27.792" endtime="20241129 09:27:27.802"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241129 09:27:27.833" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241129 09:27:27.832" endtime="20241129 09:27:27.833"/>
</kw>
<msg timestamp="20241129 09:27:27.835" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241129 09:27:27.831" endtime="20241129 09:27:27.835"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.835" endtime="20241129 09:27:27.836"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.836" endtime="20241129 09:27:27.836"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.836" endtime="20241129 09:27:27.836"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.836" endtime="20241129 09:27:27.836"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.836" endtime="20241129 09:27:27.837"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:27.836" endtime="20241129 09:27:27.837"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:27.835" endtime="20241129 09:27:27.837"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.835" endtime="20241129 09:27:27.837"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:27.837" endtime="20241129 09:27:27.837"/>
</return>
<msg timestamp="20241129 09:27:27.837" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241129 09:27:27.830" endtime="20241129 09:27:27.837"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.838" endtime="20241129 09:27:27.838"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.838" endtime="20241129 09:27:27.838"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:27.839" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241129 09:27:27.838" endtime="20241129 09:27:27.839"/>
</kw>
<status status="PASS" starttime="20241129 09:27:27.838" endtime="20241129 09:27:27.839"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.837" endtime="20241129 09:27:27.839"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:27.841" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '77', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241129 09:27:27.839" endtime="20241129 09:27:27.841"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:27.844" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "77", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241129 09:27:27.842" endtime="20241129 09:27:27.844"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:27.856" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:27.858" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:27.844" endtime="20241129 09:27:27.858"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:27.859" endtime="20241129 09:27:27.861"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:27.861" endtime="20241129 09:27:27.862"/>
</return>
<status status="PASS" starttime="20241129 09:27:27.841" endtime="20241129 09:27:27.862"/>
</kw>
<status status="PASS" starttime="20241129 09:27:27.803" endtime="20241129 09:27:27.863"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 09:27:27.864" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 09:27:27.863" endtime="20241129 09:27:27.864"/>
</kw>
<status status="PASS" starttime="20241129 09:27:23.090" endtime="20241129 09:27:27.864"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.864" endtime="20241129 09:27:27.866"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 09:27:27.867" endtime="20241129 09:27:27.867"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.868" endtime="20241129 09:27:27.868"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.864" endtime="20241129 09:27:27.869"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.090" endtime="20241129 09:27:27.869"/>
</try>
<status status="PASS" starttime="20241129 09:27:23.090" endtime="20241129 09:27:27.869"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:27.871" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241129 09:27:27.870" endtime="20241129 09:27:27.871"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:27.871" endtime="20241129 09:27:27.872"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:27:27.873" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241129 09:27:27.872" endtime="20241129 09:27:27.873"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.874" endtime="20241129 09:27:27.874"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.874" endtime="20241129 09:27:27.874"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.874" endtime="20241129 09:27:27.874"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.873" endtime="20241129 09:27:27.874"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:27.876" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 09:27:27.875" endtime="20241129 09:27:27.876"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:27.877" endtime="20241129 09:27:27.877"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.876" endtime="20241129 09:27:27.877"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:27.878" endtime="20241129 09:27:27.878"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.878" endtime="20241129 09:27:27.878"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.883" endtime="20241129 09:27:27.883"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.879" endtime="20241129 09:27:27.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.886" endtime="20241129 09:27:27.886"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.888" endtime="20241129 09:27:27.888"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.884" endtime="20241129 09:27:27.888"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.890" endtime="20241129 09:27:27.890"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.888" endtime="20241129 09:27:27.890"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.896" endtime="20241129 09:27:27.896"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.891" endtime="20241129 09:27:27.896"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username or id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="Highlight Elements" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Adds a highlight to elements matched by the ``selector``. Provides a style adjustment.</doc>
<msg timestamp="20241129 09:27:27.945" level="INFO">Highlighted 0 elements for 5000.</msg>
<status status="PASS" starttime="20241129 09:27:27.903" endtime="20241129 09:27:27.945"/>
</kw>
<kw name="fail-if-multiple-elements-found" library="UTIL_Validation">
<arg>${selector}</arg>
<doc>Throws error if multiple elements found for the given selector</doc>
<kw name="get-element-count" library="UTIL_BrowserHelper">
<var>${count}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>Method is used to get element count for given selector
INPUT:
id=username or id=password: String</doc>
<kw name="Get Element Count" library="RPA.Browser.Playwright">
<var>${element_count}</var>
<arg>${selector}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20241129 09:27:27.953" level="INFO">${element_count} = 0</msg>
<status status="PASS" starttime="20241129 09:27:27.946" endtime="20241129 09:27:27.953"/>
</kw>
<return>
<value>${element_count}</value>
<status status="PASS" starttime="20241129 09:27:27.953" endtime="20241129 09:27:27.953"/>
</return>
<msg timestamp="20241129 09:27:27.954" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241129 09:27:27.946" endtime="20241129 09:27:27.954"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${count &gt;&gt; ${1}}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.957" endtime="20241129 09:27:27.957"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:27.957" endtime="20241129 09:27:27.957"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:27.956" endtime="20241129 09:27:27.957"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.956" endtime="20241129 09:27:27.957"/>
</if>
<status status="PASS" starttime="20241129 09:27:27.955" endtime="20241129 09:27:27.957"/>
</kw>
<status status="PASS" starttime="20241129 09:27:27.945" endtime="20241129 09:27:27.957"/>
</kw>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 09:27:40.479" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241129 09:27:40.479" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241129 09:27:40.480" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('id=username or id=password')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241129 09:27:27.961" endtime="20241129 09:27:40.483"/>
</kw>
<msg timestamp="20241129 09:27:40.484" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241129 09:27:27.961" endtime="20241129 09:27:40.484"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 09:27:40.484" endtime="20241129 09:27:40.484"/>
</return>
<status status="PASS" starttime="20241129 09:27:27.960" endtime="20241129 09:27:40.484"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.484" endtime="20241129 09:27:40.484"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.485" endtime="20241129 09:27:40.485"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.484" endtime="20241129 09:27:40.485"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.960" endtime="20241129 09:27:40.485"/>
</try>
<msg timestamp="20241129 09:27:40.485" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241129 09:27:27.960" endtime="20241129 09:27:40.485"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 09:27:40.485" endtime="20241129 09:27:40.486"/>
</return>
<status status="PASS" starttime="20241129 09:27:27.958" endtime="20241129 09:27:40.486"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 09:27:40.486" endtime="20241129 09:27:40.486"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:40.486" endtime="20241129 09:27:40.486"/>
</branch>
<status status="PASS" starttime="20241129 09:27:27.958" endtime="20241129 09:27:40.487"/>
</try>
<msg timestamp="20241129 09:27:40.487" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241129 09:27:27.958" endtime="20241129 09:27:40.487"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.490" endtime="20241129 09:27:40.490"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.491" endtime="20241129 09:27:40.492"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:27:40.492" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:27:40.492" endtime="20241129 09:27:40.492"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.491" endtime="20241129 09:27:40.494"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.490" endtime="20241129 09:27:40.494"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:40.490" endtime="20241129 09:27:40.494"/>
</if>
<status status="FAIL" starttime="20241129 09:27:40.489" endtime="20241129 09:27:40.495"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:27.903" endtime="20241129 09:27:40.496"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.498" endtime="20241129 09:27:40.499"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.500" endtime="20241129 09:27:40.500"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:27.901" endtime="20241129 09:27:40.501"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.503"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.503"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.503"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.503"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.504"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.504"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:40.503" endtime="20241129 09:27:40.504"/>
</try>
<status status="FAIL" starttime="20241129 09:27:27.900" endtime="20241129 09:27:40.504"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.505" endtime="20241129 09:27:40.505"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.505" endtime="20241129 09:27:40.505"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:40.504" endtime="20241129 09:27:40.505"/>
</if>
<status status="FAIL" starttime="20241129 09:27:27.897" endtime="20241129 09:27:40.505"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.506" endtime="20241129 09:27:40.506"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.505" endtime="20241129 09:27:40.506"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.507" endtime="20241129 09:27:40.507"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.507" endtime="20241129 09:27:40.507"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.507" endtime="20241129 09:27:40.507"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.508" endtime="20241129 09:27:40.508"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.508" endtime="20241129 09:27:40.508"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:40.507" endtime="20241129 09:27:40.508"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:40.506" endtime="20241129 09:27:40.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:40.514" endtime="20241129 09:27:40.514"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.518" endtime="20241129 09:27:40.518"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.508" endtime="20241129 09:27:40.518"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.519"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.519"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.519"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.520"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.520"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:40.519" endtime="20241129 09:27:40.520"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:40.518" endtime="20241129 09:27:40.520"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:40.524" endtime="20241129 09:27:40.524"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.526" endtime="20241129 09:27:40.526"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.520" endtime="20241129 09:27:40.526"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.527" endtime="20241129 09:27:40.527"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.528" endtime="20241129 09:27:40.528"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.528" endtime="20241129 09:27:40.528"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.528" endtime="20241129 09:27:40.528"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.528" endtime="20241129 09:27:40.528"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:40.527" endtime="20241129 09:27:40.528"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:40.527" endtime="20241129 09:27:40.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.530" endtime="20241129 09:27:40.530"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.528" endtime="20241129 09:27:40.530"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:27:40.537" endtime="20241129 09:27:40.537"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.537" endtime="20241129 09:27:40.537"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.530" endtime="20241129 09:27:40.537"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:27.876" endtime="20241129 09:27:40.537"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.538" endtime="20241129 09:27:40.538"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241129 09:27:40.538" endtime="20241129 09:27:40.538"/>
</return>
<status status="FAIL" starttime="20241129 09:27:27.875" endtime="20241129 09:27:40.538"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241129 09:27:40.539" endtime="20241129 09:27:40.539"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.539" endtime="20241129 09:27:40.539"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241129 09:27:40.539" endtime="20241129 09:27:40.539"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.539" endtime="20241129 09:27:40.540"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:27.870" endtime="20241129 09:27:40.540"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.540" endtime="20241129 09:27:40.541"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:40.544" endtime="20241129 09:27:40.544"/>
</kw>
<msg timestamp="20241129 09:27:40.544" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:40.543" endtime="20241129 09:27:40.544"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:40.545" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username or id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-29T03:52:18.195Z'}</msg>
<status status="PASS" starttime="20241129 09:27:40.544" endtime="20241129 09:27:40.545"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:40.545" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:40.545" endtime="20241129 09:27:40.545"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.545" endtime="20241129 09:27:40.546"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.546" endtime="20241129 09:27:40.546"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.546" endtime="20241129 09:27:40.546"/>
</branch>
<status status="PASS" starttime="20241129 09:27:40.545" endtime="20241129 09:27:40.546"/>
</if>
<status status="PASS" starttime="20241129 09:27:40.544" endtime="20241129 09:27:40.546"/>
</branch>
<status status="PASS" starttime="20241129 09:27:40.544" endtime="20241129 09:27:40.546"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:40.546" endtime="20241129 09:27:40.546"/>
</return>
<msg timestamp="20241129 09:27:40.546" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:40.543" endtime="20241129 09:27:40.546"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:40.547" level="INFO">${xpath} = id=username or id=password</msg>
<status status="PASS" starttime="20241129 09:27:40.547" endtime="20241129 09:27:40.547"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.547" endtime="20241129 09:27:40.547"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.547" endtime="20241129 09:27:40.548"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.547" endtime="20241129 09:27:40.548"/>
</branch>
<status status="PASS" starttime="20241129 09:27:40.547" endtime="20241129 09:27:40.548"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:40.550" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '78', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username or id=password', 'inputValue': 'bharani@ideas2it.com', 'e...</msg>
<status status="PASS" starttime="20241129 09:27:40.548" endtime="20241129 09:27:40.550"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:40.551" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "78", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username or id=password", "inputValue": "bharani@ideas2it.com", "e...</msg>
<status status="PASS" starttime="20241129 09:27:40.550" endtime="20241129 09:27:40.551"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:40.572" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:40.572" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:40.551" endtime="20241129 09:27:40.572"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.572" endtime="20241129 09:27:40.574"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:40.574" endtime="20241129 09:27:40.574"/>
</return>
<status status="PASS" starttime="20241129 09:27:40.550" endtime="20241129 09:27:40.574"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.541" endtime="20241129 09:27:40.574"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.575" endtime="20241129 09:27:40.575"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:27:40.575" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:27:40.575" endtime="20241129 09:27:40.577"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.574" endtime="20241129 09:27:40.578"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.540" endtime="20241129 09:27:40.578"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:27.869" endtime="20241129 09:27:40.578"/>
</try>
<status status="FAIL" starttime="20241129 09:27:27.869" endtime="20241129 09:27:40.578"/>
</iter>
<status status="FAIL" starttime="20241129 09:27:23.089" endtime="20241129 09:27:40.579"/>
</for>
<status status="FAIL" starttime="20241129 09:27:23.089" endtime="20241129 09:27:40.579"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:23.089" endtime="20241129 09:27:40.579"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241129 09:27:40.579" endtime="20241129 09:27:40.579"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:23.075" endtime="20241129 09:27:40.580"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.580" endtime="20241129 09:27:40.580"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:40.583" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '19', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241129 09:27:40.582" endtime="20241129 09:27:40.583"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:40.584" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "19", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241129 09:27:40.584" endtime="20241129 09:27:40.584"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:40.604" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:40.604" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:40.584" endtime="20241129 09:27:40.604"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.604" endtime="20241129 09:27:40.605"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:40.605" endtime="20241129 09:27:40.605"/>
</return>
<status status="PASS" starttime="20241129 09:27:40.583" endtime="20241129 09:27:40.605"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.580" endtime="20241129 09:27:40.605"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.607" endtime="20241129 09:27:40.607"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:27:40.608" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:27:40.607" endtime="20241129 09:27:40.608"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.605" endtime="20241129 09:27:40.608"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.580" endtime="20241129 09:27:40.609"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:23.075" endtime="20241129 09:27:40.609"/>
</try>
<status status="FAIL" starttime="20241129 09:27:23.075" endtime="20241129 09:27:40.609"/>
</iter>
<status status="FAIL" starttime="20241129 09:27:23.074" endtime="20241129 09:27:40.609"/>
</for>
<status status="FAIL" starttime="20241129 09:27:23.073" endtime="20241129 09:27:40.609"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:23.073" endtime="20241129 09:27:40.609"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241129 09:27:40.609" endtime="20241129 09:27:40.609"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:23.029" endtime="20241129 09:27:40.609"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.609" endtime="20241129 09:27:40.611"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:40.611" level="INFO">${response_message} = {'testCaseRunId': '13', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241129 09:27:40.611" endtime="20241129 09:27:40.611"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:40.612" level="INFO">${json_response} = {"testCaseRunId": "13", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241129 09:27:40.611" endtime="20241129 09:27:40.612"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:40.636" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:40.636" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:40.612" endtime="20241129 09:27:40.636"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.636" endtime="20241129 09:27:40.636"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:40.637" endtime="20241129 09:27:40.637"/>
</return>
<status status="PASS" starttime="20241129 09:27:40.611" endtime="20241129 09:27:40.637"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.611" endtime="20241129 09:27:40.637"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.638" endtime="20241129 09:27:40.638"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:27:40.639" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:27:40.638" endtime="20241129 09:27:40.639"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.637" endtime="20241129 09:27:40.639"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:40.609" endtime="20241129 09:27:40.640"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:23.029" endtime="20241129 09:27:40.640"/>
</try>
<status status="FAIL" starttime="20241129 09:27:23.017" endtime="20241129 09:27:40.640"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.640" endtime="20241129 09:27:40.640"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.640" endtime="20241129 09:27:40.640"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:23.017" endtime="20241129 09:27:40.640"/>
</if>
<status status="FAIL" starttime="20241129 09:27:23.001" endtime="20241129 09:27:40.641"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:23.000" endtime="20241129 09:27:40.641"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.641" endtime="20241129 09:27:40.642"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.641" endtime="20241129 09:27:40.642"/>
</branch>
<status status="PASS" starttime="20241129 09:27:23.000" endtime="20241129 09:27:40.642"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241129 09:27:40.932" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241129 09:27:40.643" endtime="20241129 09:27:40.932"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.643" endtime="20241129 09:27:40.932"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:40.933" endtime="20241129 09:27:40.933"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:40.933" endtime="20241129 09:27:40.933"/>
</branch>
<status status="PASS" starttime="20241129 09:27:40.643" endtime="20241129 09:27:40.934"/>
</try>
<status status="PASS" starttime="20241129 09:27:40.642" endtime="20241129 09:27:40.934"/>
</kw>
<status status="PASS" starttime="20241129 09:27:17.589" endtime="20241129 09:27:40.934"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:40.934" endtime="20241129 09:27:40.935"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241129 09:27:40.951" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '14', 'testCaseId': '3', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03...</msg>
<status status="PASS" starttime="20241129 09:27:40.935" endtime="20241129 09:27:40.951"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241129 09:27:40.952" endtime="20241129 09:27:40.953"/>
</break>
<status status="NOT RUN" starttime="20241129 09:27:40.952" endtime="20241129 09:27:40.953"/>
</branch>
<status status="PASS" starttime="20241129 09:27:40.952" endtime="20241129 09:27:40.953"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241129 09:27:40.954" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\04da2be3-832f-4a63-a560-e5b578d7b905"}</msg>
<msg timestamp="20241129 09:27:41.374" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\04da2be3-832f-4a63-a560-e5b578d7b905"}</msg>
<status status="PASS" starttime="20241129 09:27:40.954" endtime="20241129 09:27:41.375"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241129 09:27:41.376" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241129 09:27:41.393" level="INFO">Successfully created context. </msg>
<msg timestamp="20241129 09:27:41.394" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241129 09:27:41.375" endtime="20241129 09:27:41.394"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241129 09:27:41.394" endtime="20241129 09:27:41.395"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:27:45.446" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241129 09:27:45.446" level="INFO">${page_id} = {'page_id': 'page=1eb8066c-c384-4988-bb78-87065c685740', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:27:41.396" endtime="20241129 09:27:45.446"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.953" endtime="20241129 09:27:45.447"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:45.448" endtime="20241129 09:27:45.451"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:45.453" endtime="20241129 09:27:45.453"/>
</kw>
<msg timestamp="20241129 09:27:45.454" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.453" endtime="20241129 09:27:45.454"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.454" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241129 09:27:45.454" endtime="20241129 09:27:45.454"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.455" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.455" endtime="20241129 09:27:45.455"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.454" endtime="20241129 09:27:45.455"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.455" endtime="20241129 09:27:45.455"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.455" endtime="20241129 09:27:45.455"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.454" endtime="20241129 09:27:45.455"/>
</if>
<status status="PASS" starttime="20241129 09:27:45.454" endtime="20241129 09:27:45.455"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.454" endtime="20241129 09:27:45.455"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:45.455" endtime="20241129 09:27:45.456"/>
</return>
<msg timestamp="20241129 09:27:45.456" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.453" endtime="20241129 09:27:45.456"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.456" endtime="20241129 09:27:45.457"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241129 09:27:45.457" endtime="20241129 09:27:45.457"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:45.456" endtime="20241129 09:27:45.457"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.456" endtime="20241129 09:27:45.457"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:45.461" endtime="20241129 09:27:45.462"/>
</kw>
<msg timestamp="20241129 09:27:45.462" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.461" endtime="20241129 09:27:45.462"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.463" level="INFO">${values} = {'id': '3', 'name': 'Login 3', 'projectId': '1', 'createdAt': '2024-11-28T13:16:15.812Z', 'updatedAt': '2024-11-28T13:16:15.812Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:27:45.463" endtime="20241129 09:27:45.464"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.464" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.464" endtime="20241129 09:27:45.464"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.464" endtime="20241129 09:27:45.464"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.465" endtime="20241129 09:27:45.465"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.464" endtime="20241129 09:27:45.465"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.464" endtime="20241129 09:27:45.465"/>
</if>
<status status="PASS" starttime="20241129 09:27:45.462" endtime="20241129 09:27:45.465"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.462" endtime="20241129 09:27:45.465"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:45.465" endtime="20241129 09:27:45.465"/>
</return>
<msg timestamp="20241129 09:27:45.465" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.459" endtime="20241129 09:27:45.465"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:45.468" endtime="20241129 09:27:45.468"/>
</kw>
<msg timestamp="20241129 09:27:45.468" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.467" endtime="20241129 09:27:45.468"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.469" level="INFO">${values} = {'id': '14', 'testCaseId': '3', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03:57:17.679Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:27:45.469" endtime="20241129 09:27:45.469"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.470" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.469" endtime="20241129 09:27:45.470"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.469" endtime="20241129 09:27:45.470"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.470" endtime="20241129 09:27:45.470"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.470" endtime="20241129 09:27:45.470"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.469" endtime="20241129 09:27:45.470"/>
</if>
<status status="PASS" starttime="20241129 09:27:45.468" endtime="20241129 09:27:45.470"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.468" endtime="20241129 09:27:45.470"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:45.470" endtime="20241129 09:27:45.470"/>
</return>
<msg timestamp="20241129 09:27:45.470" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.467" endtime="20241129 09:27:45.471"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.471" endtime="20241129 09:27:45.471"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.471" endtime="20241129 09:27:45.471"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.471" endtime="20241129 09:27:45.471"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.472" level="INFO">${testCase} = {'id': '3', 'name': 'Login 3', 'projectId': '1', 'createdAt': '2024-11-28T13:16:15.812Z', 'updatedAt': '2024-11-28T13:16:15.812Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:27:45.471" endtime="20241129 09:27:45.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.472" level="INFO">${testCaseRun} = {'id': '14', 'testCaseId': '3', 'testSuiteRunId': '6', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:57:17.679Z', 'createdAt': '2024-11-29T03:57:17.679Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:27:45.472" endtime="20241129 09:27:45.472"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.473" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241129 09:27:45.473" endtime="20241129 09:27:45.473"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:45.473" endtime="20241129 09:27:45.474"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:45.478" endtime="20241129 09:27:45.478"/>
</kw>
<msg timestamp="20241129 09:27:45.478" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.477" endtime="20241129 09:27:45.478"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.479" level="INFO">${values} = [{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T13:16:15.921Z', 'updatedAt': '2024-11-28T13:16:15.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241129 09:27:45.479" endtime="20241129 09:27:45.479"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.480" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.479" endtime="20241129 09:27:45.480"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.479" endtime="20241129 09:27:45.480"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.480" endtime="20241129 09:27:45.480"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.480" endtime="20241129 09:27:45.480"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.479" endtime="20241129 09:27:45.480"/>
</if>
<status status="PASS" starttime="20241129 09:27:45.478" endtime="20241129 09:27:45.480"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.478" endtime="20241129 09:27:45.480"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:45.480" endtime="20241129 09:27:45.480"/>
</return>
<msg timestamp="20241129 09:27:45.481" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.476" endtime="20241129 09:27:45.481"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:45.481" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '14', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241129 09:27:45.481" endtime="20241129 09:27:45.481"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:45.482" level="INFO">${json_response} = {"testCaseRunId": "14", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241129 09:27:45.482" endtime="20241129 09:27:45.482"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:45.486" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:45.487" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:45.482" endtime="20241129 09:27:45.487"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:45.487" endtime="20241129 09:27:45.487"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:45.488" endtime="20241129 09:27:45.488"/>
</return>
<status status="PASS" starttime="20241129 09:27:45.481" endtime="20241129 09:27:45.488"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:45.489" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241129 09:27:45.489" endtime="20241129 09:27:45.489"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T13:16:15.921Z', 'updatedAt': '2024-11-28T13:16:15.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.491" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241129 09:27:45.490" endtime="20241129 09:27:45.491"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:45.491" endtime="20241129 09:27:45.491"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:27:45.496" endtime="20241129 09:27:45.496"/>
</kw>
<msg timestamp="20241129 09:27:45.496" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.496" endtime="20241129 09:27:45.496"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.497" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241129 09:27:45.497" endtime="20241129 09:27:45.497"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.498" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.497" endtime="20241129 09:27:45.498"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.497" endtime="20241129 09:27:45.498"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.498" endtime="20241129 09:27:45.498"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.498" endtime="20241129 09:27:45.498"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.497" endtime="20241129 09:27:45.498"/>
</if>
<status status="PASS" starttime="20241129 09:27:45.497" endtime="20241129 09:27:45.498"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.496" endtime="20241129 09:27:45.498"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:45.498" endtime="20241129 09:27:45.498"/>
</return>
<msg timestamp="20241129 09:27:45.499" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:27:45.495" endtime="20241129 09:27:45.499"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.500" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:27:45.499" endtime="20241129 09:27:45.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:45.500" endtime="20241129 09:27:45.501"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:27:45.501" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:27:45.501" endtime="20241129 09:27:45.501"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.501" endtime="20241129 09:27:45.502"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:45.502" endtime="20241129 09:27:45.502"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:45.501" endtime="20241129 09:27:45.502"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.501" endtime="20241129 09:27:45.502"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:45.503" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:27:45.503" endtime="20241129 09:27:45.503"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:27:49.619" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241129 09:27:49.620" level="INFO">${page_id} = {'page_id': 'page=82b10a8a-c7a4-46e4-b220-eb680e58563e', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:27:45.504" endtime="20241129 09:27:49.620"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241129 09:27:49.621" level="INFO">Switching to page {'page_id': 'page=82b10a8a-c7a4-46e4-b220-eb680e58563e', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241129 09:27:49.664" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=5131cb6f-4fba-4ba1-9470-a534dbc03852",
    "contexts": [
      {
        "type": "context",
        "id": "context=044e5ebd-94b6-4637-b7a1-9ace9c2468ef",
        "activePage": "page=82b10a8a-c7a4-46e4-b220-eb680e58563e",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=1eb8066c-c384-4988-bb78-87065c685740",
            "timestamp": 1732852661.558
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=82b10a8a-c7a4-46e4-b220-eb680e58563e",
            "timestamp": 1732852665.545
          }
        ]
      }
    ],
    "activeContext": "context=044e5ebd-94b6-4637-b7a1-9ace9c2468ef",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241129 09:27:49.672" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241129 09:27:49.620" endtime="20241129 09:27:49.672"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.503" endtime="20241129 09:27:49.673"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.503" endtime="20241129 09:27:49.673"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:49.674" endtime="20241129 09:27:49.674"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.673" endtime="20241129 09:27:49.674"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.677" endtime="20241129 09:27:49.677"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.674" endtime="20241129 09:27:49.678"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.680" endtime="20241129 09:27:49.680"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.682" endtime="20241129 09:27:49.682"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.678" endtime="20241129 09:27:49.682"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.684" endtime="20241129 09:27:49.684"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.682" endtime="20241129 09:27:49.684"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.687" endtime="20241129 09:27:49.687"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.684" endtime="20241129 09:27:49.688"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.690" endtime="20241129 09:27:49.690"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.691" endtime="20241129 09:27:49.691"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.691" endtime="20241129 09:27:49.691"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.691" endtime="20241129 09:27:49.691"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.688" endtime="20241129 09:27:49.691"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.693" endtime="20241129 09:27:49.693"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.692" endtime="20241129 09:27:49.693"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.695" endtime="20241129 09:27:49.695"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.695" endtime="20241129 09:27:49.696"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.695" endtime="20241129 09:27:49.696"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.696" endtime="20241129 09:27:49.697"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.696" endtime="20241129 09:27:49.697"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.695" endtime="20241129 09:27:49.697"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.693" endtime="20241129 09:27:49.697"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:49.704" endtime="20241129 09:27:49.704"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.707" endtime="20241129 09:27:49.707"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.697" endtime="20241129 09:27:49.707"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.709" endtime="20241129 09:27:49.709"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.710" endtime="20241129 09:27:49.710"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.710" endtime="20241129 09:27:49.711"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.711" endtime="20241129 09:27:49.711"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.711" endtime="20241129 09:27:49.711"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.710" endtime="20241129 09:27:49.712"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.708" endtime="20241129 09:27:49.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:27:49.718" endtime="20241129 09:27:49.718"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.723" endtime="20241129 09:27:49.723"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.712" endtime="20241129 09:27:49.724"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.726" endtime="20241129 09:27:49.726"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.726" endtime="20241129 09:27:49.726"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.726" endtime="20241129 09:27:49.727"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.727" endtime="20241129 09:27:49.727"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.727" endtime="20241129 09:27:49.727"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.726" endtime="20241129 09:27:49.727"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.724" endtime="20241129 09:27:49.727"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.730" endtime="20241129 09:27:49.730"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.727" endtime="20241129 09:27:49.730"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:27:49.740" endtime="20241129 09:27:49.741"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.741" endtime="20241129 09:27:49.741"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.730" endtime="20241129 09:27:49.741"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.503" endtime="20241129 09:27:49.741"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:49.741" endtime="20241129 09:27:49.742"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 09:27:49.742" endtime="20241129 09:27:49.742"/>
</return>
<msg timestamp="20241129 09:27:49.743" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:27:45.502" endtime="20241129 09:27:49.743"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:49.745" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241129 09:27:49.744" endtime="20241129 09:27:49.745"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.747" endtime="20241129 09:27:49.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.747" endtime="20241129 09:27:49.747"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.748" endtime="20241129 09:27:49.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.748" endtime="20241129 09:27:49.748"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.749" endtime="20241129 09:27:49.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.749" endtime="20241129 09:27:49.749"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.749" endtime="20241129 09:27:49.750"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.750" endtime="20241129 09:27:49.750"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.752" endtime="20241129 09:27:49.752"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.754" endtime="20241129 09:27:49.755"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:27:49.756" endtime="20241129 09:27:49.756"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:49.756" endtime="20241129 09:27:49.756"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.756" endtime="20241129 09:27:49.756"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.757" endtime="20241129 09:27:49.757"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:49.757" endtime="20241129 09:27:49.757"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:49.757" endtime="20241129 09:27:49.757"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.757" endtime="20241129 09:27:49.758"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.758" endtime="20241129 09:27:49.758"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:49.758" endtime="20241129 09:27:49.759"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:49.758" endtime="20241129 09:27:49.759"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.758" endtime="20241129 09:27:49.759"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.756" endtime="20241129 09:27:49.759"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.755" endtime="20241129 09:27:49.759"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:27:49.760" endtime="20241129 09:27:49.760"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:49.760" endtime="20241129 09:27:49.760"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.760" endtime="20241129 09:27:49.760"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.761" endtime="20241129 09:27:49.761"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.760" endtime="20241129 09:27:49.761"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.760" endtime="20241129 09:27:49.761"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.761" endtime="20241129 09:27:49.761"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:27:49.762" endtime="20241129 09:27:49.762"/>
</return>
<status status="NOT RUN" starttime="20241129 09:27:49.761" endtime="20241129 09:27:49.762"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.761" endtime="20241129 09:27:49.762"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.759" endtime="20241129 09:27:49.762"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.759" endtime="20241129 09:27:49.762"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.746" endtime="20241129 09:27:49.762"/>
</iter>
<status status="NOT RUN" starttime="20241129 09:27:49.746" endtime="20241129 09:27:49.762"/>
</for>
<msg timestamp="20241129 09:27:49.762" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 09:27:49.743" endtime="20241129 09:27:49.762"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:49.763" endtime="20241129 09:27:49.763"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241129 09:27:49.769" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241129 09:27:49.768" endtime="20241129 09:27:49.770"/>
</kw>
<msg timestamp="20241129 09:27:49.770" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241129 09:27:49.768" endtime="20241129 09:27:49.770"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.771" endtime="20241129 09:27:49.771"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.772" endtime="20241129 09:27:49.772"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.771" endtime="20241129 09:27:49.773"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.773" endtime="20241129 09:27:49.774"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.773" endtime="20241129 09:27:49.774"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:27:49.771" endtime="20241129 09:27:49.774"/>
</if>
<status status="NOT RUN" starttime="20241129 09:27:49.770" endtime="20241129 09:27:49.774"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.770" endtime="20241129 09:27:49.774"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:27:49.774" endtime="20241129 09:27:49.774"/>
</return>
<msg timestamp="20241129 09:27:49.775" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241129 09:27:49.767" endtime="20241129 09:27:49.775"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.776" endtime="20241129 09:27:49.776"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.775" endtime="20241129 09:27:49.776"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:49.777" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241129 09:27:49.776" endtime="20241129 09:27:49.777"/>
</kw>
<status status="PASS" starttime="20241129 09:27:49.776" endtime="20241129 09:27:49.777"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.775" endtime="20241129 09:27:49.777"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:27:49.779" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '69', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241129 09:27:49.778" endtime="20241129 09:27:49.779"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:27:49.780" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "69", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241129 09:27:49.780" endtime="20241129 09:27:49.780"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:27:49.789" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:27:49.791" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:27:49.780" endtime="20241129 09:27:49.791"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:49.794" endtime="20241129 09:27:49.797"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:27:49.797" endtime="20241129 09:27:49.797"/>
</return>
<status status="PASS" starttime="20241129 09:27:49.779" endtime="20241129 09:27:49.798"/>
</kw>
<status status="PASS" starttime="20241129 09:27:49.764" endtime="20241129 09:27:49.799"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 09:27:49.800" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 09:27:49.799" endtime="20241129 09:27:49.800"/>
</kw>
<status status="PASS" starttime="20241129 09:27:45.499" endtime="20241129 09:27:49.800"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.801" endtime="20241129 09:27:49.801"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 09:27:49.802" endtime="20241129 09:27:49.802"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.802" endtime="20241129 09:27:49.802"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.801" endtime="20241129 09:27:49.802"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.499" endtime="20241129 09:27:49.802"/>
</try>
<status status="PASS" starttime="20241129 09:27:45.499" endtime="20241129 09:27:49.803"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:49.804" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241129 09:27:49.803" endtime="20241129 09:27:49.804"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:27:49.804" endtime="20241129 09:27:49.805"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:27:49.806" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241129 09:27:49.805" endtime="20241129 09:27:49.806"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.808" endtime="20241129 09:27:49.809"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.809" endtime="20241129 09:27:49.809"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.807" endtime="20241129 09:27:49.809"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.807" endtime="20241129 09:27:49.809"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:27:49.810" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 09:27:49.810" endtime="20241129 09:27:49.811"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:49.811" endtime="20241129 09:27:49.811"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.811" endtime="20241129 09:27:49.811"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:27:49.812" endtime="20241129 09:27:49.812"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.812" endtime="20241129 09:27:49.812"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.815" endtime="20241129 09:27:49.815"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.812" endtime="20241129 09:27:49.815"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.818" endtime="20241129 09:27:49.818"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.820" endtime="20241129 09:27:49.820"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.815" endtime="20241129 09:27:49.820"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.822" endtime="20241129 09:27:49.822"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.820" endtime="20241129 09:27:49.822"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.827" endtime="20241129 09:27:49.827"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.823" endtime="20241129 09:27:49.827"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=username or id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="Highlight Elements" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Adds a highlight to elements matched by the ``selector``. Provides a style adjustment.</doc>
<msg timestamp="20241129 09:27:49.872" level="INFO">Highlighted 0 elements for 5000.</msg>
<status status="PASS" starttime="20241129 09:27:49.834" endtime="20241129 09:27:49.873"/>
</kw>
<kw name="fail-if-multiple-elements-found" library="UTIL_Validation">
<arg>${selector}</arg>
<doc>Throws error if multiple elements found for the given selector</doc>
<kw name="get-element-count" library="UTIL_BrowserHelper">
<var>${count}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>Method is used to get element count for given selector
INPUT:
id=username or id=password: String</doc>
<kw name="Get Element Count" library="RPA.Browser.Playwright">
<var>${element_count}</var>
<arg>${selector}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20241129 09:27:49.879" level="INFO">${element_count} = 0</msg>
<status status="PASS" starttime="20241129 09:27:49.874" endtime="20241129 09:27:49.879"/>
</kw>
<return>
<value>${element_count}</value>
<status status="PASS" starttime="20241129 09:27:49.879" endtime="20241129 09:27:49.879"/>
</return>
<msg timestamp="20241129 09:27:49.880" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20241129 09:27:49.874" endtime="20241129 09:27:49.880"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${count &gt;&gt; ${1}}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.883" endtime="20241129 09:27:49.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:27:49.884" endtime="20241129 09:27:49.884"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:27:49.883" endtime="20241129 09:27:49.884"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.883" endtime="20241129 09:27:49.884"/>
</if>
<status status="PASS" starttime="20241129 09:27:49.881" endtime="20241129 09:27:49.884"/>
</kw>
<status status="PASS" starttime="20241129 09:27:49.873" endtime="20241129 09:27:49.884"/>
</kw>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241129 09:28:02.411" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241129 09:28:02.411" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241129 09:28:02.413" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('id=username or id=password')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241129 09:27:49.888" endtime="20241129 09:28:02.414"/>
</kw>
<msg timestamp="20241129 09:28:02.414" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241129 09:27:49.888" endtime="20241129 09:28:02.414"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 09:28:02.414" endtime="20241129 09:28:02.414"/>
</return>
<status status="PASS" starttime="20241129 09:27:49.887" endtime="20241129 09:28:02.415"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.415" endtime="20241129 09:28:02.415"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.415" endtime="20241129 09:28:02.415"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.415" endtime="20241129 09:28:02.415"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.887" endtime="20241129 09:28:02.415"/>
</try>
<msg timestamp="20241129 09:28:02.416" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241129 09:27:49.887" endtime="20241129 09:28:02.416"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241129 09:28:02.416" endtime="20241129 09:28:02.416"/>
</return>
<status status="PASS" starttime="20241129 09:27:49.885" endtime="20241129 09:28:02.416"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241129 09:28:02.416" endtime="20241129 09:28:02.416"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:02.416" endtime="20241129 09:28:02.416"/>
</branch>
<status status="PASS" starttime="20241129 09:27:49.885" endtime="20241129 09:28:02.417"/>
</try>
<msg timestamp="20241129 09:28:02.417" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241129 09:27:49.885" endtime="20241129 09:28:02.417"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.419" endtime="20241129 09:28:02.420"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.420" endtime="20241129 09:28:02.421"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:02.422" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:28:02.421" endtime="20241129 09:28:02.422"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.420" endtime="20241129 09:28:02.423"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.419" endtime="20241129 09:28:02.423"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:02.419" endtime="20241129 09:28:02.423"/>
</if>
<status status="FAIL" starttime="20241129 09:28:02.418" endtime="20241129 09:28:02.424"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:49.834" endtime="20241129 09:28:02.425"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.427" endtime="20241129 09:28:02.427"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.430" endtime="20241129 09:28:02.430"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:49.831" endtime="20241129 09:28:02.431"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.433" endtime="20241129 09:28:02.433"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.433" endtime="20241129 09:28:02.433"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.434" endtime="20241129 09:28:02.434"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.433" endtime="20241129 09:28:02.434"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.434" endtime="20241129 09:28:02.434"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.434" endtime="20241129 09:28:02.435"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:02.433" endtime="20241129 09:28:02.435"/>
</try>
<status status="FAIL" starttime="20241129 09:27:49.830" endtime="20241129 09:28:02.435"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.436" endtime="20241129 09:28:02.436"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.436" endtime="20241129 09:28:02.436"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:02.436" endtime="20241129 09:28:02.436"/>
</if>
<status status="FAIL" starttime="20241129 09:27:49.828" endtime="20241129 09:28:02.436"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.437" endtime="20241129 09:28:02.437"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.436" endtime="20241129 09:28:02.437"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.438" endtime="20241129 09:28:02.438"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.438" endtime="20241129 09:28:02.439"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.438" endtime="20241129 09:28:02.439"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.439" endtime="20241129 09:28:02.439"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.439" endtime="20241129 09:28:02.439"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:02.438" endtime="20241129 09:28:02.439"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:02.437" endtime="20241129 09:28:02.439"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:02.444" endtime="20241129 09:28:02.444"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.447" endtime="20241129 09:28:02.447"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.439" endtime="20241129 09:28:02.447"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.448" endtime="20241129 09:28:02.448"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.448" endtime="20241129 09:28:02.449"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.448" endtime="20241129 09:28:02.449"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.449" endtime="20241129 09:28:02.449"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.449" endtime="20241129 09:28:02.449"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:02.448" endtime="20241129 09:28:02.449"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:02.447" endtime="20241129 09:28:02.449"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:02.454" endtime="20241129 09:28:02.454"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.456" endtime="20241129 09:28:02.456"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.449" endtime="20241129 09:28:02.456"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.458"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.458"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.458"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.458"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.458"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:02.458" endtime="20241129 09:28:02.459"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:02.457" endtime="20241129 09:28:02.459"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.461" endtime="20241129 09:28:02.462"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.459" endtime="20241129 09:28:02.462"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:28:02.466" endtime="20241129 09:28:02.466"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.467" endtime="20241129 09:28:02.467"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.462" endtime="20241129 09:28:02.467"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:49.811" endtime="20241129 09:28:02.467"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.467" endtime="20241129 09:28:02.467"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241129 09:28:02.467" endtime="20241129 09:28:02.467"/>
</return>
<status status="FAIL" starttime="20241129 09:27:49.809" endtime="20241129 09:28:02.468"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241129 09:28:02.468" endtime="20241129 09:28:02.468"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.468" endtime="20241129 09:28:02.468"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241129 09:28:02.468" endtime="20241129 09:28:02.469"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.469" endtime="20241129 09:28:02.469"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:49.803" endtime="20241129 09:28:02.469"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.469" endtime="20241129 09:28:02.470"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:02.472" endtime="20241129 09:28:02.473"/>
</kw>
<msg timestamp="20241129 09:28:02.473" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:02.472" endtime="20241129 09:28:02.473"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:02.473" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': 'id=username or id=password', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-29T03:52:18.195Z'}</msg>
<status status="PASS" starttime="20241129 09:28:02.473" endtime="20241129 09:28:02.473"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:02.474" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:02.474" endtime="20241129 09:28:02.474"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.474" endtime="20241129 09:28:02.474"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.474" endtime="20241129 09:28:02.474"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.474" endtime="20241129 09:28:02.474"/>
</branch>
<status status="PASS" starttime="20241129 09:28:02.473" endtime="20241129 09:28:02.474"/>
</if>
<status status="PASS" starttime="20241129 09:28:02.473" endtime="20241129 09:28:02.474"/>
</branch>
<status status="PASS" starttime="20241129 09:28:02.473" endtime="20241129 09:28:02.474"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:02.474" endtime="20241129 09:28:02.475"/>
</return>
<msg timestamp="20241129 09:28:02.475" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:02.472" endtime="20241129 09:28:02.475"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:02.475" level="INFO">${xpath} = id=username or id=password</msg>
<status status="PASS" starttime="20241129 09:28:02.475" endtime="20241129 09:28:02.475"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.475" endtime="20241129 09:28:02.475"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.475" endtime="20241129 09:28:02.476"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.475" endtime="20241129 09:28:02.476"/>
</branch>
<status status="PASS" starttime="20241129 09:28:02.475" endtime="20241129 09:28:02.476"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:02.476" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '70', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=username or id=password', 'inputValue': 'bharani@ideas2it.com', 'e...</msg>
<status status="PASS" starttime="20241129 09:28:02.476" endtime="20241129 09:28:02.476"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:02.478" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "70", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "id=username or id=password", "inputValue": "bharani@ideas2it.com", "e...</msg>
<status status="PASS" starttime="20241129 09:28:02.478" endtime="20241129 09:28:02.479"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:02.495" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:02.495" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:02.479" endtime="20241129 09:28:02.495"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.496" endtime="20241129 09:28:02.496"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:02.497" endtime="20241129 09:28:02.497"/>
</return>
<status status="PASS" starttime="20241129 09:28:02.477" endtime="20241129 09:28:02.497"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.470" endtime="20241129 09:28:02.497"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.498" endtime="20241129 09:28:02.499"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:02.499" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:28:02.499" endtime="20241129 09:28:02.500"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.497" endtime="20241129 09:28:02.500"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.469" endtime="20241129 09:28:02.501"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:49.803" endtime="20241129 09:28:02.501"/>
</try>
<status status="FAIL" starttime="20241129 09:27:49.803" endtime="20241129 09:28:02.501"/>
</iter>
<status status="FAIL" starttime="20241129 09:27:45.499" endtime="20241129 09:28:02.501"/>
</for>
<status status="FAIL" starttime="20241129 09:27:45.499" endtime="20241129 09:28:02.502"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:45.499" endtime="20241129 09:28:02.502"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241129 09:28:02.502" endtime="20241129 09:28:02.502"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:45.490" endtime="20241129 09:28:02.502"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.503" endtime="20241129 09:28:02.504"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:02.506" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '18', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241129 09:28:02.505" endtime="20241129 09:28:02.506"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:02.507" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "18", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241129 09:28:02.507" endtime="20241129 09:28:02.507"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:02.525" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:02.525" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:02.507" endtime="20241129 09:28:02.525"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.525" endtime="20241129 09:28:02.526"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:02.526" endtime="20241129 09:28:02.526"/>
</return>
<status status="PASS" starttime="20241129 09:28:02.506" endtime="20241129 09:28:02.526"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.504" endtime="20241129 09:28:02.526"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.527" endtime="20241129 09:28:02.527"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:02.528" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:28:02.528" endtime="20241129 09:28:02.528"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.526" endtime="20241129 09:28:02.529"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.503" endtime="20241129 09:28:02.530"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:45.490" endtime="20241129 09:28:02.530"/>
</try>
<status status="FAIL" starttime="20241129 09:27:45.490" endtime="20241129 09:28:02.530"/>
</iter>
<status status="FAIL" starttime="20241129 09:27:45.489" endtime="20241129 09:28:02.530"/>
</for>
<status status="FAIL" starttime="20241129 09:27:45.488" endtime="20241129 09:28:02.530"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:45.488" endtime="20241129 09:28:02.530"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241129 09:28:02.531" endtime="20241129 09:28:02.531"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:45.474" endtime="20241129 09:28:02.531"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.531" endtime="20241129 09:28:02.532"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:02.533" level="INFO">${response_message} = {'testCaseRunId': '14', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241129 09:28:02.533" endtime="20241129 09:28:02.533"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:02.534" level="INFO">${json_response} = {"testCaseRunId": "14", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241129 09:28:02.534" endtime="20241129 09:28:02.534"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:02.556" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:02.556" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:02.534" endtime="20241129 09:28:02.556"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.557" endtime="20241129 09:28:02.557"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:02.557" endtime="20241129 09:28:02.557"/>
</return>
<status status="PASS" starttime="20241129 09:28:02.533" endtime="20241129 09:28:02.557"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.532" endtime="20241129 09:28:02.558"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.558" endtime="20241129 09:28:02.559"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:02.559" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241129 09:28:02.559" endtime="20241129 09:28:02.559"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.558" endtime="20241129 09:28:02.560"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:02.531" endtime="20241129 09:28:02.561"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:45.474" endtime="20241129 09:28:02.561"/>
</try>
<status status="FAIL" starttime="20241129 09:27:45.457" endtime="20241129 09:28:02.561"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.562" endtime="20241129 09:28:02.562"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.561" endtime="20241129 09:28:02.562"/>
</branch>
<status status="FAIL" starttime="20241129 09:27:45.457" endtime="20241129 09:28:02.562"/>
</if>
<status status="FAIL" starttime="20241129 09:27:45.447" endtime="20241129 09:28:02.563"/>
</kw>
<status status="FAIL" starttime="20241129 09:27:45.447" endtime="20241129 09:28:02.563"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.564" endtime="20241129 09:28:02.565"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.563" endtime="20241129 09:28:02.565"/>
</branch>
<status status="PASS" starttime="20241129 09:27:45.447" endtime="20241129 09:28:02.565"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241129 09:28:02.802" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241129 09:28:02.565" endtime="20241129 09:28:02.802"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.565" endtime="20241129 09:28:02.802"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:02.803" endtime="20241129 09:28:02.803"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:02.803" endtime="20241129 09:28:02.803"/>
</branch>
<status status="PASS" starttime="20241129 09:28:02.565" endtime="20241129 09:28:02.803"/>
</try>
<status status="PASS" starttime="20241129 09:28:02.565" endtime="20241129 09:28:02.803"/>
</kw>
<status status="PASS" starttime="20241129 09:27:40.934" endtime="20241129 09:28:02.803"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:02.804" endtime="20241129 09:28:02.804"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241129 09:28:21.696" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '16', 'testCaseId': '3', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03...</msg>
<status status="PASS" starttime="20241129 09:28:02.804" endtime="20241129 09:28:21.697"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241129 09:28:21.698" endtime="20241129 09:28:21.698"/>
</break>
<status status="NOT RUN" starttime="20241129 09:28:21.698" endtime="20241129 09:28:21.699"/>
</branch>
<status status="PASS" starttime="20241129 09:28:21.698" endtime="20241129 09:28:21.699"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241129 09:28:21.700" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\3f225475-9c10-4b1a-a250-c5601ce5cf98"}</msg>
<msg timestamp="20241129 09:28:22.269" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\3f225475-9c10-4b1a-a250-c5601ce5cf98"}</msg>
<status status="PASS" starttime="20241129 09:28:21.700" endtime="20241129 09:28:22.269"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241129 09:28:22.270" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241129 09:28:22.285" level="INFO">Successfully created context. </msg>
<msg timestamp="20241129 09:28:22.285" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241129 09:28:22.270" endtime="20241129 09:28:22.285"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241129 09:28:22.285" endtime="20241129 09:28:22.286"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:28:26.635" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241129 09:28:26.636" level="INFO">${page_id} = {'page_id': 'page=d702d6d0-703d-4f78-a75d-8b100c5f6f54', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:28:22.287" endtime="20241129 09:28:26.636"/>
</kw>
<status status="PASS" starttime="20241129 09:28:21.699" endtime="20241129 09:28:26.636"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:26.637" endtime="20241129 09:28:26.640"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:26.644" endtime="20241129 09:28:26.644"/>
</kw>
<msg timestamp="20241129 09:28:26.645" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.644" endtime="20241129 09:28:26.645"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.645" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241129 09:28:26.645" endtime="20241129 09:28:26.645"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.646" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.646" endtime="20241129 09:28:26.646"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.646" endtime="20241129 09:28:26.646"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.646" endtime="20241129 09:28:26.646"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.646" endtime="20241129 09:28:26.646"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.645" endtime="20241129 09:28:26.647"/>
</if>
<status status="PASS" starttime="20241129 09:28:26.645" endtime="20241129 09:28:26.647"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.645" endtime="20241129 09:28:26.647"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:26.647" endtime="20241129 09:28:26.647"/>
</return>
<msg timestamp="20241129 09:28:26.647" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.643" endtime="20241129 09:28:26.647"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.648" endtime="20241129 09:28:26.648"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241129 09:28:26.648" endtime="20241129 09:28:26.648"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:26.647" endtime="20241129 09:28:26.648"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.647" endtime="20241129 09:28:26.648"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:26.652" endtime="20241129 09:28:26.652"/>
</kw>
<msg timestamp="20241129 09:28:26.652" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.652" endtime="20241129 09:28:26.652"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.653" level="INFO">${values} = {'id': '3', 'name': 'Login 3', 'projectId': '1', 'createdAt': '2024-11-28T13:16:15.812Z', 'updatedAt': '2024-11-28T13:16:15.812Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:28:26.653" endtime="20241129 09:28:26.653"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.656" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.655" endtime="20241129 09:28:26.656"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.654" endtime="20241129 09:28:26.656"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.656" endtime="20241129 09:28:26.656"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.656" endtime="20241129 09:28:26.656"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.653" endtime="20241129 09:28:26.656"/>
</if>
<status status="PASS" starttime="20241129 09:28:26.653" endtime="20241129 09:28:26.656"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.652" endtime="20241129 09:28:26.656"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:26.657" endtime="20241129 09:28:26.657"/>
</return>
<msg timestamp="20241129 09:28:26.657" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.651" endtime="20241129 09:28:26.657"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:26.663" endtime="20241129 09:28:26.664"/>
</kw>
<msg timestamp="20241129 09:28:26.664" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.662" endtime="20241129 09:28:26.664"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.666" level="INFO">${values} = {'id': '16', 'testCaseId': '3', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03:58:21.436Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:28:26.665" endtime="20241129 09:28:26.667"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.668" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.667" endtime="20241129 09:28:26.668"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.667" endtime="20241129 09:28:26.668"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.668" endtime="20241129 09:28:26.668"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.668" endtime="20241129 09:28:26.668"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.667" endtime="20241129 09:28:26.668"/>
</if>
<status status="PASS" starttime="20241129 09:28:26.665" endtime="20241129 09:28:26.668"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.664" endtime="20241129 09:28:26.668"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:26.668" endtime="20241129 09:28:26.669"/>
</return>
<msg timestamp="20241129 09:28:26.669" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.661" endtime="20241129 09:28:26.669"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.669" endtime="20241129 09:28:26.669"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.669" endtime="20241129 09:28:26.669"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.669" endtime="20241129 09:28:26.670"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.670" level="INFO">${testCase} = {'id': '3', 'name': 'Login 3', 'projectId': '1', 'createdAt': '2024-11-28T13:16:15.812Z', 'updatedAt': '2024-11-28T13:16:15.812Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:28:26.670" endtime="20241129 09:28:26.670"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.672" level="INFO">${testCaseRun} = {'id': '16', 'testCaseId': '3', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03:58:21.436Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:28:26.670" endtime="20241129 09:28:26.672"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.673" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241129 09:28:26.672" endtime="20241129 09:28:26.673"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:26.674" endtime="20241129 09:28:26.676"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:26.681" endtime="20241129 09:28:26.681"/>
</kw>
<msg timestamp="20241129 09:28:26.681" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.680" endtime="20241129 09:28:26.681"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.682" level="INFO">${values} = [{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T13:16:15.921Z', 'updatedAt': '2024-11-28T13:16:15.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241129 09:28:26.682" endtime="20241129 09:28:26.682"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.683" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.683" endtime="20241129 09:28:26.683"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.682" endtime="20241129 09:28:26.683"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.683" endtime="20241129 09:28:26.683"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.683" endtime="20241129 09:28:26.683"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.682" endtime="20241129 09:28:26.683"/>
</if>
<status status="PASS" starttime="20241129 09:28:26.682" endtime="20241129 09:28:26.683"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.681" endtime="20241129 09:28:26.683"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:26.684" endtime="20241129 09:28:26.684"/>
</return>
<msg timestamp="20241129 09:28:26.684" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.678" endtime="20241129 09:28:26.684"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:26.684" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '16', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241129 09:28:26.684" endtime="20241129 09:28:26.684"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:26.685" level="INFO">${json_response} = {"testCaseRunId": "16", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241129 09:28:26.685" endtime="20241129 09:28:26.685"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:26.710" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:26.711" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:26.685" endtime="20241129 09:28:26.711"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:26.711" endtime="20241129 09:28:26.713"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:26.713" endtime="20241129 09:28:26.713"/>
</return>
<status status="PASS" starttime="20241129 09:28:26.685" endtime="20241129 09:28:26.714"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:26.716" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241129 09:28:26.715" endtime="20241129 09:28:26.716"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '5', 'testCaseId': '3', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T13:16:15.921Z', 'updatedAt': '2024-11-28T13:16:15.921Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.718" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241129 09:28:26.717" endtime="20241129 09:28:26.718"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:26.718" endtime="20241129 09:28:26.719"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:26.728" endtime="20241129 09:28:26.728"/>
</kw>
<msg timestamp="20241129 09:28:26.729" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.727" endtime="20241129 09:28:26.729"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.731" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241129 09:28:26.730" endtime="20241129 09:28:26.731"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.732" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.731" endtime="20241129 09:28:26.732"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.731" endtime="20241129 09:28:26.732"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.733" endtime="20241129 09:28:26.733"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.732" endtime="20241129 09:28:26.733"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.731" endtime="20241129 09:28:26.733"/>
</if>
<status status="PASS" starttime="20241129 09:28:26.729" endtime="20241129 09:28:26.733"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.729" endtime="20241129 09:28:26.733"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:26.734" endtime="20241129 09:28:26.734"/>
</return>
<msg timestamp="20241129 09:28:26.734" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:26.726" endtime="20241129 09:28:26.734"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.739" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:28:26.738" endtime="20241129 09:28:26.739"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:26.739" endtime="20241129 09:28:26.740"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:28:26.741" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:28:26.741" endtime="20241129 09:28:26.741"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.742" endtime="20241129 09:28:26.742"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:26.743" endtime="20241129 09:28:26.743"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:26.742" endtime="20241129 09:28:26.743"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.742" endtime="20241129 09:28:26.743"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:26.745" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:28:26.744" endtime="20241129 09:28:26.745"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:28:31.225" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241129 09:28:31.225" level="INFO">${page_id} = {'page_id': 'page=2e70c382-ec59-499d-944f-a17d61f65341', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:28:26.746" endtime="20241129 09:28:31.225"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241129 09:28:31.226" level="INFO">Switching to page {'page_id': 'page=2e70c382-ec59-499d-944f-a17d61f65341', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241129 09:28:31.263" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=4cafc3f3-3cce-4670-a6de-fc2348b85fd0",
    "contexts": [
      {
        "type": "context",
        "id": "context=2beb78e1-4d42-4901-b547-30b84cebf049",
        "activePage": "page=2e70c382-ec59-499d-944f-a17d61f65341",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=d702d6d0-703d-4f78-a75d-8b100c5f6f54",
            "timestamp": 1732852702.441
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=2e70c382-ec59-499d-944f-a17d61f65341",
            "timestamp": 1732852706.797
          }
        ]
      }
    ],
    "activeContext": "context=2beb78e1-4d42-4901-b547-30b84cebf049",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241129 09:28:31.268" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241129 09:28:31.225" endtime="20241129 09:28:31.268"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.745" endtime="20241129 09:28:31.269"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.745" endtime="20241129 09:28:31.269"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.269" endtime="20241129 09:28:31.270"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.269" endtime="20241129 09:28:31.270"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.273" endtime="20241129 09:28:31.274"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.270" endtime="20241129 09:28:31.274"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.277" endtime="20241129 09:28:31.277"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.278" endtime="20241129 09:28:31.279"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.274" endtime="20241129 09:28:31.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.280" endtime="20241129 09:28:31.280"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.279" endtime="20241129 09:28:31.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.283" endtime="20241129 09:28:31.283"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.280" endtime="20241129 09:28:31.283"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.285" endtime="20241129 09:28:31.285"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.286" endtime="20241129 09:28:31.286"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.285" endtime="20241129 09:28:31.286"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.285" endtime="20241129 09:28:31.286"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.283" endtime="20241129 09:28:31.286"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.287" endtime="20241129 09:28:31.287"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.286" endtime="20241129 09:28:31.287"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.289" endtime="20241129 09:28:31.289"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.290" endtime="20241129 09:28:31.290"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.289" endtime="20241129 09:28:31.290"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.290" endtime="20241129 09:28:31.290"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.290" endtime="20241129 09:28:31.291"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.289" endtime="20241129 09:28:31.291"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.287" endtime="20241129 09:28:31.291"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:31.298" endtime="20241129 09:28:31.299"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.301" endtime="20241129 09:28:31.301"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.291" endtime="20241129 09:28:31.301"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.302" endtime="20241129 09:28:31.303"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.303" endtime="20241129 09:28:31.303"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.303" endtime="20241129 09:28:31.303"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.303" endtime="20241129 09:28:31.303"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.303" endtime="20241129 09:28:31.303"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.303" endtime="20241129 09:28:31.303"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.302" endtime="20241129 09:28:31.303"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:31.308" endtime="20241129 09:28:31.308"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.311" endtime="20241129 09:28:31.311"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.304" endtime="20241129 09:28:31.311"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.312" endtime="20241129 09:28:31.312"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.312" endtime="20241129 09:28:31.312"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.312" endtime="20241129 09:28:31.313"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.313" endtime="20241129 09:28:31.313"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.313" endtime="20241129 09:28:31.313"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.312" endtime="20241129 09:28:31.313"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.311" endtime="20241129 09:28:31.313"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.315" endtime="20241129 09:28:31.315"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.313" endtime="20241129 09:28:31.315"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.321" endtime="20241129 09:28:31.321"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.321" endtime="20241129 09:28:31.321"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.315" endtime="20241129 09:28:31.321"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.745" endtime="20241129 09:28:31.321"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.322" endtime="20241129 09:28:31.322"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 09:28:31.322" endtime="20241129 09:28:31.322"/>
</return>
<msg timestamp="20241129 09:28:31.323" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:28:26.743" endtime="20241129 09:28:31.323"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.325" level="INFO">${key} = testCaseFlowSequenceId:5::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241129 09:28:31.325" endtime="20241129 09:28:31.325"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.326" endtime="20241129 09:28:31.326"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.327" endtime="20241129 09:28:31.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.327" endtime="20241129 09:28:31.327"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.327" endtime="20241129 09:28:31.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.328" endtime="20241129 09:28:31.328"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.329" endtime="20241129 09:28:31.329"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.329" endtime="20241129 09:28:31.329"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.330" endtime="20241129 09:28:31.330"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.332" endtime="20241129 09:28:31.332"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.334" endtime="20241129 09:28:31.335"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:28:31.335" endtime="20241129 09:28:31.335"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:31.335" endtime="20241129 09:28:31.335"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.335" endtime="20241129 09:28:31.336"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.336" endtime="20241129 09:28:31.336"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:31.336" endtime="20241129 09:28:31.336"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:31.336" endtime="20241129 09:28:31.337"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.336" endtime="20241129 09:28:31.337"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.337" endtime="20241129 09:28:31.337"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:31.337" endtime="20241129 09:28:31.337"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:31.337" endtime="20241129 09:28:31.337"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.337" endtime="20241129 09:28:31.337"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.335" endtime="20241129 09:28:31.337"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.335" endtime="20241129 09:28:31.337"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.338"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.338"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.338"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.339"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.339"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.339"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.340" endtime="20241129 09:28:31.340"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:31.340" endtime="20241129 09:28:31.340"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:31.339" endtime="20241129 09:28:31.341"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.339" endtime="20241129 09:28:31.341"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.341"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.338" endtime="20241129 09:28:31.341"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.326" endtime="20241129 09:28:31.341"/>
</iter>
<status status="NOT RUN" starttime="20241129 09:28:31.326" endtime="20241129 09:28:31.341"/>
</for>
<msg timestamp="20241129 09:28:31.342" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 09:28:31.323" endtime="20241129 09:28:31.342"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.342" endtime="20241129 09:28:31.345"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241129 09:28:31.358" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241129 09:28:31.357" endtime="20241129 09:28:31.358"/>
</kw>
<msg timestamp="20241129 09:28:31.358" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241129 09:28:31.357" endtime="20241129 09:28:31.358"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.360" endtime="20241129 09:28:31.360"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.361" endtime="20241129 09:28:31.361"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.360" endtime="20241129 09:28:31.361"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.362" endtime="20241129 09:28:31.362"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.361" endtime="20241129 09:28:31.362"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.360" endtime="20241129 09:28:31.362"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.359" endtime="20241129 09:28:31.362"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.358" endtime="20241129 09:28:31.362"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:31.363" endtime="20241129 09:28:31.363"/>
</return>
<msg timestamp="20241129 09:28:31.363" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241129 09:28:31.356" endtime="20241129 09:28:31.363"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.364" endtime="20241129 09:28:31.364"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.364" endtime="20241129 09:28:31.364"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.365" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241129 09:28:31.365" endtime="20241129 09:28:31.365"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.364" endtime="20241129 09:28:31.366"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.364" endtime="20241129 09:28:31.366"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:31.368" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '89', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241129 09:28:31.366" endtime="20241129 09:28:31.368"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:31.371" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "89", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241129 09:28:31.369" endtime="20241129 09:28:31.371"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:31.379" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:31.379" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:31.372" endtime="20241129 09:28:31.379"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.379" endtime="20241129 09:28:31.381"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:31.381" endtime="20241129 09:28:31.381"/>
</return>
<status status="PASS" starttime="20241129 09:28:31.368" endtime="20241129 09:28:31.381"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.345" endtime="20241129 09:28:31.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 09:28:31.382" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 09:28:31.382" endtime="20241129 09:28:31.382"/>
</kw>
<status status="PASS" starttime="20241129 09:28:26.738" endtime="20241129 09:28:31.382"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.383" endtime="20241129 09:28:31.383"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.383" endtime="20241129 09:28:31.383"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.384" endtime="20241129 09:28:31.384"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.383" endtime="20241129 09:28:31.384"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.737" endtime="20241129 09:28:31.385"/>
</try>
<status status="PASS" starttime="20241129 09:28:26.737" endtime="20241129 09:28:31.385"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.387" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241129 09:28:31.386" endtime="20241129 09:28:31.388"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.388" endtime="20241129 09:28:31.389"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:28:31.390" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241129 09:28:31.389" endtime="20241129 09:28:31.390"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.390" endtime="20241129 09:28:31.390"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.391" endtime="20241129 09:28:31.391"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.390" endtime="20241129 09:28:31.391"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.390" endtime="20241129 09:28:31.391"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.392" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 09:28:31.392" endtime="20241129 09:28:31.392"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.393" endtime="20241129 09:28:31.393"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.392" endtime="20241129 09:28:31.393"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.393" endtime="20241129 09:28:31.394"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.393" endtime="20241129 09:28:31.394"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.396" endtime="20241129 09:28:31.396"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.394" endtime="20241129 09:28:31.397"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.398" endtime="20241129 09:28:31.399"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.403" endtime="20241129 09:28:31.403"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.397" endtime="20241129 09:28:31.403"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.405" endtime="20241129 09:28:31.405"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.404" endtime="20241129 09:28:31.405"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.408" endtime="20241129 09:28:31.408"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.405" endtime="20241129 09:28:31.408"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="Highlight Elements" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Adds a highlight to elements matched by the ``selector``. Provides a style adjustment.</doc>
<msg timestamp="20241129 09:28:31.444" level="INFO">Highlighted 2 elements for 5000.</msg>
<status status="PASS" starttime="20241129 09:28:31.413" endtime="20241129 09:28:31.444"/>
</kw>
<kw name="fail-if-multiple-elements-found" library="UTIL_Validation">
<arg>${selector}</arg>
<doc>Throws error if multiple elements found for the given selector</doc>
<kw name="get-element-count" library="UTIL_BrowserHelper">
<var>${count}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>Method is used to get element count for given selector
INPUT:
//input: String</doc>
<kw name="Get Element Count" library="RPA.Browser.Playwright">
<var>${element_count}</var>
<arg>${selector}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20241129 09:28:31.453" level="INFO">${element_count} = 2</msg>
<status status="PASS" starttime="20241129 09:28:31.446" endtime="20241129 09:28:31.453"/>
</kw>
<return>
<value>${element_count}</value>
<status status="PASS" starttime="20241129 09:28:31.454" endtime="20241129 09:28:31.454"/>
</return>
<msg timestamp="20241129 09:28:31.454" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20241129 09:28:31.445" endtime="20241129 09:28:31.454"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${count &gt;&gt; ${1}}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.457" endtime="20241129 09:28:31.457"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.458" endtime="20241129 09:28:31.459"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:31.460" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:31.459" endtime="20241129 09:28:31.460"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.458" endtime="20241129 09:28:31.461"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.457" endtime="20241129 09:28:31.462"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:31.457" endtime="20241129 09:28:31.462"/>
</if>
<status status="FAIL" starttime="20241129 09:28:31.455" endtime="20241129 09:28:31.463"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.444" endtime="20241129 09:28:31.465"/>
</kw>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.465" endtime="20241129 09:28:31.465"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.467" endtime="20241129 09:28:31.467"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.412" endtime="20241129 09:28:31.469"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.472" endtime="20241129 09:28:31.472"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.474" endtime="20241129 09:28:31.474"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.410" endtime="20241129 09:28:31.475"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.477" endtime="20241129 09:28:31.477"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.477" endtime="20241129 09:28:31.477"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.477" endtime="20241129 09:28:31.477"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.477" endtime="20241129 09:28:31.477"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.478" endtime="20241129 09:28:31.478"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.478" endtime="20241129 09:28:31.478"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.477" endtime="20241129 09:28:31.478"/>
</try>
<status status="FAIL" starttime="20241129 09:28:31.410" endtime="20241129 09:28:31.479"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.479" endtime="20241129 09:28:31.480"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.479" endtime="20241129 09:28:31.480"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.479" endtime="20241129 09:28:31.480"/>
</if>
<status status="FAIL" starttime="20241129 09:28:31.408" endtime="20241129 09:28:31.480"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.481" endtime="20241129 09:28:31.481"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.480" endtime="20241129 09:28:31.482"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.483" endtime="20241129 09:28:31.483"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.484" endtime="20241129 09:28:31.484"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.484" endtime="20241129 09:28:31.485"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.485" endtime="20241129 09:28:31.485"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.485" endtime="20241129 09:28:31.485"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.484" endtime="20241129 09:28:31.485"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.482" endtime="20241129 09:28:31.485"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:31.491" endtime="20241129 09:28:31.491"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.494" endtime="20241129 09:28:31.494"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.485" endtime="20241129 09:28:31.494"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.495" endtime="20241129 09:28:31.496"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.496" endtime="20241129 09:28:31.496"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.496" endtime="20241129 09:28:31.496"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.497" endtime="20241129 09:28:31.497"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.496" endtime="20241129 09:28:31.497"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.496" endtime="20241129 09:28:31.497"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.494" endtime="20241129 09:28:31.497"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:31.504" endtime="20241129 09:28:31.504"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.507" endtime="20241129 09:28:31.507"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.497" endtime="20241129 09:28:31.507"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.508" endtime="20241129 09:28:31.508"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.508" endtime="20241129 09:28:31.509"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.508" endtime="20241129 09:28:31.509"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.509" endtime="20241129 09:28:31.509"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.509" endtime="20241129 09:28:31.509"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:31.508" endtime="20241129 09:28:31.509"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:31.507" endtime="20241129 09:28:31.509"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.511" endtime="20241129 09:28:31.512"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.509" endtime="20241129 09:28:31.512"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.521" endtime="20241129 09:28:31.522"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.523" endtime="20241129 09:28:31.523"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.512" endtime="20241129 09:28:31.523"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:31.392" endtime="20241129 09:28:31.523"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.524" endtime="20241129 09:28:31.524"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241129 09:28:31.524" endtime="20241129 09:28:31.524"/>
</return>
<status status="FAIL" starttime="20241129 09:28:31.391" endtime="20241129 09:28:31.525"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.525" endtime="20241129 09:28:31.525"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.525" endtime="20241129 09:28:31.525"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.526" endtime="20241129 09:28:31.526"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.526" endtime="20241129 09:28:31.526"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.385" endtime="20241129 09:28:31.526"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.526" endtime="20241129 09:28:31.527"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:31.531" endtime="20241129 09:28:31.531"/>
</kw>
<msg timestamp="20241129 09:28:31.531" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:31.531" endtime="20241129 09:28:31.531"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.532" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-29T03:58:09.844Z'}</msg>
<status status="PASS" starttime="20241129 09:28:31.532" endtime="20241129 09:28:31.532"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.533" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:31.533" endtime="20241129 09:28:31.533"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.532" endtime="20241129 09:28:31.533"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.534" endtime="20241129 09:28:31.534"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.533" endtime="20241129 09:28:31.534"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.532" endtime="20241129 09:28:31.534"/>
</if>
<status status="PASS" starttime="20241129 09:28:31.532" endtime="20241129 09:28:31.534"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.531" endtime="20241129 09:28:31.534"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:31.534" endtime="20241129 09:28:31.534"/>
</return>
<msg timestamp="20241129 09:28:31.535" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:31.530" endtime="20241129 09:28:31.535"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:31.536" level="INFO">${xpath} = //input</msg>
<status status="PASS" starttime="20241129 09:28:31.536" endtime="20241129 09:28:31.536"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.535" endtime="20241129 09:28:31.536"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.537" endtime="20241129 09:28:31.537"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.536" endtime="20241129 09:28:31.537"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.535" endtime="20241129 09:28:31.537"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:31.539" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '90', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input', 'inputValue': 'bharani@ideas2it.com', 'errorMessage': 'FOUN...</msg>
<status status="PASS" starttime="20241129 09:28:31.537" endtime="20241129 09:28:31.539"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:31.540" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "90", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input", "inputValue": "bharani@ideas2it.com", "errorMessage": "FOUN...</msg>
<status status="PASS" starttime="20241129 09:28:31.540" endtime="20241129 09:28:31.540"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:31.546" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:31.546" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:31.541" endtime="20241129 09:28:31.546"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.547" endtime="20241129 09:28:31.547"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:31.547" endtime="20241129 09:28:31.548"/>
</return>
<status status="PASS" starttime="20241129 09:28:31.539" endtime="20241129 09:28:31.548"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.527" endtime="20241129 09:28:31.548"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.549" endtime="20241129 09:28:31.551"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:31.553" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:31.552" endtime="20241129 09:28:31.554"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.548" endtime="20241129 09:28:31.555"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.526" endtime="20241129 09:28:31.555"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:31.385" endtime="20241129 09:28:31.555"/>
</try>
<status status="FAIL" starttime="20241129 09:28:31.385" endtime="20241129 09:28:31.555"/>
</iter>
<status status="FAIL" starttime="20241129 09:28:26.736" endtime="20241129 09:28:31.556"/>
</for>
<status status="FAIL" starttime="20241129 09:28:26.736" endtime="20241129 09:28:31.556"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:26.735" endtime="20241129 09:28:31.556"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.556" endtime="20241129 09:28:31.556"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:26.717" endtime="20241129 09:28:31.557"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.557" endtime="20241129 09:28:31.558"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:31.559" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '23', 'status': 'FAILED', 'errorMessage': 'FOUND_MULTIPLE_ELEMENTS'}</msg>
<status status="PASS" starttime="20241129 09:28:31.558" endtime="20241129 09:28:31.559"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:31.561" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "23", "status": "FAILED", "errorMessage": "FOUND_MULTIPLE_ELEMENTS"}</msg>
<status status="PASS" starttime="20241129 09:28:31.560" endtime="20241129 09:28:31.561"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:31.566" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:31.567" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:31.561" endtime="20241129 09:28:31.567"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.568" endtime="20241129 09:28:31.569"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:31.570" endtime="20241129 09:28:31.570"/>
</return>
<status status="PASS" starttime="20241129 09:28:31.560" endtime="20241129 09:28:31.571"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.558" endtime="20241129 09:28:31.571"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.572" endtime="20241129 09:28:31.573"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:31.574" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:31.573" endtime="20241129 09:28:31.575"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.571" endtime="20241129 09:28:31.576"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.557" endtime="20241129 09:28:31.576"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:26.717" endtime="20241129 09:28:31.576"/>
</try>
<status status="FAIL" starttime="20241129 09:28:26.716" endtime="20241129 09:28:31.577"/>
</iter>
<status status="FAIL" starttime="20241129 09:28:26.716" endtime="20241129 09:28:31.577"/>
</for>
<status status="FAIL" starttime="20241129 09:28:26.715" endtime="20241129 09:28:31.577"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:26.714" endtime="20241129 09:28:31.578"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241129 09:28:31.578" endtime="20241129 09:28:31.578"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:26.676" endtime="20241129 09:28:31.578"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.578" endtime="20241129 09:28:31.579"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:31.581" level="INFO">${response_message} = {'testCaseRunId': '16', 'status': 'FAIL', 'errorMessage': 'FOUND_MULTIPLE_ELEMENTS'}</msg>
<status status="PASS" starttime="20241129 09:28:31.580" endtime="20241129 09:28:31.581"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:31.582" level="INFO">${json_response} = {"testCaseRunId": "16", "status": "FAIL", "errorMessage": "FOUND_MULTIPLE_ELEMENTS"}</msg>
<status status="PASS" starttime="20241129 09:28:31.581" endtime="20241129 09:28:31.582"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:31.587" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:31.588" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:31.582" endtime="20241129 09:28:31.588"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.588" endtime="20241129 09:28:31.589"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:31.589" endtime="20241129 09:28:31.590"/>
</return>
<status status="PASS" starttime="20241129 09:28:31.581" endtime="20241129 09:28:31.590"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.579" endtime="20241129 09:28:31.590"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.591" endtime="20241129 09:28:31.592"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:31.593" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:31.592" endtime="20241129 09:28:31.593"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.590" endtime="20241129 09:28:31.595"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:31.578" endtime="20241129 09:28:31.595"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:26.676" endtime="20241129 09:28:31.595"/>
</try>
<status status="FAIL" starttime="20241129 09:28:26.649" endtime="20241129 09:28:31.596"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.596" endtime="20241129 09:28:31.597"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.596" endtime="20241129 09:28:31.597"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:26.648" endtime="20241129 09:28:31.597"/>
</if>
<status status="FAIL" starttime="20241129 09:28:26.636" endtime="20241129 09:28:31.598"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:26.636" endtime="20241129 09:28:31.598"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.599" endtime="20241129 09:28:31.600"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.599" endtime="20241129 09:28:31.600"/>
</branch>
<status status="PASS" starttime="20241129 09:28:26.636" endtime="20241129 09:28:31.600"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241129 09:28:31.834" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241129 09:28:31.602" endtime="20241129 09:28:31.835"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.601" endtime="20241129 09:28:31.835"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:31.835" endtime="20241129 09:28:31.835"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:31.835" endtime="20241129 09:28:31.835"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.601" endtime="20241129 09:28:31.835"/>
</try>
<status status="PASS" starttime="20241129 09:28:31.600" endtime="20241129 09:28:31.835"/>
</kw>
<status status="PASS" starttime="20241129 09:28:02.803" endtime="20241129 09:28:31.836"/>
</iter>
<iter>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:31.836" endtime="20241129 09:28:31.837"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241129 09:28:31.872" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '15', 'testCaseId': '2', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03...</msg>
<status status="PASS" starttime="20241129 09:28:31.837" endtime="20241129 09:28:31.872"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241129 09:28:31.873" endtime="20241129 09:28:31.873"/>
</break>
<status status="NOT RUN" starttime="20241129 09:28:31.873" endtime="20241129 09:28:31.873"/>
</branch>
<status status="PASS" starttime="20241129 09:28:31.872" endtime="20241129 09:28:31.873"/>
</if>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241129 09:28:31.875" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\4e91d4b6-66a5-4675-a036-4e325e7bba8c"}</msg>
<msg timestamp="20241129 09:28:32.373" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\4e91d4b6-66a5-4675-a036-4e325e7bba8c"}</msg>
<status status="PASS" starttime="20241129 09:28:31.874" endtime="20241129 09:28:32.373"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241129 09:28:32.374" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241129 09:28:32.391" level="INFO">Successfully created context. </msg>
<msg timestamp="20241129 09:28:32.391" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241129 09:28:32.373" endtime="20241129 09:28:32.391"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241129 09:28:32.392" endtime="20241129 09:28:32.393"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:28:37.109" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241129 09:28:37.110" level="INFO">${page_id} = {'page_id': 'page=b4271be2-84dd-454c-bc44-3235b1cf1e59', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:28:32.393" endtime="20241129 09:28:37.110"/>
</kw>
<status status="PASS" starttime="20241129 09:28:31.873" endtime="20241129 09:28:37.110"/>
</kw>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:37.111" endtime="20241129 09:28:37.118"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:37.121" endtime="20241129 09:28:37.121"/>
</kw>
<msg timestamp="20241129 09:28:37.121" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.120" endtime="20241129 09:28:37.121"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.122" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241129 09:28:37.122" endtime="20241129 09:28:37.122"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.122" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.122" endtime="20241129 09:28:37.122"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.122" endtime="20241129 09:28:37.122"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.123" endtime="20241129 09:28:37.123"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.123" endtime="20241129 09:28:37.123"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.122" endtime="20241129 09:28:37.123"/>
</if>
<status status="PASS" starttime="20241129 09:28:37.121" endtime="20241129 09:28:37.123"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.121" endtime="20241129 09:28:37.123"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:37.123" endtime="20241129 09:28:37.123"/>
</return>
<msg timestamp="20241129 09:28:37.124" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.120" endtime="20241129 09:28:37.124"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.125" endtime="20241129 09:28:37.125"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241129 09:28:37.125" endtime="20241129 09:28:37.125"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:37.125" endtime="20241129 09:28:37.125"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.124" endtime="20241129 09:28:37.125"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:37.130" endtime="20241129 09:28:37.130"/>
</kw>
<msg timestamp="20241129 09:28:37.131" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.129" endtime="20241129 09:28:37.131"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.132" level="INFO">${values} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:28:37.131" endtime="20241129 09:28:37.132"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.132" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.132" endtime="20241129 09:28:37.132"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.132" endtime="20241129 09:28:37.132"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.133" endtime="20241129 09:28:37.133"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.132" endtime="20241129 09:28:37.133"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.132" endtime="20241129 09:28:37.133"/>
</if>
<status status="PASS" starttime="20241129 09:28:37.131" endtime="20241129 09:28:37.133"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.131" endtime="20241129 09:28:37.133"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:37.133" endtime="20241129 09:28:37.133"/>
</return>
<msg timestamp="20241129 09:28:37.133" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.128" endtime="20241129 09:28:37.133"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:37.135" endtime="20241129 09:28:37.136"/>
</kw>
<msg timestamp="20241129 09:28:37.136" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.135" endtime="20241129 09:28:37.136"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.136" level="INFO">${values} = {'id': '15', 'testCaseId': '2', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03:58:21.436Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:28:37.136" endtime="20241129 09:28:37.136"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.137" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.137" endtime="20241129 09:28:37.137"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.137" endtime="20241129 09:28:37.137"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.137" endtime="20241129 09:28:37.137"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.137" endtime="20241129 09:28:37.137"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.136" endtime="20241129 09:28:37.137"/>
</if>
<status status="PASS" starttime="20241129 09:28:37.136" endtime="20241129 09:28:37.137"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.136" endtime="20241129 09:28:37.137"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:37.138" endtime="20241129 09:28:37.138"/>
</return>
<msg timestamp="20241129 09:28:37.138" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.135" endtime="20241129 09:28:37.138"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.138" endtime="20241129 09:28:37.138"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.138" endtime="20241129 09:28:37.138"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.138" endtime="20241129 09:28:37.138"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.139" level="INFO">${testCase} = {'id': '2', 'name': 'Login 2', 'projectId': '1', 'createdAt': '2024-11-28T07:32:36.453Z', 'updatedAt': '2024-11-28T13:10:03.633Z', 'project': {'id': '1', 'name': 'IAssistant', 'createdAt': '2024-11-28...</msg>
<status status="PASS" starttime="20241129 09:28:37.139" endtime="20241129 09:28:37.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.139" level="INFO">${testCaseRun} = {'id': '15', 'testCaseId': '2', 'testSuiteRunId': '7', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-29T03:58:21.436Z', 'createdAt': '2024-11-29T03:58:21.436Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241129 09:28:37.139" endtime="20241129 09:28:37.139"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.140" level="INFO">${assertions} = []</msg>
<status status="PASS" starttime="20241129 09:28:37.139" endtime="20241129 09:28:37.140"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:37.140" endtime="20241129 09:28:37.141"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:37.144" endtime="20241129 09:28:37.144"/>
</kw>
<msg timestamp="20241129 09:28:37.144" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.144" endtime="20241129 09:28:37.144"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.145" level="INFO">${values} = [{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241129 09:28:37.145" endtime="20241129 09:28:37.145"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.146" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.146" endtime="20241129 09:28:37.146"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.146" endtime="20241129 09:28:37.147"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.147" endtime="20241129 09:28:37.147"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.147" endtime="20241129 09:28:37.147"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.146" endtime="20241129 09:28:37.147"/>
</if>
<status status="PASS" starttime="20241129 09:28:37.145" endtime="20241129 09:28:37.147"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.144" endtime="20241129 09:28:37.147"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:37.147" endtime="20241129 09:28:37.148"/>
</return>
<msg timestamp="20241129 09:28:37.148" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.143" endtime="20241129 09:28:37.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:37.149" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '15', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241129 09:28:37.148" endtime="20241129 09:28:37.149"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:37.150" level="INFO">${json_response} = {"testCaseRunId": "15", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241129 09:28:37.149" endtime="20241129 09:28:37.150"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:37.188" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:37.188" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:37.150" endtime="20241129 09:28:37.188"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:37.188" endtime="20241129 09:28:37.189"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:37.189" endtime="20241129 09:28:37.189"/>
</return>
<status status="PASS" starttime="20241129 09:28:37.149" endtime="20241129 09:28:37.190"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:37.190" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241129 09:28:37.190" endtime="20241129 09:28:37.190"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '2', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:32:36.752Z', 'updatedAt': '2024-11-28T13:10:03.690Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.191" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-28T06:58:06.459Z', 'updatedAt': '2024-11-28T07:02:35.243Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241129 09:28:37.191" endtime="20241129 09:28:37.192"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:37.192" endtime="20241129 09:28:37.192"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:37.195" endtime="20241129 09:28:37.196"/>
</kw>
<msg timestamp="20241129 09:28:37.196" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.195" endtime="20241129 09:28:37.196"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.198" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241129 09:28:37.198" endtime="20241129 09:28:37.198"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.199" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.198" endtime="20241129 09:28:37.199"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.198" endtime="20241129 09:28:37.199"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.199" endtime="20241129 09:28:37.199"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.199" endtime="20241129 09:28:37.199"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.198" endtime="20241129 09:28:37.199"/>
</if>
<status status="PASS" starttime="20241129 09:28:37.196" endtime="20241129 09:28:37.199"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.196" endtime="20241129 09:28:37.199"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:37.199" endtime="20241129 09:28:37.200"/>
</return>
<msg timestamp="20241129 09:28:37.200" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:37.194" endtime="20241129 09:28:37.200"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-28T07:02:20.350Z', 'updatedAt': '2024-11-28T07:02:35.087Z', 'action': {'id': '1', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.201" level="INFO">${action} = {'id': '1', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:55:33.267Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:28:37.201" endtime="20241129 09:28:37.201"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:37.201" endtime="20241129 09:28:37.201"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:28:37.202" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'prod', 'value': 'https://iassistant.ideas2it.com/', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:55:33.497Z', 'updatedAt': '2024-11-28T0...</msg>
<status status="PASS" starttime="20241129 09:28:37.201" endtime="20241129 09:28:37.202"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.203" endtime="20241129 09:28:37.203"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:37.203" endtime="20241129 09:28:37.203"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:37.203" endtime="20241129 09:28:37.204"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.202" endtime="20241129 09:28:37.204"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:37.205" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:28:37.204" endtime="20241129 09:28:37.205"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241129 09:28:41.707" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/</msg>
<msg timestamp="20241129 09:28:41.707" level="INFO">${page_id} = {'page_id': 'page=d0dff0fc-5f48-4dd2-865f-e44e376bb873', 'video_path': ''}</msg>
<status status="PASS" starttime="20241129 09:28:37.205" endtime="20241129 09:28:41.707"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241129 09:28:41.708" level="INFO">Switching to page {'page_id': 'page=d0dff0fc-5f48-4dd2-865f-e44e376bb873', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241129 09:28:41.744" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=8749d1d3-e0f7-41a7-aba8-b11dda34a497",
    "contexts": [
      {
        "type": "context",
        "id": "context=1e9dcd60-b5c8-4a72-8994-78030a72700b",
        "activePage": "page=d0dff0fc-5f48-4dd2-865f-e44e376bb873",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=b4271be2-84dd-454c-bc44-3235b1cf1e59",
            "timestamp": 1732852712.568
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=d0dff0fc-5f48-4dd2-865f-e44e376bb873",
            "timestamp": 1732852717.247
          }
        ]
      }
    ],
    "activeContext": "context=1e9dcd60-b5c8-4a72-8994-78030a72700b",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241129 09:28:41.753" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241129 09:28:41.708" endtime="20241129 09:28:41.753"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.205" endtime="20241129 09:28:41.753"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.205" endtime="20241129 09:28:41.753"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:41.754" endtime="20241129 09:28:41.754"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.754" endtime="20241129 09:28:41.754"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.757" endtime="20241129 09:28:41.757"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.755" endtime="20241129 09:28:41.757"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.760" endtime="20241129 09:28:41.760"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.762" endtime="20241129 09:28:41.762"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.758" endtime="20241129 09:28:41.762"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.763" endtime="20241129 09:28:41.763"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.762" endtime="20241129 09:28:41.763"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.766" endtime="20241129 09:28:41.766"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.763" endtime="20241129 09:28:41.766"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.768" endtime="20241129 09:28:41.768"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.769" endtime="20241129 09:28:41.769"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.768" endtime="20241129 09:28:41.769"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.768" endtime="20241129 09:28:41.769"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.766" endtime="20241129 09:28:41.769"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.770" endtime="20241129 09:28:41.771"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.769" endtime="20241129 09:28:41.771"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.772" endtime="20241129 09:28:41.772"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.773" endtime="20241129 09:28:41.773"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.772" endtime="20241129 09:28:41.773"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.773" endtime="20241129 09:28:41.773"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.773" endtime="20241129 09:28:41.773"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.772" endtime="20241129 09:28:41.774"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.771" endtime="20241129 09:28:41.774"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:41.782" endtime="20241129 09:28:41.782"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.784" endtime="20241129 09:28:41.784"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.774" endtime="20241129 09:28:41.784"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.786"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.786"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.786"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.786"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.786"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.786" endtime="20241129 09:28:41.787"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.785" endtime="20241129 09:28:41.787"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:41.793" endtime="20241129 09:28:41.794"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.798" endtime="20241129 09:28:41.798"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.787" endtime="20241129 09:28:41.798"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.800" endtime="20241129 09:28:41.800"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.800" endtime="20241129 09:28:41.801"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.800" endtime="20241129 09:28:41.801"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.801" endtime="20241129 09:28:41.801"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.801" endtime="20241129 09:28:41.801"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.800" endtime="20241129 09:28:41.801"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.799" endtime="20241129 09:28:41.802"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.805" endtime="20241129 09:28:41.806"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.802" endtime="20241129 09:28:41.806"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:28:41.815" endtime="20241129 09:28:41.815"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.815" endtime="20241129 09:28:41.815"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.806" endtime="20241129 09:28:41.815"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.205" endtime="20241129 09:28:41.816"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.816" endtime="20241129 09:28:41.817"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241129 09:28:41.817" endtime="20241129 09:28:41.817"/>
</return>
<msg timestamp="20241129 09:28:41.818" level="INFO">${value} = https://iassistant.ideas2it.com/</msg>
<status status="PASS" starttime="20241129 09:28:37.204" endtime="20241129 09:28:41.818"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:41.820" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241129 09:28:41.820" endtime="20241129 09:28:41.820"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.822" endtime="20241129 09:28:41.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.822" endtime="20241129 09:28:41.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.822" endtime="20241129 09:28:41.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.823" endtime="20241129 09:28:41.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.823" endtime="20241129 09:28:41.823"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.824" endtime="20241129 09:28:41.824"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.824" endtime="20241129 09:28:41.824"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.825" endtime="20241129 09:28:41.825"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.827" endtime="20241129 09:28:41.827"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.829" endtime="20241129 09:28:41.830"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.830"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.830"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.830"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.831"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.831"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.831"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.831"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.831"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.831"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.832"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.831" endtime="20241129 09:28:41.832"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.832"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.830" endtime="20241129 09:28:41.832"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.832"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.832"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.832"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.833" endtime="20241129 09:28:41.833"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.833"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.833"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<kw name="assert">
<var>${message}</var>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${operator}</arg>
<arg>${errorMessage}</arg>
<doc>Method used to assert and return assertion message</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.833" endtime="20241129 09:28:41.833"/>
</kw>
<return>
<value>${message}</value>
<status status="NOT RUN" starttime="20241129 09:28:41.833" endtime="20241129 09:28:41.834"/>
</return>
<status status="NOT RUN" starttime="20241129 09:28:41.833" endtime="20241129 09:28:41.834"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.833" endtime="20241129 09:28:41.834"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.834"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.832" endtime="20241129 09:28:41.834"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.821" endtime="20241129 09:28:41.834"/>
</iter>
<status status="NOT RUN" starttime="20241129 09:28:41.821" endtime="20241129 09:28:41.834"/>
</for>
<msg timestamp="20241129 09:28:41.834" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241129 09:28:41.818" endtime="20241129 09:28:41.834"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.835" endtime="20241129 09:28:41.835"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241129 09:28:41.844" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241129 09:28:41.843" endtime="20241129 09:28:41.844"/>
</kw>
<msg timestamp="20241129 09:28:41.844" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241129 09:28:41.842" endtime="20241129 09:28:41.844"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.846" endtime="20241129 09:28:41.846"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.846" endtime="20241129 09:28:41.846"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.846" endtime="20241129 09:28:41.846"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.847" endtime="20241129 09:28:41.847"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.847" endtime="20241129 09:28:41.847"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.846" endtime="20241129 09:28:41.847"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.845" endtime="20241129 09:28:41.847"/>
</branch>
<status status="PASS" starttime="20241129 09:28:41.845" endtime="20241129 09:28:41.847"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:41.847" endtime="20241129 09:28:41.847"/>
</return>
<msg timestamp="20241129 09:28:41.848" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241129 09:28:41.841" endtime="20241129 09:28:41.848"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.848" endtime="20241129 09:28:41.848"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.848" endtime="20241129 09:28:41.848"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:41.849" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241129 09:28:41.848" endtime="20241129 09:28:41.849"/>
</kw>
<status status="PASS" starttime="20241129 09:28:41.848" endtime="20241129 09:28:41.850"/>
</branch>
<status status="PASS" starttime="20241129 09:28:41.848" endtime="20241129 09:28:41.850"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:41.851" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '81', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/', 'error...</msg>
<status status="PASS" starttime="20241129 09:28:41.850" endtime="20241129 09:28:41.851"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:41.853" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "81", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/", "error...</msg>
<status status="PASS" starttime="20241129 09:28:41.852" endtime="20241129 09:28:41.853"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:41.883" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:41.884" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:41.853" endtime="20241129 09:28:41.884"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.884" endtime="20241129 09:28:41.885"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:41.885" endtime="20241129 09:28:41.885"/>
</return>
<status status="PASS" starttime="20241129 09:28:41.852" endtime="20241129 09:28:41.885"/>
</kw>
<status status="PASS" starttime="20241129 09:28:41.836" endtime="20241129 09:28:41.886"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241129 09:28:41.886" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241129 09:28:41.886" endtime="20241129 09:28:41.886"/>
</kw>
<status status="PASS" starttime="20241129 09:28:37.201" endtime="20241129 09:28:41.886"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.887" endtime="20241129 09:28:41.887"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241129 09:28:41.887" endtime="20241129 09:28:41.887"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.888" endtime="20241129 09:28:41.888"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.886" endtime="20241129 09:28:41.888"/>
</branch>
<status status="PASS" starttime="20241129 09:28:37.201" endtime="20241129 09:28:41.888"/>
</try>
<status status="PASS" starttime="20241129 09:28:37.200" endtime="20241129 09:28:41.888"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-28T07:02:35.067Z', 'updatedAt': '2024-11-28T07:02:35.067Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:41.889" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'enter': None, 'createdAt': '2024-11-28T06:56:18.180Z', 'updatedAt': '2024-11-28T06:56:18....</msg>
<status status="PASS" starttime="20241129 09:28:41.888" endtime="20241129 09:28:41.889"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.889" endtime="20241129 09:28:41.889"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241129 09:28:41.891" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-28T06:56:18.421Z', 'updatedAt': '2024-11-28T06:56:28.0...</msg>
<status status="PASS" starttime="20241129 09:28:41.890" endtime="20241129 09:28:41.891"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.892" endtime="20241129 09:28:41.892"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.892" endtime="20241129 09:28:41.892"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.892" endtime="20241129 09:28:41.892"/>
</branch>
<status status="PASS" starttime="20241129 09:28:41.891" endtime="20241129 09:28:41.893"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:41.894" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241129 09:28:41.893" endtime="20241129 09:28:41.894"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:41.894" endtime="20241129 09:28:41.894"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.894" endtime="20241129 09:28:41.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241129 09:28:41.894" endtime="20241129 09:28:41.894"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.894" endtime="20241129 09:28:41.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.897" endtime="20241129 09:28:41.897"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.896" endtime="20241129 09:28:41.898"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.899" endtime="20241129 09:28:41.900"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.902" endtime="20241129 09:28:41.902"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.898" endtime="20241129 09:28:41.902"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.903" endtime="20241129 09:28:41.903"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.902" endtime="20241129 09:28:41.904"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.906" endtime="20241129 09:28:41.906"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.904" endtime="20241129 09:28:41.907"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="Highlight Elements" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Adds a highlight to elements matched by the ``selector``. Provides a style adjustment.</doc>
<msg timestamp="20241129 09:28:41.946" level="INFO">Highlighted 2 elements for 5000.</msg>
<status status="PASS" starttime="20241129 09:28:41.913" endtime="20241129 09:28:41.946"/>
</kw>
<kw name="fail-if-multiple-elements-found" library="UTIL_Validation">
<arg>${selector}</arg>
<doc>Throws error if multiple elements found for the given selector</doc>
<kw name="get-element-count" library="UTIL_BrowserHelper">
<var>${count}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>Method is used to get element count for given selector
INPUT:
//input: String</doc>
<kw name="Get Element Count" library="RPA.Browser.Playwright">
<var>${element_count}</var>
<arg>${selector}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the count of elements found with ``selector``.</doc>
<msg timestamp="20241129 09:28:41.953" level="INFO">${element_count} = 2</msg>
<status status="PASS" starttime="20241129 09:28:41.948" endtime="20241129 09:28:41.953"/>
</kw>
<return>
<value>${element_count}</value>
<status status="PASS" starttime="20241129 09:28:41.954" endtime="20241129 09:28:41.954"/>
</return>
<msg timestamp="20241129 09:28:41.954" level="INFO">${count} = 2</msg>
<status status="PASS" starttime="20241129 09:28:41.948" endtime="20241129 09:28:41.954"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${count &gt;&gt; ${1}}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.958" endtime="20241129 09:28:41.959"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:41.960" endtime="20241129 09:28:41.961"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:41.962" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:41.961" endtime="20241129 09:28:41.962"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.959" endtime="20241129 09:28:41.963"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.958" endtime="20241129 09:28:41.964"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:41.957" endtime="20241129 09:28:41.964"/>
</if>
<status status="FAIL" starttime="20241129 09:28:41.956" endtime="20241129 09:28:41.965"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.947" endtime="20241129 09:28:41.966"/>
</kw>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.967" endtime="20241129 09:28:41.967"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.968" endtime="20241129 09:28:41.968"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.913" endtime="20241129 09:28:41.968"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.971" endtime="20241129 09:28:41.971"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.972" endtime="20241129 09:28:41.972"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.911" endtime="20241129 09:28:41.973"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.977" endtime="20241129 09:28:41.977"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.977" endtime="20241129 09:28:41.977"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.978" endtime="20241129 09:28:41.978"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.978" endtime="20241129 09:28:41.978"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.979" endtime="20241129 09:28:41.979"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.978" endtime="20241129 09:28:41.979"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.978" endtime="20241129 09:28:41.979"/>
</try>
<status status="FAIL" starttime="20241129 09:28:41.910" endtime="20241129 09:28:41.979"/>
</kw>
<if>
<branch type="IF" condition="${action}[enter]">
<kw name="Keyboard Key" library="RPA.Browser.Playwright">
<arg>press</arg>
<arg>Enter</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Press a keyboard key on the virtual keyboard or set a key up or down.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.980" endtime="20241129 09:28:41.980"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.979" endtime="20241129 09:28:41.980"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.979" endtime="20241129 09:28:41.980"/>
</if>
<status status="FAIL" starttime="20241129 09:28:41.907" endtime="20241129 09:28:41.980"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.982" endtime="20241129 09:28:41.982"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.980" endtime="20241129 09:28:41.982"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.984" endtime="20241129 09:28:41.984"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.984" endtime="20241129 09:28:41.984"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.984" endtime="20241129 09:28:41.984"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.985" endtime="20241129 09:28:41.985"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.985" endtime="20241129 09:28:41.985"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.984" endtime="20241129 09:28:41.985"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.982" endtime="20241129 09:28:41.985"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:41.993" endtime="20241129 09:28:41.993"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.996" endtime="20241129 09:28:41.996"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.985" endtime="20241129 09:28:41.996"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.997" endtime="20241129 09:28:41.997"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.998" endtime="20241129 09:28:41.998"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.997" endtime="20241129 09:28:41.998"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:41.998" endtime="20241129 09:28:41.998"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.998" endtime="20241129 09:28:41.998"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:41.997" endtime="20241129 09:28:41.998"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:41.996" endtime="20241129 09:28:41.998"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241129 09:28:42.003" endtime="20241129 09:28:42.004"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.007" endtime="20241129 09:28:42.007"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:41.998" endtime="20241129 09:28:42.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.010" endtime="20241129 09:28:42.010"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.011" endtime="20241129 09:28:42.011"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.010" endtime="20241129 09:28:42.011"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.011" endtime="20241129 09:28:42.011"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.011" endtime="20241129 09:28:42.011"/>
</branch>
<status status="NOT RUN" starttime="20241129 09:28:42.010" endtime="20241129 09:28:42.011"/>
</if>
<status status="NOT RUN" starttime="20241129 09:28:42.008" endtime="20241129 09:28:42.011"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.014" endtime="20241129 09:28:42.014"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.011" endtime="20241129 09:28:42.014"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241129 09:28:42.022" endtime="20241129 09:28:42.022"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.022" endtime="20241129 09:28:42.023"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.014" endtime="20241129 09:28:42.023"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:41.894" endtime="20241129 09:28:42.023"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.024" endtime="20241129 09:28:42.024"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241129 09:28:42.024" endtime="20241129 09:28:42.024"/>
</return>
<status status="FAIL" starttime="20241129 09:28:41.893" endtime="20241129 09:28:42.025"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241129 09:28:42.026" endtime="20241129 09:28:42.026"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.026" endtime="20241129 09:28:42.026"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241129 09:28:42.026" endtime="20241129 09:28:42.027"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.027" endtime="20241129 09:28:42.027"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:41.888" endtime="20241129 09:28:42.027"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:42.027" endtime="20241129 09:28:42.028"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241129 09:28:42.031" endtime="20241129 09:28:42.031"/>
</kw>
<msg timestamp="20241129 09:28:42.032" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:42.031" endtime="20241129 09:28:42.032"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:42.032" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input', 'pageId': '1', 'createdAt': '2024-11-28T06:56:16.519Z', 'updatedAt': '2024-11-29T03:58:09.844Z'}</msg>
<status status="PASS" starttime="20241129 09:28:42.032" endtime="20241129 09:28:42.032"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:42.033" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:42.033" endtime="20241129 09:28:42.033"/>
</kw>
<status status="PASS" starttime="20241129 09:28:42.033" endtime="20241129 09:28:42.033"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.033" endtime="20241129 09:28:42.033"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.033" endtime="20241129 09:28:42.033"/>
</branch>
<status status="PASS" starttime="20241129 09:28:42.032" endtime="20241129 09:28:42.034"/>
</if>
<status status="PASS" starttime="20241129 09:28:42.032" endtime="20241129 09:28:42.034"/>
</branch>
<status status="PASS" starttime="20241129 09:28:42.032" endtime="20241129 09:28:42.034"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241129 09:28:42.034" endtime="20241129 09:28:42.034"/>
</return>
<msg timestamp="20241129 09:28:42.034" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241129 09:28:42.031" endtime="20241129 09:28:42.034"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241129 09:28:42.035" level="INFO">${xpath} = //input</msg>
<status status="PASS" starttime="20241129 09:28:42.035" endtime="20241129 09:28:42.035"/>
</kw>
<status status="PASS" starttime="20241129 09:28:42.034" endtime="20241129 09:28:42.035"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241129 09:28:42.035" endtime="20241129 09:28:42.035"/>
</kw>
<status status="NOT RUN" starttime="20241129 09:28:42.035" endtime="20241129 09:28:42.035"/>
</branch>
<status status="PASS" starttime="20241129 09:28:42.034" endtime="20241129 09:28:42.035"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:42.036" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '82', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input', 'inputValue': 'bharani@ideas2it.com', 'errorMessage': 'FOUN...</msg>
<status status="PASS" starttime="20241129 09:28:42.035" endtime="20241129 09:28:42.036"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241129 09:28:42.037" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "82", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input", "inputValue": "bharani@ideas2it.com", "errorMessage": "FOUN...</msg>
<status status="PASS" starttime="20241129 09:28:42.037" endtime="20241129 09:28:42.037"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241129 09:28:42.063" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241129 09:28:42.063" level="INFO">${producer_response} = &lt;function delivery_report at 0x00000194D50AB430&gt;</msg>
<status status="PASS" starttime="20241129 09:28:42.038" endtime="20241129 09:28:42.063"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:42.063" endtime="20241129 09:28:42.064"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241129 09:28:42.064" endtime="20241129 09:28:42.064"/>
</return>
<status status="PASS" starttime="20241129 09:28:42.037" endtime="20241129 09:28:42.064"/>
</kw>
<status status="PASS" starttime="20241129 09:28:42.028" endtime="20241129 09:28:42.064"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:42.065" endtime="20241129 09:28:42.066"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241129 09:28:42.066" level="FAIL">FOUND_MULTIPLE_ELEMENTS</msg>
<status status="FAIL" starttime="20241129 09:28:42.066" endtime="20241129 09:28:42.066"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:42.065" endtime="20241129 09:28:42.067"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:42.027" endtime="20241129 09:28:42.067"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:41.888" endtime="20241129 09:28:42.067"/>
</try>
<status status="FAIL" starttime="20241129 09:28:41.888" endtime="20241129 09:28:42.068"/>
</iter>
<status status="FAIL" starttime="20241129 09:28:37.200" endtime="20241129 09:28:42.068"/>
</for>
<status status="FAIL" starttime="20241129 09:28:37.200" endtime="20241129 09:28:42.068"/>
</branch>
<status status="FAIL" starttime="20241129 09:28:37.200" endtime="20241129 09:28:42.068"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241129 09:28:42.069" endtime="20241129 09:28:42.069"/>
</kw>
<status status="FAIL" starttime="20241129 09:28:37.191" endtime="20241129 09:28:42.069"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241129 09:28:42.069" endtime="20241129 09:28:42.070"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241129 09:28:42.071" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '21', 'status': 'FAILED', 'errorMessage': 'FOUND_MULTIPLE_ELEMENTS'}</msg>
<status status="PASS" starttime="20241129 09:28:42.070" endtime="20241129 09:28:42.071"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
