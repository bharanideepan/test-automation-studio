<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.9.20 on win32)" generated="20241124 23:00:29.196" rpa="true" schemaversion="3">
<suite id="s1" name="Start" source="C:\Users\Admin\Documents\Hackathon\Test Automation Studio\Test-automation-studio-projects\test-automation-rf\code\robots\start.robot">
<test id="s1-t1" name="initialize-fb-worker" line="42">
<kw name="execute-functional-block">
<tag>to-initialize-library</tag>
<doc>To execute fb</doc>
<while condition="'${TERMINATION_FLAG}' == 'False'">
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:00:32.584" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\1adf4d28-b232-40ff-999d-e06b14217053"}</msg>
<msg timestamp="20241124 23:00:33.396" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\1adf4d28-b232-40ff-999d-e06b14217053"}</msg>
<status status="PASS" starttime="20241124 23:00:32.584" endtime="20241124 23:00:33.399"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:00:33.400" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:00:33.429" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:00:33.429" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:00:33.399" endtime="20241124 23:00:33.429"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<msg timestamp="20241124 23:00:33.441" level="INFO">Set timeout to: 20000</msg>
<status status="PASS" starttime="20241124 23:00:33.429" endtime="20241124 23:00:33.441"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:00:36.432" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:00:36.432" level="INFO">${page_id} = {'page_id': 'page=63dae667-b936-46f9-b4c8-6dc82ffe1f64', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:00:33.441" endtime="20241124 23:00:36.432"/>
</kw>
<status status="PASS" starttime="20241124 23:00:32.576" endtime="20241124 23:00:36.432"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.432" endtime="20241124 23:00:36.435"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:00:36.490" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '15', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:30:35.687Z', 'createdAt': '2024-11-24T17:30:35.687Z', 'errorMes...</msg>
<status status="PASS" starttime="20241124 23:00:36.435" endtime="20241124 23:00:36.490"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 23:00:36.491" endtime="20241124 23:00:36.492"/>
</break>
<status status="NOT RUN" starttime="20241124 23:00:36.491" endtime="20241124 23:00:36.492"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.491" endtime="20241124 23:00:36.492"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.495" endtime="20241124 23:00:36.514"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.529" endtime="20241124 23:00:36.531"/>
</kw>
<msg timestamp="20241124 23:00:36.531" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.529" endtime="20241124 23:00:36.531"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.539" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.539" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.531" endtime="20241124 23:00:36.539"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.539" endtime="20241124 23:00:36.539"/>
</return>
<msg timestamp="20241124 23:00:36.547" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.528" endtime="20241124 23:00:36.547"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.547" endtime="20241124 23:00:36.547"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 23:00:36.547" endtime="20241124 23:00:36.547"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.547" endtime="20241124 23:00:36.547"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.547" endtime="20241124 23:00:36.547"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</kw>
<msg timestamp="20241124 23:00:36.557" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.557" level="INFO">${values} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:03:36.108Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.557" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.557"/>
</return>
<msg timestamp="20241124 23:00:36.563" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.557" endtime="20241124 23:00:36.564"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.567" endtime="20241124 23:00:36.567"/>
</kw>
<msg timestamp="20241124 23:00:36.572" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.567" endtime="20241124 23:00:36.572"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.573" level="INFO">${values} = {'id': '15', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:30:35.687Z', 'createdAt': '2024-11-24T17:30:35.687Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.573" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.572" endtime="20241124 23:00:36.573"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.572" endtime="20241124 23:00:36.573"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.573"/>
</return>
<msg timestamp="20241124 23:00:36.573" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.567" endtime="20241124 23:00:36.573"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.580" endtime="20241124 23:00:36.580"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.580"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.573" endtime="20241124 23:00:36.580"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.580" level="INFO">${testCase} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:03:36.108Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:00:36.580" endtime="20241124 23:00:36.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.580" level="INFO">${testCaseRun} = {'id': '15', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:30:35.687Z', 'createdAt': '2024-11-24T17:30:35.687Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:00:36.580" endtime="20241124 23:00:36.580"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.580" level="INFO">${assertions} = [{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTar...</msg>
<status status="PASS" starttime="20241124 23:00:36.580" endtime="20241124 23:00:36.580"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.580" endtime="20241124 23:00:36.588"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.591"/>
</kw>
<msg timestamp="20241124 23:00:36.591" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.591"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.595" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:03:36.152Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.595"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.595" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.595" endtime="20241124 23:00:36.595"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.595" endtime="20241124 23:00:36.595"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.595" endtime="20241124 23:00:36.595"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.595" endtime="20241124 23:00:36.597"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.595" endtime="20241124 23:00:36.597"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.597"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.597"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.597" endtime="20241124 23:00:36.597"/>
</return>
<msg timestamp="20241124 23:00:36.597" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.591" endtime="20241124 23:00:36.597"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:36.597" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '15', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 23:00:36.597" endtime="20241124 23:00:36.597"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:00:36.597" level="INFO">${json_response} = {"testCaseRunId": "15", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 23:00:36.597" endtime="20241124 23:00:36.597"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:00:36.605" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:00:36.605" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:00:36.597" endtime="20241124 23:00:36.605"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.610" endtime="20241124 23:00:36.610"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:00:36.610" endtime="20241124 23:00:36.610"/>
</return>
<status status="PASS" starttime="20241124 23:00:36.597" endtime="20241124 23:00:36.610"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:36.612" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241124 23:00:36.610" endtime="20241124 23:00:36.612"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:03:36.152Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.621" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-24T16:52:08.694Z', 'updatedAt': '2024-11-24T16:52:08.694Z', 'flowActionSequences': [{'id': '1', 'actionId': '1', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241124 23:00:36.621" endtime="20241124 23:00:36.621"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.624" endtime="20241124 23:00:36.629"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.670" endtime="20241124 23:00:36.670"/>
</kw>
<msg timestamp="20241124 23:00:36.670" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.669" endtime="20241124 23:00:36.670"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.678" level="INFO">${values} = [{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T16:52:08.810Z', 'action': {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE',...</msg>
<status status="PASS" starttime="20241124 23:00:36.678" endtime="20241124 23:00:36.678"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.686" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.678" endtime="20241124 23:00:36.686"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.678" endtime="20241124 23:00:36.686"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.687"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.687"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.678" endtime="20241124 23:00:36.687"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.670" endtime="20241124 23:00:36.687"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.670" endtime="20241124 23:00:36.687"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.687"/>
</return>
<msg timestamp="20241124 23:00:36.687" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:36.644" endtime="20241124 23:00:36.687"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T16:52:08.810Z', 'action': {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.702" level="INFO">${action} = {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T14:13:38.009Z', 'updatedAt': '2024-11-24T14:13:38.009Z', 'inputs': [{...</msg>
<status status="PASS" starttime="20241124 23:00:36.694" endtime="20241124 23:00:36.702"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.704" endtime="20241124 23:00:36.707"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:00:36.707" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T14:13:38.094Z', 'updatedAt': '2024-11-24T14:13:38.094Z'}</msg>
<status status="PASS" starttime="20241124 23:00:36.707" endtime="20241124 23:00:36.707"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.711" endtime="20241124 23:00:36.711"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.711" endtime="20241124 23:00:36.711"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.710" endtime="20241124 23:00:36.711"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.707" endtime="20241124 23:00:36.711"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.711" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:00:36.711" endtime="20241124 23:00:36.711"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:00:36.714" endtime="20241124 23:00:36.715"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.714" endtime="20241124 23:00:36.715"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:00:36.807" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<msg timestamp="20241124 23:00:36.807" level="INFO">${page_id} = {'page_id': 'page=f3e76b8c-85e5-4f8b-82bc-0f725b42f541', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:00:36.718" endtime="20241124 23:00:36.807"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:00:36.811" level="INFO">Switching to page {'page_id': 'page=f3e76b8c-85e5-4f8b-82bc-0f725b42f541', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:00:36.824" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=7a7d3532-28a5-4655-870c-c160b4aee35c",
    "contexts": [
      {
        "type": "context",
        "id": "context=f524f96d-868f-4e5e-a326-714b59259634",
        "activePage": "page=f3e76b8c-85e5-4f8b-82bc-0f725b42f541",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=63dae667-b936-46f9-b4c8-6dc82ffe1f64",
            "timestamp": 1732469433.662
          },
          {
            "type": "page",
            "title": "",
            "url": "about:blank",
            "id": "page=f3e76b8c-85e5-4f8b-82bc-0f725b42f541",
            "timestamp": 1732469436.788
          }
        ]
      }
    ],
    "activeContext": "context=f524f96d-868f-4e5e-a326-714b59259634",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:00:36.836" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:00:36.811" endtime="20241124 23:00:36.836"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.715" endtime="20241124 23:00:36.836"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.715" endtime="20241124 23:00:36.836"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.838" endtime="20241124 23:00:36.838"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.836" endtime="20241124 23:00:36.838"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.840" endtime="20241124 23:00:36.840"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.840" endtime="20241124 23:00:36.840"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.838" endtime="20241124 23:00:36.840"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.840" endtime="20241124 23:00:36.840"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.840" endtime="20241124 23:00:36.840"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.849" endtime="20241124 23:00:36.849"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.840" endtime="20241124 23:00:36.849"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.849" endtime="20241124 23:00:36.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.851"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.857"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.857"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.851" endtime="20241124 23:00:36.857"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:00:36.857" endtime="20241124 23:00:36.857"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.865" endtime="20241124 23:00:36.865"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.857" endtime="20241124 23:00:36.865"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.865" endtime="20241124 23:00:36.867"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.867"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.867"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.867"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.865" endtime="20241124 23:00:36.867"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:00:36.875" endtime="20241124 23:00:36.875"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.875" endtime="20241124 23:00:36.875"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.867" endtime="20241124 23:00:36.875"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.881" endtime="20241124 23:00:36.881"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.881" endtime="20241124 23:00:36.882"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.875" endtime="20241124 23:00:36.882"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.882"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.882" endtime="20241124 23:00:36.889"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.711" endtime="20241124 23:00:36.889"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:00:36.889" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</return>
<msg timestamp="20241124 23:00:36.889" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:00:36.711" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.889" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.889" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.889" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.889" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.889"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.898" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:00:36.898" endtime="20241124 23:00:36.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.898" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.898" endtime="20241124 23:00:36.898"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.898" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:00:36.898" endtime="20241124 23:00:36.900"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.900" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:00:36.900" endtime="20241124 23:00:36.900"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:36.900" endtime="20241124 23:00:36.900"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:00:36.902" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.902"/>
</kw>
<msg timestamp="20241124 23:00:36.902" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.902"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.902"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.906" endtime="20241124 23:00:36.906"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.906"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.906" endtime="20241124 23:00:36.906"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.906" endtime="20241124 23:00:36.906"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.908"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.908"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.908"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</return>
<msg timestamp="20241124 23:00:36.908" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.902" endtime="20241124 23:00:36.908"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:00:36.908" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</kw>
<msg timestamp="20241124 23:00:36.908" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.908"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.915" endtime="20241124 23:00:36.915"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.915" endtime="20241124 23:00:36.915"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.915"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.915"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.915"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.915" endtime="20241124 23:00:36.915"/>
</return>
<msg timestamp="20241124 23:00:36.916" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.908" endtime="20241124 23:00:36.916"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.918"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.916" endtime="20241124 23:00:36.918"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.923"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.925"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.925"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.923" endtime="20241124 23:00:36.925"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.925"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.918" endtime="20241124 23:00:36.925"/>
</if>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.925"/>
</iter>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.925"/>
</for>
<msg timestamp="20241124 23:00:36.925" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:00:36.889" endtime="20241124 23:00:36.925"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.925" endtime="20241124 23:00:36.927"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:00:36.933" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:00:36.932" endtime="20241124 23:00:36.933"/>
</kw>
<msg timestamp="20241124 23:00:36.933" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.932" endtime="20241124 23:00:36.933"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</return>
<msg timestamp="20241124 23:00:36.933" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.931" endtime="20241124 23:00:36.933"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.933"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.933" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.939"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.939"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.933" endtime="20241124 23:00:36.939"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:36.939" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '71', 'status': 'COMPLETED', 'actionName': 'New Page', 'actionType': 'NEW_PAGE', 'actionXpath': '', 'inputValue': '', 'errorMessage': '', 'assertionMessage': None}</msg>
<status status="PASS" starttime="20241124 23:00:36.939" endtime="20241124 23:00:36.939"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:00:36.939" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "71", "status": "COMPLETED", "actionName": "New Page", "actionType": "NEW_PAGE", "actionXpath": "", "inputValue": "", "errorMessage": "", "assertionMessage": null}</msg>
<status status="PASS" starttime="20241124 23:00:36.939" endtime="20241124 23:00:36.939"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:00:36.956" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:00:36.956" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:00:36.939" endtime="20241124 23:00:36.956"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.956" endtime="20241124 23:00:36.959"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:00:36.959" endtime="20241124 23:00:36.959"/>
</return>
<status status="PASS" starttime="20241124 23:00:36.939" endtime="20241124 23:00:36.959"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.927" endtime="20241124 23:00:36.960"/>
</kw>
<status status="PASS" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.960"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.961" endtime="20241124 23:00:36.961"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:00:36.961" endtime="20241124 23:00:36.961"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.961" endtime="20241124 23:00:36.961"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.960" endtime="20241124 23:00:36.961"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.961"/>
</try>
<status status="PASS" starttime="20241124 23:00:36.687" endtime="20241124 23:00:36.961"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T16:52:08.810Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.962" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:43:45.668Z', 'updatedAt': '2024-11-24T16:43:45.668Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:00:36.962" endtime="20241124 23:00:36.962"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.962" endtime="20241124 23:00:36.963"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:00:36.964" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:43:45.923Z', 'updatedAt': '2024-11-24T16:44:01.1...</msg>
<status status="PASS" starttime="20241124 23:00:36.963" endtime="20241124 23:00:36.964"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.965" endtime="20241124 23:00:36.965"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.965" endtime="20241124 23:00:36.965"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.965" endtime="20241124 23:00:36.966"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.965" endtime="20241124 23:00:36.966"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:36.967" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:00:36.966" endtime="20241124 23:00:36.967"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:00:36.967" endtime="20241124 23:00:36.967"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.967" endtime="20241124 23:00:36.968"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:00:36.969" endtime="20241124 23:00:36.970"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.969" endtime="20241124 23:00:36.970"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.974" endtime="20241124 23:00:36.974"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.970" endtime="20241124 23:00:36.974"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.975" endtime="20241124 23:00:36.975"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.975" endtime="20241124 23:00:36.975"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.974" endtime="20241124 23:00:36.975"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.980" endtime="20241124 23:00:36.980"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.975" endtime="20241124 23:00:36.980"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:00:36.980" endtime="20241124 23:00:36.980"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:36.980" endtime="20241124 23:00:36.980"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:36.989" endtime="20241124 23:00:36.989"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:00:49.193" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-1.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-1.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241124 23:00:49.193" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241124 23:00:49.193" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id="username"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241124 23:00:37.004" endtime="20241124 23:00:49.198"/>
</kw>
<msg timestamp="20241124 23:00:49.198" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:00:37.001" endtime="20241124 23:00:49.198"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:00:49.198" endtime="20241124 23:00:49.198"/>
</return>
<status status="PASS" starttime="20241124 23:00:37.001" endtime="20241124 23:00:49.198"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.198" endtime="20241124 23:00:49.198"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.198" endtime="20241124 23:00:49.198"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.198" endtime="20241124 23:00:49.198"/>
</branch>
<status status="PASS" starttime="20241124 23:00:37.001" endtime="20241124 23:00:49.198"/>
</try>
<msg timestamp="20241124 23:00:49.198" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.999" endtime="20241124 23:00:49.204"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:00:49.204" endtime="20241124 23:00:49.204"/>
</return>
<status status="PASS" starttime="20241124 23:00:36.996" endtime="20241124 23:00:49.204"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:00:49.204" endtime="20241124 23:00:49.204"/>
</return>
<status status="NOT RUN" starttime="20241124 23:00:49.204" endtime="20241124 23:00:49.204"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.996" endtime="20241124 23:00:49.204"/>
</try>
<msg timestamp="20241124 23:00:49.204" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241124 23:00:36.989" endtime="20241124 23:00:49.204"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.206"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.206"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:00:49.214" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:00:49.214" endtime="20241124 23:00:49.214"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.214"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.214"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.214"/>
</if>
<status status="FAIL" starttime="20241124 23:00:49.206" endtime="20241124 23:00:49.224"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.989" endtime="20241124 23:00:49.224"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.224" endtime="20241124 23:00:49.231"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.233" endtime="20241124 23:00:49.233"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.989" endtime="20241124 23:00:49.237"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.243" endtime="20241124 23:00:49.243"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.243" endtime="20241124 23:00:49.244"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.244" endtime="20241124 23:00:49.244"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.244" endtime="20241124 23:00:49.244"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.244" endtime="20241124 23:00:49.244"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.244" endtime="20241124 23:00:49.246"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:49.244" endtime="20241124 23:00:49.246"/>
</try>
<status status="FAIL" starttime="20241124 23:00:36.989" endtime="20241124 23:00:49.246"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.980" endtime="20241124 23:00:49.246"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.246" endtime="20241124 23:00:49.246"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.246" endtime="20241124 23:00:49.246"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.253" endtime="20241124 23:00:49.253"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.255" endtime="20241124 23:00:49.255"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.253" endtime="20241124 23:00:49.255"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.255" endtime="20241124 23:00:49.256"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.255" endtime="20241124 23:00:49.256"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:49.253" endtime="20241124 23:00:49.256"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:49.246" endtime="20241124 23:00:49.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:00:49.263" endtime="20241124 23:00:49.263"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.271" endtime="20241124 23:00:49.271"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.256" endtime="20241124 23:00:49.271"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.278" endtime="20241124 23:00:49.278"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.278" endtime="20241124 23:00:49.278"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.278" endtime="20241124 23:00:49.278"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.280" endtime="20241124 23:00:49.280"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.278" endtime="20241124 23:00:49.280"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:49.278" endtime="20241124 23:00:49.280"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:49.271" endtime="20241124 23:00:49.280"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:00:49.288" endtime="20241124 23:00:49.288"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.280" endtime="20241124 23:00:49.296"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</if>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.296"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.307" endtime="20241124 23:00:49.307"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.296" endtime="20241124 23:00:49.307"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:00:49.314" endtime="20241124 23:00:49.314"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.314" endtime="20241124 23:00:49.314"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.307" endtime="20241124 23:00:49.314"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.967" endtime="20241124 23:00:49.314"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.314" endtime="20241124 23:00:49.314"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.314" endtime="20241124 23:00:49.314"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241124 23:00:49.314" endtime="20241124 23:00:49.314"/>
</return>
<status status="FAIL" starttime="20241124 23:00:36.966" endtime="20241124 23:00:49.322"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241124 23:00:49.322" endtime="20241124 23:00:49.322"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.324" endtime="20241124 23:00:49.324"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241124 23:00:49.324" endtime="20241124 23:00:49.324"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.962" endtime="20241124 23:00:49.324"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.326" endtime="20241124 23:00:49.326"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:00:49.333" endtime="20241124 23:00:49.336"/>
</kw>
<msg timestamp="20241124 23:00:49.336" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:49.333" endtime="20241124 23:00:49.336"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:49.339" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-24T15:18:09.149Z', 'updatedAt': '2024-11-24T17:22:57.715Z'}</msg>
<status status="PASS" starttime="20241124 23:00:49.338" endtime="20241124 23:00:49.339"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:49.340" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</branch>
<status status="PASS" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</if>
<status status="PASS" starttime="20241124 23:00:49.338" endtime="20241124 23:00:49.340"/>
</branch>
<status status="PASS" starttime="20241124 23:00:49.336" endtime="20241124 23:00:49.340"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:00:49.340" endtime="20241124 23:00:49.340"/>
</return>
<msg timestamp="20241124 23:00:49.340" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:00:49.333" endtime="20241124 23:00:49.340"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:00:49.345" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241124 23:00:49.345" endtime="20241124 23:00:49.345"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.344" endtime="20241124 23:00:49.345"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.346" endtime="20241124 23:00:49.347"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.346" endtime="20241124 23:00:49.347"/>
</branch>
<status status="PASS" starttime="20241124 23:00:49.344" endtime="20241124 23:00:49.347"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:49.347" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '72', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com', 'erro...</msg>
<status status="PASS" starttime="20241124 23:00:49.347" endtime="20241124 23:00:49.347"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:00:49.347" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "72", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com", "er...</msg>
<status status="PASS" starttime="20241124 23:00:49.347" endtime="20241124 23:00:49.347"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:00:49.368" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:00:49.369" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:00:49.347" endtime="20241124 23:00:49.371"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.373" endtime="20241124 23:00:49.376"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:00:49.376" endtime="20241124 23:00:49.377"/>
</return>
<status status="PASS" starttime="20241124 23:00:49.347" endtime="20241124 23:00:49.378"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.326" endtime="20241124 23:00:49.378"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.382" endtime="20241124 23:00:49.388"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:00:49.395" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:00:49.393" endtime="20241124 23:00:49.395"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.378" endtime="20241124 23:00:49.403"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.325" endtime="20241124 23:00:49.409"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.962" endtime="20241124 23:00:49.409"/>
</try>
<status status="FAIL" starttime="20241124 23:00:36.961" endtime="20241124 23:00:49.418"/>
</iter>
<status status="FAIL" starttime="20241124 23:00:36.687" endtime="20241124 23:00:49.419"/>
</for>
<status status="FAIL" starttime="20241124 23:00:36.687" endtime="20241124 23:00:49.419"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.687" endtime="20241124 23:00:49.419"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241124 23:00:49.419" endtime="20241124 23:00:49.419"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.615" endtime="20241124 23:00:49.419"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.426" endtime="20241124 23:00:49.428"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:49.430" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '37', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:00:49.430" endtime="20241124 23:00:49.430"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:00:49.436" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "37", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:00:49.434" endtime="20241124 23:00:49.436"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:00:49.447" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:00:49.447" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:00:49.436" endtime="20241124 23:00:49.447"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.447" endtime="20241124 23:00:49.447"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:00:49.447" endtime="20241124 23:00:49.447"/>
</return>
<status status="PASS" starttime="20241124 23:00:49.430" endtime="20241124 23:00:49.447"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.428" endtime="20241124 23:00:49.447"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.451" endtime="20241124 23:00:49.451"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:00:49.453" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:00:49.451" endtime="20241124 23:00:49.453"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.450" endtime="20241124 23:00:49.455"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.419" endtime="20241124 23:00:49.455"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.615" endtime="20241124 23:00:49.457"/>
</try>
<status status="FAIL" starttime="20241124 23:00:36.614" endtime="20241124 23:00:49.457"/>
</iter>
<status status="FAIL" starttime="20241124 23:00:36.612" endtime="20241124 23:00:49.457"/>
</for>
<status status="FAIL" starttime="20241124 23:00:36.610" endtime="20241124 23:00:49.457"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.610" endtime="20241124 23:00:49.459"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241124 23:00:49.459" endtime="20241124 23:00:49.459"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.588" endtime="20241124 23:00:49.459"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.460"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:00:49.460" level="INFO">${response_message} = {'testCaseRunId': '15', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.460"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:00:49.460" level="INFO">${json_response} = {"testCaseRunId": "15", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.460"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:00:49.472" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:00:49.472" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.472"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.473" endtime="20241124 23:00:49.473"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:00:49.474" endtime="20241124 23:00:49.475"/>
</return>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.475"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.475"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.476" endtime="20241124 23:00:49.476"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:00:49.479" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:00:49.476" endtime="20241124 23:00:49.479"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.476" endtime="20241124 23:00:49.480"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:49.460" endtime="20241124 23:00:49.480"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.588" endtime="20241124 23:00:49.480"/>
</try>
<status status="FAIL" starttime="20241124 23:00:36.547" endtime="20241124 23:00:49.480"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.480" endtime="20241124 23:00:49.480"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.480" endtime="20241124 23:00:49.483"/>
</branch>
<status status="FAIL" starttime="20241124 23:00:36.547" endtime="20241124 23:00:49.483"/>
</if>
<status status="FAIL" starttime="20241124 23:00:36.494" endtime="20241124 23:00:49.484"/>
</kw>
<status status="FAIL" starttime="20241124 23:00:36.492" endtime="20241124 23:00:49.484"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:49.484" endtime="20241124 23:00:49.487"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.484" endtime="20241124 23:00:49.487"/>
</branch>
<status status="PASS" starttime="20241124 23:00:36.492" endtime="20241124 23:00:49.487"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241124 23:00:49.776" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241124 23:00:49.487" endtime="20241124 23:00:49.776"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.487" endtime="20241124 23:00:49.776"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:00:49.776" endtime="20241124 23:00:49.776"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:00:49.776" endtime="20241124 23:00:49.776"/>
</branch>
<status status="PASS" starttime="20241124 23:00:49.487" endtime="20241124 23:00:49.776"/>
</try>
<status status="PASS" starttime="20241124 23:00:49.487" endtime="20241124 23:00:49.776"/>
</kw>
<status status="PASS" starttime="20241124 23:00:32.576" endtime="20241124 23:00:49.776"/>
</iter>
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:00:49.776" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\41177d36-7afa-43ef-a407-0b1ba9bf2393"}</msg>
<msg timestamp="20241124 23:00:50.401" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\41177d36-7afa-43ef-a407-0b1ba9bf2393"}</msg>
<status status="PASS" starttime="20241124 23:00:49.776" endtime="20241124 23:00:50.401"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:00:50.401" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:00:50.417" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:00:50.417" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:00:50.401" endtime="20241124 23:00:50.417"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241124 23:00:50.417" endtime="20241124 23:00:50.417"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:00:53.792" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:00:53.792" level="INFO">${page_id} = {'page_id': 'page=5809ad33-4354-4ba4-ab7a-d890a2f7a145', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:00:50.417" endtime="20241124 23:00:53.792"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.776" endtime="20241124 23:00:53.794"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:00:53.794" endtime="20241124 23:00:53.795"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:03:08.897" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '18', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:08.766Z', 'createdAt': '2024-11-24T17:33:08.766Z', 'errorMes...</msg>
<status status="PASS" starttime="20241124 23:00:53.797" endtime="20241124 23:03:08.897"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 23:03:08.897" endtime="20241124 23:03:08.897"/>
</break>
<status status="NOT RUN" starttime="20241124 23:03:08.897" endtime="20241124 23:03:08.897"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.897" endtime="20241124 23:03:08.897"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:08.897" endtime="20241124 23:03:08.909"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:08.910" endtime="20241124 23:03:08.910"/>
</kw>
<msg timestamp="20241124 23:03:08.910" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.910" endtime="20241124 23:03:08.910"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.918" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.918" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</kw>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</if>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.918"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.918" endtime="20241124 23:03:08.923"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:08.923" endtime="20241124 23:03:08.923"/>
</return>
<msg timestamp="20241124 23:03:08.923" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.910" endtime="20241124 23:03:08.923"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.926" endtime="20241124 23:03:08.926"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 23:03:08.926" endtime="20241124 23:03:08.926"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:08.923" endtime="20241124 23:03:08.926"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.923" endtime="20241124 23:03:08.926"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:08.933" endtime="20241124 23:03:08.934"/>
</kw>
<msg timestamp="20241124 23:03:08.934" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.933" endtime="20241124 23:03:08.934"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.934" level="INFO">${values} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.934" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</kw>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</if>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:08.934" endtime="20241124 23:03:08.934"/>
</return>
<msg timestamp="20241124 23:03:08.942" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.926" endtime="20241124 23:03:08.942"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:08.946" endtime="20241124 23:03:08.946"/>
</kw>
<msg timestamp="20241124 23:03:08.946" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.946" endtime="20241124 23:03:08.946"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.950" level="INFO">${values} = {'id': '18', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:08.766Z', 'createdAt': '2024-11-24T17:33:08.766Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.950"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.950" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.950"/>
</kw>
<status status="PASS" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.950"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.950"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.950"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.950" endtime="20241124 23:03:08.955"/>
</if>
<status status="PASS" starttime="20241124 23:03:08.946" endtime="20241124 23:03:08.955"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.946" endtime="20241124 23:03:08.956"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:08.956" endtime="20241124 23:03:08.956"/>
</return>
<msg timestamp="20241124 23:03:08.956" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.946" endtime="20241124 23:03:08.956"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.959" endtime="20241124 23:03:08.959"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:08.958" endtime="20241124 23:03:08.959"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.956" endtime="20241124 23:03:08.959"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.959" level="INFO">${testCase} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:03:08.959" endtime="20241124 23:03:08.959"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.961" level="INFO">${testCaseRun} = {'id': '18', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:08.766Z', 'createdAt': '2024-11-24T17:33:08.766Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:03:08.961" endtime="20241124 23:03:08.961"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.962" level="INFO">${assertions} = [{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTar...</msg>
<status status="PASS" starttime="20241124 23:03:08.961" endtime="20241124 23:03:08.962"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:08.962" endtime="20241124 23:03:08.963"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:08.964" endtime="20241124 23:03:08.967"/>
</kw>
<msg timestamp="20241124 23:03:08.967" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.964" endtime="20241124 23:03:08.967"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.967" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.967" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</kw>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</if>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</return>
<msg timestamp="20241124 23:03:08.967" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.964" endtime="20241124 23:03:08.967"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:08.967" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '18', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:08.967" level="INFO">${json_response} = {"testCaseRunId": "18", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.967"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:08.986" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:08.986" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.986"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:08.986" endtime="20241124 23:03:08.989"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:08.989" endtime="20241124 23:03:08.989"/>
</return>
<status status="PASS" starttime="20241124 23:03:08.967" endtime="20241124 23:03:08.991"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:08.994" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241124 23:03:08.991" endtime="20241124 23:03:08.994"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:08.996" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-24T16:52:08.694Z', 'updatedAt': '2024-11-24T17:32:34.992Z', 'flowActionSequences': [{'id': '8', 'actionId': '9', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241124 23:03:08.996" endtime="20241124 23:03:08.996"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:08.996" endtime="20241124 23:03:08.999"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:08.999" endtime="20241124 23:03:08.999"/>
</kw>
<msg timestamp="20241124 23:03:08.999" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.999" endtime="20241124 23:03:08.999"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:09.005" level="INFO">${values} = [{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:32:34.803Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241124 23:03:09.004" endtime="20241124 23:03:09.005"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:09.007" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:09.005" endtime="20241124 23:03:09.007"/>
</kw>
<status status="PASS" starttime="20241124 23:03:09.005" endtime="20241124 23:03:09.008"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</branch>
<status status="PASS" starttime="20241124 23:03:09.005" endtime="20241124 23:03:09.008"/>
</if>
<status status="PASS" starttime="20241124 23:03:09.004" endtime="20241124 23:03:09.008"/>
</branch>
<status status="PASS" starttime="20241124 23:03:09.004" endtime="20241124 23:03:09.008"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</return>
<msg timestamp="20241124 23:03:09.008" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:08.999" endtime="20241124 23:03:09.008"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:32:34.803Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:09.008" level="INFO">${action} = {'id': '9', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T17:32:06.229Z', 'updatedAt': '2024-11-24T17:32:06.229Z', ...</msg>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:03:09.008" level="INFO">${input} = {'id': '9', 'actionId': '9', 'name': 'Input 01', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T17:32:06.579Z', 'updatedAt': '202...</msg>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.008"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:09.015" endtime="20241124 23:03:09.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:09.015" endtime="20241124 23:03:09.015"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:09.015" endtime="20241124 23:03:09.015"/>
</branch>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:09.017"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:09.017" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:09.017"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:03:17.390" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241124 23:03:17.390" level="INFO">${page_id} = {'page_id': 'page=49ee9c9d-ad85-4f35-b4ce-fa639568fe41', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:17.390"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:03:17.390" level="INFO">Switching to page {'page_id': 'page=49ee9c9d-ad85-4f35-b4ce-fa639568fe41', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:03:17.441" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=785881bd-6a78-4afd-a5be-e5207ce5bc23",
    "contexts": [
      {
        "type": "context",
        "id": "context=1d83ac98-92d1-4293-af51-8b7634b8fc3c",
        "activePage": "page=49ee9c9d-ad85-4f35-b4ce-fa639568fe41",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=5809ad33-4354-4ba4-ab7a-d890a2f7a145",
            "timestamp": 1732469450.638
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=49ee9c9d-ad85-4f35-b4ce-fa639568fe41",
            "timestamp": 1732469589.093
          }
        ]
      }
    ],
    "activeContext": "context=1d83ac98-92d1-4293-af51-8b7634b8fc3c",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:03:17.447" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:03:17.390" endtime="20241124 23:03:17.447"/>
</kw>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:17.451"/>
</kw>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:17.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.451" endtime="20241124 23:03:17.451"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.451" endtime="20241124 23:03:17.451"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.454" endtime="20241124 23:03:17.454"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.451" endtime="20241124 23:03:17.454"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.458" endtime="20241124 23:03:17.458"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.462" endtime="20241124 23:03:17.465"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.454" endtime="20241124 23:03:17.465"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.466" endtime="20241124 23:03:17.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.465" endtime="20241124 23:03:17.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.470" endtime="20241124 23:03:17.471"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.466" endtime="20241124 23:03:17.471"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.471" endtime="20241124 23:03:17.471"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.471" endtime="20241124 23:03:17.471"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.475" endtime="20241124 23:03:17.475"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.471" endtime="20241124 23:03:17.475"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.477" endtime="20241124 23:03:17.477"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.477" endtime="20241124 23:03:17.477"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.477" endtime="20241124 23:03:17.478"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.478" endtime="20241124 23:03:17.478"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.478" endtime="20241124 23:03:17.478"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.477" endtime="20241124 23:03:17.478"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.475" endtime="20241124 23:03:17.479"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:17.488" endtime="20241124 23:03:17.488"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.488" endtime="20241124 23:03:17.488"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.479" endtime="20241124 23:03:17.488"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.488" endtime="20241124 23:03:17.495"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.495" endtime="20241124 23:03:17.495"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.495" endtime="20241124 23:03:17.495"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.496" endtime="20241124 23:03:17.496"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.495" endtime="20241124 23:03:17.496"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.495" endtime="20241124 23:03:17.496"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.488" endtime="20241124 23:03:17.496"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:17.506" endtime="20241124 23:03:17.506"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.510" endtime="20241124 23:03:17.511"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.496" endtime="20241124 23:03:17.511"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.511" endtime="20241124 23:03:17.514"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.514"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.528" endtime="20241124 23:03:17.528"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.530" endtime="20241124 23:03:17.530"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.514" endtime="20241124 23:03:17.530"/>
</branch>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:17.530"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.530" endtime="20241124 23:03:17.531"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:03:17.531" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:03:17.531" endtime="20241124 23:03:17.531"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:03:17.531" endtime="20241124 23:03:17.531"/>
</return>
<msg timestamp="20241124 23:03:17.531" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:03:09.017" endtime="20241124 23:03:17.531"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.531" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241124 23:03:17.531" endtime="20241124 23:03:17.531"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.536" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.536"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.548" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.544" endtime="20241124 23:03:17.548"/>
</kw>
<msg timestamp="20241124 23:03:17.548" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.544" endtime="20241124 23:03:17.548"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.550"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.550"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.550"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.550"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.550"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.551"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.550" endtime="20241124 23:03:17.551"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.549" endtime="20241124 23:03:17.551"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.551" endtime="20241124 23:03:17.551"/>
</return>
<msg timestamp="20241124 23:03:17.551" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.544" endtime="20241124 23:03:17.551"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.555" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.555" endtime="20241124 23:03:17.555"/>
</kw>
<msg timestamp="20241124 23:03:17.555" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.554" endtime="20241124 23:03:17.555"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.556" endtime="20241124 23:03:17.556"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.556" endtime="20241124 23:03:17.557"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.556" endtime="20241124 23:03:17.557"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.557" endtime="20241124 23:03:17.557"/>
</return>
<msg timestamp="20241124 23:03:17.558" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.554" endtime="20241124 23:03:17.558"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:03:17.558" endtime="20241124 23:03:17.558"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.558" endtime="20241124 23:03:17.558"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.558" endtime="20241124 23:03:17.559"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.560" endtime="20241124 23:03:17.560"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:03:17.560" endtime="20241124 23:03:17.560"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.560" endtime="20241124 23:03:17.560"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.561" endtime="20241124 23:03:17.561"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:03:17.561" endtime="20241124 23:03:17.561"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.561" endtime="20241124 23:03:17.561"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.559" endtime="20241124 23:03:17.561"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.559" endtime="20241124 23:03:17.561"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.559" endtime="20241124 23:03:17.561"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.563" endtime="20241124 23:03:17.563"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.563" endtime="20241124 23:03:17.563"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.563" endtime="20241124 23:03:17.563"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.564" endtime="20241124 23:03:17.564"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.564" endtime="20241124 23:03:17.564"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.563" endtime="20241124 23:03:17.564"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.563" endtime="20241124 23:03:17.564"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.561" endtime="20241124 23:03:17.564"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.561" endtime="20241124 23:03:17.564"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.558" endtime="20241124 23:03:17.564"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.558" endtime="20241124 23:03:17.564"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.564" endtime="20241124 23:03:17.567"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.567"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.569" endtime="20241124 23:03:17.569"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.569" endtime="20241124 23:03:17.569"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.569"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.569"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.569"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.567" endtime="20241124 23:03:17.569"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.564" endtime="20241124 23:03:17.569"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.564" endtime="20241124 23:03:17.569"/>
</if>
<status status="PASS" starttime="20241124 23:03:17.536" endtime="20241124 23:03:17.569"/>
</iter>
<status status="PASS" starttime="20241124 23:03:17.531" endtime="20241124 23:03:17.569"/>
</for>
<msg timestamp="20241124 23:03:17.569" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:03:17.531" endtime="20241124 23:03:17.569"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.571" endtime="20241124 23:03:17.571"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.579" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.578" endtime="20241124 23:03:17.579"/>
</kw>
<msg timestamp="20241124 23:03:17.579" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.578" endtime="20241124 23:03:17.579"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.579" endtime="20241124 23:03:17.579"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.579" endtime="20241124 23:03:17.581"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.579" endtime="20241124 23:03:17.581"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.579" endtime="20241124 23:03:17.581"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.579" endtime="20241124 23:03:17.581"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</return>
<msg timestamp="20241124 23:03:17.581" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.577" endtime="20241124 23:03:17.581"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.581"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.585" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:03:17.584" endtime="20241124 23:03:17.585"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.585"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.581" endtime="20241124 23:03:17.585"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:17.585" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '84', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', '...</msg>
<status status="PASS" starttime="20241124 23:03:17.585" endtime="20241124 23:03:17.585"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:17.585" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "84", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", "...</msg>
<status status="PASS" starttime="20241124 23:03:17.585" endtime="20241124 23:03:17.585"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:17.593" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:17.593" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:17.585" endtime="20241124 23:03:17.593"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.594" endtime="20241124 23:03:17.595"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:17.595" endtime="20241124 23:03:17.595"/>
</return>
<status status="PASS" starttime="20241124 23:03:17.585" endtime="20241124 23:03:17.595"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.571" endtime="20241124 23:03:17.595"/>
</kw>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:17.595"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.598" endtime="20241124 23:03:17.598"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.598" endtime="20241124 23:03:17.598"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.599" endtime="20241124 23:03:17.600"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.595" endtime="20241124 23:03:17.600"/>
</branch>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:17.600"/>
</try>
<status status="PASS" starttime="20241124 23:03:09.008" endtime="20241124 23:03:17.600"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:32:34.824Z', 'action': {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.602" level="INFO">${action} = {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T14:13:38.009Z', 'updatedAt': '2024-11-24T14:13:38.009Z', 'inputs': [{...</msg>
<status status="PASS" starttime="20241124 23:03:17.601" endtime="20241124 23:03:17.602"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.602" endtime="20241124 23:03:17.603"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:03:17.604" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T14:13:38.094Z', 'updatedAt': '2024-11-24T14:13:38.094Z'}</msg>
<status status="PASS" starttime="20241124 23:03:17.603" endtime="20241124 23:03:17.604"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.604" endtime="20241124 23:03:17.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.605" endtime="20241124 23:03:17.605"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.604" endtime="20241124 23:03:17.605"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.604" endtime="20241124 23:03:17.605"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.607" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:03:17.606" endtime="20241124 23:03:17.607"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.607" endtime="20241124 23:03:17.608"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.607" endtime="20241124 23:03:17.608"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:03:17.699" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<msg timestamp="20241124 23:03:17.699" level="INFO">${page_id} = {'page_id': 'page=41c19f81-e295-4f41-8909-e1a6f6a4f037', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:03:17.609" endtime="20241124 23:03:17.699"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:03:17.701" level="INFO">Switching to page {'page_id': 'page=41c19f81-e295-4f41-8909-e1a6f6a4f037', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:03:17.708" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=785881bd-6a78-4afd-a5be-e5207ce5bc23",
    "contexts": [
      {
        "type": "context",
        "id": "context=1d83ac98-92d1-4293-af51-8b7634b8fc3c",
        "activePage": "page=41c19f81-e295-4f41-8909-e1a6f6a4f037",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=5809ad33-4354-4ba4-ab7a-d890a2f7a145",
            "timestamp": 1732469450.638
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=49ee9c9d-ad85-4f35-b4ce-fa639568fe41",
            "timestamp": 1732469589.093
          },
          {
            "type": "page",
            "title": "",
            "url": "about:blank",
            "id": "page=41c19f81-e295-4f41-8909-e1a6f6a4f037",
            "timestamp": 1732469597.681
          }
        ]
      }
    ],
    "activeContext": "context=1d83ac98-92d1-4293-af51-8b7634b8fc3c",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:03:17.716" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:03:17.701" endtime="20241124 23:03:17.716"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.608" endtime="20241124 23:03:17.716"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.608" endtime="20241124 23:03:17.716"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.722" endtime="20241124 23:03:17.722"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.716" endtime="20241124 23:03:17.722"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.724" endtime="20241124 23:03:17.724"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.724" endtime="20241124 23:03:17.724"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.722" endtime="20241124 23:03:17.724"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.732" endtime="20241124 23:03:17.732"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.724" endtime="20241124 23:03:17.732"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.738" endtime="20241124 23:03:17.738"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.732" endtime="20241124 23:03:17.738"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.740" endtime="20241124 23:03:17.740"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.738" endtime="20241124 23:03:17.740"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.744" endtime="20241124 23:03:17.744"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.740" endtime="20241124 23:03:17.744"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.746" endtime="20241124 23:03:17.746"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.747" endtime="20241124 23:03:17.748"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.747" endtime="20241124 23:03:17.749"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.749" endtime="20241124 23:03:17.749"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.749" endtime="20241124 23:03:17.749"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.747" endtime="20241124 23:03:17.749"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.744" endtime="20241124 23:03:17.749"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:17.761" endtime="20241124 23:03:17.761"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.749" endtime="20241124 23:03:17.765"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.765"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.773"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.765" endtime="20241124 23:03:17.773"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:17.779" endtime="20241124 23:03:17.779"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.783" endtime="20241124 23:03:17.785"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.773" endtime="20241124 23:03:17.785"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.787"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.785" endtime="20241124 23:03:17.787"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.789" endtime="20241124 23:03:17.789"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.787" endtime="20241124 23:03:17.789"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.810" endtime="20241124 23:03:17.811"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.812" endtime="20241124 23:03:17.812"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.789" endtime="20241124 23:03:17.812"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.607" endtime="20241124 23:03:17.812"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.812" endtime="20241124 23:03:17.814"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:03:17.814" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:03:17.814" endtime="20241124 23:03:17.814"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:03:17.814" endtime="20241124 23:03:17.814"/>
</return>
<msg timestamp="20241124 23:03:17.814" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:03:17.605" endtime="20241124 23:03:17.814"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.814" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241124 23:03:17.814" endtime="20241124 23:03:17.814"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.821" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:03:17.821" endtime="20241124 23:03:17.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.821" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:03:17.821" endtime="20241124 23:03:17.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.821" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.821" endtime="20241124 23:03:17.821"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.826" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:03:17.826" endtime="20241124 23:03:17.826"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.827" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.827" endtime="20241124 23:03:17.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.827" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:03:17.827" endtime="20241124 23:03:17.827"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.831" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:03:17.829" endtime="20241124 23:03:17.831"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:17.833" endtime="20241124 23:03:17.835"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.840" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.840"/>
</kw>
<msg timestamp="20241124 23:03:17.840" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.840"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.840"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.846" endtime="20241124 23:03:17.848"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.846" endtime="20241124 23:03:17.848"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.848" endtime="20241124 23:03:17.848"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.848" endtime="20241124 23:03:17.848"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.848"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.848"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.840" endtime="20241124 23:03:17.848"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.848" endtime="20241124 23:03:17.848"/>
</return>
<msg timestamp="20241124 23:03:17.854" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.838" endtime="20241124 23:03:17.854"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.862" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.856" endtime="20241124 23:03:17.862"/>
</kw>
<msg timestamp="20241124 23:03:17.862" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.856" endtime="20241124 23:03:17.862"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.863" endtime="20241124 23:03:17.865"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.863" endtime="20241124 23:03:17.865"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.862" endtime="20241124 23:03:17.865"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</return>
<msg timestamp="20241124 23:03:17.865" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.856" endtime="20241124 23:03:17.865"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.865"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.865" endtime="20241124 23:03:17.871"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.871"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.879"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.879"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.879"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.879"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.881" endtime="20241124 23:03:17.881"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:03:17.881" endtime="20241124 23:03:17.881"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:17.881" endtime="20241124 23:03:17.881"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.881"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.881"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.879" endtime="20241124 23:03:17.881"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.881"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.871" endtime="20241124 23:03:17.881"/>
</if>
<status status="PASS" starttime="20241124 23:03:17.821" endtime="20241124 23:03:17.881"/>
</iter>
<status status="PASS" starttime="20241124 23:03:17.814" endtime="20241124 23:03:17.881"/>
</for>
<msg timestamp="20241124 23:03:17.881" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:03:17.814" endtime="20241124 23:03:17.881"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.881" endtime="20241124 23:03:17.881"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:03:17.894" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:03:17.892" endtime="20241124 23:03:17.895"/>
</kw>
<msg timestamp="20241124 23:03:17.895" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.887" endtime="20241124 23:03:17.895"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.897" endtime="20241124 23:03:17.897"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.898" endtime="20241124 23:03:17.898"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.898" endtime="20241124 23:03:17.898"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.898" endtime="20241124 23:03:17.898"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.898" endtime="20241124 23:03:17.898"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:17.897" endtime="20241124 23:03:17.900"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:17.895" endtime="20241124 23:03:17.900"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.895" endtime="20241124 23:03:17.901"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:17.901" endtime="20241124 23:03:17.901"/>
</return>
<msg timestamp="20241124 23:03:17.901" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.887" endtime="20241124 23:03:17.901"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.903" endtime="20241124 23:03:17.904"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.903" endtime="20241124 23:03:17.904"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.907" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:03:17.904" endtime="20241124 23:03:17.907"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.904" endtime="20241124 23:03:17.907"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.901" endtime="20241124 23:03:17.907"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:17.911" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '85', 'status': 'COMPLETED', 'actionName': 'New Page', 'actionType': 'NEW_PAGE', 'actionXpath': '', 'inputValue': '', 'errorMessage': '', 'assertionMessage': None}</msg>
<status status="PASS" starttime="20241124 23:03:17.907" endtime="20241124 23:03:17.911"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:17.911" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "85", "status": "COMPLETED", "actionName": "New Page", "actionType": "NEW_PAGE", "actionXpath": "", "inputValue": "", "errorMessage": "", "assertionMessage": null}</msg>
<status status="PASS" starttime="20241124 23:03:17.911" endtime="20241124 23:03:17.911"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:17.920" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:17.920" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:17.916" endtime="20241124 23:03:17.920"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.920" endtime="20241124 23:03:17.926"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:17.926" endtime="20241124 23:03:17.926"/>
</return>
<status status="PASS" starttime="20241124 23:03:17.911" endtime="20241124 23:03:17.927"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.881" endtime="20241124 23:03:17.927"/>
</kw>
<status status="PASS" starttime="20241124 23:03:17.601" endtime="20241124 23:03:17.927"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.928" endtime="20241124 23:03:17.929"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.929" endtime="20241124 23:03:17.929"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.930" endtime="20241124 23:03:17.930"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.927" endtime="20241124 23:03:17.930"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.601" endtime="20241124 23:03:17.930"/>
</try>
<status status="PASS" starttime="20241124 23:03:17.600" endtime="20241124 23:03:17.931"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:32:34.833Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.933" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:43:45.668Z', 'updatedAt': '2024-11-24T16:43:45.668Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:03:17.932" endtime="20241124 23:03:17.933"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.934" endtime="20241124 23:03:17.935"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:03:17.936" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:43:45.923Z', 'updatedAt': '2024-11-24T16:44:01.1...</msg>
<status status="PASS" starttime="20241124 23:03:17.935" endtime="20241124 23:03:17.936"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.938" endtime="20241124 23:03:17.938"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.938" endtime="20241124 23:03:17.938"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.937" endtime="20241124 23:03:17.939"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.937" endtime="20241124 23:03:17.939"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:17.940" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:03:17.940" endtime="20241124 23:03:17.940"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.940" endtime="20241124 23:03:17.943"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.940" endtime="20241124 23:03:17.943"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:03:17.943" endtime="20241124 23:03:17.943"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.943" endtime="20241124 23:03:17.943"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.951" endtime="20241124 23:03:17.951"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.943" endtime="20241124 23:03:17.951"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.960" endtime="20241124 23:03:17.960"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.964" endtime="20241124 23:03:17.964"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.951" endtime="20241124 23:03:17.964"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.969" endtime="20241124 23:03:17.969"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.964" endtime="20241124 23:03:17.969"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:03:17.975" endtime="20241124 23:03:17.975"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:17.969" endtime="20241124 23:03:17.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:17.981" endtime="20241124 23:03:17.984"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:03:30.207" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-2.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-2.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241124 23:03:30.207" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241124 23:03:30.207" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id="username"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241124 23:03:18.000" endtime="20241124 23:03:30.207"/>
</kw>
<msg timestamp="20241124 23:03:30.207" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</return>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</try>
<msg timestamp="20241124 23:03:30.207" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</return>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.207"/>
</branch>
<status status="PASS" starttime="20241124 23:03:17.992" endtime="20241124 23:03:30.207"/>
</try>
<msg timestamp="20241124 23:03:30.207" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241124 23:03:17.984" endtime="20241124 23:03:30.207"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.215" endtime="20241124 23:03:30.215"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.215" endtime="20241124 23:03:30.215"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:03:30.218" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:03:30.215" endtime="20241124 23:03:30.218"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.215" endtime="20241124 23:03:30.218"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.218"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.218"/>
</if>
<status status="FAIL" starttime="20241124 23:03:30.207" endtime="20241124 23:03:30.218"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:17.984" endtime="20241124 23:03:30.223"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.223" endtime="20241124 23:03:30.223"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.223" endtime="20241124 23:03:30.223"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:17.984" endtime="20241124 23:03:30.231"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.234" endtime="20241124 23:03:30.234"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.234" endtime="20241124 23:03:30.236"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.236" endtime="20241124 23:03:30.236"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.236" endtime="20241124 23:03:30.236"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.238" endtime="20241124 23:03:30.238"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.238" endtime="20241124 23:03:30.238"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:30.236" endtime="20241124 23:03:30.238"/>
</try>
<status status="FAIL" starttime="20241124 23:03:17.981" endtime="20241124 23:03:30.240"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:17.977" endtime="20241124 23:03:30.240"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.243" endtime="20241124 23:03:30.243"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.241" endtime="20241124 23:03:30.243"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.245"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:30.243" endtime="20241124 23:03:30.245"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:30.254" endtime="20241124 23:03:30.254"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.245" endtime="20241124 23:03:30.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.256"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:30.264" endtime="20241124 23:03:30.264"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.256" endtime="20241124 23:03:30.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.272"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.280" endtime="20241124 23:03:30.280"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.272" endtime="20241124 23:03:30.280"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:03:30.288" endtime="20241124 23:03:30.288"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.296" endtime="20241124 23:03:30.296"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.280" endtime="20241124 23:03:30.296"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:17.940" endtime="20241124 23:03:30.296"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.296" endtime="20241124 23:03:30.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.296" endtime="20241124 23:03:30.296"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241124 23:03:30.296" endtime="20241124 23:03:30.296"/>
</return>
<status status="FAIL" starttime="20241124 23:03:17.939" endtime="20241124 23:03:30.304"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241124 23:03:30.305" endtime="20241124 23:03:30.306"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.306" endtime="20241124 23:03:30.306"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241124 23:03:30.306" endtime="20241124 23:03:30.306"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:17.931" endtime="20241124 23:03:30.306"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.306" endtime="20241124 23:03:30.306"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:30.320" endtime="20241124 23:03:30.320"/>
</kw>
<msg timestamp="20241124 23:03:30.320" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:30.320" endtime="20241124 23:03:30.328"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:30.332" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-24T15:18:09.149Z', 'updatedAt': '2024-11-24T17:22:57.715Z'}</msg>
<status status="PASS" starttime="20241124 23:03:30.330" endtime="20241124 23:03:30.332"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:30.339" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:30.336" endtime="20241124 23:03:30.339"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.332" endtime="20241124 23:03:30.340"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.341" endtime="20241124 23:03:30.341"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.340" endtime="20241124 23:03:30.342"/>
</branch>
<status status="PASS" starttime="20241124 23:03:30.332" endtime="20241124 23:03:30.342"/>
</if>
<status status="PASS" starttime="20241124 23:03:30.330" endtime="20241124 23:03:30.343"/>
</branch>
<status status="PASS" starttime="20241124 23:03:30.328" endtime="20241124 23:03:30.343"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:30.343" endtime="20241124 23:03:30.344"/>
</return>
<msg timestamp="20241124 23:03:30.345" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:30.320" endtime="20241124 23:03:30.345"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:30.345" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241124 23:03:30.345" endtime="20241124 23:03:30.345"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.345" endtime="20241124 23:03:30.349"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.349" endtime="20241124 23:03:30.349"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.349" endtime="20241124 23:03:30.349"/>
</branch>
<status status="PASS" starttime="20241124 23:03:30.345" endtime="20241124 23:03:30.349"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:30.357" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '86', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com', 'erro...</msg>
<status status="PASS" starttime="20241124 23:03:30.351" endtime="20241124 23:03:30.358"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:30.363" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "86", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com", "er...</msg>
<status status="PASS" starttime="20241124 23:03:30.361" endtime="20241124 23:03:30.363"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:30.414" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:30.415" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:30.364" endtime="20241124 23:03:30.415"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.415" endtime="20241124 23:03:30.417"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:30.418" endtime="20241124 23:03:30.418"/>
</return>
<status status="PASS" starttime="20241124 23:03:30.358" endtime="20241124 23:03:30.421"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.306" endtime="20241124 23:03:30.421"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.421" endtime="20241124 23:03:30.425"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:03:30.429" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:03:30.425" endtime="20241124 23:03:30.429"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.421" endtime="20241124 23:03:30.433"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.306" endtime="20241124 23:03:30.437"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:17.931" endtime="20241124 23:03:30.437"/>
</try>
<status status="FAIL" starttime="20241124 23:03:17.931" endtime="20241124 23:03:30.442"/>
</iter>
<status status="FAIL" starttime="20241124 23:03:09.008" endtime="20241124 23:03:30.444"/>
</for>
<status status="FAIL" starttime="20241124 23:03:09.008" endtime="20241124 23:03:30.447"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:09.008" endtime="20241124 23:03:30.447"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241124 23:03:30.450" endtime="20241124 23:03:30.450"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:08.996" endtime="20241124 23:03:30.450"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.458" endtime="20241124 23:03:30.464"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:30.472" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '46', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:03:30.470" endtime="20241124 23:03:30.472"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:30.477" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "46", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:03:30.476" endtime="20241124 23:03:30.477"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:30.485" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:30.485" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:30.478" endtime="20241124 23:03:30.485"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.485" endtime="20241124 23:03:30.491"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:30.491" endtime="20241124 23:03:30.491"/>
</return>
<status status="PASS" starttime="20241124 23:03:30.473" endtime="20241124 23:03:30.493"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.466" endtime="20241124 23:03:30.494"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.494" endtime="20241124 23:03:30.494"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:03:30.498" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:03:30.494" endtime="20241124 23:03:30.498"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.494" endtime="20241124 23:03:30.501"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.450" endtime="20241124 23:03:30.501"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:08.996" endtime="20241124 23:03:30.501"/>
</try>
<status status="FAIL" starttime="20241124 23:03:08.996" endtime="20241124 23:03:30.503"/>
</iter>
<status status="FAIL" starttime="20241124 23:03:08.994" endtime="20241124 23:03:30.503"/>
</for>
<status status="FAIL" starttime="20241124 23:03:08.991" endtime="20241124 23:03:30.503"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:08.991" endtime="20241124 23:03:30.503"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241124 23:03:30.503" endtime="20241124 23:03:30.503"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:08.963" endtime="20241124 23:03:30.503"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.507" endtime="20241124 23:03:30.507"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:30.510" level="INFO">${response_message} = {'testCaseRunId': '18', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:03:30.510" endtime="20241124 23:03:30.510"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:30.510" level="INFO">${json_response} = {"testCaseRunId": "18", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:03:30.510" endtime="20241124 23:03:30.510"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:30.557" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:30.557" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:30.510" endtime="20241124 23:03:30.557"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.558" endtime="20241124 23:03:30.559"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:30.559" endtime="20241124 23:03:30.559"/>
</return>
<status status="PASS" starttime="20241124 23:03:30.510" endtime="20241124 23:03:30.559"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.507" endtime="20241124 23:03:30.559"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.559" endtime="20241124 23:03:30.564"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:03:30.565" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:03:30.564" endtime="20241124 23:03:30.566"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.559" endtime="20241124 23:03:30.566"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:30.503" endtime="20241124 23:03:30.566"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:08.963" endtime="20241124 23:03:30.566"/>
</try>
<status status="FAIL" starttime="20241124 23:03:08.926" endtime="20241124 23:03:30.566"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.566" endtime="20241124 23:03:30.566"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.566" endtime="20241124 23:03:30.566"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:08.926" endtime="20241124 23:03:30.572"/>
</if>
<status status="FAIL" starttime="20241124 23:03:08.897" endtime="20241124 23:03:30.572"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:08.897" endtime="20241124 23:03:30.572"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.572"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.572"/>
</branch>
<status status="PASS" starttime="20241124 23:03:08.897" endtime="20241124 23:03:30.572"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241124 23:03:30.949" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.949"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.949"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:30.949" endtime="20241124 23:03:30.949"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:30.949" endtime="20241124 23:03:30.949"/>
</branch>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.949"/>
</try>
<status status="PASS" starttime="20241124 23:03:30.572" endtime="20241124 23:03:30.949"/>
</kw>
<status status="PASS" starttime="20241124 23:00:49.776" endtime="20241124 23:03:30.949"/>
</iter>
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:03:30.951" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\47c3abbd-3b25-4729-84d2-9b95941e95a7"}</msg>
<msg timestamp="20241124 23:03:31.418" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\47c3abbd-3b25-4729-84d2-9b95941e95a7"}</msg>
<status status="PASS" starttime="20241124 23:03:30.951" endtime="20241124 23:03:31.418"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:03:31.420" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:03:31.436" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:03:31.436" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:03:31.418" endtime="20241124 23:03:31.436"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241124 23:03:31.436" endtime="20241124 23:03:31.436"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:03:34.597" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:03:34.597" level="INFO">${page_id} = {'page_id': 'page=e2c454dd-516a-486c-b073-ed96c4e49af6', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:03:31.436" endtime="20241124 23:03:34.597"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.949" endtime="20241124 23:03:34.605"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:34.605" endtime="20241124 23:03:34.607"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:03:51.982" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '19', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:51.653Z', 'createdAt': '2024-11-24T17:33:51.653Z', 'errorMes...</msg>
<status status="PASS" starttime="20241124 23:03:34.607" endtime="20241124 23:03:51.982"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 23:03:51.987" endtime="20241124 23:03:51.987"/>
</break>
<status status="NOT RUN" starttime="20241124 23:03:51.987" endtime="20241124 23:03:51.987"/>
</branch>
<status status="PASS" starttime="20241124 23:03:51.982" endtime="20241124 23:03:51.987"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:51.989" endtime="20241124 23:03:51.995"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.005"/>
</kw>
<msg timestamp="20241124 23:03:52.005" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.003" endtime="20241124 23:03:52.005"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.005" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.005"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.005" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.005"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.009"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.010" endtime="20241124 23:03:52.010"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.009" endtime="20241124 23:03:52.010"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.010"/>
</if>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.010"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.005" endtime="20241124 23:03:52.010"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:52.010" endtime="20241124 23:03:52.010"/>
</return>
<msg timestamp="20241124 23:03:52.011" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:51.995" endtime="20241124 23:03:52.011"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.012"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.012"/>
</return>
<status status="NOT RUN" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.012"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.011" endtime="20241124 23:03:52.012"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.012"/>
</kw>
<msg timestamp="20241124 23:03:52.012" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.012"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.019" level="INFO">${values} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.019" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</if>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.019"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.019"/>
</return>
<msg timestamp="20241124 23:03:52.019" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.012" endtime="20241124 23:03:52.019"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<msg timestamp="20241124 23:03:52.027" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.027" level="INFO">${values} = {'id': '19', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:51.653Z', 'createdAt': '2024-11-24T17:33:51.653Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.027" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</if>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</return>
<msg timestamp="20241124 23:03:52.027" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.019" endtime="20241124 23:03:52.027"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.027"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.027" endtime="20241124 23:03:52.035"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.035" level="INFO">${testCase} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:03:52.035" endtime="20241124 23:03:52.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.035" level="INFO">${testCaseRun} = {'id': '19', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:33:51.653Z', 'createdAt': '2024-11-24T17:33:51.653Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:03:52.035" endtime="20241124 23:03:52.035"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.035" level="INFO">${assertions} = [{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTar...</msg>
<status status="PASS" starttime="20241124 23:03:52.035" endtime="20241124 23:03:52.035"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:52.038" endtime="20241124 23:03:52.038"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.044"/>
</kw>
<msg timestamp="20241124 23:03:52.044" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.044"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.044" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.044"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.044" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.044"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.044"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.049" endtime="20241124 23:03:52.049"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.049"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.049"/>
</if>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.049"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.044" endtime="20241124 23:03:52.049"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:52.049" endtime="20241124 23:03:52.049"/>
</return>
<msg timestamp="20241124 23:03:52.049" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.041" endtime="20241124 23:03:52.049"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:52.051" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '19', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 23:03:52.051" endtime="20241124 23:03:52.051"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:03:52.053" level="INFO">${json_response} = {"testCaseRunId": "19", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 23:03:52.052" endtime="20241124 23:03:52.053"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:03:52.056" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:03:52.056" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:03:52.054" endtime="20241124 23:03:52.056"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:52.056" endtime="20241124 23:03:52.059"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:03:52.059" endtime="20241124 23:03:52.059"/>
</return>
<status status="PASS" starttime="20241124 23:03:52.052" endtime="20241124 23:03:52.060"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:03:52.060" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241124 23:03:52.060" endtime="20241124 23:03:52.060"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.066" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-24T16:52:08.694Z', 'updatedAt': '2024-11-24T17:32:34.992Z', 'flowActionSequences': [{'id': '8', 'actionId': '9', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241124 23:03:52.066" endtime="20241124 23:03:52.066"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:52.069" endtime="20241124 23:03:52.069"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</kw>
<msg timestamp="20241124 23:03:52.077" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.077" level="INFO">${values} = [{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:32:34.803Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.077" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</if>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:03:52.077" endtime="20241124 23:03:52.077"/>
</return>
<msg timestamp="20241124 23:03:52.077" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:03:52.069" endtime="20241124 23:03:52.077"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:32:34.803Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.086" level="INFO">${action} = {'id': '9', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T17:32:06.229Z', 'updatedAt': '2024-11-24T17:32:06.229Z', ...</msg>
<status status="PASS" starttime="20241124 23:03:52.086" endtime="20241124 23:03:52.086"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:03:52.086" endtime="20241124 23:03:52.090"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:03:52.091" level="INFO">${input} = {'id': '9', 'actionId': '9', 'name': 'Input 01', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T17:32:06.579Z', 'updatedAt': '202...</msg>
<status status="PASS" starttime="20241124 23:03:52.091" endtime="20241124 23:03:52.091"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.092" endtime="20241124 23:03:52.093"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:03:52.094" endtime="20241124 23:03:52.094"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:52.092" endtime="20241124 23:03:52.094"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.091" endtime="20241124 23:03:52.094"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:03:52.096" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:03:52.096" endtime="20241124 23:03:52.096"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:03:59.808" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241124 23:03:59.810" level="INFO">${page_id} = {'page_id': 'page=3dbca910-223d-4a84-a65c-eaacda0f2904', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:03:52.098" endtime="20241124 23:03:59.811"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:03:59.815" level="INFO">Switching to page {'page_id': 'page=3dbca910-223d-4a84-a65c-eaacda0f2904', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:03:59.910" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=f0220f8f-cf72-4650-9c39-efeb22b8cccb",
    "contexts": [
      {
        "type": "context",
        "id": "context=ebefd01f-7a49-42d4-8a35-228bc829fbae",
        "activePage": "page=3dbca910-223d-4a84-a65c-eaacda0f2904",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=e2c454dd-516a-486c-b073-ed96c4e49af6",
            "timestamp": 1732469611.936
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=3dbca910-223d-4a84-a65c-eaacda0f2904",
            "timestamp": 1732469632.16
          }
        ]
      }
    ],
    "activeContext": "context=ebefd01f-7a49-42d4-8a35-228bc829fbae",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:03:59.921" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:03:59.813" endtime="20241124 23:03:59.923"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.097" endtime="20241124 23:03:59.923"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.097" endtime="20241124 23:03:59.924"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:03:59.925" endtime="20241124 23:03:59.925"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.925" endtime="20241124 23:03:59.925"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.933" endtime="20241124 23:03:59.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.925" endtime="20241124 23:03:59.933"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.933" endtime="20241124 23:03:59.933"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.933" endtime="20241124 23:03:59.941"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.933" endtime="20241124 23:03:59.941"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.942" endtime="20241124 23:03:59.942"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.941" endtime="20241124 23:03:59.942"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.942" endtime="20241124 23:03:59.942"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.942" endtime="20241124 23:03:59.942"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.951" endtime="20241124 23:03:59.951"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.942" endtime="20241124 23:03:59.951"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.951" endtime="20241124 23:03:59.951"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.951" endtime="20241124 23:03:59.951"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.954" endtime="20241124 23:03:59.954"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.955" endtime="20241124 23:03:59.955"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.955" endtime="20241124 23:03:59.955"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.955" endtime="20241124 23:03:59.955"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.955" endtime="20241124 23:03:59.955"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:59.954" endtime="20241124 23:03:59.955"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:59.951" endtime="20241124 23:03:59.955"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:59.966" endtime="20241124 23:03:59.966"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.966" endtime="20241124 23:03:59.966"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.955" endtime="20241124 23:03:59.966"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.975"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.975"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.975"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.976"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.976"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:59.975" endtime="20241124 23:03:59.976"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:59.966" endtime="20241124 23:03:59.976"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.976" endtime="20241124 23:03:59.983"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</if>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.983"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:03:59.992" endtime="20241124 23:03:59.992"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.983" endtime="20241124 23:03:59.992"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.000" endtime="20241124 23:04:00.000"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.000" endtime="20241124 23:04:00.000"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:03:59.992" endtime="20241124 23:04:00.000"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.096" endtime="20241124 23:04:00.000"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.000" endtime="20241124 23:04:00.000"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:00.000" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:00.000" endtime="20241124 23:04:00.000"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:00.000" endtime="20241124 23:04:00.000"/>
</return>
<msg timestamp="20241124 23:04:00.008" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:03:52.095" endtime="20241124 23:04:00.008"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.012" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241124 23:04:00.011" endtime="20241124 23:04:00.012"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.014" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:00.013" endtime="20241124 23:04:00.014"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.015" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:00.014" endtime="20241124 23:04:00.015"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.016" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.015" endtime="20241124 23:04:00.016"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.017" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:00.017" endtime="20241124 23:04:00.018"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.019" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.018" endtime="20241124 23:04:00.019"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.020" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:00.019" endtime="20241124 23:04:00.020"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.020" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:00.020" endtime="20241124 23:04:00.020"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:00.020" endtime="20241124 23:04:00.020"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.032" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.025" endtime="20241124 23:04:00.032"/>
</kw>
<msg timestamp="20241124 23:04:00.032" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.025" endtime="20241124 23:04:00.032"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.032"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.040"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.032" endtime="20241124 23:04:00.040"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.040" endtime="20241124 23:04:00.040"/>
</return>
<msg timestamp="20241124 23:04:00.043" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.025" endtime="20241124 23:04:00.043"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.049" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.049"/>
</kw>
<msg timestamp="20241124 23:04:00.049" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.049"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.049"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.058" endtime="20241124 23:04:00.058"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.058"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.060" endtime="20241124 23:04:00.060"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.058" endtime="20241124 23:04:00.060"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.060"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.060"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.049" endtime="20241124 23:04:00.060"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.060" endtime="20241124 23:04:00.060"/>
</return>
<msg timestamp="20241124 23:04:00.060" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.045" endtime="20241124 23:04:00.060"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.065"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.065"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.065"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.069" endtime="20241124 23:04:00.069"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:00.070" endtime="20241124 23:04:00.070"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.069" endtime="20241124 23:04:00.070"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.070" endtime="20241124 23:04:00.072"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:00.072" endtime="20241124 23:04:00.072"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.070" endtime="20241124 23:04:00.073"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.069" endtime="20241124 23:04:00.073"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.073"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.074"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.075" endtime="20241124 23:04:00.077"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.077" endtime="20241124 23:04:00.077"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.075" endtime="20241124 23:04:00.077"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.078" endtime="20241124 23:04:00.078"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.078" endtime="20241124 23:04:00.080"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.077" endtime="20241124 23:04:00.080"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.075" endtime="20241124 23:04:00.080"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.074" endtime="20241124 23:04:00.080"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.074" endtime="20241124 23:04:00.080"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.065" endtime="20241124 23:04:00.080"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.060" endtime="20241124 23:04:00.080"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:00.083" endtime="20241124 23:04:00.083"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.082" endtime="20241124 23:04:00.083"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.082" endtime="20241124 23:04:00.083"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.084" endtime="20241124 23:04:00.084"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.084" endtime="20241124 23:04:00.084"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.084" endtime="20241124 23:04:00.085"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.082" endtime="20241124 23:04:00.085"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.082" endtime="20241124 23:04:00.085"/>
</if>
<status status="PASS" starttime="20241124 23:04:00.013" endtime="20241124 23:04:00.085"/>
</iter>
<status status="PASS" starttime="20241124 23:04:00.013" endtime="20241124 23:04:00.085"/>
</for>
<msg timestamp="20241124 23:04:00.085" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:00.008" endtime="20241124 23:04:00.085"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.085"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.100" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.100" endtime="20241124 23:04:00.100"/>
</kw>
<msg timestamp="20241124 23:04:00.100" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.100" endtime="20241124 23:04:00.100"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.107" endtime="20241124 23:04:00.107"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.109" endtime="20241124 23:04:00.109"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.109" endtime="20241124 23:04:00.111"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.111"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.111"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.109" endtime="20241124 23:04:00.111"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.100" endtime="20241124 23:04:00.111"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.100" endtime="20241124 23:04:00.111"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.111"/>
</return>
<msg timestamp="20241124 23:04:00.111" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.100" endtime="20241124 23:04:00.111"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.111"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.111"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.115" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.115"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.115"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.111" endtime="20241124 23:04:00.115"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:00.115" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '92', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', '...</msg>
<status status="PASS" starttime="20241124 23:04:00.115" endtime="20241124 23:04:00.115"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:00.115" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "92", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", "...</msg>
<status status="PASS" starttime="20241124 23:04:00.115" endtime="20241124 23:04:00.115"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:00.126" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:00.126" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:00.115" endtime="20241124 23:04:00.126"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.131" endtime="20241124 23:04:00.134"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:00.134" endtime="20241124 23:04:00.134"/>
</return>
<status status="PASS" starttime="20241124 23:04:00.115" endtime="20241124 23:04:00.134"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.085" endtime="20241124 23:04:00.134"/>
</kw>
<status status="PASS" starttime="20241124 23:03:52.086" endtime="20241124 23:04:00.135"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.135" endtime="20241124 23:04:00.135"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.135" endtime="20241124 23:04:00.135"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.135" endtime="20241124 23:04:00.135"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.135" endtime="20241124 23:04:00.137"/>
</branch>
<status status="PASS" starttime="20241124 23:03:52.086" endtime="20241124 23:04:00.137"/>
</try>
<status status="PASS" starttime="20241124 23:03:52.086" endtime="20241124 23:04:00.137"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '1', 'actionId': '1', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:32:34.824Z', 'action': {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', ...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.140" level="INFO">${action} = {'id': '1', 'name': 'New Page', 'type': 'NEW_PAGE', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T14:13:38.009Z', 'updatedAt': '2024-11-24T14:13:38.009Z', 'inputs': [{...</msg>
<status status="PASS" starttime="20241124 23:04:00.139" endtime="20241124 23:04:00.140"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.140" endtime="20241124 23:04:00.141"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:00.143" level="INFO">${input} = {'id': '1', 'actionId': '1', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T14:13:38.094Z', 'updatedAt': '2024-11-24T14:13:38.094Z'}</msg>
<status status="PASS" starttime="20241124 23:04:00.142" endtime="20241124 23:04:00.143"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.145" endtime="20241124 23:04:00.145"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.145" endtime="20241124 23:04:00.145"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.144" endtime="20241124 23:04:00.146"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.143" endtime="20241124 23:04:00.146"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.148" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:04:00.146" endtime="20241124 23:04:00.148"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.149"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.149"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:04:00.239" level="INFO">Successfully initialized new page object and opened url: about:blank</msg>
<msg timestamp="20241124 23:04:00.239" level="INFO">${page_id} = {'page_id': 'page=728d97a7-b1cf-47f7-8f12-802a506ba05c', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.239"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:04:00.239" level="INFO">Switching to page {'page_id': 'page=728d97a7-b1cf-47f7-8f12-802a506ba05c', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:04:00.253" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=f0220f8f-cf72-4650-9c39-efeb22b8cccb",
    "contexts": [
      {
        "type": "context",
        "id": "context=ebefd01f-7a49-42d4-8a35-228bc829fbae",
        "activePage": "page=728d97a7-b1cf-47f7-8f12-802a506ba05c",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=e2c454dd-516a-486c-b073-ed96c4e49af6",
            "timestamp": 1732469611.936
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=3dbca910-223d-4a84-a65c-eaacda0f2904",
            "timestamp": 1732469632.16
          },
          {
            "type": "page",
            "title": "",
            "url": "about:blank",
            "id": "page=728d97a7-b1cf-47f7-8f12-802a506ba05c",
            "timestamp": 1732469640.22
          }
        ]
      }
    ],
    "activeContext": "context=ebefd01f-7a49-42d4-8a35-228bc829fbae",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:04:00.257" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:04:00.239" endtime="20241124 23:04:00.257"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.258"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.258"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.261" endtime="20241124 23:04:00.261"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.258" endtime="20241124 23:04:00.261"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.264" endtime="20241124 23:04:00.264"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.264" endtime="20241124 23:04:00.264"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.261" endtime="20241124 23:04:00.264"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.271" endtime="20241124 23:04:00.271"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.264" endtime="20241124 23:04:00.271"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.277" endtime="20241124 23:04:00.277"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.271" endtime="20241124 23:04:00.277"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.279" endtime="20241124 23:04:00.279"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.277" endtime="20241124 23:04:00.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.279" endtime="20241124 23:04:00.279"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.279" endtime="20241124 23:04:00.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.287" endtime="20241124 23:04:00.287"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.279" endtime="20241124 23:04:00.292"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:00.302" endtime="20241124 23:04:00.302"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.310" endtime="20241124 23:04:00.310"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.292" endtime="20241124 23:04:00.310"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.313" endtime="20241124 23:04:00.313"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.313" endtime="20241124 23:04:00.315"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.313" endtime="20241124 23:04:00.315"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.315" endtime="20241124 23:04:00.315"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.315" endtime="20241124 23:04:00.315"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.313" endtime="20241124 23:04:00.315"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.310" endtime="20241124 23:04:00.315"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:00.328" endtime="20241124 23:04:00.328"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.328" endtime="20241124 23:04:00.328"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.315" endtime="20241124 23:04:00.328"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.336" endtime="20241124 23:04:00.337"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.338" endtime="20241124 23:04:00.338"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.338" endtime="20241124 23:04:00.338"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.338" endtime="20241124 23:04:00.338"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.338" endtime="20241124 23:04:00.338"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.337" endtime="20241124 23:04:00.338"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.328" endtime="20241124 23:04:00.338"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.342" endtime="20241124 23:04:00.344"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.338" endtime="20241124 23:04:00.344"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.352" endtime="20241124 23:04:00.352"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.352" endtime="20241124 23:04:00.352"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.344" endtime="20241124 23:04:00.352"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.149" endtime="20241124 23:04:00.352"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.352" endtime="20241124 23:04:00.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:00.361" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:00.360" endtime="20241124 23:04:00.361"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.361"/>
</return>
<msg timestamp="20241124 23:04:00.361" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:04:00.146" endtime="20241124 23:04:00.361"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.361" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:1</msg>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.361"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.361" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.361" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.361" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.361"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.369" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:00.369" endtime="20241124 23:04:00.369"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.371" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.370" endtime="20241124 23:04:00.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.371" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:00.371" endtime="20241124 23:04:00.371"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.371" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:00.371" endtime="20241124 23:04:00.371"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:00.371" endtime="20241124 23:04:00.371"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.377" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.377" endtime="20241124 23:04:00.377"/>
</kw>
<msg timestamp="20241124 23:04:00.380" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.377" endtime="20241124 23:04:00.380"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.381"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.385"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.381" endtime="20241124 23:04:00.385"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.385" endtime="20241124 23:04:00.385"/>
</return>
<msg timestamp="20241124 23:04:00.385" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.371" endtime="20241124 23:04:00.385"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.394" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</kw>
<msg timestamp="20241124 23:04:00.394" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.393" endtime="20241124 23:04:00.394"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.394" endtime="20241124 23:04:00.394"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</return>
<msg timestamp="20241124 23:04:00.401" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.392" endtime="20241124 23:04:00.401"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.401"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.408"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.408"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.410" endtime="20241124 23:04:00.410"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.410" endtime="20241124 23:04:00.410"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.408" endtime="20241124 23:04:00.410"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.411"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.411"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.411"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.408" endtime="20241124 23:04:00.411"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.408" endtime="20241124 23:04:00.411"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.408" endtime="20241124 23:04:00.411"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.411"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.401" endtime="20241124 23:04:00.411"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.411"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.416"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.416"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.416" endtime="20241124 23:04:00.416"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.416" endtime="20241124 23:04:00.416"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.416" endtime="20241124 23:04:00.416"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.419"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.419"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.419"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.421"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:00.421" endtime="20241124 23:04:00.421"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.421"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.419" endtime="20241124 23:04:00.421"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.418" endtime="20241124 23:04:00.421"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.418" endtime="20241124 23:04:00.421"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.421"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.411" endtime="20241124 23:04:00.421"/>
</if>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.423"/>
</iter>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.423"/>
</for>
<msg timestamp="20241124 23:04:00.423" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:00.361" endtime="20241124 23:04:00.423"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.425" endtime="20241124 23:04:00.425"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:00.435" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:04:00.435" endtime="20241124 23:04:00.435"/>
</kw>
<msg timestamp="20241124 23:04:00.435" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.435" endtime="20241124 23:04:00.435"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:00.435" endtime="20241124 23:04:00.442"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.435" endtime="20241124 23:04:00.442"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</return>
<msg timestamp="20241124 23:04:00.442" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.427" endtime="20241124 23:04:00.442"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.442"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.450" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.450"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.450"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.442" endtime="20241124 23:04:00.450"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:00.450" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '93', 'status': 'COMPLETED', 'actionName': 'New Page', 'actionType': 'NEW_PAGE', 'actionXpath': '', 'inputValue': '', 'errorMessage': '', 'assertionMessage': None}</msg>
<status status="PASS" starttime="20241124 23:04:00.450" endtime="20241124 23:04:00.450"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:00.450" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "93", "status": "COMPLETED", "actionName": "New Page", "actionType": "NEW_PAGE", "actionXpath": "", "inputValue": "", "errorMessage": "", "assertionMessage": null}</msg>
<status status="PASS" starttime="20241124 23:04:00.450" endtime="20241124 23:04:00.450"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:00.503" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:00.508" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:00.450" endtime="20241124 23:04:00.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.509" endtime="20241124 23:04:00.512"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:00.512" endtime="20241124 23:04:00.512"/>
</return>
<status status="PASS" starttime="20241124 23:04:00.450" endtime="20241124 23:04:00.512"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.426" endtime="20241124 23:04:00.512"/>
</kw>
<status status="PASS" starttime="20241124 23:04:00.139" endtime="20241124 23:04:00.512"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.512" endtime="20241124 23:04:00.519"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.519" endtime="20241124 23:04:00.519"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.519" endtime="20241124 23:04:00.519"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.512" endtime="20241124 23:04:00.519"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.139" endtime="20241124 23:04:00.519"/>
</try>
<status status="PASS" starttime="20241124 23:04:00.138" endtime="20241124 23:04:00.519"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:32:34.833Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.527" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:43:45.668Z', 'updatedAt': '2024-11-24T16:43:45.668Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:04:00.527" endtime="20241124 23:04:00.527"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.527" endtime="20241124 23:04:00.535"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:00.535" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:43:45.923Z', 'updatedAt': '2024-11-24T16:44:01.1...</msg>
<status status="PASS" starttime="20241124 23:04:00.535" endtime="20241124 23:04:00.535"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.535" endtime="20241124 23:04:00.535"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.543" endtime="20241124 23:04:00.543"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.535" endtime="20241124 23:04:00.543"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.535" endtime="20241124 23:04:00.543"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:00.551" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:00.543" endtime="20241124 23:04:00.551"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.551" endtime="20241124 23:04:00.551"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.551" endtime="20241124 23:04:00.551"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:00.559" endtime="20241124 23:04:00.559"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.558" endtime="20241124 23:04:00.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.559" endtime="20241124 23:04:00.559"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.559" endtime="20241124 23:04:00.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.567" endtime="20241124 23:04:00.567"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.577" endtime="20241124 23:04:00.577"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.567" endtime="20241124 23:04:00.577"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.584" endtime="20241124 23:04:00.584"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.581" endtime="20241124 23:04:00.584"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:00.592" endtime="20241124 23:04:00.593"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:00.584" endtime="20241124 23:04:00.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:00.600" endtime="20241124 23:04:00.600"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:12.905" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-3.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-3.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241124 23:04:12.905" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241124 23:04:12.905" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('xpath=//input[@id="username"]')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241124 23:04:00.616" endtime="20241124 23:04:12.905"/>
</kw>
<msg timestamp="20241124 23:04:12.905" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.905"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:12.905" endtime="20241124 23:04:12.905"/>
</return>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.905"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.905" endtime="20241124 23:04:12.905"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.905" endtime="20241124 23:04:12.905"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:12.905" endtime="20241124 23:04:12.905"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.905"/>
</try>
<msg timestamp="20241124 23:04:12.913" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.913"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.913"/>
</return>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.913"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.913"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.913"/>
</branch>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.913"/>
</try>
<msg timestamp="20241124 23:04:12.913" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.913"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:12.921" endtime="20241124 23:04:12.921"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:12.921" endtime="20241124 23:04:12.921"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:12.930" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:12.921" endtime="20241124 23:04:12.932"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:12.921" endtime="20241124 23:04:12.937"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.937"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.937"/>
</if>
<status status="FAIL" starttime="20241124 23:04:12.913" endtime="20241124 23:04:12.946"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:00.609" endtime="20241124 23:04:12.954"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.967" endtime="20241124 23:04:12.967"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.981" endtime="20241124 23:04:12.981"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:00.600" endtime="20241124 23:04:12.987"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.994" endtime="20241124 23:04:12.994"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241124 23:04:12.994" endtime="20241124 23:04:12.994"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.005" endtime="20241124 23:04:13.006"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.003" endtime="20241124 23:04:13.007"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.010" endtime="20241124 23:04:13.010"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.008" endtime="20241124 23:04:13.010"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:13.003" endtime="20241124 23:04:13.010"/>
</try>
<status status="FAIL" starttime="20241124 23:04:00.594" endtime="20241124 23:04:13.012"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:00.594" endtime="20241124 23:04:13.012"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.019" endtime="20241124 23:04:13.019"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.012" endtime="20241124 23:04:13.019"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.028" endtime="20241124 23:04:13.030"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.031" endtime="20241124 23:04:13.031"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.030" endtime="20241124 23:04:13.031"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.034" endtime="20241124 23:04:13.034"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.031" endtime="20241124 23:04:13.034"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:13.030" endtime="20241124 23:04:13.034"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:13.019" endtime="20241124 23:04:13.034"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:13.059" endtime="20241124 23:04:13.059"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.071" endtime="20241124 23:04:13.071"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.034" endtime="20241124 23:04:13.071"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.079" endtime="20241124 23:04:13.079"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.081" endtime="20241124 23:04:13.081"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.081" endtime="20241124 23:04:13.081"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.083" endtime="20241124 23:04:13.084"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.081" endtime="20241124 23:04:13.084"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:13.080" endtime="20241124 23:04:13.084"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:13.071" endtime="20241124 23:04:13.084"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:13.103" endtime="20241124 23:04:13.103"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.110" endtime="20241124 23:04:13.110"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.084" endtime="20241124 23:04:13.110"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.115"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:13.110" endtime="20241124 23:04:13.115"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.119" endtime="20241124 23:04:13.119"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.115" endtime="20241124 23:04:13.119"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.119" endtime="20241124 23:04:13.137"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:00.551" endtime="20241124 23:04:13.137"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</return>
<status status="FAIL" starttime="20241124 23:04:00.543" endtime="20241124 23:04:13.137"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:13.137" endtime="20241124 23:04:13.137"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:00.527" endtime="20241124 23:04:13.144"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.144" endtime="20241124 23:04:13.145"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:13.152" endtime="20241124 23:04:13.154"/>
</kw>
<msg timestamp="20241124 23:04:13.154" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:13.152" endtime="20241124 23:04:13.154"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:13.156" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-24T15:18:09.149Z', 'updatedAt': '2024-11-24T17:22:57.715Z'}</msg>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.156"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:13.156" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.160"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.160"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</branch>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.160"/>
</if>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.160"/>
</branch>
<status status="PASS" starttime="20241124 23:04:13.156" endtime="20241124 23:04:13.160"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</return>
<msg timestamp="20241124 23:04:13.160" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:13.147" endtime="20241124 23:04:13.160"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:13.160" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.160"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.166"/>
</branch>
<status status="PASS" starttime="20241124 23:04:13.160" endtime="20241124 23:04:13.166"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:13.167" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '94', 'status': 'FAILED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com', 'erro...</msg>
<status status="PASS" starttime="20241124 23:04:13.166" endtime="20241124 23:04:13.168"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:13.170" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "94", "status": "FAILED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com", "er...</msg>
<status status="PASS" starttime="20241124 23:04:13.170" endtime="20241124 23:04:13.170"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:13.201" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:13.203" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:13.170" endtime="20241124 23:04:13.203"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.205" endtime="20241124 23:04:13.207"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:13.207" endtime="20241124 23:04:13.207"/>
</return>
<status status="PASS" starttime="20241124 23:04:13.169" endtime="20241124 23:04:13.210"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.145" endtime="20241124 23:04:13.210"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.213" endtime="20241124 23:04:13.218"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:13.227" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:13.220" endtime="20241124 23:04:13.227"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.213" endtime="20241124 23:04:13.233"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.144" endtime="20241124 23:04:13.236"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:00.519" endtime="20241124 23:04:13.237"/>
</try>
<status status="FAIL" starttime="20241124 23:04:00.519" endtime="20241124 23:04:13.239"/>
</iter>
<status status="FAIL" starttime="20241124 23:03:52.085" endtime="20241124 23:04:13.241"/>
</for>
<status status="FAIL" starttime="20241124 23:03:52.085" endtime="20241124 23:04:13.242"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:52.077" endtime="20241124 23:04:13.242"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241124 23:04:13.247" endtime="20241124 23:04:13.250"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:52.066" endtime="20241124 23:04:13.251"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.251" endtime="20241124 23:04:13.251"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:13.267" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '49', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:04:13.263" endtime="20241124 23:04:13.267"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:13.275" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "49", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:04:13.273" endtime="20241124 23:04:13.275"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:13.291" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:13.296" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:13.275" endtime="20241124 23:04:13.296"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.297" endtime="20241124 23:04:13.299"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:13.299" endtime="20241124 23:04:13.299"/>
</return>
<status status="PASS" starttime="20241124 23:04:13.267" endtime="20241124 23:04:13.299"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.251" endtime="20241124 23:04:13.305"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.307" endtime="20241124 23:04:13.315"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:13.315" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:13.315" endtime="20241124 23:04:13.315"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.307" endtime="20241124 23:04:13.323"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.251" endtime="20241124 23:04:13.323"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:52.066" endtime="20241124 23:04:13.323"/>
</try>
<status status="FAIL" starttime="20241124 23:03:52.060" endtime="20241124 23:04:13.331"/>
</iter>
<status status="FAIL" starttime="20241124 23:03:52.060" endtime="20241124 23:04:13.331"/>
</for>
<status status="FAIL" starttime="20241124 23:03:52.060" endtime="20241124 23:04:13.331"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:52.060" endtime="20241124 23:04:13.331"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241124 23:04:13.331" endtime="20241124 23:04:13.339"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:52.038" endtime="20241124 23:04:13.339"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.339" endtime="20241124 23:04:13.339"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:13.348" level="INFO">${response_message} = {'testCaseRunId': '19', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:04:13.339" endtime="20241124 23:04:13.348"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:13.348" level="INFO">${json_response} = {"testCaseRunId": "19", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:04:13.348" endtime="20241124 23:04:13.348"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:13.399" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:13.399" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:13.348" endtime="20241124 23:04:13.400"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.400" endtime="20241124 23:04:13.402"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:13.403" endtime="20241124 23:04:13.403"/>
</return>
<status status="PASS" starttime="20241124 23:04:13.348" endtime="20241124 23:04:13.404"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.339" endtime="20241124 23:04:13.405"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.405" endtime="20241124 23:04:13.409"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:13.413" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:13.409" endtime="20241124 23:04:13.414"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.405" endtime="20241124 23:04:13.415"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:13.339" endtime="20241124 23:04:13.415"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:52.038" endtime="20241124 23:04:13.415"/>
</try>
<status status="FAIL" starttime="20241124 23:03:52.012" endtime="20241124 23:04:13.415"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.415" endtime="20241124 23:04:13.415"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.415" endtime="20241124 23:04:13.415"/>
</branch>
<status status="FAIL" starttime="20241124 23:03:52.012" endtime="20241124 23:04:13.421"/>
</if>
<status status="FAIL" starttime="20241124 23:03:51.987" endtime="20241124 23:04:13.421"/>
</kw>
<status status="FAIL" starttime="20241124 23:03:51.987" endtime="20241124 23:04:13.421"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:13.421" endtime="20241124 23:04:13.426"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.421" endtime="20241124 23:04:13.426"/>
</branch>
<status status="PASS" starttime="20241124 23:03:51.987" endtime="20241124 23:04:13.427"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241124 23:04:13.784" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241124 23:04:13.429" endtime="20241124 23:04:13.784"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.427" endtime="20241124 23:04:13.784"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:13.784" endtime="20241124 23:04:13.784"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:13.784" endtime="20241124 23:04:13.784"/>
</branch>
<status status="PASS" starttime="20241124 23:04:13.427" endtime="20241124 23:04:13.784"/>
</try>
<status status="PASS" starttime="20241124 23:04:13.427" endtime="20241124 23:04:13.790"/>
</kw>
<status status="PASS" starttime="20241124 23:03:30.949" endtime="20241124 23:04:13.790"/>
</iter>
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:04:13.790" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\d839ea70-790c-4493-a06a-74ac61009b81"}</msg>
<msg timestamp="20241124 23:04:14.351" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\d839ea70-790c-4493-a06a-74ac61009b81"}</msg>
<status status="PASS" starttime="20241124 23:04:13.790" endtime="20241124 23:04:14.351"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:04:14.353" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:04:14.366" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:04:14.366" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:04:14.351" endtime="20241124 23:04:14.366"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241124 23:04:14.366" endtime="20241124 23:04:14.366"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:04:16.832" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:04:16.832" level="INFO">${page_id} = {'page_id': 'page=41820366-f536-4f85-aa94-a9e5d440aff3', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:04:14.366" endtime="20241124 23:04:16.832"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.790" endtime="20241124 23:04:16.832"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:16.832" endtime="20241124 23:04:16.837"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:04:19.493" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '20', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:34:19.350Z', 'createdAt': '2024-11-24T17:34:19.350Z', 'errorMes...</msg>
<status status="PASS" starttime="20241124 23:04:16.837" endtime="20241124 23:04:19.493"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 23:04:19.495" endtime="20241124 23:04:19.495"/>
</break>
<status status="NOT RUN" starttime="20241124 23:04:19.493" endtime="20241124 23:04:19.495"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.493" endtime="20241124 23:04:19.495"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:19.495" endtime="20241124 23:04:19.503"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.512"/>
</kw>
<msg timestamp="20241124 23:04:19.512" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.512"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.512" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.512"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.512" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.512"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.512"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.515"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.515"/>
</if>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.515"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.512" endtime="20241124 23:04:19.515"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</return>
<msg timestamp="20241124 23:04:19.515" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.507" endtime="20241124 23:04:19.515"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.515"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.523"/>
</kw>
<msg timestamp="20241124 23:04:19.523" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.523"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.523" level="INFO">${values} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.523" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</if>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:19.523" endtime="20241124 23:04:19.523"/>
</return>
<msg timestamp="20241124 23:04:19.523" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.515" endtime="20241124 23:04:19.523"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:19.535" endtime="20241124 23:04:19.535"/>
</kw>
<msg timestamp="20241124 23:04:19.535" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.535" endtime="20241124 23:04:19.535"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.539" level="INFO">${values} = {'id': '20', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:34:19.350Z', 'createdAt': '2024-11-24T17:34:19.350Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:04:19.539" endtime="20241124 23:04:19.539"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.543" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.543" endtime="20241124 23:04:19.543"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.542" endtime="20241124 23:04:19.543"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.543" endtime="20241124 23:04:19.545"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.543" endtime="20241124 23:04:19.545"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.542" endtime="20241124 23:04:19.546"/>
</if>
<status status="PASS" starttime="20241124 23:04:19.539" endtime="20241124 23:04:19.546"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.535" endtime="20241124 23:04:19.546"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:19.547" endtime="20241124 23:04:19.547"/>
</return>
<msg timestamp="20241124 23:04:19.548" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.535" endtime="20241124 23:04:19.548"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.548" level="INFO">${testCase} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.548" level="INFO">${testCaseRun} = {'id': '20', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:34:19.350Z', 'createdAt': '2024-11-24T17:34:19.350Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.548" level="INFO">${assertions} = [{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTar...</msg>
<status status="PASS" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:19.548" endtime="20241124 23:04:19.548"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.556"/>
</kw>
<msg timestamp="20241124 23:04:19.556" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.556"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.556" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.556"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.564" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.564"/>
</if>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.564"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.564"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</return>
<msg timestamp="20241124 23:04:19.564" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.556" endtime="20241124 23:04:19.564"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:19.564" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '20', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:19.564" level="INFO">${json_response} = {"testCaseRunId": "20", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.564"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:19.564" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:19.564" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.572"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:19.572" endtime="20241124 23:04:19.572"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:19.572" endtime="20241124 23:04:19.572"/>
</return>
<status status="PASS" starttime="20241124 23:04:19.564" endtime="20241124 23:04:19.572"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:19.572" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241124 23:04:19.572" endtime="20241124 23:04:19.572"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.582" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-24T16:52:08.694Z', 'updatedAt': '2024-11-24T17:34:15.823Z', 'flowActionSequences': [{'id': '8', 'actionId': '9', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241124 23:04:19.580" endtime="20241124 23:04:19.582"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:19.582" endtime="20241124 23:04:19.583"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:19.592" endtime="20241124 23:04:19.592"/>
</kw>
<msg timestamp="20241124 23:04:19.592" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.590" endtime="20241124 23:04:19.592"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.596" level="INFO">${values} = [{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:34:15.591Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241124 23:04:19.592" endtime="20241124 23:04:19.596"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.596" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</if>
<status status="PASS" starttime="20241124 23:04:19.592" endtime="20241124 23:04:19.596"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.592" endtime="20241124 23:04:19.596"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</return>
<msg timestamp="20241124 23:04:19.596" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:19.583" endtime="20241124 23:04:19.596"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:34:15.591Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.596" level="INFO">${action} = {'id': '9', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T17:32:06.229Z', 'updatedAt': '2024-11-24T17:32:06.229Z', ...</msg>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:19.596" level="INFO">${input} = {'id': '9', 'actionId': '9', 'name': 'Input 01', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T17:32:06.579Z', 'updatedAt': '202...</msg>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.596"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.604" endtime="20241124 23:04:19.604"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:19.604" endtime="20241124 23:04:19.604"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:19.604" endtime="20241124 23:04:19.607"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:19.607"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:19.609" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:04:19.609" endtime="20241124 23:04:19.609"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:04:24.525" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241124 23:04:24.525" level="INFO">${page_id} = {'page_id': 'page=6cd33663-1611-423a-8f96-10ce68b7b5cb', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:04:19.609" endtime="20241124 23:04:24.525"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:04:24.527" level="INFO">Switching to page {'page_id': 'page=6cd33663-1611-423a-8f96-10ce68b7b5cb', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:04:24.555" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=c45a9b14-ee5a-4ad4-bfec-71873f9de199",
    "contexts": [
      {
        "type": "context",
        "id": "context=39520c74-c9b5-4854-851d-217c0d4fcec4",
        "activePage": "page=6cd33663-1611-423a-8f96-10ce68b7b5cb",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=41820366-f536-4f85-aa94-a9e5d440aff3",
            "timestamp": 1732469654.723
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=6cd33663-1611-423a-8f96-10ce68b7b5cb",
            "timestamp": 1732469659.669
          }
        ]
      }
    ],
    "activeContext": "context=39520c74-c9b5-4854-851d-217c0d4fcec4",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:04:24.559" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:04:24.527" endtime="20241124 23:04:24.559"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.609" endtime="20241124 23:04:24.559"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.609" endtime="20241124 23:04:24.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:24.559" endtime="20241124 23:04:24.559"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.559" endtime="20241124 23:04:24.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.559" endtime="20241124 23:04:24.559"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.559" endtime="20241124 23:04:24.559"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.566" endtime="20241124 23:04:24.566"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.569" endtime="20241124 23:04:24.569"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.559" endtime="20241124 23:04:24.569"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.569" endtime="20241124 23:04:24.569"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.569" endtime="20241124 23:04:24.569"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.574" endtime="20241124 23:04:24.574"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.569" endtime="20241124 23:04:24.574"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.579" endtime="20241124 23:04:24.579"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.574" endtime="20241124 23:04:24.579"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.579" endtime="20241124 23:04:24.579"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.579" endtime="20241124 23:04:24.579"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.582"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.579" endtime="20241124 23:04:24.582"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:24.590" endtime="20241124 23:04:24.594"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.582" endtime="20241124 23:04:24.598"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.598"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.606"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.606"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.598" endtime="20241124 23:04:24.606"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.606"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.606"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.606"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.614"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.614"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.614"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.606" endtime="20241124 23:04:24.614"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.614" endtime="20241124 23:04:24.614"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.614" endtime="20241124 23:04:24.614"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:24.623" endtime="20241124 23:04:24.623"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.623" endtime="20241124 23:04:24.623"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.614" endtime="20241124 23:04:24.623"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.609" endtime="20241124 23:04:24.623"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:24.631" endtime="20241124 23:04:24.631"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:24.631" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:24.631" endtime="20241124 23:04:24.631"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:24.631" endtime="20241124 23:04:24.631"/>
</return>
<msg timestamp="20241124 23:04:24.631" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:04:19.607" endtime="20241124 23:04:24.631"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.636" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241124 23:04:24.636" endtime="20241124 23:04:24.636"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.636" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:24.636" endtime="20241124 23:04:24.636"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.639" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:24.639" endtime="20241124 23:04:24.639"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:24.658" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:24.656" endtime="20241124 23:04:24.658"/>
</kw>
<msg timestamp="20241124 23:04:24.661" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.654" endtime="20241124 23:04:24.661"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.661" endtime="20241124 23:04:24.663"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.668" endtime="20241124 23:04:24.668"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.664" endtime="20241124 23:04:24.668"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.672" endtime="20241124 23:04:24.676"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.671" endtime="20241124 23:04:24.676"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.664" endtime="20241124 23:04:24.676"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.661" endtime="20241124 23:04:24.676"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.661" endtime="20241124 23:04:24.677"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:24.677" endtime="20241124 23:04:24.677"/>
</return>
<msg timestamp="20241124 23:04:24.677" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.647" endtime="20241124 23:04:24.677"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:24.686" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:04:24.681" endtime="20241124 23:04:24.686"/>
</kw>
<msg timestamp="20241124 23:04:24.687" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.681" endtime="20241124 23:04:24.687"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.687" endtime="20241124 23:04:24.689"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</return>
<msg timestamp="20241124 23:04:24.689" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.680" endtime="20241124 23:04:24.689"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.689"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.696"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.696"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.696"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.696"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.696" endtime="20241124 23:04:24.699"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.699"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.689" endtime="20241124 23:04:24.699"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:24.700" endtime="20241124 23:04:24.700"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.700" endtime="20241124 23:04:24.700"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.700" endtime="20241124 23:04:24.700"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.702"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.702"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.700" endtime="20241124 23:04:24.702"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.704"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.704"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.704"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.702" endtime="20241124 23:04:24.704"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.700" endtime="20241124 23:04:24.704"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.699" endtime="20241124 23:04:24.704"/>
</if>
<status status="PASS" starttime="20241124 23:04:24.636" endtime="20241124 23:04:24.704"/>
</iter>
<status status="PASS" starttime="20241124 23:04:24.636" endtime="20241124 23:04:24.704"/>
</for>
<msg timestamp="20241124 23:04:24.704" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:24.631" endtime="20241124 23:04:24.704"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.704"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:24.719" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:04:24.712" endtime="20241124 23:04:24.719"/>
</kw>
<msg timestamp="20241124 23:04:24.719" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.712" endtime="20241124 23:04:24.719"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.720" endtime="20241124 23:04:24.720"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.721" endtime="20241124 23:04:24.722"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.721" endtime="20241124 23:04:24.722"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.722"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.722"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:24.720" endtime="20241124 23:04:24.722"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:24.719" endtime="20241124 23:04:24.722"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.719" endtime="20241124 23:04:24.722"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.722"/>
</return>
<msg timestamp="20241124 23:04:24.722" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:24.712" endtime="20241124 23:04:24.722"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.722"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.722"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.728" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.728"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.728"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.722" endtime="20241124 23:04:24.728"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:24.728" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '102', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', ...</msg>
<status status="PASS" starttime="20241124 23:04:24.728" endtime="20241124 23:04:24.728"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:24.728" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "102", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", ...</msg>
<status status="PASS" starttime="20241124 23:04:24.728" endtime="20241124 23:04:24.728"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:24.742" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:24.742" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:24.728" endtime="20241124 23:04:24.742"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:24.742" endtime="20241124 23:04:24.745"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:24.745" endtime="20241124 23:04:24.745"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.728" endtime="20241124 23:04:24.745"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.704" endtime="20241124 23:04:24.745"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:24.745"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.745" endtime="20241124 23:04:24.745"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:24.748" endtime="20241124 23:04:24.748"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.749" endtime="20241124 23:04:24.749"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.745" endtime="20241124 23:04:24.749"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:24.749"/>
</try>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:24.750"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:34:15.602Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.753" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:43:45.668Z', 'updatedAt': '2024-11-24T16:43:45.668Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:04:24.752" endtime="20241124 23:04:24.753"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:24.753" endtime="20241124 23:04:24.754"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:24.756" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:43:45.923Z', 'updatedAt': '2024-11-24T16:44:01.1...</msg>
<status status="PASS" starttime="20241124 23:04:24.755" endtime="20241124 23:04:24.756"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.758" endtime="20241124 23:04:24.758"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.758" endtime="20241124 23:04:24.758"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.757" endtime="20241124 23:04:24.758"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.756" endtime="20241124 23:04:24.758"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:24.761" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:24.761" endtime="20241124 23:04:24.761"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:24.761" endtime="20241124 23:04:24.761"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.761" endtime="20241124 23:04:24.761"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:24.761" endtime="20241124 23:04:24.761"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.761" endtime="20241124 23:04:24.769"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.778" endtime="20241124 23:04:24.778"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.770" endtime="20241124 23:04:24.778"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.786" endtime="20241124 23:04:24.787"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.790" endtime="20241124 23:04:24.790"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.778" endtime="20241124 23:04:24.790"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.796" endtime="20241124 23:04:24.796"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.794" endtime="20241124 23:04:24.799"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.808" endtime="20241124 23:04:24.808"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.799" endtime="20241124 23:04:24.808"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:24.812" endtime="20241124 23:04:24.812"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:24.868" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:24.827" endtime="20241124 23:04:24.868"/>
</kw>
<msg timestamp="20241124 23:04:24.868" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.827" endtime="20241124 23:04:24.868"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:24.868" endtime="20241124 23:04:24.868"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.827" endtime="20241124 23:04:24.868"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.868" endtime="20241124 23:04:24.868"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.868" endtime="20241124 23:04:24.868"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.868" endtime="20241124 23:04:24.868"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.827" endtime="20241124 23:04:24.868"/>
</try>
<msg timestamp="20241124 23:04:24.868" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.825" endtime="20241124 23:04:24.868"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:24.868" endtime="20241124 23:04:24.868"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.823" endtime="20241124 23:04:24.868"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.876"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.876"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.823" endtime="20241124 23:04:24.876"/>
</try>
<msg timestamp="20241124 23:04:24.876" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.823" endtime="20241124 23:04:24.876"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.884"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.884" endtime="20241124 23:04:24.884"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.886"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.886"/>
</if>
<status status="PASS" starttime="20241124 23:04:24.876" endtime="20241124 23:04:24.886"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.821" endtime="20241124 23:04:24.886"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:24.921" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:24.909" endtime="20241124 23:04:24.921"/>
</kw>
<msg timestamp="20241124 23:04:24.923" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.909" endtime="20241124 23:04:24.923"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:24.923" endtime="20241124 23:04:24.923"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.909" endtime="20241124 23:04:24.923"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.923" endtime="20241124 23:04:24.923"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.925" endtime="20241124 23:04:24.925"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.923" endtime="20241124 23:04:24.925"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.909" endtime="20241124 23:04:24.925"/>
</try>
<msg timestamp="20241124 23:04:24.925" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.904" endtime="20241124 23:04:24.925"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:24.925" endtime="20241124 23:04:24.925"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.904" endtime="20241124 23:04:24.925"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:24.925" endtime="20241124 23:04:24.925"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:24.925" endtime="20241124 23:04:24.925"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.904" endtime="20241124 23:04:24.925"/>
</try>
<msg timestamp="20241124 23:04:24.925" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.904" endtime="20241124 23:04:24.925"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.933" endtime="20241124 23:04:24.933"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.933" endtime="20241124 23:04:24.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.933" endtime="20241124 23:04:24.933"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.933" endtime="20241124 23:04:24.933"/>
</if>
<status status="PASS" starttime="20241124 23:04:24.925" endtime="20241124 23:04:24.933"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.902" endtime="20241124 23:04:24.933"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:24.979" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:04:24.979" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:24.937" endtime="20241124 23:04:24.979"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:24.979" endtime="20241124 23:04:24.979"/>
</return>
<status status="PASS" starttime="20241124 23:04:24.937" endtime="20241124 23:04:24.979"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.982" endtime="20241124 23:04:24.982"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.982" endtime="20241124 23:04:24.982"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.979" endtime="20241124 23:04:24.982"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.933" endtime="20241124 23:04:24.982"/>
</try>
<msg timestamp="20241124 23:04:24.982" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:24.894" endtime="20241124 23:04:24.982"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.988" endtime="20241124 23:04:24.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.990" endtime="20241124 23:04:24.990"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.988" endtime="20241124 23:04:24.990"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.988" endtime="20241124 23:04:24.990"/>
</if>
<status status="PASS" starttime="20241124 23:04:24.982" endtime="20241124 23:04:24.991"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.890" endtime="20241124 23:04:24.991"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:24.992" endtime="20241124 23:04:24.992"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:24.991" endtime="20241124 23:04:24.992"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.890" endtime="20241124 23:04:24.992"/>
</try>
<status status="PASS" starttime="20241124 23:04:24.890" endtime="20241124 23:04:24.992"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.015" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241124 23:04:25.002" endtime="20241124 23:04:25.015"/>
</kw>
<msg timestamp="20241124 23:04:25.015" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.002" endtime="20241124 23:04:25.015"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.015" endtime="20241124 23:04:25.015"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.002" endtime="20241124 23:04:25.015"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.019" endtime="20241124 23:04:25.019"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.019" endtime="20241124 23:04:25.019"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.015" endtime="20241124 23:04:25.019"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.002" endtime="20241124 23:04:25.019"/>
</try>
<msg timestamp="20241124 23:04:25.019" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.002" endtime="20241124 23:04:25.019"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.019" endtime="20241124 23:04:25.019"/>
</return>
<msg timestamp="20241124 23:04:25.019" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:04:24.998" endtime="20241124 23:04:25.019"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.023" endtime="20241124 23:04:25.023"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.023" endtime="20241124 23:04:25.023"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.023" endtime="20241124 23:04:25.023"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.023" endtime="20241124 23:04:25.023"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.023" endtime="20241124 23:04:25.023"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.998" endtime="20241124 23:04:25.023"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.812" endtime="20241124 23:04:25.023"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.088" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241124 23:04:25.041" endtime="20241124 23:04:25.088"/>
</kw>
<msg timestamp="20241124 23:04:25.088" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.041" endtime="20241124 23:04:25.088"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.088" endtime="20241124 23:04:25.088"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.041" endtime="20241124 23:04:25.096"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.096" endtime="20241124 23:04:25.096"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.096" endtime="20241124 23:04:25.096"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.096" endtime="20241124 23:04:25.096"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.041" endtime="20241124 23:04:25.096"/>
</try>
<msg timestamp="20241124 23:04:25.096" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.039" endtime="20241124 23:04:25.096"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.096" endtime="20241124 23:04:25.096"/>
</return>
<msg timestamp="20241124 23:04:25.096" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.036" endtime="20241124 23:04:25.096"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.104"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.104"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.104"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.104"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.104"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.031" endtime="20241124 23:04:25.104"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:25.113" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:04:25.104" endtime="20241124 23:04:25.113"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.113"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.122" endtime="20241124 23:04:25.122"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.122"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:25.122" endtime="20241124 23:04:25.128"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.122" endtime="20241124 23:04:25.128"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.128"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 23:04:25.130" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241124 23:04:25.130" endtime="20241124 23:04:25.220"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.130" endtime="20241124 23:04:25.220"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.221" endtime="20241124 23:04:25.221"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.222" endtime="20241124 23:04:25.222"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.220" endtime="20241124 23:04:25.222"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.130" endtime="20241124 23:04:25.222"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.257" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:25.237" endtime="20241124 23:04:25.257"/>
</kw>
<msg timestamp="20241124 23:04:25.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.237" endtime="20241124 23:04:25.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.237" endtime="20241124 23:04:25.259"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.237" endtime="20241124 23:04:25.259"/>
</try>
<msg timestamp="20241124 23:04:25.259" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.237" endtime="20241124 23:04:25.259"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.236" endtime="20241124 23:04:25.259"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.259" endtime="20241124 23:04:25.259"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.235" endtime="20241124 23:04:25.259"/>
</try>
<msg timestamp="20241124 23:04:25.259" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.235" endtime="20241124 23:04:25.259"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.267" endtime="20241124 23:04:25.267"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.267" endtime="20241124 23:04:25.267"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.267" endtime="20241124 23:04:25.267"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.267" endtime="20241124 23:04:25.267"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.267" endtime="20241124 23:04:25.275"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.230" endtime="20241124 23:04:25.275"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.327" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:25.302" endtime="20241124 23:04:25.327"/>
</kw>
<msg timestamp="20241124 23:04:25.327" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.302" endtime="20241124 23:04:25.327"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.329" endtime="20241124 23:04:25.329"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.302" endtime="20241124 23:04:25.329"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.329" endtime="20241124 23:04:25.329"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.332" endtime="20241124 23:04:25.332"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.329" endtime="20241124 23:04:25.332"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.302" endtime="20241124 23:04:25.332"/>
</try>
<msg timestamp="20241124 23:04:25.335" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.299" endtime="20241124 23:04:25.335"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.335" endtime="20241124 23:04:25.335"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.291" endtime="20241124 23:04:25.335"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.335" endtime="20241124 23:04:25.335"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.335" endtime="20241124 23:04:25.335"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.291" endtime="20241124 23:04:25.335"/>
</try>
<msg timestamp="20241124 23:04:25.335" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.291" endtime="20241124 23:04:25.335"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.348" endtime="20241124 23:04:25.348"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.348" endtime="20241124 23:04:25.348"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.347" endtime="20241124 23:04:25.348"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.347" endtime="20241124 23:04:25.351"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.343" endtime="20241124 23:04:25.351"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.291" endtime="20241124 23:04:25.353"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:25.389" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:04:25.390" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:25.354" endtime="20241124 23:04:25.391"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:25.391" endtime="20241124 23:04:25.391"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.353" endtime="20241124 23:04:25.391"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.393" endtime="20241124 23:04:25.393"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.394" endtime="20241124 23:04:25.394"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.391" endtime="20241124 23:04:25.394"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.353" endtime="20241124 23:04:25.394"/>
</try>
<msg timestamp="20241124 23:04:25.394" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:25.285" endtime="20241124 23:04:25.394"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.400" endtime="20241124 23:04:25.400"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.400" endtime="20241124 23:04:25.401"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.400" endtime="20241124 23:04:25.401"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.399" endtime="20241124 23:04:25.401"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.397" endtime="20241124 23:04:25.401"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.275" endtime="20241124 23:04:25.401"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.403" endtime="20241124 23:04:25.403"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.401" endtime="20241124 23:04:25.403"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.275" endtime="20241124 23:04:25.403"/>
</try>
<status status="PASS" starttime="20241124 23:04:25.275" endtime="20241124 23:04:25.403"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.430" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241124 23:04:25.419" endtime="20241124 23:04:25.430"/>
</kw>
<msg timestamp="20241124 23:04:25.430" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.419" endtime="20241124 23:04:25.430"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.430" endtime="20241124 23:04:25.430"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.419" endtime="20241124 23:04:25.432"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.432" endtime="20241124 23:04:25.432"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.432" endtime="20241124 23:04:25.432"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.432" endtime="20241124 23:04:25.435"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.419" endtime="20241124 23:04:25.435"/>
</try>
<msg timestamp="20241124 23:04:25.435" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.418" endtime="20241124 23:04:25.435"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.436" endtime="20241124 23:04:25.436"/>
</return>
<msg timestamp="20241124 23:04:25.436" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.414" endtime="20241124 23:04:25.436"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.439"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.439"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.439"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.439"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.439"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.411" endtime="20241124 23:04:25.439"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.226" endtime="20241124 23:04:25.439"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.458" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:25.452" endtime="20241124 23:04:25.458"/>
</kw>
<msg timestamp="20241124 23:04:25.458" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.452" endtime="20241124 23:04:25.458"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.458" endtime="20241124 23:04:25.458"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.452" endtime="20241124 23:04:25.458"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.458" endtime="20241124 23:04:25.458"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.463" endtime="20241124 23:04:25.463"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.458" endtime="20241124 23:04:25.463"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.452" endtime="20241124 23:04:25.463"/>
</try>
<msg timestamp="20241124 23:04:25.463" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.451" endtime="20241124 23:04:25.463"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.463" endtime="20241124 23:04:25.463"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.447" endtime="20241124 23:04:25.463"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.463" endtime="20241124 23:04:25.463"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.463" endtime="20241124 23:04:25.463"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.447" endtime="20241124 23:04:25.463"/>
</try>
<msg timestamp="20241124 23:04:25.463" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.447" endtime="20241124 23:04:25.463"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.468" endtime="20241124 23:04:25.468"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.468" endtime="20241124 23:04:25.468"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.468" endtime="20241124 23:04:25.468"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.466" endtime="20241124 23:04:25.468"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.465" endtime="20241124 23:04:25.470"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.447" endtime="20241124 23:04:25.470"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:25.484" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241124 23:04:25.484" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:25.470" endtime="20241124 23:04:25.484"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:25.486" endtime="20241124 23:04:25.486"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.470" endtime="20241124 23:04:25.486"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.486" endtime="20241124 23:04:25.486"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.486" endtime="20241124 23:04:25.486"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.486" endtime="20241124 23:04:25.487"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.470" endtime="20241124 23:04:25.487"/>
</try>
<msg timestamp="20241124 23:04:25.487" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:25.439" endtime="20241124 23:04:25.487"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 23:04:25.487" endtime="20241124 23:04:25.487"/>
</return>
<msg timestamp="20241124 23:04:25.489" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:25.225" endtime="20241124 23:04:25.489"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 23:04:25.496" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.492" endtime="20241124 23:04:25.496"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.496" endtime="20241124 23:04:25.496"/>
</return>
<msg timestamp="20241124 23:04:25.496" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.489" endtime="20241124 23:04:25.496"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.504" endtime="20241124 23:04:25.504"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.504" endtime="20241124 23:04:25.504"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.504" endtime="20241124 23:04:25.504"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.504" endtime="20241124 23:04:25.504"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.503" endtime="20241124 23:04:25.504"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.223" endtime="20241124 23:04:25.506"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.506"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.506"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.506"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.506" endtime="20241124 23:04:25.506"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.506" endtime="20241124 23:04:25.506"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.113" endtime="20241124 23:04:25.506"/>
</try>
<status status="PASS" starttime="20241124 23:04:24.812" endtime="20241124 23:04:25.506"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.809" endtime="20241124 23:04:25.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.508" endtime="20241124 23:04:25.508"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.508" endtime="20241124 23:04:25.508"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.510" endtime="20241124 23:04:25.510"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.512" endtime="20241124 23:04:25.512"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.510" endtime="20241124 23:04:25.512"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.512" endtime="20241124 23:04:25.512"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.512" endtime="20241124 23:04:25.512"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.510" endtime="20241124 23:04:25.512"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.508" endtime="20241124 23:04:25.512"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:25.520" endtime="20241124 23:04:25.520"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.512" endtime="20241124 23:04:25.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.528"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:25.544" endtime="20241124 23:04:25.544"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.528" endtime="20241124 23:04:25.552"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.552"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.562" endtime="20241124 23:04:25.562"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.552" endtime="20241124 23:04:25.562"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.562" endtime="20241124 23:04:25.576"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.761" endtime="20241124 23:04:25.576"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:25.576" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</return>
<msg timestamp="20241124 23:04:25.576" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:24.758" endtime="20241124 23:04:25.576"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.576" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.576"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.584" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.584"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.591" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.591"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:25.591" endtime="20241124 23:04:25.592"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:25.601" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:25.594" endtime="20241124 23:04:25.601"/>
</kw>
<msg timestamp="20241124 23:04:25.601" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:25.594" endtime="20241124 23:04:25.601"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:25.601" endtime="20241124 23:04:25.601"/>
</return>
<msg timestamp="20241124 23:04:25.601" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:25.594" endtime="20241124 23:04:25.601"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.610"/>
</kw>
<msg timestamp="20241124 23:04:25.610" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.610"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.617" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.617"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.617" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.617"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.617"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.617"/>
</return>
<msg timestamp="20241124 23:04:25.617" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.610" endtime="20241124 23:04:25.617"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:25.626" endtime="20241124 23:04:25.627"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.626" endtime="20241124 23:04:25.627"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.625" endtime="20241124 23:04:25.627"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.627"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.633"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:25.633" endtime="20241124 23:04:25.633"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.633"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.633" endtime="20241124 23:04:25.633"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:25.633" endtime="20241124 23:04:25.633"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.633" endtime="20241124 23:04:25.633"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.633"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.633"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.627" endtime="20241124 23:04:25.636"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.625" endtime="20241124 23:04:25.637"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.617" endtime="20241124 23:04:25.637"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.639"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.639"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.639"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.639"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.639"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.639" endtime="20241124 23:04:25.641"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.641"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.638" endtime="20241124 23:04:25.641"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.637" endtime="20241124 23:04:25.641"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.641"/>
</iter>
<status status="PASS" starttime="20241124 23:04:25.584" endtime="20241124 23:04:25.641"/>
</for>
<msg timestamp="20241124 23:04:25.641" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:25.576" endtime="20241124 23:04:25.641"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:25.641" endtime="20241124 23:04:25.649"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.658"/>
</kw>
<msg timestamp="20241124 23:04:25.658" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.658"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.666" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-24T15:18:09.149Z', 'updatedAt': '2024-11-24T17:22:57.715Z'}</msg>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.666"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.668" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.668"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.668"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.668"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.668"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.666" endtime="20241124 23:04:25.668"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.668"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.668"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.668"/>
</return>
<msg timestamp="20241124 23:04:25.668" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.658" endtime="20241124 23:04:25.668"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.674" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.674"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.674"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.674"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.674"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.668" endtime="20241124 23:04:25.674"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:25.674" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '103', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com', '...</msg>
<status status="PASS" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.674"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:25.674" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "103", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com",...</msg>
<status status="PASS" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.674"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:25.689" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:25.690" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.690"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:25.690" endtime="20241124 23:04:25.690"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:25.690" endtime="20241124 23:04:25.690"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.674" endtime="20241124 23:04:25.690"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.649" endtime="20241124 23:04:25.690"/>
</kw>
<status status="PASS" starttime="20241124 23:04:24.750" endtime="20241124 23:04:25.690"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.690" endtime="20241124 23:04:25.690"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:25.696" endtime="20241124 23:04:25.696"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.696" endtime="20241124 23:04:25.697"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.690" endtime="20241124 23:04:25.697"/>
</branch>
<status status="PASS" starttime="20241124 23:04:24.750" endtime="20241124 23:04:25.697"/>
</try>
<status status="PASS" starttime="20241124 23:04:24.750" endtime="20241124 23:04:25.697"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-24T16:52:08.811Z', 'updatedAt': '2024-11-24T17:34:15.617Z', 'action': {'id': '3', 'name': 'Set password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.700" level="INFO">${action} = {'id': '3', 'name': 'Set password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:44:31.460Z', 'updatedAt': '2024-11-24T16:44:31.460Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:04:25.699" endtime="20241124 23:04:25.700"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:25.701" endtime="20241124 23:04:25.702"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:25.705" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:44:31.712Z', 'updatedAt': '2024-11-24T16:46:16.462Z'}</msg>
<status status="PASS" starttime="20241124 23:04:25.703" endtime="20241124 23:04:25.705"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.706" endtime="20241124 23:04:25.707"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.707" endtime="20241124 23:04:25.707"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.706" endtime="20241124 23:04:25.708"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.705" endtime="20241124 23:04:25.708"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:25.710" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:04:25.708" endtime="20241124 23:04:25.710"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:25.710" endtime="20241124 23:04:25.710"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.710" endtime="20241124 23:04:25.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:25.710" endtime="20241124 23:04:25.710"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.710" endtime="20241124 23:04:25.710"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.718" endtime="20241124 23:04:25.718"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.710" endtime="20241124 23:04:25.718"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.723" endtime="20241124 23:04:25.723"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.723" endtime="20241124 23:04:25.723"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.719" endtime="20241124 23:04:25.723"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.731" endtime="20241124 23:04:25.731"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.723" endtime="20241124 23:04:25.731"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.740" endtime="20241124 23:04:25.740"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.735" endtime="20241124 23:04:25.740"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:25.750" endtime="20241124 23:04:25.751"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.788" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:04:25.771" endtime="20241124 23:04:25.788"/>
</kw>
<msg timestamp="20241124 23:04:25.788" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.769" endtime="20241124 23:04:25.788"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.765" endtime="20241124 23:04:25.788"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.765" endtime="20241124 23:04:25.788"/>
</try>
<msg timestamp="20241124 23:04:25.788" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.763" endtime="20241124 23:04:25.788"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.759" endtime="20241124 23:04:25.788"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.788" endtime="20241124 23:04:25.788"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.759" endtime="20241124 23:04:25.788"/>
</try>
<msg timestamp="20241124 23:04:25.788" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.759" endtime="20241124 23:04:25.788"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.796" endtime="20241124 23:04:25.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.796" endtime="20241124 23:04:25.796"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.796" endtime="20241124 23:04:25.796"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.796" endtime="20241124 23:04:25.796"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.796" endtime="20241124 23:04:25.796"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.758" endtime="20241124 23:04:25.804"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.828" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:04:25.821" endtime="20241124 23:04:25.828"/>
</kw>
<msg timestamp="20241124 23:04:25.828" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.821" endtime="20241124 23:04:25.828"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.828" endtime="20241124 23:04:25.828"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.821" endtime="20241124 23:04:25.828"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.828" endtime="20241124 23:04:25.836"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.836" endtime="20241124 23:04:25.836"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.828" endtime="20241124 23:04:25.836"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.821" endtime="20241124 23:04:25.836"/>
</try>
<msg timestamp="20241124 23:04:25.836" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.821" endtime="20241124 23:04:25.836"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.836" endtime="20241124 23:04:25.836"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.818" endtime="20241124 23:04:25.836"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:25.836" endtime="20241124 23:04:25.836"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:25.836" endtime="20241124 23:04:25.836"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.818" endtime="20241124 23:04:25.836"/>
</try>
<msg timestamp="20241124 23:04:25.836" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.813" endtime="20241124 23:04:25.836"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.844"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.844"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.844"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.844"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.836" endtime="20241124 23:04:25.844"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.813" endtime="20241124 23:04:25.844"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:25.869" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:04:25.869" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.869"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:25.869" endtime="20241124 23:04:25.869"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.869"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.869" endtime="20241124 23:04:25.869"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.869" endtime="20241124 23:04:25.869"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.869" endtime="20241124 23:04:25.869"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.844" endtime="20241124 23:04:25.869"/>
</try>
<msg timestamp="20241124 23:04:25.869" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:25.804" endtime="20241124 23:04:25.869"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.804" endtime="20241124 23:04:25.876"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.876" endtime="20241124 23:04:25.876"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.804" endtime="20241124 23:04:25.876"/>
</try>
<status status="PASS" starttime="20241124 23:04:25.804" endtime="20241124 23:04:25.876"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.903" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241124 23:04:25.892" endtime="20241124 23:04:25.903"/>
</kw>
<msg timestamp="20241124 23:04:25.903" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.892" endtime="20241124 23:04:25.903"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.903" endtime="20241124 23:04:25.903"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.892" endtime="20241124 23:04:25.903"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.903" endtime="20241124 23:04:25.903"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.908" endtime="20241124 23:04:25.908"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.903" endtime="20241124 23:04:25.908"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.892" endtime="20241124 23:04:25.908"/>
</try>
<msg timestamp="20241124 23:04:25.908" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.886" endtime="20241124 23:04:25.908"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.908" endtime="20241124 23:04:25.908"/>
</return>
<msg timestamp="20241124 23:04:25.908" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.886" endtime="20241124 23:04:25.908"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.919" endtime="20241124 23:04:25.919"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.919" endtime="20241124 23:04:25.919"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.919" endtime="20241124 23:04:25.919"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.919" endtime="20241124 23:04:25.919"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.908" endtime="20241124 23:04:25.919"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.886" endtime="20241124 23:04:25.919"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.751" endtime="20241124 23:04:25.919"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:25.974" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241124 23:04:25.934" endtime="20241124 23:04:25.974"/>
</kw>
<msg timestamp="20241124 23:04:25.974" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.934" endtime="20241124 23:04:25.974"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.974" endtime="20241124 23:04:25.982"/>
</return>
<status status="PASS" starttime="20241124 23:04:25.934" endtime="20241124 23:04:25.982"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.983" endtime="20241124 23:04:25.983"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.983" endtime="20241124 23:04:25.983"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.982" endtime="20241124 23:04:25.983"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.934" endtime="20241124 23:04:25.983"/>
</try>
<msg timestamp="20241124 23:04:25.983" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.934" endtime="20241124 23:04:25.983"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:25.983" endtime="20241124 23:04:25.983"/>
</return>
<msg timestamp="20241124 23:04:25.983" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 23:04:25.933" endtime="20241124 23:04:25.983"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.990" endtime="20241124 23:04:25.990"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:25.990" endtime="20241124 23:04:25.990"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:25.990" endtime="20241124 23:04:25.990"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.990" endtime="20241124 23:04:25.990"/>
</if>
<status status="PASS" starttime="20241124 23:04:25.983" endtime="20241124 23:04:25.990"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.925" endtime="20241124 23:04:25.990"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:25.990" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:04:25.990" endtime="20241124 23:04:25.990"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.003" endtime="20241124 23:04:26.003"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.007"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.000" endtime="20241124 23:04:26.007"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.007"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.007"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.000" endtime="20241124 23:04:26.007"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 23:04:26.007" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.059"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.059"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.059" endtime="20241124 23:04:26.059"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.059" endtime="20241124 23:04:26.059"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.059" endtime="20241124 23:04:26.059"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.007" endtime="20241124 23:04:26.059"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.089" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:04:26.082" endtime="20241124 23:04:26.089"/>
</kw>
<msg timestamp="20241124 23:04:26.089" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.080" endtime="20241124 23:04:26.089"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</try>
<msg timestamp="20241124 23:04:26.097" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.097" endtime="20241124 23:04:26.097"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</try>
<msg timestamp="20241124 23:04:26.097" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.097"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.105" endtime="20241124 23:04:26.105"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.105" endtime="20241124 23:04:26.105"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.105" endtime="20241124 23:04:26.105"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.105" endtime="20241124 23:04:26.105"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.105" endtime="20241124 23:04:26.105"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.073" endtime="20241124 23:04:26.105"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.146" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.146"/>
</kw>
<msg timestamp="20241124 23:04:26.146" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.146"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.146" endtime="20241124 23:04:26.146"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.146"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.146" endtime="20241124 23:04:26.146"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.146" endtime="20241124 23:04:26.146"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.146" endtime="20241124 23:04:26.151"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.151"/>
</try>
<msg timestamp="20241124 23:04:26.151" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.151"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.151" endtime="20241124 23:04:26.151"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.152"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.152" endtime="20241124 23:04:26.152"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.152" endtime="20241124 23:04:26.152"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.129" endtime="20241124 23:04:26.152"/>
</try>
<msg timestamp="20241124 23:04:26.154" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.122" endtime="20241124 23:04:26.154"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.156" endtime="20241124 23:04:26.156"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.156" endtime="20241124 23:04:26.156"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.156" endtime="20241124 23:04:26.156"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.156" endtime="20241124 23:04:26.162"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.156" endtime="20241124 23:04:26.162"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.122" endtime="20241124 23:04:26.162"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:26.188" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:04:26.188" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:26.162" endtime="20241124 23:04:26.188"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:26.188" endtime="20241124 23:04:26.188"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.162" endtime="20241124 23:04:26.188"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.188" endtime="20241124 23:04:26.188"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.188" endtime="20241124 23:04:26.188"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.188" endtime="20241124 23:04:26.188"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.162" endtime="20241124 23:04:26.188"/>
</try>
<msg timestamp="20241124 23:04:26.188" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:04:26.121" endtime="20241124 23:04:26.188"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.195" endtime="20241124 23:04:26.195"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.201" endtime="20241124 23:04:26.201"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.195" endtime="20241124 23:04:26.201"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.195" endtime="20241124 23:04:26.201"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.195" endtime="20241124 23:04:26.201"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.113" endtime="20241124 23:04:26.201"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.201" endtime="20241124 23:04:26.203"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.201" endtime="20241124 23:04:26.203"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.113" endtime="20241124 23:04:26.203"/>
</try>
<status status="PASS" starttime="20241124 23:04:26.113" endtime="20241124 23:04:26.203"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.236" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241124 23:04:26.220" endtime="20241124 23:04:26.244"/>
</kw>
<msg timestamp="20241124 23:04:26.244" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.220" endtime="20241124 23:04:26.244"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.244" endtime="20241124 23:04:26.244"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.220" endtime="20241124 23:04:26.244"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.244" endtime="20241124 23:04:26.244"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.244" endtime="20241124 23:04:26.244"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.244" endtime="20241124 23:04:26.244"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.220" endtime="20241124 23:04:26.244"/>
</try>
<msg timestamp="20241124 23:04:26.244" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.218" endtime="20241124 23:04:26.244"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.244" endtime="20241124 23:04:26.244"/>
</return>
<msg timestamp="20241124 23:04:26.244" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.212" endtime="20241124 23:04:26.244"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.253" endtime="20241124 23:04:26.253"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.253" endtime="20241124 23:04:26.253"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.253" endtime="20241124 23:04:26.253"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.253" endtime="20241124 23:04:26.253"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.253" endtime="20241124 23:04:26.260"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.208" endtime="20241124 23:04:26.260"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.066" endtime="20241124 23:04:26.260"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.312" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:04:26.284" endtime="20241124 23:04:26.312"/>
</kw>
<msg timestamp="20241124 23:04:26.312" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.284" endtime="20241124 23:04:26.312"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.312" endtime="20241124 23:04:26.312"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.284" endtime="20241124 23:04:26.312"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.312" endtime="20241124 23:04:26.312"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.317" endtime="20241124 23:04:26.318"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.312" endtime="20241124 23:04:26.319"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.284" endtime="20241124 23:04:26.319"/>
</try>
<msg timestamp="20241124 23:04:26.320" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.276" endtime="20241124 23:04:26.321"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.321" endtime="20241124 23:04:26.321"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.276" endtime="20241124 23:04:26.323"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.323" endtime="20241124 23:04:26.324"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.323" endtime="20241124 23:04:26.324"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.276" endtime="20241124 23:04:26.324"/>
</try>
<msg timestamp="20241124 23:04:26.325" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.268" endtime="20241124 23:04:26.325"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.334" endtime="20241124 23:04:26.334"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.334" endtime="20241124 23:04:26.334"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.334" endtime="20241124 23:04:26.334"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.334" endtime="20241124 23:04:26.334"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.325" endtime="20241124 23:04:26.334"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.268" endtime="20241124 23:04:26.341"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:04:26.392" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241124 23:04:26.396" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:04:26.341" endtime="20241124 23:04:26.396"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:04:26.396" endtime="20241124 23:04:26.398"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.341" endtime="20241124 23:04:26.398"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.401" endtime="20241124 23:04:26.401"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.403" endtime="20241124 23:04:26.404"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.399" endtime="20241124 23:04:26.404"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.341" endtime="20241124 23:04:26.404"/>
</try>
<msg timestamp="20241124 23:04:26.405" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:04:26.260" endtime="20241124 23:04:26.405"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 23:04:26.407" endtime="20241124 23:04:26.407"/>
</return>
<msg timestamp="20241124 23:04:26.409" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:04:26.066" endtime="20241124 23:04:26.409"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 23:04:26.440" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.424" endtime="20241124 23:04:26.440"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.440" endtime="20241124 23:04:26.440"/>
</return>
<msg timestamp="20241124 23:04:26.440" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.417" endtime="20241124 23:04:26.440"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.465" endtime="20241124 23:04:26.466"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.466" endtime="20241124 23:04:26.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.465" endtime="20241124 23:04:26.466"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.460" endtime="20241124 23:04:26.466"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.460" endtime="20241124 23:04:26.466"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.064" endtime="20241124 23:04:26.466"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.998" endtime="20241124 23:04:26.466"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.990" endtime="20241124 23:04:26.466"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.990" endtime="20241124 23:04:26.466"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.473" endtime="20241124 23:04:26.473"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.473" endtime="20241124 23:04:26.473"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.990" endtime="20241124 23:04:26.473"/>
</try>
<status status="PASS" starttime="20241124 23:04:25.748" endtime="20241124 23:04:26.473"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.740" endtime="20241124 23:04:26.473"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.481" endtime="20241124 23:04:26.481"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.473" endtime="20241124 23:04:26.481"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.489" endtime="20241124 23:04:26.490"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.490" endtime="20241124 23:04:26.490"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.490" endtime="20241124 23:04:26.490"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.493" endtime="20241124 23:04:26.495"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.493" endtime="20241124 23:04:26.495"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.490" endtime="20241124 23:04:26.495"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.481" endtime="20241124 23:04:26.495"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:26.517" endtime="20241124 23:04:26.517"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.523" endtime="20241124 23:04:26.523"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.495" endtime="20241124 23:04:26.523"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.523" endtime="20241124 23:04:26.523"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.531" endtime="20241124 23:04:26.531"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.530" endtime="20241124 23:04:26.531"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.532" endtime="20241124 23:04:26.532"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.531" endtime="20241124 23:04:26.532"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.530" endtime="20241124 23:04:26.534"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.523" endtime="20241124 23:04:26.534"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:26.547" endtime="20241124 23:04:26.547"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.555"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.534" endtime="20241124 23:04:26.555"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.555"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.563"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.563"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.563" endtime="20241124 23:04:26.563"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.563" endtime="20241124 23:04:26.563"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.563"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.555" endtime="20241124 23:04:26.563"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.571" endtime="20241124 23:04:26.573"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.563" endtime="20241124 23:04:26.573"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:26.612" endtime="20241124 23:04:26.612"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.620" endtime="20241124 23:04:26.620"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.573" endtime="20241124 23:04:26.620"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.710" endtime="20241124 23:04:26.620"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:26.620" endtime="20241124 23:04:26.628"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:26.628" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:26.628" endtime="20241124 23:04:26.628"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:26.628" endtime="20241124 23:04:26.628"/>
</return>
<msg timestamp="20241124 23:04:26.628" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:04:25.708" endtime="20241124 23:04:26.628"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.638" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241124 23:04:26.637" endtime="20241124 23:04:26.638"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.638" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:26.638" endtime="20241124 23:04:26.638"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.644" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:26.638" endtime="20241124 23:04:26.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.644" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:26.644" endtime="20241124 23:04:26.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.644" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:26.644" endtime="20241124 23:04:26.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.644" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:26.644" endtime="20241124 23:04:26.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.644" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:26.644" endtime="20241124 23:04:26.644"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.652" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:26.652" endtime="20241124 23:04:26.652"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:26.652" endtime="20241124 23:04:26.652"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:26.660" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</kw>
<msg timestamp="20241124 23:04:26.660" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.660"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.668"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.668"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.660" endtime="20241124 23:04:26.668"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:26.668" endtime="20241124 23:04:26.668"/>
</return>
<msg timestamp="20241124 23:04:26.668" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:26.652" endtime="20241124 23:04:26.668"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.676"/>
</kw>
<msg timestamp="20241124 23:04:26.676" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.676"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.676" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.676"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.676" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.676"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.676"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.685"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.684" endtime="20241124 23:04:26.685"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.685"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.685"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.676" endtime="20241124 23:04:26.685"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.685"/>
</return>
<msg timestamp="20241124 23:04:26.685" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.668" endtime="20241124 23:04:26.685"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.685"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.685"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.685"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.692"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.692"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.692"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.692"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.692"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.692" endtime="20241124 23:04:26.692"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.700"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.685" endtime="20241124 23:04:26.700"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.701"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.701" endtime="20241124 23:04:26.708"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.638" endtime="20241124 23:04:26.708"/>
</iter>
<status status="PASS" starttime="20241124 23:04:26.638" endtime="20241124 23:04:26.708"/>
</for>
<msg timestamp="20241124 23:04:26.708" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:26.628" endtime="20241124 23:04:26.708"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:26.708" endtime="20241124 23:04:26.708"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</kw>
<msg timestamp="20241124 23:04:26.724" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.716" endtime="20241124 23:04:26.724"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.724" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-24T16:43:05.032Z', 'updatedAt': '2024-11-24T17:01:06.183Z'}</msg>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.724" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:26.724" endtime="20241124 23:04:26.724"/>
</return>
<msg timestamp="20241124 23:04:26.734" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.716" endtime="20241124 23:04:26.734"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.736" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241124 23:04:26.736" endtime="20241124 23:04:26.736"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.736" endtime="20241124 23:04:26.736"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.736" endtime="20241124 23:04:26.736"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.736" endtime="20241124 23:04:26.736"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.734" endtime="20241124 23:04:26.736"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:26.741" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '104', 'status': 'COMPLETED', 'actionName': 'Set password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', '...</msg>
<status status="PASS" starttime="20241124 23:04:26.736" endtime="20241124 23:04:26.741"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:26.741" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "104", "status": "COMPLETED", "actionName": "Set password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "...</msg>
<status status="PASS" starttime="20241124 23:04:26.741" endtime="20241124 23:04:26.741"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:26.771" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:26.771" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:26.741" endtime="20241124 23:04:26.771"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:26.772" endtime="20241124 23:04:26.773"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:26.774" endtime="20241124 23:04:26.774"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.741" endtime="20241124 23:04:26.776"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.708" endtime="20241124 23:04:26.777"/>
</kw>
<status status="PASS" starttime="20241124 23:04:25.698" endtime="20241124 23:04:26.777"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.779" endtime="20241124 23:04:26.779"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:26.779" endtime="20241124 23:04:26.780"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.780" endtime="20241124 23:04:26.780"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.778" endtime="20241124 23:04:26.780"/>
</branch>
<status status="PASS" starttime="20241124 23:04:25.698" endtime="20241124 23:04:26.782"/>
</try>
<status status="PASS" starttime="20241124 23:04:25.698" endtime="20241124 23:04:26.783"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-24T16:52:08.811Z', 'updatedAt': '2024-11-24T17:34:15.605Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.786" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:50:52.555Z', 'updatedAt': '2024-11-24T16:50:52.555Z', 'selec...</msg>
<status status="PASS" starttime="20241124 23:04:26.786" endtime="20241124 23:04:26.790"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:26.790" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:50:52.715Z', 'updatedAt': '2024-11-24T16:50:52.715Z'}</msg>
<status status="PASS" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.790"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:26.798" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:04:26.790" endtime="20241124 23:04:26.798"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:26.800" endtime="20241124 23:04:26.800"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.800" endtime="20241124 23:04:26.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:26.800" endtime="20241124 23:04:26.800"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.800" endtime="20241124 23:04:26.800"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.840" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241124 23:04:26.830" endtime="20241124 23:04:26.840"/>
</kw>
<msg timestamp="20241124 23:04:26.840" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.828" endtime="20241124 23:04:26.840"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.840" endtime="20241124 23:04:26.840"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.828" endtime="20241124 23:04:26.840"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.840" endtime="20241124 23:04:26.846"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.846" endtime="20241124 23:04:26.846"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.840" endtime="20241124 23:04:26.846"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.828" endtime="20241124 23:04:26.846"/>
</try>
<msg timestamp="20241124 23:04:26.846" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.826" endtime="20241124 23:04:26.846"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.846" endtime="20241124 23:04:26.846"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.822" endtime="20241124 23:04:26.846"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:26.846" endtime="20241124 23:04:26.846"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:26.846" endtime="20241124 23:04:26.846"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.822" endtime="20241124 23:04:26.846"/>
</try>
<msg timestamp="20241124 23:04:26.846" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.819" endtime="20241124 23:04:26.846"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.852" endtime="20241124 23:04:26.852"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.853" endtime="20241124 23:04:26.853"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.852" endtime="20241124 23:04:26.853"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.852" endtime="20241124 23:04:26.853"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.850" endtime="20241124 23:04:26.853"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.819" endtime="20241124 23:04:26.853"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.864" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.864"/>
</kw>
<msg timestamp="20241124 23:04:26.864" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.864"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.864" endtime="20241124 23:04:26.864"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.864"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.864" endtime="20241124 23:04:26.864"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.864" endtime="20241124 23:04:26.871"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.864" endtime="20241124 23:04:26.871"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.871"/>
</try>
<msg timestamp="20241124 23:04:26.871" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.871"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.871"/>
</return>
<msg timestamp="20241124 23:04:26.871" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.856" endtime="20241124 23:04:26.871"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.871"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.871"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.871"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.871"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.871" endtime="20241124 23:04:26.879"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.855" endtime="20241124 23:04:26.879"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:26.918" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241124 23:04:26.892" endtime="20241124 23:04:26.918"/>
</kw>
<msg timestamp="20241124 23:04:26.918" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.892" endtime="20241124 23:04:26.918"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.920"/>
</return>
<status status="PASS" starttime="20241124 23:04:26.891" endtime="20241124 23:04:26.920"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.920"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.920"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.920"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.889" endtime="20241124 23:04:26.920"/>
</try>
<msg timestamp="20241124 23:04:26.920" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.889" endtime="20241124 23:04:26.920"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.920"/>
</return>
<msg timestamp="20241124 23:04:26.920" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 23:04:26.886" endtime="20241124 23:04:26.920"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.928" endtime="20241124 23:04:26.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.928" endtime="20241124 23:04:26.928"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.928" endtime="20241124 23:04:26.928"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:26.928"/>
</if>
<status status="PASS" starttime="20241124 23:04:26.920" endtime="20241124 23:04:26.928"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.883" endtime="20241124 23:04:26.928"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.806" endtime="20241124 23:04:26.928"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:26.928" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:26.928"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 23:04:26.936" endtime="20241124 23:04:26.936"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:26.936" endtime="20241124 23:04:26.936"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:26.936"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:26.936"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:26.936"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:27.014"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:27.015"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.015" endtime="20241124 23:04:27.015"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.017" endtime="20241124 23:04:27.017"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.015" endtime="20241124 23:04:27.017"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.936" endtime="20241124 23:04:27.017"/>
</try>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:27.018"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:27.018"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:27.018"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.020" endtime="20241124 23:04:27.021"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.018" endtime="20241124 23:04:27.021"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.928" endtime="20241124 23:04:27.021"/>
</try>
<status status="PASS" starttime="20241124 23:04:26.806" endtime="20241124 23:04:27.021"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.800" endtime="20241124 23:04:27.021"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.025" endtime="20241124 23:04:27.026"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.027" endtime="20241124 23:04:27.027"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.021" endtime="20241124 23:04:27.027"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.034" endtime="20241124 23:04:27.034"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.027" endtime="20241124 23:04:27.034"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.041" endtime="20241124 23:04:27.041"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.036" endtime="20241124 23:04:27.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.041" endtime="20241124 23:04:27.041"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.041" endtime="20241124 23:04:27.041"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.050" endtime="20241124 23:04:27.050"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.041" endtime="20241124 23:04:27.050"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.052"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.050" endtime="20241124 23:04:27.052"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:27.068" endtime="20241124 23:04:27.068"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.052" endtime="20241124 23:04:27.075"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.075"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:27.091" endtime="20241124 23:04:27.091"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.099" endtime="20241124 23:04:27.099"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.075" endtime="20241124 23:04:27.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.102"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.099" endtime="20241124 23:04:27.102"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.107" endtime="20241124 23:04:27.107"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.102" endtime="20241124 23:04:27.107"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:27.118" endtime="20241124 23:04:27.118"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.118" endtime="20241124 23:04:27.118"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.107" endtime="20241124 23:04:27.118"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.798" endtime="20241124 23:04:27.118"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.123" endtime="20241124 23:04:27.123"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:04:27.126" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:04:27.125" endtime="20241124 23:04:27.126"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.126"/>
</return>
<msg timestamp="20241124 23:04:27.126" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:04:26.790" endtime="20241124 23:04:27.126"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.126" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.126"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.126" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.126"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.132" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:04:27.132" endtime="20241124 23:04:27.132"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.133" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.133" endtime="20241124 23:04:27.133"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.135" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:04:27.133" endtime="20241124 23:04:27.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.135" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.135" endtime="20241124 23:04:27.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.135" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:04:27.135" endtime="20241124 23:04:27.135"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.135" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:04:27.135" endtime="20241124 23:04:27.135"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:27.135" endtime="20241124 23:04:27.135"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:04:27.140" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.140"/>
</kw>
<msg timestamp="20241124 23:04:27.140" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.140"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.140"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.148" endtime="20241124 23:04:27.148"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.148"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.148" endtime="20241124 23:04:27.148"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.148" endtime="20241124 23:04:27.148"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.148"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.150"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.150"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:27.150" endtime="20241124 23:04:27.150"/>
</return>
<msg timestamp="20241124 23:04:27.151" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.140" endtime="20241124 23:04:27.151"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:27.155" endtime="20241124 23:04:27.156"/>
</kw>
<msg timestamp="20241124 23:04:27.156" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.155" endtime="20241124 23:04:27.156"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.156" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.156" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</if>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.156" endtime="20241124 23:04:27.156"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:27.164" endtime="20241124 23:04:27.164"/>
</return>
<msg timestamp="20241124 23:04:27.164" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.151" endtime="20241124 23:04:27.164"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:27.167" endtime="20241124 23:04:27.167"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.167" endtime="20241124 23:04:27.167"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.167" endtime="20241124 23:04:27.168"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.168"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.168"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.168"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.170" endtime="20241124 23:04:27.170"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:04:27.170" endtime="20241124 23:04:27.171"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.171"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.171"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.171"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.168" endtime="20241124 23:04:27.171"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.172" endtime="20241124 23:04:27.172"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:27.172" endtime="20241124 23:04:27.172"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.171" endtime="20241124 23:04:27.172"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.172" endtime="20241124 23:04:27.174"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.172" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.171" endtime="20241124 23:04:27.174"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.171" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.171" endtime="20241124 23:04:27.174"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.167" endtime="20241124 23:04:27.174"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.164" endtime="20241124 23:04:27.174"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.174" endtime="20241124 23:04:27.174"/>
</if>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.174"/>
</iter>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.174"/>
</for>
<msg timestamp="20241124 23:04:27.181" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:04:27.126" endtime="20241124 23:04:27.181"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.181" endtime="20241124 23:04:27.182"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:27.190" endtime="20241124 23:04:27.191"/>
</kw>
<msg timestamp="20241124 23:04:27.191" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.189" endtime="20241124 23:04:27.191"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.192" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-24T16:47:28.991Z', 'updatedAt': '2024-11-24T16:47:28.991Z'}</msg>
<status status="PASS" starttime="20241124 23:04:27.192" endtime="20241124 23:04:27.193"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.194" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.193" endtime="20241124 23:04:27.194"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.193" endtime="20241124 23:04:27.194"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.194" endtime="20241124 23:04:27.194"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.194" endtime="20241124 23:04:27.194"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.193" endtime="20241124 23:04:27.194"/>
</if>
<status status="PASS" starttime="20241124 23:04:27.192" endtime="20241124 23:04:27.194"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.191" endtime="20241124 23:04:27.194"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:27.194" endtime="20241124 23:04:27.194"/>
</return>
<msg timestamp="20241124 23:04:27.195" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.186" endtime="20241124 23:04:27.195"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.197" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241124 23:04:27.195" endtime="20241124 23:04:27.197"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.195" endtime="20241124 23:04:27.197"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.197" endtime="20241124 23:04:27.197"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.197" endtime="20241124 23:04:27.197"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.195" endtime="20241124 23:04:27.197"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:27.201" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '105', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241124 23:04:27.198" endtime="20241124 23:04:27.201"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:27.202" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "105", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue":...</msg>
<status status="PASS" starttime="20241124 23:04:27.202" endtime="20241124 23:04:27.202"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:27.238" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:27.238" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:27.202" endtime="20241124 23:04:27.238"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</return>
<status status="PASS" starttime="20241124 23:04:27.202" endtime="20241124 23:04:27.238"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.183" endtime="20241124 23:04:27.238"/>
</kw>
<status status="PASS" starttime="20241124 23:04:26.786" endtime="20241124 23:04:27.238"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.238" endtime="20241124 23:04:27.238"/>
</branch>
<status status="PASS" starttime="20241124 23:04:26.786" endtime="20241124 23:04:27.238"/>
</try>
<status status="PASS" starttime="20241124 23:04:26.786" endtime="20241124 23:04:27.238"/>
</iter>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:27.238"/>
</for>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:27.238"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.596" endtime="20241124 23:04:27.238"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:27.250" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '52', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 23:04:27.246" endtime="20241124 23:04:27.250"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:27.250" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "52", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 23:04:27.250" endtime="20241124 23:04:27.250"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:27.283" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:27.283" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:27.250" endtime="20241124 23:04:27.283"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.283" endtime="20241124 23:04:27.283"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:27.283" endtime="20241124 23:04:27.283"/>
</return>
<status status="PASS" starttime="20241124 23:04:27.250" endtime="20241124 23:04:27.283"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.246" endtime="20241124 23:04:27.288"/>
</kw>
<status status="PASS" starttime="20241124 23:04:19.580" endtime="20241124 23:04:27.288"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.572" endtime="20241124 23:04:27.288"/>
</try>
<status status="PASS" starttime="20241124 23:04:19.572" endtime="20241124 23:04:27.288"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '2', 'testCaseId': '1', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.409Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'projectI...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.288" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-24T16:52:30.660Z', 'updatedAt': '2024-11-24T16:52:30.660Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.288"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.296"/>
</kw>
<msg timestamp="20241124 23:04:27.296" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.296"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.297" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-24T16:52:30.906Z', 'updatedAt': '2024-11-24T16:52:30.906Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241124 23:04:27.297" endtime="20241124 23:04:27.297"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.297" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.297" endtime="20241124 23:04:27.297"/>
</kw>
<status status="PASS" starttime="20241124 23:04:27.297" endtime="20241124 23:04:27.297"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.300" endtime="20241124 23:04:27.300"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.297" endtime="20241124 23:04:27.300"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.297" endtime="20241124 23:04:27.300"/>
</if>
<status status="PASS" starttime="20241124 23:04:27.296" endtime="20241124 23:04:27.300"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.296" endtime="20241124 23:04:27.300"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:27.300" endtime="20241124 23:04:27.300"/>
</return>
<msg timestamp="20241124 23:04:27.300" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:27.288" endtime="20241124 23:04:27.300"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-24T16:52:30.906Z', 'updatedAt': '2024-11-24T16:52:30.906Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.300" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:51:14.954Z', 'updatedAt': '2024-11-24T16:51:14.954Z',...</msg>
<status status="PASS" starttime="20241124 23:04:27.300" endtime="20241124 23:04:27.300"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:27.300" endtime="20241124 23:04:27.304"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:04:27.304" level="INFO">${input} = {'id': '5', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:51:15.169Z', 'updatedAt': '2024-11-24T16:51:15.169Z'}</msg>
<status status="PASS" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:27.304" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:27.304" endtime="20241124 23:04:27.304"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:04:39.779" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="browser/screenshot/fail-screenshot-4.png" target="_blank"&gt;&lt;img src="browser/screenshot/fail-screenshot-4.png" width="800px"/&gt;&lt;/a&gt;</msg>
<msg timestamp="20241124 23:04:39.781" level="INFO">See also file:///C:/Users/Admin/Documents/Hackathon/Test%20Automation%20Studio/Test-automation-studio-projects/test-automation-rf/code/playwright-log.txt for additional details.</msg>
<msg timestamp="20241124 23:04:39.783" level="FAIL">TimeoutError: locator.waitFor: Timeout 12000ms exceeded.
=========================== logs ===========================
waiting for locator('id="headerProfileImage"')
============================================================
Tip: Use "Set Browser Timeout" for increasing the timeout or double check your locator as the targeted element(s) couldn't be found.</msg>
<status status="FAIL" starttime="20241124 23:04:27.320" endtime="20241124 23:04:39.784"/>
</kw>
<msg timestamp="20241124 23:04:39.784" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.320" endtime="20241124 23:04:39.784"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:39.785" endtime="20241124 23:04:39.785"/>
</return>
<status status="PASS" starttime="20241124 23:04:27.318" endtime="20241124 23:04:39.785"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.787" endtime="20241124 23:04:39.787"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.788" endtime="20241124 23:04:39.788"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.787" endtime="20241124 23:04:39.788"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.318" endtime="20241124 23:04:39.788"/>
</try>
<msg timestamp="20241124 23:04:39.789" level="INFO">${result} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.318" endtime="20241124 23:04:39.789"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:04:39.789" endtime="20241124 23:04:39.789"/>
</return>
<status status="PASS" starttime="20241124 23:04:27.317" endtime="20241124 23:04:39.789"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:04:39.789" endtime="20241124 23:04:39.790"/>
</return>
<status status="NOT RUN" starttime="20241124 23:04:39.789" endtime="20241124 23:04:39.790"/>
</branch>
<status status="PASS" starttime="20241124 23:04:27.316" endtime="20241124 23:04:39.790"/>
</try>
<msg timestamp="20241124 23:04:39.790" level="INFO">${is_attached} = False</msg>
<status status="PASS" starttime="20241124 23:04:27.314" endtime="20241124 23:04:39.791"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:39.796" endtime="20241124 23:04:39.796"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:39.796" endtime="20241124 23:04:39.796"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:39.801" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:39.796" endtime="20241124 23:04:39.801"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:39.796" endtime="20241124 23:04:39.804"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:39.792" endtime="20241124 23:04:39.806"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:39.792" endtime="20241124 23:04:39.806"/>
</if>
<status status="FAIL" starttime="20241124 23:04:39.792" endtime="20241124 23:04:39.808"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:27.314" endtime="20241124 23:04:39.812"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.821" endtime="20241124 23:04:39.821"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.823" endtime="20241124 23:04:39.823"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:27.304" endtime="20241124 23:04:39.823"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.823" endtime="20241124 23:04:39.823"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.829" endtime="20241124 23:04:39.829"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.823" endtime="20241124 23:04:39.829"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.830" endtime="20241124 23:04:39.830"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.829" endtime="20241124 23:04:39.830"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:39.823" endtime="20241124 23:04:39.830"/>
</try>
<status status="FAIL" starttime="20241124 23:04:27.304" endtime="20241124 23:04:39.830"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:27.304" endtime="20241124 23:04:39.830"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.838" endtime="20241124 23:04:39.838"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.838" endtime="20241124 23:04:39.838"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.830" endtime="20241124 23:04:39.845"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.845" endtime="20241124 23:04:39.845"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.845" endtime="20241124 23:04:39.845"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.857" endtime="20241124 23:04:39.857"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.845" endtime="20241124 23:04:39.857"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.859" endtime="20241124 23:04:39.859"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.857" endtime="20241124 23:04:39.859"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.865" endtime="20241124 23:04:39.865"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.862" endtime="20241124 23:04:39.865"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:39.867" endtime="20241124 23:04:39.867"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:39.865" endtime="20241124 23:04:39.870"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:39.878" endtime="20241124 23:04:39.878"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.870" endtime="20241124 23:04:39.886"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.886"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:39.886" endtime="20241124 23:04:39.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:04:39.908" endtime="20241124 23:04:39.908"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.911" endtime="20241124 23:04:39.911"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.894" endtime="20241124 23:04:39.911"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.911" endtime="20241124 23:04:39.911"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.919" endtime="20241124 23:04:39.919"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.911" endtime="20241124 23:04:39.919"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.919" endtime="20241124 23:04:39.919"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.919" endtime="20241124 23:04:39.920"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:04:39.911" endtime="20241124 23:04:39.920"/>
</if>
<status status="NOT RUN" starttime="20241124 23:04:39.911" endtime="20241124 23:04:39.920"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.923" endtime="20241124 23:04:39.925"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.920" endtime="20241124 23:04:39.925"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:04:39.935" endtime="20241124 23:04:39.935"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.935" endtime="20241124 23:04:39.935"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.925" endtime="20241124 23:04:39.935"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:27.304" endtime="20241124 23:04:39.935"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.938" endtime="20241124 23:04:39.938"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.938" endtime="20241124 23:04:39.938"/>
</kw>
<return>
<value>${value}</value>
<status status="NOT RUN" starttime="20241124 23:04:39.938" endtime="20241124 23:04:39.938"/>
</return>
<status status="FAIL" starttime="20241124 23:04:27.304" endtime="20241124 23:04:39.938"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<status status="NOT RUN" starttime="20241124 23:04:39.938" endtime="20241124 23:04:39.938"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.942" endtime="20241124 23:04:39.942"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<status status="NOT RUN" starttime="20241124 23:04:39.943" endtime="20241124 23:04:39.943"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:39.943"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:39.943" endtime="20241124 23:04:39.943"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</kw>
<msg timestamp="20241124 23:04:39.951" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:39.951" level="INFO">${values} = {'id': '4', 'name': 'Profile icon', 'xpath': 'id="headerProfileImage"', 'pageId': '2', 'createdAt': '2024-11-24T16:48:09.826Z', 'updatedAt': '2024-11-24T16:48:09.826Z'}</msg>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:39.951" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</kw>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</branch>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.951"/>
</if>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.959"/>
</branch>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.959"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</return>
<msg timestamp="20241124 23:04:39.959" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:04:39.951" endtime="20241124 23:04:39.959"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:04:39.959" level="INFO">${xpath} = id="headerProfileImage"</msg>
<status status="PASS" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</kw>
<status status="PASS" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</branch>
<status status="PASS" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.959"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:39.967" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '100', 'status': 'FAILED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id="headerProfileImage"', 'inputValue': '', 'errorMessage':...</msg>
<status status="PASS" starttime="20241124 23:04:39.959" endtime="20241124 23:04:39.967"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:39.967" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "100", "status": "FAILED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=\"headerProfileImage\"", "inputValue": "", "errorMessage...</msg>
<status status="PASS" starttime="20241124 23:04:39.967" endtime="20241124 23:04:39.967"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:39.996" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:39.996" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:39.967" endtime="20241124 23:04:39.997"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:39.998" endtime="20241124 23:04:40.001"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:40.001" endtime="20241124 23:04:40.002"/>
</return>
<status status="PASS" starttime="20241124 23:04:39.967" endtime="20241124 23:04:40.004"/>
</kw>
<status status="PASS" starttime="20241124 23:04:39.943" endtime="20241124 23:04:40.005"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.010" endtime="20241124 23:04:40.010"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:40.016" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:40.010" endtime="20241124 23:04:40.016"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:40.007" endtime="20241124 23:04:40.027"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:39.943" endtime="20241124 23:04:40.028"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:40.028"/>
</try>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:40.032"/>
</iter>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:40.032"/>
</for>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:40.035"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:27.300" endtime="20241124 23:04:40.035"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<status status="NOT RUN" starttime="20241124 23:04:40.038" endtime="20241124 23:04:40.039"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:27.288" endtime="20241124 23:04:40.039"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.042" endtime="20241124 23:04:40.049"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:40.055" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '53', 'status': 'FAILED', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:04:40.051" endtime="20241124 23:04:40.055"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:40.059" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "53", "status": "FAILED", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:04:40.059" endtime="20241124 23:04:40.059"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:40.078" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:40.081" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:40.059" endtime="20241124 23:04:40.081"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.084" endtime="20241124 23:04:40.084"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:40.084" endtime="20241124 23:04:40.084"/>
</return>
<status status="PASS" starttime="20241124 23:04:40.058" endtime="20241124 23:04:40.088"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.049" endtime="20241124 23:04:40.091"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.091" endtime="20241124 23:04:40.091"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:40.099" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:40.099" endtime="20241124 23:04:40.099"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:40.091" endtime="20241124 23:04:40.107"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:40.039" endtime="20241124 23:04:40.107"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:27.288" endtime="20241124 23:04:40.107"/>
</try>
<status status="FAIL" starttime="20241124 23:04:27.288" endtime="20241124 23:04:40.112"/>
</iter>
<status status="FAIL" starttime="20241124 23:04:19.572" endtime="20241124 23:04:40.112"/>
</for>
<status status="FAIL" starttime="20241124 23:04:19.572" endtime="20241124 23:04:40.115"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:19.572" endtime="20241124 23:04:40.115"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<status status="NOT RUN" starttime="20241124 23:04:40.118" endtime="20241124 23:04:40.118"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:19.548" endtime="20241124 23:04:40.121"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.122" endtime="20241124 23:04:40.124"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:04:40.132" level="INFO">${response_message} = {'testCaseRunId': '20', 'status': 'FAIL', 'errorMessage': 'ELEMENT_NOT_ATTACHED'}</msg>
<status status="PASS" starttime="20241124 23:04:40.125" endtime="20241124 23:04:40.132"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:04:40.132" level="INFO">${json_response} = {"testCaseRunId": "20", "status": "FAIL", "errorMessage": "ELEMENT_NOT_ATTACHED"}</msg>
<status status="PASS" starttime="20241124 23:04:40.132" endtime="20241124 23:04:40.132"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:04:40.165" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:04:40.167" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:04:40.140" endtime="20241124 23:04:40.167"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.167" endtime="20241124 23:04:40.167"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:04:40.167" endtime="20241124 23:04:40.167"/>
</return>
<status status="PASS" starttime="20241124 23:04:40.132" endtime="20241124 23:04:40.173"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.125" endtime="20241124 23:04:40.173"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Error occurred:${exception}===&gt;</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.173" endtime="20241124 23:04:40.173"/>
</kw>
<kw name="Fail" library="BuiltIn">
<arg>${exception}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<msg timestamp="20241124 23:04:40.181" level="FAIL">ELEMENT_NOT_ATTACHED</msg>
<status status="FAIL" starttime="20241124 23:04:40.181" endtime="20241124 23:04:40.181"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:40.173" endtime="20241124 23:04:40.189"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:40.121" endtime="20241124 23:04:40.189"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:19.548" endtime="20241124 23:04:40.189"/>
</try>
<status status="FAIL" starttime="20241124 23:04:19.515" endtime="20241124 23:04:40.189"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:40.189" endtime="20241124 23:04:40.189"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:40.189" endtime="20241124 23:04:40.189"/>
</branch>
<status status="FAIL" starttime="20241124 23:04:19.515" endtime="20241124 23:04:40.189"/>
</if>
<status status="FAIL" starttime="20241124 23:04:19.495" endtime="20241124 23:04:40.197"/>
</kw>
<status status="FAIL" starttime="20241124 23:04:19.495" endtime="20241124 23:04:40.197"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:40.197" endtime="20241124 23:04:40.197"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.197" endtime="20241124 23:04:40.197"/>
</branch>
<status status="PASS" starttime="20241124 23:04:19.495" endtime="20241124 23:04:40.205"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241124 23:04:40.642" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241124 23:04:40.209" endtime="20241124 23:04:40.642"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.208" endtime="20241124 23:04:40.642"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:04:40.642" endtime="20241124 23:04:40.642"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:04:40.642" endtime="20241124 23:04:40.642"/>
</branch>
<status status="PASS" starttime="20241124 23:04:40.207" endtime="20241124 23:04:40.642"/>
</try>
<status status="PASS" starttime="20241124 23:04:40.207" endtime="20241124 23:04:40.642"/>
</kw>
<status status="PASS" starttime="20241124 23:04:13.790" endtime="20241124 23:04:40.642"/>
</iter>
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:04:40.642" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\1dfcbb0e-8411-460a-9f35-0d65a9238062"}</msg>
<msg timestamp="20241124 23:04:41.119" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\1dfcbb0e-8411-460a-9f35-0d65a9238062"}</msg>
<status status="PASS" starttime="20241124 23:04:40.642" endtime="20241124 23:04:41.119"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:04:41.119" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:04:41.138" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:04:41.140" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:04:41.119" endtime="20241124 23:04:41.140"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241124 23:04:41.140" endtime="20241124 23:04:41.140"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:04:44.326" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:04:44.326" level="INFO">${page_id} = {'page_id': 'page=d9c77154-ff26-4b6f-8c31-4c952c024e60', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:04:41.140" endtime="20241124 23:04:44.326"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.642" endtime="20241124 23:04:44.326"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:04:44.326" endtime="20241124 23:04:44.326"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:06:32.716" level="INFO">${json} = {'type': 'START_RUN', 'payload': {'testCaseRun': {'id': '21', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:36:32.509Z', 'createdAt': '2024-11-24T17:36:32.509Z', 'errorMes...</msg>
<status status="PASS" starttime="20241124 23:04:44.326" endtime="20241124 23:06:32.716"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="NOT RUN" starttime="20241124 23:06:32.716" endtime="20241124 23:06:32.716"/>
</break>
<status status="NOT RUN" starttime="20241124 23:06:32.716" endtime="20241124 23:06:32.716"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.716" endtime="20241124 23:06:32.716"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Data=&gt; ${input}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:32.724" endtime="20241124 23:06:32.734"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_type_exists}</var>
<arg>${input}</arg>
<arg>type</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.740"/>
</kw>
<msg timestamp="20241124 23:06:32.740" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.739" endtime="20241124 23:06:32.740"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.740" level="INFO">${values} = START_RUN</msg>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.740"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.740" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.740"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.748"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.748"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.748"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.740" endtime="20241124 23:06:32.748"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</return>
<msg timestamp="20241124 23:06:32.748" level="INFO">${is_type_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.734" endtime="20241124 23:06:32.748"/>
</kw>
<if>
<branch type="IF" condition="$is_type_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Type not exists in the input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</kw>
<return>
<status status="NOT RUN" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.748" endtime="20241124 23:06:32.748"/>
</if>
<if>
<branch type="IF" condition="'${input}[type]' == '${COMMAND_TYPE_START_RUN}'">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCase</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.756"/>
</kw>
<msg timestamp="20241124 23:06:32.756" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.756"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.756" level="INFO">${values} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.756"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.766" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.764" endtime="20241124 23:06:32.766"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.766"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.766" endtime="20241124 23:06:32.768"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.766" endtime="20241124 23:06:32.768"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.768"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.768"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.768"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:32.768" endtime="20241124 23:06:32.768"/>
</return>
<msg timestamp="20241124 23:06:32.768" level="INFO">${is_test_case_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.756" endtime="20241124 23:06:32.768"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_run_exists}</var>
<arg>${input}[payload]</arg>
<arg>testCaseRun</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:32.772" endtime="20241124 23:06:32.773"/>
</kw>
<msg timestamp="20241124 23:06:32.773" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.771" endtime="20241124 23:06:32.773"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.775" level="INFO">${values} = {'id': '21', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:36:32.509Z', 'createdAt': '2024-11-24T17:36:32.509Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:06:32.775" endtime="20241124 23:06:32.775"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.775" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.775" endtime="20241124 23:06:32.775"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.775" endtime="20241124 23:06:32.775"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.775" endtime="20241124 23:06:32.780"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.775" endtime="20241124 23:06:32.780"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.773" endtime="20241124 23:06:32.780"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</return>
<msg timestamp="20241124 23:06:32.780" level="INFO">${is_test_case_run_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.771" endtime="20241124 23:06:32.780"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_exists == $False or $is_test_case_run_exists == $False">
<kw name="Log To Console" library="BuiltIn">
<arg>Testcase or TestCaseRun data not available in input</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${testCase}</var>
<arg>${input}[payload][testCase]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.780" level="INFO">${testCase} = {'id': '1', 'name': 'Validate profile email - positive', 'projectId': '1', 'createdAt': '2024-11-24T16:55:57.364Z', 'updatedAt': '2024-11-24T17:33:07.367Z', 'testCaseFlowSequences': [{'id': '1', 'test...</msg>
<status status="PASS" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${testCaseRun}</var>
<arg>${input}[payload][testCaseRun]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.780" level="INFO">${testCaseRun} = {'id': '21', 'testCaseId': '1', 'status': 'ADDED_TO_QUEUE', 'updatedAt': '2024-11-24T17:36:32.509Z', 'createdAt': '2024-11-24T17:36:32.509Z', 'errorMessage': None}</msg>
<status status="PASS" starttime="20241124 23:06:32.780" endtime="20241124 23:06:32.780"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${assertions}</var>
<arg>${testCase}[assertions]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.788" level="INFO">${assertions} = [{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTar...</msg>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Case Name: ${testCase}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<try>
<branch type="TRY">
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_test_case_flow_sequences_exists}</var>
<arg>${testCase}</arg>
<arg>testCaseFlowSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<msg timestamp="20241124 23:06:32.788" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.788" level="INFO">${values} = [{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'cre...</msg>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.788" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.788"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.796"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.796"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.796"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.796"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:32.796" endtime="20241124 23:06:32.796"/>
</return>
<msg timestamp="20241124 23:06:32.796" level="INFO">${is_test_case_flow_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:32.796"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${test_case_run_response_message}</var>
<arg>testCaseRunId=${testCaseRun}[id]</arg>
<arg>status=STARTED</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:32.798" level="INFO">${test_case_run_response_message} = {'testCaseRunId': '21', 'status': 'STARTED'}</msg>
<status status="PASS" starttime="20241124 23:06:32.796" endtime="20241124 23:06:32.798"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${test_case_run_response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:32.798" level="INFO">${json_response} = {"testCaseRunId": "21", "status": "STARTED"}</msg>
<status status="PASS" starttime="20241124 23:06:32.798" endtime="20241124 23:06:32.798"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:32.807" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:32.807" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:32.798" endtime="20241124 23:06:32.807"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:32.807" endtime="20241124 23:06:32.808"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:32.808"/>
</return>
<status status="PASS" starttime="20241124 23:06:32.798" endtime="20241124 23:06:32.808"/>
</kw>
<if>
<branch type="IF" condition="$is_test_case_flow_sequences_exists">
<kw name="Create Dictionary" library="BuiltIn">
<var>${ACCUMULATION}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:32.808" level="INFO">${ACCUMULATION} = {}</msg>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:32.808"/>
</kw>
<for flavor="IN">
<var>${testCaseFlowSequence}</var>
<value>@{testCase}[testCaseFlowSequences]</value>
<iter>
<var name="${testCaseFlowSequence}">{'id': '1', 'testCaseId': '1', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.408Z', 'flow': {'id': '1', 'name': 'Login', 'projectId': '1', 'crea...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.808" level="INFO">${flow} = {'id': '1', 'name': 'Login', 'projectId': '1', 'createdAt': '2024-11-24T16:52:08.694Z', 'updatedAt': '2024-11-24T17:34:15.823Z', 'flowActionSequences': [{'id': '8', 'actionId': '9', 'flowId': '1', 'or...</msg>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:32.808"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:32.813"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:32.818" endtime="20241124 23:06:32.818"/>
</kw>
<msg timestamp="20241124 23:06:32.818" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.818" endtime="20241124 23:06:32.818"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.822" level="INFO">${values} = [{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:34:15.591Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUN...</msg>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.822" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.821" endtime="20241124 23:06:32.822"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.821" endtime="20241124 23:06:32.822"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</return>
<msg timestamp="20241124 23:06:32.822" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:32.818" endtime="20241124 23:06:32.822"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '8', 'actionId': '9', 'flowId': '1', 'order': 0, 'createdAt': '2024-11-24T17:32:34.803Z', 'updatedAt': '2024-11-24T17:34:15.591Z', 'action': {'id': '9', 'name': 'Launch browser', 'type': 'LAUNC...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.822" level="INFO">${action} = {'id': '9', 'name': 'Launch browser', 'type': 'LAUNCH_BROWSER', 'selectorI': None, 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T17:32:06.229Z', 'updatedAt': '2024-11-24T17:32:06.229Z', ...</msg>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:32.822"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:32.829" level="INFO">${input} = {'id': '9', 'actionId': '9', 'name': 'Input 01', 'value': 'https://iassistant.ideas2it.com/login', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T17:32:06.579Z', 'updatedAt': '202...</msg>
<status status="PASS" starttime="20241124 23:06:32.829" endtime="20241124 23:06:32.829"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.831" endtime="20241124 23:06:32.832"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:32.832" endtime="20241124 23:06:32.832"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:32.831" endtime="20241124 23:06:32.832"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.829" endtime="20241124 23:06:32.832"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:32.837" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:06:32.832" endtime="20241124 23:06:32.837"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>${url}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:06:39.904" level="INFO">Successfully initialized new page object and opened url: https://iassistant.ideas2it.com/login</msg>
<msg timestamp="20241124 23:06:39.904" level="INFO">${page_id} = {'page_id': 'page=5d3cf9b6-428a-4913-ac1f-f23d55023945', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:06:32.839" endtime="20241124 23:06:39.904"/>
</kw>
<kw name="Switch Page" library="RPA.Browser.Playwright">
<arg>${page_id}</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Switches the active browser page to another open page by ``id`` or ``NEW``.</doc>
<msg timestamp="20241124 23:06:39.909" level="INFO">Switching to page {'page_id': 'page=5d3cf9b6-428a-4913-ac1f-f23d55023945', 'video_path': ''},context CURRENT, browser CURRENT</msg>
<msg timestamp="20241124 23:06:39.931" level="INFO">[
  {
    "type": "chromium",
    "id": "browser=198cfb3f-aa77-4778-8e9f-519c34bd326a",
    "contexts": [
      {
        "type": "context",
        "id": "context=e0207681-7d6d-4f31-be67-c418d5e15c92",
        "activePage": "page=5d3cf9b6-428a-4913-ac1f-f23d55023945",
        "pages": [
          {
            "type": "page",
            "title": "Google",
            "url": "https://www.google.com/",
            "id": "page=d9c77154-ff26-4b6f-8c31-4c952c024e60",
            "timestamp": 1732469681.337
          },
          {
            "type": "page",
            "title": "iAssistant",
            "url": "https://iassistant.ideas2it.com/login",
            "id": "page=5d3cf9b6-428a-4913-ac1f-f23d55023945",
            "timestamp": 1732469792.912
          }
        ]
      }
    ],
    "activeContext": "context=e0207681-7d6d-4f31-be67-c418d5e15c92",
    "activeBrowser": true
  }
]</msg>
<msg timestamp="20241124 23:06:39.935" level="INFO">Successfully changed active page</msg>
<status status="PASS" starttime="20241124 23:06:39.908" endtime="20241124 23:06:39.935"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.839" endtime="20241124 23:06:39.935"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.839" endtime="20241124 23:06:39.935"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:39.935" endtime="20241124 23:06:39.935"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.935" endtime="20241124 23:06:39.935"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.942" endtime="20241124 23:06:39.942"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.935" endtime="20241124 23:06:39.942"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.946" endtime="20241124 23:06:39.946"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.949" endtime="20241124 23:06:39.949"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.942" endtime="20241124 23:06:39.949"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.950"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.949" endtime="20241124 23:06:39.950"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.950"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.950"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.950"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.950"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.958" endtime="20241124 23:06:39.958"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.950" endtime="20241124 23:06:39.958"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:39.960" endtime="20241124 23:06:39.960"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:39.958" endtime="20241124 23:06:39.960"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:39.972" endtime="20241124 23:06:39.972"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.976" endtime="20241124 23:06:39.977"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.964" endtime="20241124 23:06:39.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.980"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.980"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.980"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.980"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.982"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:39.980" endtime="20241124 23:06:39.982"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:39.977" endtime="20241124 23:06:39.982"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:39.991" endtime="20241124 23:06:39.991"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:39.998"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.982" endtime="20241124 23:06:39.998"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:39.998"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:39.998"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:39.998"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:40.006"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:40.006"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:40.006"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:39.998" endtime="20241124 23:06:40.008"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.009" endtime="20241124 23:06:40.014"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.008" endtime="20241124 23:06:40.014"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:40.031" endtime="20241124 23:06:40.031"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.031" endtime="20241124 23:06:40.031"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.014" endtime="20241124 23:06:40.031"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.837" endtime="20241124 23:06:40.031"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:40.039" endtime="20241124 23:06:40.039"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:40.039" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:40.039" endtime="20241124 23:06:40.039"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:40.042" endtime="20241124 23:06:40.042"/>
</return>
<msg timestamp="20241124 23:06:40.042" level="INFO">${value} = https://iassistant.ideas2it.com/login</msg>
<status status="PASS" starttime="20241124 23:06:32.832" endtime="20241124 23:06:40.042"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.042" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:8</msg>
<status status="PASS" starttime="20241124 23:06:40.042" endtime="20241124 23:06:40.042"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.047"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.047" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.055"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:40.055" endtime="20241124 23:06:40.055"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:40.055" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:40.055" endtime="20241124 23:06:40.063"/>
</kw>
<msg timestamp="20241124 23:06:40.063" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.055" endtime="20241124 23:06:40.063"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:40.063" endtime="20241124 23:06:40.063"/>
</return>
<msg timestamp="20241124 23:06:40.063" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.055" endtime="20241124 23:06:40.063"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:40.079" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:1::flowActionSequenceId:2'.</msg>
<status status="FAIL" starttime="20241124 23:06:40.071" endtime="20241124 23:06:40.079"/>
</kw>
<msg timestamp="20241124 23:06:40.079" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.071" endtime="20241124 23:06:40.079"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.079"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.079" endtime="20241124 23:06:40.087"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</return>
<msg timestamp="20241124 23:06:40.087" level="INFO">${is_target_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.071" endtime="20241124 23:06:40.087"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.087"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.095"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.087" endtime="20241124 23:06:40.095"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.103"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:40.110" endtime="20241124 23:06:40.110"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.110"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.110"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.110"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.110"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.103" endtime="20241124 23:06:40.111"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.095" endtime="20241124 23:06:40.111"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.047" endtime="20241124 23:06:40.112"/>
</iter>
<status status="PASS" starttime="20241124 23:06:40.042" endtime="20241124 23:06:40.112"/>
</for>
<msg timestamp="20241124 23:06:40.112" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:40.042" endtime="20241124 23:06:40.112"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:40.113" endtime="20241124 23:06:40.113"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:40.127" level="FAIL">Dictionary does not contain key 'selector'.</msg>
<status status="FAIL" starttime="20241124 23:06:40.126" endtime="20241124 23:06:40.127"/>
</kw>
<msg timestamp="20241124 23:06:40.127" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.119" endtime="20241124 23:06:40.127"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.127"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.127"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.127"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.127"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.135"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.135"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.135"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.127" endtime="20241124 23:06:40.135"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:40.135" endtime="20241124 23:06:40.135"/>
</return>
<msg timestamp="20241124 23:06:40.135" level="INFO">${is_selector_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:40.119" endtime="20241124 23:06:40.135"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.135" endtime="20241124 23:06:40.135"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.135" endtime="20241124 23:06:40.135"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.144" level="INFO">${xpath} = </msg>
<status status="PASS" starttime="20241124 23:06:40.142" endtime="20241124 23:06:40.144"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.135" endtime="20241124 23:06:40.144"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.135" endtime="20241124 23:06:40.144"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:40.144" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '107', 'status': 'COMPLETED', 'actionName': 'Launch browser', 'actionType': 'LAUNCH_BROWSER', 'actionXpath': '', 'inputValue': 'https://iassistant.ideas2it.com/login', ...</msg>
<status status="PASS" starttime="20241124 23:06:40.144" endtime="20241124 23:06:40.144"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:40.152" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "107", "status": "COMPLETED", "actionName": "Launch browser", "actionType": "LAUNCH_BROWSER", "actionXpath": "", "inputValue": "https://iassistant.ideas2it.com/login", ...</msg>
<status status="PASS" starttime="20241124 23:06:40.152" endtime="20241124 23:06:40.152"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:40.160" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:40.160" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:40.152" endtime="20241124 23:06:40.160"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:40.160" endtime="20241124 23:06:40.160"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:40.168" endtime="20241124 23:06:40.168"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.152" endtime="20241124 23:06:40.168"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.113" endtime="20241124 23:06:40.168"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:40.168"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.168" endtime="20241124 23:06:40.168"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:40.168" endtime="20241124 23:06:40.168"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.168" endtime="20241124 23:06:40.168"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.168" endtime="20241124 23:06:40.168"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:40.168"/>
</try>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:40.175"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '2', 'actionId': '2', 'flowId': '1', 'order': 1, 'createdAt': '2024-11-24T16:52:08.810Z', 'updatedAt': '2024-11-24T17:34:15.602Z', 'action': {'id': '2', 'name': 'Set username', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.177" level="INFO">${action} = {'id': '2', 'name': 'Set username', 'type': 'TYPE_TEXT', 'selectorI': '1', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:43:45.668Z', 'updatedAt': '2024-11-24T16:43:45.668Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:06:40.176" endtime="20241124 23:06:40.177"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:40.178" endtime="20241124 23:06:40.179"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:40.181" level="INFO">${input} = {'id': '2', 'actionId': '2', 'name': 'Bharani', 'value': 'bharani@ideas2it.com', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:43:45.923Z', 'updatedAt': '2024-11-24T16:44:01.1...</msg>
<status status="PASS" starttime="20241124 23:06:40.180" endtime="20241124 23:06:40.181"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.183" endtime="20241124 23:06:40.183"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.183" endtime="20241124 23:06:40.184"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.182" endtime="20241124 23:06:40.184"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.181" endtime="20241124 23:06:40.184"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:40.186" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:40.186" endtime="20241124 23:06:40.186"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:40.186" endtime="20241124 23:06:40.186"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.186" endtime="20241124 23:06:40.186"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:40.186" endtime="20241124 23:06:40.192"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.186" endtime="20241124 23:06:40.192"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.200" endtime="20241124 23:06:40.200"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.192" endtime="20241124 23:06:40.200"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.212" endtime="20241124 23:06:40.212"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.217" endtime="20241124 23:06:40.217"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.200" endtime="20241124 23:06:40.217"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.217" endtime="20241124 23:06:40.217"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.217" endtime="20241124 23:06:40.217"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.226" endtime="20241124 23:06:40.226"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.217" endtime="20241124 23:06:40.226"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:40.233" endtime="20241124 23:06:40.233"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.276" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.276"/>
</kw>
<msg timestamp="20241124 23:06:40.277" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</try>
<msg timestamp="20241124 23:06:40.277" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.277"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.242" endtime="20241124 23:06:40.277"/>
</try>
<msg timestamp="20241124 23:06:40.277" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.241" endtime="20241124 23:06:40.277"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.282"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.282"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.282"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.282"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.277" endtime="20241124 23:06:40.282"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.233" endtime="20241124 23:06:40.282"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.311" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:40.298" endtime="20241124 23:06:40.311"/>
</kw>
<msg timestamp="20241124 23:06:40.311" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.298" endtime="20241124 23:06:40.311"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.311" endtime="20241124 23:06:40.311"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.298" endtime="20241124 23:06:40.311"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.314"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.314"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.311" endtime="20241124 23:06:40.314"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.298" endtime="20241124 23:06:40.314"/>
</try>
<msg timestamp="20241124 23:06:40.314" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.298" endtime="20241124 23:06:40.314"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.314"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.293" endtime="20241124 23:06:40.314"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.314"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.314"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.293" endtime="20241124 23:06:40.314"/>
</try>
<msg timestamp="20241124 23:06:40.314" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.293" endtime="20241124 23:06:40.314"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.322"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.322"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.322"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.322"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.314" endtime="20241124 23:06:40.322"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.293" endtime="20241124 23:06:40.322"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:40.363" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:06:40.365" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.365"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:40.365" endtime="20241124 23:06:40.365"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.365"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.366" endtime="20241124 23:06:40.366"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.366" endtime="20241124 23:06:40.366"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.365" endtime="20241124 23:06:40.366"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.322" endtime="20241124 23:06:40.366"/>
</try>
<msg timestamp="20241124 23:06:40.368" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:40.290" endtime="20241124 23:06:40.368"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.372" endtime="20241124 23:06:40.372"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.372" endtime="20241124 23:06:40.372"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.372" endtime="20241124 23:06:40.372"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.372" endtime="20241124 23:06:40.372"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.368" endtime="20241124 23:06:40.375"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.375"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.375" endtime="20241124 23:06:40.377"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.375" endtime="20241124 23:06:40.377"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.377"/>
</try>
<status status="PASS" starttime="20241124 23:06:40.282" endtime="20241124 23:06:40.377"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.398" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</kw>
<msg timestamp="20241124 23:06:40.398" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.398" endtime="20241124 23:06:40.398"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.398" endtime="20241124 23:06:40.398"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.398" endtime="20241124 23:06:40.398"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.398" endtime="20241124 23:06:40.398"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</try>
<msg timestamp="20241124 23:06:40.398" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.398" endtime="20241124 23:06:40.398"/>
</return>
<msg timestamp="20241124 23:06:40.398" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.398"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.405" endtime="20241124 23:06:40.409"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.409" endtime="20241124 23:06:40.409"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.405" endtime="20241124 23:06:40.409"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.405" endtime="20241124 23:06:40.409"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.405" endtime="20241124 23:06:40.409"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.380" endtime="20241124 23:06:40.409"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.233" endtime="20241124 23:06:40.409"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.481" level="INFO">Waited for Element with selector //input[@id="username"] at state editable</msg>
<status status="PASS" starttime="20241124 23:06:40.421" endtime="20241124 23:06:40.481"/>
</kw>
<msg timestamp="20241124 23:06:40.481" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.421" endtime="20241124 23:06:40.481"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.481" endtime="20241124 23:06:40.486"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.413" endtime="20241124 23:06:40.486"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.486" endtime="20241124 23:06:40.486"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.486" endtime="20241124 23:06:40.486"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.486" endtime="20241124 23:06:40.486"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.413" endtime="20241124 23:06:40.486"/>
</try>
<msg timestamp="20241124 23:06:40.486" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.413" endtime="20241124 23:06:40.486"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.486" endtime="20241124 23:06:40.486"/>
</return>
<msg timestamp="20241124 23:06:40.494" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.413" endtime="20241124 23:06:40.494"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.502" endtime="20241124 23:06:40.510"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.510" endtime="20241124 23:06:40.510"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.502" endtime="20241124 23:06:40.510"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.502" endtime="20241124 23:06:40.510"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.502" endtime="20241124 23:06:40.510"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.413" endtime="20241124 23:06:40.510"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:40.510" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:06:40.510" endtime="20241124 23:06:40.510"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.518" endtime="20241124 23:06:40.518"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.526"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.518" endtime="20241124 23:06:40.526"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.526"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.526"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.518" endtime="20241124 23:06:40.526"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 23:06:40.534" level="INFO">Fills the text 'bharani@ideas2it.com' in the given field.</msg>
<status status="PASS" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.599"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.599"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.599" endtime="20241124 23:06:40.599"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.600" endtime="20241124 23:06:40.601"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.599" endtime="20241124 23:06:40.601"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.526" endtime="20241124 23:06:40.601"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
//input[@id="username"]: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.629" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:40.618" endtime="20241124 23:06:40.629"/>
</kw>
<msg timestamp="20241124 23:06:40.631" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.617" endtime="20241124 23:06:40.631"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.631" endtime="20241124 23:06:40.631"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.617" endtime="20241124 23:06:40.631"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.631" endtime="20241124 23:06:40.631"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.631" endtime="20241124 23:06:40.631"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.631" endtime="20241124 23:06:40.634"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.617" endtime="20241124 23:06:40.634"/>
</try>
<msg timestamp="20241124 23:06:40.634" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.610" endtime="20241124 23:06:40.634"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.634" endtime="20241124 23:06:40.634"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.610" endtime="20241124 23:06:40.634"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.634" endtime="20241124 23:06:40.634"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.634" endtime="20241124 23:06:40.634"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.610" endtime="20241124 23:06:40.634"/>
</try>
<msg timestamp="20241124 23:06:40.634" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.610" endtime="20241124 23:06:40.634"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.644" endtime="20241124 23:06:40.644"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.644" endtime="20241124 23:06:40.644"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.643" endtime="20241124 23:06:40.644"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.642" endtime="20241124 23:06:40.644"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.634" endtime="20241124 23:06:40.644"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.610" endtime="20241124 23:06:40.644"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.689" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:40.668" endtime="20241124 23:06:40.691"/>
</kw>
<msg timestamp="20241124 23:06:40.691" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.668" endtime="20241124 23:06:40.691"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.692" endtime="20241124 23:06:40.693"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.668" endtime="20241124 23:06:40.693"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.693" endtime="20241124 23:06:40.693"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.693" endtime="20241124 23:06:40.693"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.693" endtime="20241124 23:06:40.693"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.668" endtime="20241124 23:06:40.693"/>
</try>
<msg timestamp="20241124 23:06:40.693" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.666" endtime="20241124 23:06:40.693"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.693" endtime="20241124 23:06:40.693"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.658" endtime="20241124 23:06:40.699"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.699" endtime="20241124 23:06:40.699"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.699" endtime="20241124 23:06:40.699"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.658" endtime="20241124 23:06:40.699"/>
</try>
<msg timestamp="20241124 23:06:40.699" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.658" endtime="20241124 23:06:40.699"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.710" endtime="20241124 23:06:40.710"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.710" endtime="20241124 23:06:40.710"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.710" endtime="20241124 23:06:40.710"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.710" endtime="20241124 23:06:40.710"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.707" endtime="20241124 23:06:40.716"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.658" endtime="20241124 23:06:40.716"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:40.756" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:06:40.756" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:40.716" endtime="20241124 23:06:40.756"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:40.756" endtime="20241124 23:06:40.756"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.716" endtime="20241124 23:06:40.764"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.764" endtime="20241124 23:06:40.764"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.764" endtime="20241124 23:06:40.764"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.764" endtime="20241124 23:06:40.764"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.716" endtime="20241124 23:06:40.764"/>
</try>
<msg timestamp="20241124 23:06:40.764" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:40.650" endtime="20241124 23:06:40.764"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.788" endtime="20241124 23:06:40.788"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.788" endtime="20241124 23:06:40.788"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.780" endtime="20241124 23:06:40.788"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.780" endtime="20241124 23:06:40.788"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.778" endtime="20241124 23:06:40.791"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.650" endtime="20241124 23:06:40.791"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.793" endtime="20241124 23:06:40.793"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.791" endtime="20241124 23:06:40.793"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.650" endtime="20241124 23:06:40.793"/>
</try>
<status status="PASS" starttime="20241124 23:06:40.650" endtime="20241124 23:06:40.793"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.825" level="INFO">Waited for Element with selector //input[@id="username"] at state visible</msg>
<status status="PASS" starttime="20241124 23:06:40.805" endtime="20241124 23:06:40.825"/>
</kw>
<msg timestamp="20241124 23:06:40.825" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.805" endtime="20241124 23:06:40.825"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.829"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.805" endtime="20241124 23:06:40.829"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.829"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.829"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.829"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.805" endtime="20241124 23:06:40.829"/>
</try>
<msg timestamp="20241124 23:06:40.829" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.805" endtime="20241124 23:06:40.829"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.829"/>
</return>
<msg timestamp="20241124 23:06:40.829" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.797" endtime="20241124 23:06:40.829"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.840" endtime="20241124 23:06:40.840"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.841" endtime="20241124 23:06:40.841"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.839" endtime="20241124 23:06:40.841"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.839" endtime="20241124 23:06:40.842"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.829" endtime="20241124 23:06:40.842"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.797" endtime="20241124 23:06:40.842"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.601" endtime="20241124 23:06:40.844"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:40.871" level="INFO">Waited for Element with selector //input[@id="username"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.871"/>
</kw>
<msg timestamp="20241124 23:06:40.871" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.871"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.871" endtime="20241124 23:06:40.871"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.871"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.871" endtime="20241124 23:06:40.871"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.871" endtime="20241124 23:06:40.871"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.871" endtime="20241124 23:06:40.871"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.871"/>
</try>
<msg timestamp="20241124 23:06:40.878" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.878"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.878" endtime="20241124 23:06:40.878"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.878"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:40.878" endtime="20241124 23:06:40.878"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:40.878" endtime="20241124 23:06:40.878"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.854" endtime="20241124 23:06:40.878"/>
</try>
<msg timestamp="20241124 23:06:40.878" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.849" endtime="20241124 23:06:40.878"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.895"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.895"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.895"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.891" endtime="20241124 23:06:40.895"/>
</if>
<status status="PASS" starttime="20241124 23:06:40.886" endtime="20241124 23:06:40.895"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.849" endtime="20241124 23:06:40.895"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:40.942" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241124 23:06:40.944" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.944"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:40.944" endtime="20241124 23:06:40.944"/>
</return>
<status status="PASS" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.944"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.944" endtime="20241124 23:06:40.944"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:40.944" endtime="20241124 23:06:40.944"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:40.944" endtime="20241124 23:06:40.944"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.895" endtime="20241124 23:06:40.944"/>
</try>
<msg timestamp="20241124 23:06:40.944" level="INFO">${fieldTextValue} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:40.847" endtime="20241124 23:06:40.944"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 23:06:40.944" endtime="20241124 23:06:40.944"/>
</return>
<msg timestamp="20241124 23:06:40.952" level="INFO">${populated_value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:40.601" endtime="20241124 23:06:40.952"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 23:06:40.984" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.968" endtime="20241124 23:06:40.984"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:40.984" endtime="20241124 23:06:40.984"/>
</return>
<msg timestamp="20241124 23:06:40.984" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 23:06:40.960" endtime="20241124 23:06:40.984"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.008" endtime="20241124 23:06:41.009"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.010" endtime="20241124 23:06:41.010"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.003" endtime="20241124 23:06:41.010"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.003" endtime="20241124 23:06:41.010"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.001" endtime="20241124 23:06:41.010"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.601" endtime="20241124 23:06:41.010"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.518" endtime="20241124 23:06:41.010"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.518" endtime="20241124 23:06:41.010"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.518" endtime="20241124 23:06:41.010"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.010" endtime="20241124 23:06:41.010"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.010" endtime="20241124 23:06:41.017"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.510" endtime="20241124 23:06:41.017"/>
</try>
<status status="PASS" starttime="20241124 23:06:40.233" endtime="20241124 23:06:41.017"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.230" endtime="20241124 23:06:41.017"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.025" endtime="20241124 23:06:41.025"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.017" endtime="20241124 23:06:41.025"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.030" endtime="20241124 23:06:41.030"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.033"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.033"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.033"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.033"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.033"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.027" endtime="20241124 23:06:41.033"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:41.075" endtime="20241124 23:06:41.075"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.094" endtime="20241124 23:06:41.094"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.033" endtime="20241124 23:06:41.094"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.099"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.096" endtime="20241124 23:06:41.099"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:41.115" endtime="20241124 23:06:41.115"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.123" endtime="20241124 23:06:41.123"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.099" endtime="20241124 23:06:41.123"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.131"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.131"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.131"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.131"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.131"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.131" endtime="20241124 23:06:41.139"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.123" endtime="20241124 23:06:41.139"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.148" endtime="20241124 23:06:41.148"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.139" endtime="20241124 23:06:41.148"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:41.158" endtime="20241124 23:06:41.158"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.158" endtime="20241124 23:06:41.162"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.148" endtime="20241124 23:06:41.162"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.186" endtime="20241124 23:06:41.162"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.163" endtime="20241124 23:06:41.163"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:41.164" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:41.164" endtime="20241124 23:06:41.164"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:41.164" endtime="20241124 23:06:41.164"/>
</return>
<msg timestamp="20241124 23:06:41.165" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:40.185" endtime="20241124 23:06:41.165"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.166" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:41.166" endtime="20241124 23:06:41.166"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.167" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:41.167" endtime="20241124 23:06:41.167"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.169" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:41.167" endtime="20241124 23:06:41.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.169" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.169" endtime="20241124 23:06:41.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.169" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:41.169" endtime="20241124 23:06:41.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.169" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.169" endtime="20241124 23:06:41.169"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.171" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:41.169" endtime="20241124 23:06:41.171"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.172" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:41.171" endtime="20241124 23:06:41.172"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:41.172" endtime="20241124 23:06:41.172"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:41.176" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</kw>
<msg timestamp="20241124 23:06:41.176" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:41.176" endtime="20241124 23:06:41.176"/>
</return>
<msg timestamp="20241124 23:06:41.176" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.172" endtime="20241124 23:06:41.176"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.181"/>
</kw>
<msg timestamp="20241124 23:06:41.181" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.181"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.181" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.181"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.184" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.184" endtime="20241124 23:06:41.184"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.184" endtime="20241124 23:06:41.184"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.184" endtime="20241124 23:06:41.185"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.184" endtime="20241124 23:06:41.185"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.185"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.185"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.185"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</return>
<msg timestamp="20241124 23:06:41.185" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.181" endtime="20241124 23:06:41.185"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.185"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.188"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.188"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.188"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.188"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.188"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.189"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.189"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.189"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.189"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.188" endtime="20241124 23:06:41.189"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.189"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.185" endtime="20241124 23:06:41.189"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.167" endtime="20241124 23:06:41.189"/>
</iter>
<status status="PASS" starttime="20241124 23:06:41.166" endtime="20241124 23:06:41.189"/>
</for>
<msg timestamp="20241124 23:06:41.189" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:41.165" endtime="20241124 23:06:41.189"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.189"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<msg timestamp="20241124 23:06:41.200" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.200" level="INFO">${values} = {'id': '1', 'name': 'Username', 'xpath': '//input[@id="username"]', 'pageId': '1', 'createdAt': '2024-11-24T15:18:09.149Z', 'updatedAt': '2024-11-24T17:22:57.715Z'}</msg>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.200" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</return>
<msg timestamp="20241124 23:06:41.200" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.200"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.200" level="INFO">${xpath} = //input[@id="username"]</msg>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.205"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.205"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.205" endtime="20241124 23:06:41.205"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.205" endtime="20241124 23:06:41.205"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.200" endtime="20241124 23:06:41.205"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:41.208" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '108', 'status': 'COMPLETED', 'actionName': 'Set username', 'actionType': 'TYPE_TEXT', 'actionXpath': '//input[@id="username"]', 'inputValue': 'bharani@ideas2it.com', '...</msg>
<status status="PASS" starttime="20241124 23:06:41.205" endtime="20241124 23:06:41.208"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:41.208" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "108", "status": "COMPLETED", "actionName": "Set username", "actionType": "TYPE_TEXT", "actionXpath": "//input[@id=\"username\"]", "inputValue": "bharani@ideas2it.com",...</msg>
<status status="PASS" starttime="20241124 23:06:41.208" endtime="20241124 23:06:41.208"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:41.241" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:41.241" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:41.208" endtime="20241124 23:06:41.242"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.243" endtime="20241124 23:06:41.243"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:41.243" endtime="20241124 23:06:41.243"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.208" endtime="20241124 23:06:41.246"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.189" endtime="20241124 23:06:41.246"/>
</kw>
<status status="PASS" starttime="20241124 23:06:40.175" endtime="20241124 23:06:41.248"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.248" endtime="20241124 23:06:41.248"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:41.249" endtime="20241124 23:06:41.249"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.250" endtime="20241124 23:06:41.250"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.248" endtime="20241124 23:06:41.250"/>
</branch>
<status status="PASS" starttime="20241124 23:06:40.175" endtime="20241124 23:06:41.252"/>
</try>
<status status="PASS" starttime="20241124 23:06:40.175" endtime="20241124 23:06:41.252"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '3', 'actionId': '3', 'flowId': '1', 'order': 2, 'createdAt': '2024-11-24T16:52:08.811Z', 'updatedAt': '2024-11-24T17:34:15.617Z', 'action': {'id': '3', 'name': 'Set password', 'type': 'TYPE_TE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.255" level="INFO">${action} = {'id': '3', 'name': 'Set password', 'type': 'TYPE_TEXT', 'selectorI': '2', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:44:31.460Z', 'updatedAt': '2024-11-24T16:44:31.460Z', 'selecto...</msg>
<status status="PASS" starttime="20241124 23:06:41.254" endtime="20241124 23:06:41.255"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:41.255" level="INFO">${input} = {'id': '3', 'actionId': '3', 'name': 'Bharani', 'value': 'vijaybharani', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:44:31.712Z', 'updatedAt': '2024-11-24T16:46:16.462Z'}</msg>
<status status="PASS" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.255" endtime="20241124 23:06:41.255"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.263" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.263"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.263"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.263"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:41.271" endtime="20241124 23:06:41.271"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.271"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.279" endtime="20241124 23:06:41.279"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.271" endtime="20241124 23:06:41.279"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.287" endtime="20241124 23:06:41.287"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.295" endtime="20241124 23:06:41.295"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.279" endtime="20241124 23:06:41.295"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.295" endtime="20241124 23:06:41.295"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.295" endtime="20241124 23:06:41.295"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.308" endtime="20241124 23:06:41.308"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.301" endtime="20241124 23:06:41.308"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<kw name="Log To Console" library="BuiltIn">
<arg>selector::${selector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.320" endtime="20241124 23:06:41.320"/>
</kw>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.352" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:06:41.341" endtime="20241124 23:06:41.352"/>
</kw>
<msg timestamp="20241124 23:06:41.352" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.341" endtime="20241124 23:06:41.352"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.360" endtime="20241124 23:06:41.360"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.339" endtime="20241124 23:06:41.360"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.360" endtime="20241124 23:06:41.360"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.360" endtime="20241124 23:06:41.360"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.360" endtime="20241124 23:06:41.363"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.339" endtime="20241124 23:06:41.363"/>
</try>
<msg timestamp="20241124 23:06:41.363" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.336" endtime="20241124 23:06:41.363"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.363" endtime="20241124 23:06:41.363"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.333" endtime="20241124 23:06:41.363"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.363" endtime="20241124 23:06:41.363"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.363" endtime="20241124 23:06:41.363"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.333" endtime="20241124 23:06:41.363"/>
</try>
<msg timestamp="20241124 23:06:41.363" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.332" endtime="20241124 23:06:41.363"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.368" endtime="20241124 23:06:41.368"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.368" endtime="20241124 23:06:41.368"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.368" endtime="20241124 23:06:41.368"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.368" endtime="20241124 23:06:41.368"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.368" endtime="20241124 23:06:41.368"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.328" endtime="20241124 23:06:41.376"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.414" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:06:41.400" endtime="20241124 23:06:41.415"/>
</kw>
<msg timestamp="20241124 23:06:41.415" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.415"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.415" endtime="20241124 23:06:41.415"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.415"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.417" endtime="20241124 23:06:41.417"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.417" endtime="20241124 23:06:41.419"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.415" endtime="20241124 23:06:41.419"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.420"/>
</try>
<msg timestamp="20241124 23:06:41.420" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.420"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.420" endtime="20241124 23:06:41.420"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.420"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.423" endtime="20241124 23:06:41.423"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.423" endtime="20241124 23:06:41.424"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.396" endtime="20241124 23:06:41.424"/>
</try>
<msg timestamp="20241124 23:06:41.425" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.394" endtime="20241124 23:06:41.425"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.425" endtime="20241124 23:06:41.425"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.425" endtime="20241124 23:06:41.433"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.425" endtime="20241124 23:06:41.433"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.425" endtime="20241124 23:06:41.433"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.425" endtime="20241124 23:06:41.433"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.393" endtime="20241124 23:06:41.434"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:41.462" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:06:41.462" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:41.434" endtime="20241124 23:06:41.462"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:41.462" endtime="20241124 23:06:41.462"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.434" endtime="20241124 23:06:41.462"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.462" endtime="20241124 23:06:41.462"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.462" endtime="20241124 23:06:41.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.462" endtime="20241124 23:06:41.466"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.434" endtime="20241124 23:06:41.466"/>
</try>
<msg timestamp="20241124 23:06:41.466" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:41.385" endtime="20241124 23:06:41.466"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.466" endtime="20241124 23:06:41.474"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.474" endtime="20241124 23:06:41.474"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.466" endtime="20241124 23:06:41.474"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.466" endtime="20241124 23:06:41.474"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.466" endtime="20241124 23:06:41.476"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.380" endtime="20241124 23:06:41.476"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.477" endtime="20241124 23:06:41.477"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.476" endtime="20241124 23:06:41.478"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.380" endtime="20241124 23:06:41.478"/>
</try>
<status status="PASS" starttime="20241124 23:06:41.380" endtime="20241124 23:06:41.478"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.500" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241124 23:06:41.491" endtime="20241124 23:06:41.503"/>
</kw>
<msg timestamp="20241124 23:06:41.503" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.503"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.503" endtime="20241124 23:06:41.503"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.503"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.503" endtime="20241124 23:06:41.503"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.503" endtime="20241124 23:06:41.503"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.503" endtime="20241124 23:06:41.503"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.503"/>
</try>
<msg timestamp="20241124 23:06:41.507" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.507"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.507" endtime="20241124 23:06:41.508"/>
</return>
<msg timestamp="20241124 23:06:41.508" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.508"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.515" endtime="20241124 23:06:41.515"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.515" endtime="20241124 23:06:41.515"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.508" endtime="20241124 23:06:41.515"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.508" endtime="20241124 23:06:41.515"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.508" endtime="20241124 23:06:41.515"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.482" endtime="20241124 23:06:41.515"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.320" endtime="20241124 23:06:41.515"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<kw name="is-editable-after-wait" library="UTIL_BrowserHelper">
<var>${is_editable}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is editable
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_EDITABLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.563" level="INFO">Waited for Element with selector id=password at state editable</msg>
<status status="PASS" starttime="20241124 23:06:41.525" endtime="20241124 23:06:41.563"/>
</kw>
<msg timestamp="20241124 23:06:41.564" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.525" endtime="20241124 23:06:41.564"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.564" endtime="20241124 23:06:41.564"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.525" endtime="20241124 23:06:41.564"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.564" endtime="20241124 23:06:41.564"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.564" endtime="20241124 23:06:41.567"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.564" endtime="20241124 23:06:41.567"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.525" endtime="20241124 23:06:41.567"/>
</try>
<msg timestamp="20241124 23:06:41.567" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.525" endtime="20241124 23:06:41.567"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.568" endtime="20241124 23:06:41.568"/>
</return>
<msg timestamp="20241124 23:06:41.569" level="INFO">${is_editable} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.523" endtime="20241124 23:06:41.569"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_editable == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.577" endtime="20241124 23:06:41.577"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.577" endtime="20241124 23:06:41.577"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.576" endtime="20241124 23:06:41.577"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.576" endtime="20241124 23:06:41.577"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.572" endtime="20241124 23:06:41.577"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.515" endtime="20241124 23:06:41.577"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:41.580" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:06:41.577" endtime="20241124 23:06:41.580"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Textbox.fill-text-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="fill-text-and-validate-post-condition" library="COMP_Textbox">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.580"/>
</kw>
<kw name="fail-if-not-editable-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not editable
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.591" endtime="20241124 23:06:41.591"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.591"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:41.592" endtime="20241124 23:06:41.593"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.591" endtime="20241124 23:06:41.593"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.593"/>
</if>
<try>
<branch type="TRY">
<kw name="Fill Text" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``txt`` into the text field found by ``selector``.</doc>
<msg timestamp="20241124 23:06:41.593" level="INFO">Fills the text 'vijaybharani' in the given field.</msg>
<status status="PASS" starttime="20241124 23:06:41.593" endtime="20241124 23:06:41.649"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.593" endtime="20241124 23:06:41.649"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.649" endtime="20241124 23:06:41.652"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.652" endtime="20241124 23:06:41.652"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.649" endtime="20241124 23:06:41.652"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.593" endtime="20241124 23:06:41.652"/>
</try>
<kw name="fail-if-value-not-populated" library="COMP_Textbox">
<arg>${selector}</arg>
<arg>${value}</arg>
<tag>robot:private</tag>
<doc>Fails if the value is not populated in the given input field</doc>
<kw name="get-value" library="COMP_Textbox">
<var>${populated_value}</var>
<arg>${selector}</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<kw name="validate-precondition" library="COMP_Textbox">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually an input
Also used to validate the input element before performing any action
...
INPUT:
id=password: string</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.680" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:06:41.670" endtime="20241124 23:06:41.680"/>
</kw>
<msg timestamp="20241124 23:06:41.680" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.670" endtime="20241124 23:06:41.680"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.687" endtime="20241124 23:06:41.687"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.670" endtime="20241124 23:06:41.687"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.687" endtime="20241124 23:06:41.687"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.687" endtime="20241124 23:06:41.687"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.687" endtime="20241124 23:06:41.687"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.670" endtime="20241124 23:06:41.687"/>
</try>
<msg timestamp="20241124 23:06:41.691" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.662" endtime="20241124 23:06:41.691"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.691" endtime="20241124 23:06:41.691"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.662" endtime="20241124 23:06:41.691"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.691" endtime="20241124 23:06:41.693"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.691" endtime="20241124 23:06:41.693"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.662" endtime="20241124 23:06:41.693"/>
</try>
<msg timestamp="20241124 23:06:41.693" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.662" endtime="20241124 23:06:41.693"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.695" endtime="20241124 23:06:41.695"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.695" endtime="20241124 23:06:41.695"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.695" endtime="20241124 23:06:41.695"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.695" endtime="20241124 23:06:41.695"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.695" endtime="20241124 23:06:41.695"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.662" endtime="20241124 23:06:41.704"/>
</kw>
<kw name="fail-if-not-a-textbox" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not a valid textbox</doc>
<try>
<branch type="TRY">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${tag_name}</var>
<arg>${selector}</arg>
<arg>tagName</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.736" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:06:41.728" endtime="20241124 23:06:41.736"/>
</kw>
<msg timestamp="20241124 23:06:41.736" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.728" endtime="20241124 23:06:41.736"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.725" endtime="20241124 23:06:41.736"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.725" endtime="20241124 23:06:41.736"/>
</try>
<msg timestamp="20241124 23:06:41.736" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.725" endtime="20241124 23:06:41.736"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.719" endtime="20241124 23:06:41.736"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.736" endtime="20241124 23:06:41.736"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.719" endtime="20241124 23:06:41.736"/>
</try>
<msg timestamp="20241124 23:06:41.736" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.719" endtime="20241124 23:06:41.736"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.744"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.744"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.744"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.744"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.744"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.719" endtime="20241124 23:06:41.744"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:41.760" level="INFO">Property: 'INPUT'</msg>
<msg timestamp="20241124 23:06:41.760" level="INFO">${property} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.760"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:41.760" endtime="20241124 23:06:41.760"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.760"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.760" endtime="20241124 23:06:41.760"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.760" endtime="20241124 23:06:41.760"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.760" endtime="20241124 23:06:41.760"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.744" endtime="20241124 23:06:41.760"/>
</try>
<msg timestamp="20241124 23:06:41.760" level="INFO">${tag_name} = INPUT</msg>
<status status="PASS" starttime="20241124 23:06:41.715" endtime="20241124 23:06:41.760"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${tag_name != 'INPUT'}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.768" endtime="20241124 23:06:41.770"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.712" endtime="20241124 23:06:41.770"/>
</branch>
<branch type="EXCEPT">
<pattern>INVALID_BROWSER_ELEMENT_PROPERTY</pattern>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.770"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.711" endtime="20241124 23:06:41.770"/>
</try>
<status status="PASS" starttime="20241124 23:06:41.710" endtime="20241124 23:06:41.770"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.785" level="INFO">Waited for Element with selector id=password at state visible</msg>
<status status="PASS" starttime="20241124 23:06:41.779" endtime="20241124 23:06:41.785"/>
</kw>
<msg timestamp="20241124 23:06:41.785" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.779" endtime="20241124 23:06:41.785"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.785"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.779" endtime="20241124 23:06:41.785"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.785"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.785"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.785"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.779" endtime="20241124 23:06:41.785"/>
</try>
<msg timestamp="20241124 23:06:41.785" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.778" endtime="20241124 23:06:41.785"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.785"/>
</return>
<msg timestamp="20241124 23:06:41.785" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.776" endtime="20241124 23:06:41.785"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.790" endtime="20241124 23:06:41.790"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.791" endtime="20241124 23:06:41.791"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.790" endtime="20241124 23:06:41.791"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.791"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.785" endtime="20241124 23:06:41.791"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.770" endtime="20241124 23:06:41.791"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.654" endtime="20241124 23:06:41.791"/>
</kw>
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${fieldTextValue}</var>
<arg>${selector}</arg>
<arg>value</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:41.805" level="INFO">Waited for Element with selector id=password at state attached</msg>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.805"/>
</kw>
<msg timestamp="20241124 23:06:41.805" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.805"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.805" endtime="20241124 23:06:41.805"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.805"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.807" endtime="20241124 23:06:41.807"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.807" endtime="20241124 23:06:41.807"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.807" endtime="20241124 23:06:41.807"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.807"/>
</try>
<msg timestamp="20241124 23:06:41.807" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.807"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.809" endtime="20241124 23:06:41.809"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.809"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:41.809" endtime="20241124 23:06:41.809"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:41.809" endtime="20241124 23:06:41.809"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.809"/>
</try>
<msg timestamp="20241124 23:06:41.810" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.810"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.810"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.810"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.810"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.810"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.810"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.794" endtime="20241124 23:06:41.810"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:41.830" level="INFO">Property: 'vijaybharani'</msg>
<msg timestamp="20241124 23:06:41.830" level="INFO">${property} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.830"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:41.830" endtime="20241124 23:06:41.830"/>
</return>
<status status="PASS" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.830"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.830" endtime="20241124 23:06:41.830"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.830" endtime="20241124 23:06:41.830"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.830" endtime="20241124 23:06:41.830"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.810" endtime="20241124 23:06:41.834"/>
</try>
<msg timestamp="20241124 23:06:41.834" level="INFO">${fieldTextValue} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:06:41.791" endtime="20241124 23:06:41.834"/>
</kw>
<return>
<value>${fieldTextValue}</value>
<status status="PASS" starttime="20241124 23:06:41.834" endtime="20241124 23:06:41.834"/>
</return>
<msg timestamp="20241124 23:06:41.834" level="INFO">${populated_value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:06:41.654" endtime="20241124 23:06:41.834"/>
</kw>
<kw name="compare-strings" library="UTIL_String">
<var>${matches}</var>
<arg>${populated_value}</arg>
<arg>${value}</arg>
<tag>util</tag>
<doc>Method used to compare the strings</doc>
<kw name="Evaluate JavaScript" library="RPA.Browser.Playwright">
<var>${result}</var>
<arg>${None}</arg>
<arg>() =&gt; `${string1}` === `${string2}`</arg>
<tag>Getter</tag>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Executes given javascript on the selected element(s) or on page.</doc>
<msg timestamp="20241124 23:06:41.850" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.841" endtime="20241124 23:06:41.850"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:41.850" endtime="20241124 23:06:41.850"/>
</return>
<msg timestamp="20241124 23:06:41.850" level="INFO">${matches} = True</msg>
<status status="PASS" starttime="20241124 23:06:41.838" endtime="20241124 23:06:41.850"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${matches == False}</arg>
<arg>VALUE_NOT_POPULATED</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.861" endtime="20241124 23:06:41.861"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.867" endtime="20241124 23:06:41.867"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.861" endtime="20241124 23:06:41.867"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.861" endtime="20241124 23:06:41.867"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.861" endtime="20241124 23:06:41.869"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.654" endtime="20241124 23:06:41.869"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.869"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.869"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.869"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.870" endtime="20241124 23:06:41.870"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.869" endtime="20241124 23:06:41.871"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.580" endtime="20241124 23:06:41.871"/>
</try>
<status status="PASS" starttime="20241124 23:06:41.312" endtime="20241124 23:06:41.871"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.312" endtime="20241124 23:06:41.871"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.875" endtime="20241124 23:06:41.875"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.871" endtime="20241124 23:06:41.875"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.875" endtime="20241124 23:06:41.879"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.879"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.879"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.879"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.879"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.879"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.875" endtime="20241124 23:06:41.879"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:41.893" endtime="20241124 23:06:41.893"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.893" endtime="20241124 23:06:41.900"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.879" endtime="20241124 23:06:41.900"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.900" endtime="20241124 23:06:41.900"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.900" endtime="20241124 23:06:41.900"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.900" endtime="20241124 23:06:41.900"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.909" endtime="20241124 23:06:41.909"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.907" endtime="20241124 23:06:41.909"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.900" endtime="20241124 23:06:41.909"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.900" endtime="20241124 23:06:41.909"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:41.924" endtime="20241124 23:06:41.924"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.932" endtime="20241124 23:06:41.932"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.909" endtime="20241124 23:06:41.941"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.944"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.944"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.944"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.949"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.949"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:41.944" endtime="20241124 23:06:41.949"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:41.941" endtime="20241124 23:06:41.949"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.957" endtime="20241124 23:06:41.959"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.949" endtime="20241124 23:06:41.959"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:41.980" endtime="20241124 23:06:41.980"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:41.982" endtime="20241124 23:06:41.982"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:41.959" endtime="20241124 23:06:41.982"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.982"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:41.982" endtime="20241124 23:06:41.982"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:41.982" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:41.982" endtime="20241124 23:06:41.982"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:41.982" endtime="20241124 23:06:41.982"/>
</return>
<msg timestamp="20241124 23:06:41.982" level="INFO">${value} = vijaybharani</msg>
<status status="PASS" starttime="20241124 23:06:41.263" endtime="20241124 23:06:41.982"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.990" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:3</msg>
<status status="PASS" starttime="20241124 23:06:41.990" endtime="20241124 23:06:41.990"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.990" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:41.990" endtime="20241124 23:06:41.990"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.999" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:41.990" endtime="20241124 23:06:41.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.999" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.999" endtime="20241124 23:06:41.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.999" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:41.999" endtime="20241124 23:06:41.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:41.999" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:41.999" endtime="20241124 23:06:41.999"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.006" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:41.999" endtime="20241124 23:06:42.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.006" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:42.006" endtime="20241124 23:06:42.006"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.006" endtime="20241124 23:06:42.006"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:42.015" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:42.015" endtime="20241124 23:06:42.015"/>
</kw>
<msg timestamp="20241124 23:06:42.022" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.015" endtime="20241124 23:06:42.022"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.025" endtime="20241124 23:06:42.025"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.025" endtime="20241124 23:06:42.025"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.025" endtime="20241124 23:06:42.025"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.031" endtime="20241124 23:06:42.031"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.025" endtime="20241124 23:06:42.031"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.025" endtime="20241124 23:06:42.031"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.024" endtime="20241124 23:06:42.031"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.022" endtime="20241124 23:06:42.031"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.031" endtime="20241124 23:06:42.031"/>
</return>
<msg timestamp="20241124 23:06:42.031" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.015" endtime="20241124 23:06:42.031"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.047" endtime="20241124 23:06:42.049"/>
</kw>
<msg timestamp="20241124 23:06:42.049" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.044" endtime="20241124 23:06:42.049"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.053" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:42.049" endtime="20241124 23:06:42.053"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.055" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.054" endtime="20241124 23:06:42.055"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.054" endtime="20241124 23:06:42.055"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.057" endtime="20241124 23:06:42.057"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.055" endtime="20241124 23:06:42.057"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.053" endtime="20241124 23:06:42.057"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.049" endtime="20241124 23:06:42.057"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.049" endtime="20241124 23:06:42.057"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.057" endtime="20241124 23:06:42.057"/>
</return>
<msg timestamp="20241124 23:06:42.057" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.042" endtime="20241124 23:06:42.057"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.064"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.079" endtime="20241124 23:06:42.081"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.081" endtime="20241124 23:06:42.082"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.077" endtime="20241124 23:06:42.082"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.082"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.082"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.082"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.076" endtime="20241124 23:06:42.082"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.073" endtime="20241124 23:06:42.082"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.072" endtime="20241124 23:06:42.082"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.064" endtime="20241124 23:06:42.082"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.057" endtime="20241124 23:06:42.082"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:42.088" endtime="20241124 23:06:42.088"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.088" endtime="20241124 23:06:42.088"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.090"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.090"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.090"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.090"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.096"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.096" endtime="20241124 23:06:42.096"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.096"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.096" endtime="20241124 23:06:42.096"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.096" endtime="20241124 23:06:42.096"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.096" endtime="20241124 23:06:42.096"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.096"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.096"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.090" endtime="20241124 23:06:42.096"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.096"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.082" endtime="20241124 23:06:42.096"/>
</if>
<status status="PASS" starttime="20241124 23:06:41.990" endtime="20241124 23:06:42.096"/>
</iter>
<status status="PASS" starttime="20241124 23:06:41.990" endtime="20241124 23:06:42.096"/>
</for>
<msg timestamp="20241124 23:06:42.096" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:41.982" endtime="20241124 23:06:42.096"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.096" endtime="20241124 23:06:42.104"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.122" endtime="20241124 23:06:42.123"/>
</kw>
<msg timestamp="20241124 23:06:42.123" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.121" endtime="20241124 23:06:42.123"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.123" level="INFO">${values} = {'id': '2', 'name': 'Password', 'xpath': 'id=password', 'pageId': '1', 'createdAt': '2024-11-24T16:43:05.032Z', 'updatedAt': '2024-11-24T17:01:06.183Z'}</msg>
<status status="PASS" starttime="20241124 23:06:42.123" endtime="20241124 23:06:42.123"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.131" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.131" endtime="20241124 23:06:42.131"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.129" endtime="20241124 23:06:42.133"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.133" endtime="20241124 23:06:42.133"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.133" endtime="20241124 23:06:42.134"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.123" endtime="20241124 23:06:42.134"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.123" endtime="20241124 23:06:42.135"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.123" endtime="20241124 23:06:42.135"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.135" endtime="20241124 23:06:42.135"/>
</return>
<msg timestamp="20241124 23:06:42.135" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.112" endtime="20241124 23:06:42.135"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.137" level="INFO">${xpath} = id=password</msg>
<status status="PASS" starttime="20241124 23:06:42.137" endtime="20241124 23:06:42.137"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.137" endtime="20241124 23:06:42.140"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.140" endtime="20241124 23:06:42.140"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.140" endtime="20241124 23:06:42.140"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.135" endtime="20241124 23:06:42.140"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:42.146" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '109', 'status': 'COMPLETED', 'actionName': 'Set password', 'actionType': 'TYPE_TEXT', 'actionXpath': 'id=password', 'inputValue': 'vijaybharani', 'errorMessage': '', '...</msg>
<status status="PASS" starttime="20241124 23:06:42.140" endtime="20241124 23:06:42.146"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:42.146" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "109", "status": "COMPLETED", "actionName": "Set password", "actionType": "TYPE_TEXT", "actionXpath": "id=password", "inputValue": "vijaybharani", "errorMessage": "", "...</msg>
<status status="PASS" starttime="20241124 23:06:42.146" endtime="20241124 23:06:42.146"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:42.161" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:42.161" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:42.146" endtime="20241124 23:06:42.161"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.161" endtime="20241124 23:06:42.169"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:42.169" endtime="20241124 23:06:42.169"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.146" endtime="20241124 23:06:42.169"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.104" endtime="20241124 23:06:42.174"/>
</kw>
<status status="PASS" starttime="20241124 23:06:41.253" endtime="20241124 23:06:42.174"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.176" endtime="20241124 23:06:42.176"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.178" endtime="20241124 23:06:42.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.179" endtime="20241124 23:06:42.179"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.176" endtime="20241124 23:06:42.179"/>
</branch>
<status status="PASS" starttime="20241124 23:06:41.252" endtime="20241124 23:06:42.180"/>
</try>
<status status="PASS" starttime="20241124 23:06:41.252" endtime="20241124 23:06:42.180"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '4', 'actionId': '4', 'flowId': '1', 'order': 3, 'createdAt': '2024-11-24T16:52:08.811Z', 'updatedAt': '2024-11-24T17:34:15.605Z', 'action': {'id': '4', 'name': 'Click login button', 'type': 'C...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.183" level="INFO">${action} = {'id': '4', 'name': 'Click login button', 'type': 'CLICK', 'selectorI': '3', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:50:52.555Z', 'updatedAt': '2024-11-24T16:50:52.555Z', 'selec...</msg>
<status status="PASS" starttime="20241124 23:06:42.182" endtime="20241124 23:06:42.183"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.183" endtime="20241124 23:06:42.185"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:42.188" level="INFO">${input} = {'id': '4', 'actionId': '4', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:50:52.715Z', 'updatedAt': '2024-11-24T16:50:52.715Z'}</msg>
<status status="PASS" starttime="20241124 23:06:42.187" endtime="20241124 23:06:42.189"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.190" endtime="20241124 23:06:42.190"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.194" endtime="20241124 23:06:42.195"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.190" endtime="20241124 23:06:42.195"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.190" endtime="20241124 23:06:42.195"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.195" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:42.195" endtime="20241124 23:06:42.195"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.195" endtime="20241124 23:06:42.202"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.195" endtime="20241124 23:06:42.202"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.202" endtime="20241124 23:06:42.202"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.202" endtime="20241124 23:06:42.202"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:42.260" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:42.243" endtime="20241124 23:06:42.260"/>
</kw>
<msg timestamp="20241124 23:06:42.260" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.240" endtime="20241124 23:06:42.260"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.240" endtime="20241124 23:06:42.260"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.240" endtime="20241124 23:06:42.260"/>
</try>
<msg timestamp="20241124 23:06:42.260" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.235" endtime="20241124 23:06:42.260"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.235" endtime="20241124 23:06:42.260"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.260"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.260" endtime="20241124 23:06:42.268"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.228" endtime="20241124 23:06:42.268"/>
</try>
<msg timestamp="20241124 23:06:42.268" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.228" endtime="20241124 23:06:42.268"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.276" endtime="20241124 23:06:42.276"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.276" endtime="20241124 23:06:42.276"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.276" endtime="20241124 23:06:42.276"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.276" endtime="20241124 23:06:42.276"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.274" endtime="20241124 23:06:42.276"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.228" endtime="20241124 23:06:42.276"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:42.316" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state visible</msg>
<status status="PASS" starttime="20241124 23:06:42.295" endtime="20241124 23:06:42.317"/>
</kw>
<msg timestamp="20241124 23:06:42.317" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.295" endtime="20241124 23:06:42.317"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.318" endtime="20241124 23:06:42.319"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.295" endtime="20241124 23:06:42.319"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.319" endtime="20241124 23:06:42.319"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.319" endtime="20241124 23:06:42.319"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.319" endtime="20241124 23:06:42.319"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.295" endtime="20241124 23:06:42.323"/>
</try>
<msg timestamp="20241124 23:06:42.325" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.295" endtime="20241124 23:06:42.325"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.325" endtime="20241124 23:06:42.325"/>
</return>
<msg timestamp="20241124 23:06:42.325" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.292" endtime="20241124 23:06:42.325"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.342" endtime="20241124 23:06:42.343"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.344" endtime="20241124 23:06:42.345"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.341" endtime="20241124 23:06:42.345"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.333" endtime="20241124 23:06:42.345"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.333" endtime="20241124 23:06:42.346"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.284" endtime="20241124 23:06:42.346"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:42.437" level="INFO">Waited for Element with selector //button[@type="submit" and text()="Login"] at state enabled</msg>
<status status="PASS" starttime="20241124 23:06:42.366" endtime="20241124 23:06:42.437"/>
</kw>
<msg timestamp="20241124 23:06:42.439" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.366" endtime="20241124 23:06:42.439"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.439" endtime="20241124 23:06:42.440"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.366" endtime="20241124 23:06:42.440"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.442" endtime="20241124 23:06:42.443"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.443" endtime="20241124 23:06:42.443"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.440" endtime="20241124 23:06:42.443"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.366" endtime="20241124 23:06:42.443"/>
</try>
<msg timestamp="20241124 23:06:42.443" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.363" endtime="20241124 23:06:42.443"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:42.447" endtime="20241124 23:06:42.447"/>
</return>
<msg timestamp="20241124 23:06:42.448" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.358" endtime="20241124 23:06:42.448"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.459" endtime="20241124 23:06:42.459"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.459" endtime="20241124 23:06:42.459"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.459" endtime="20241124 23:06:42.459"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.457" endtime="20241124 23:06:42.459"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.450" endtime="20241124 23:06:42.459"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.352" endtime="20241124 23:06:42.459"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.218" endtime="20241124 23:06:42.465"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:42.468" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:06:42.465" endtime="20241124 23:06:42.468"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.474" endtime="20241124 23:06:42.474"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.474" endtime="20241124 23:06:42.474"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.474" endtime="20241124 23:06:42.474"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.474" endtime="20241124 23:06:42.474"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.474" endtime="20241124 23:06:42.474"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 23:06:42.481" endtime="20241124 23:06:42.593"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.481" endtime="20241124 23:06:42.593"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.595" endtime="20241124 23:06:42.595"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.595" endtime="20241124 23:06:42.595"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.595" endtime="20241124 23:06:42.595"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.481" endtime="20241124 23:06:42.595"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.470" endtime="20241124 23:06:42.595"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.470" endtime="20241124 23:06:42.595"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.470" endtime="20241124 23:06:42.595"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.595" endtime="20241124 23:06:42.595"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.595" endtime="20241124 23:06:42.595"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.468" endtime="20241124 23:06:42.595"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.211" endtime="20241124 23:06:42.595"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.202" endtime="20241124 23:06:42.595"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.611" endtime="20241124 23:06:42.611"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.621" endtime="20241124 23:06:42.621"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.603" endtime="20241124 23:06:42.623"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.629" endtime="20241124 23:06:42.629"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.623" endtime="20241124 23:06:42.629"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.644" endtime="20241124 23:06:42.644"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.629" endtime="20241124 23:06:42.644"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.654" endtime="20241124 23:06:42.654"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.645" endtime="20241124 23:06:42.654"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.660" endtime="20241124 23:06:42.660"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.656" endtime="20241124 23:06:42.660"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.660" endtime="20241124 23:06:42.660"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.669" endtime="20241124 23:06:42.669"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.660" endtime="20241124 23:06:42.669"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.669" endtime="20241124 23:06:42.669"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.669" endtime="20241124 23:06:42.671"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.660" endtime="20241124 23:06:42.671"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.660" endtime="20241124 23:06:42.671"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:42.683" endtime="20241124 23:06:42.685"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.691" endtime="20241124 23:06:42.691"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.671" endtime="20241124 23:06:42.691"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.693"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.693"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.693"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.693"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.696"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.693" endtime="20241124 23:06:42.696"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.691" endtime="20241124 23:06:42.696"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:42.706" endtime="20241124 23:06:42.707"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.710" endtime="20241124 23:06:42.712"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.696" endtime="20241124 23:06:42.712"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.714"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.714"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.714"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.714"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.714"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.714" endtime="20241124 23:06:42.717"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.712" endtime="20241124 23:06:42.717"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.720" endtime="20241124 23:06:42.720"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.717" endtime="20241124 23:06:42.720"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.720" endtime="20241124 23:06:42.725"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.195" endtime="20241124 23:06:42.725"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:42.725" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</return>
<msg timestamp="20241124 23:06:42.725" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:42.195" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.725" level="INFO">${key} = testCaseFlowSequenceId:1::flowActionSequenceId:4</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.725" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.725" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.725" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.725"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.733" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:42.733" endtime="20241124 23:06:42.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.733" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.733" endtime="20241124 23:06:42.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.733" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:42.733" endtime="20241124 23:06:42.733"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.733" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:42.733" endtime="20241124 23:06:42.733"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.733" endtime="20241124 23:06:42.735"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:42.740" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:42.740" endtime="20241124 23:06:42.740"/>
</kw>
<msg timestamp="20241124 23:06:42.740" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.737" endtime="20241124 23:06:42.740"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.742"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.742"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.742"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.744" endtime="20241124 23:06:42.744"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.744"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.744"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.744"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.742" endtime="20241124 23:06:42.744"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.744" endtime="20241124 23:06:42.744"/>
</return>
<msg timestamp="20241124 23:06:42.744" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:42.737" endtime="20241124 23:06:42.744"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.747"/>
</kw>
<msg timestamp="20241124 23:06:42.747" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.747"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.747" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.747"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.750" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.750"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.750"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.750"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<msg timestamp="20241124 23:06:42.750" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.747" endtime="20241124 23:06:42.750"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.750"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.756"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.750" endtime="20241124 23:06:42.756"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:42.756" endtime="20241124 23:06:42.756"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.756" endtime="20241124 23:06:42.756"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.756" endtime="20241124 23:06:42.758"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.758"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.758"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.758"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.758"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.760" endtime="20241124 23:06:42.760"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.760"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.761" endtime="20241124 23:06:42.761"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:42.761" endtime="20241124 23:06:42.761"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:42.760" endtime="20241124 23:06:42.761"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.761"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.761"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:42.758" endtime="20241124 23:06:42.761"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:42.756" endtime="20241124 23:06:42.761"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.756" endtime="20241124 23:06:42.761"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.761"/>
</iter>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.761"/>
</for>
<msg timestamp="20241124 23:06:42.761" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:42.725" endtime="20241124 23:06:42.761"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.761" endtime="20241124 23:06:42.761"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.767" endtime="20241124 23:06:42.771"/>
</kw>
<msg timestamp="20241124 23:06:42.771" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.767" endtime="20241124 23:06:42.771"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.773" level="INFO">${values} = {'id': '3', 'name': 'Login button', 'xpath': '//button[@type="submit" and text()="Login"]', 'pageId': '1', 'createdAt': '2024-11-24T16:47:28.991Z', 'updatedAt': '2024-11-24T16:47:28.991Z'}</msg>
<status status="PASS" starttime="20241124 23:06:42.771" endtime="20241124 23:06:42.773"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.774" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.773" endtime="20241124 23:06:42.774"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.773" endtime="20241124 23:06:42.774"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.773" endtime="20241124 23:06:42.774"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.771" endtime="20241124 23:06:42.774"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.771" endtime="20241124 23:06:42.774"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</return>
<msg timestamp="20241124 23:06:42.774" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.767" endtime="20241124 23:06:42.774"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.774" level="INFO">${xpath} = //button[@type="submit" and text()="Login"]</msg>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:42.774" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '110', 'status': 'COMPLETED', 'actionName': 'Click login button', 'actionType': 'CLICK', 'actionXpath': '//button[@type="submit" and text()="Login"]', 'inputValue': '',...</msg>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.774"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:42.782" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "110", "status": "COMPLETED", "actionName": "Click login button", "actionType": "CLICK", "actionXpath": "//button[@type=\"submit\" and text()=\"Login\"]", "inputValue":...</msg>
<status status="PASS" starttime="20241124 23:06:42.782" endtime="20241124 23:06:42.782"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:42.791" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:42.791" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:42.784" endtime="20241124 23:06:42.791"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.791" endtime="20241124 23:06:42.791"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:42.791" endtime="20241124 23:06:42.791"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.774" endtime="20241124 23:06:42.791"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.761" endtime="20241124 23:06:42.791"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.181" endtime="20241124 23:06:42.791"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.798" endtime="20241124 23:06:42.798"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.799" endtime="20241124 23:06:42.799"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.799" endtime="20241124 23:06:42.799"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.791" endtime="20241124 23:06:42.799"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.181" endtime="20241124 23:06:42.799"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.181" endtime="20241124 23:06:42.799"/>
</iter>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:42.799"/>
</for>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:42.799"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.822" endtime="20241124 23:06:42.799"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:42.808" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '55', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 23:06:42.799" endtime="20241124 23:06:42.808"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:42.808" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "55", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 23:06:42.808" endtime="20241124 23:06:42.808"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:42.829" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:42.829" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:42.808" endtime="20241124 23:06:42.829"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.831" endtime="20241124 23:06:42.832"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:42.833" endtime="20241124 23:06:42.833"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.808" endtime="20241124 23:06:42.833"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.799" endtime="20241124 23:06:42.833"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:42.833"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.835" endtime="20241124 23:06:42.835"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.835" endtime="20241124 23:06:42.835"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.835" endtime="20241124 23:06:42.835"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.834" endtime="20241124 23:06:42.835"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:42.835"/>
</try>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:42.837"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '2', 'testCaseId': '1', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.409Z', 'flow': {'id': '2', 'name': 'Navigate to profile', 'projectI...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.839" level="INFO">${flow} = {'id': '2', 'name': 'Navigate to profile', 'projectId': '1', 'createdAt': '2024-11-24T16:52:30.660Z', 'updatedAt': '2024-11-24T16:52:30.660Z', 'flowActionSequences': [{'id': '5', 'actionId': '5', 'flo...</msg>
<status status="PASS" starttime="20241124 23:06:42.838" endtime="20241124 23:06:42.839"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.839" endtime="20241124 23:06:42.841"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:42.847" endtime="20241124 23:06:42.847"/>
</kw>
<msg timestamp="20241124 23:06:42.847" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.845" endtime="20241124 23:06:42.847"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.849" level="INFO">${values} = [{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-24T16:52:30.906Z', 'updatedAt': '2024-11-24T16:52:30.906Z', 'action': {'id': '5', 'name': 'Click profile header icon', 't...</msg>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.849" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</if>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.847" endtime="20241124 23:06:42.849"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</return>
<msg timestamp="20241124 23:06:42.849" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.845" endtime="20241124 23:06:42.849"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '5', 'actionId': '5', 'flowId': '2', 'order': 0, 'createdAt': '2024-11-24T16:52:30.906Z', 'updatedAt': '2024-11-24T16:52:30.906Z', 'action': {'id': '5', 'name': 'Click profile header icon', 'ty...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.849" level="INFO">${action} = {'id': '5', 'name': 'Click profile header icon', 'type': 'CLICK', 'selectorI': '4', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:51:14.954Z', 'updatedAt': '2024-11-24T16:51:14.954Z',...</msg>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:42.849"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:42.858" endtime="20241124 23:06:42.860"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:42.862" level="INFO">${input} = {'id': '5', 'actionId': '5', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:51:15.169Z', 'updatedAt': '2024-11-24T16:51:15.169Z'}</msg>
<status status="PASS" starttime="20241124 23:06:42.860" endtime="20241124 23:06:42.862"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.863" endtime="20241124 23:06:42.863"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:42.863" endtime="20241124 23:06:42.865"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.863" endtime="20241124 23:06:42.868"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.862" endtime="20241124 23:06:42.869"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:42.881" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:42.871" endtime="20241124 23:06:42.881"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.883" endtime="20241124 23:06:42.883"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.883" endtime="20241124 23:06:42.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:42.883" endtime="20241124 23:06:42.883"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:42.883" endtime="20241124 23:06:42.883"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:43.883" level="INFO">Waited for Element with selector id=headerProfileImage at state attached</msg>
<status status="PASS" starttime="20241124 23:06:42.909" endtime="20241124 23:06:43.883"/>
</kw>
<msg timestamp="20241124 23:06:43.883" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.909" endtime="20241124 23:06:43.883"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.883" endtime="20241124 23:06:43.883"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.909" endtime="20241124 23:06:43.883"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.883" endtime="20241124 23:06:43.883"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.883" endtime="20241124 23:06:43.883"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.883" endtime="20241124 23:06:43.883"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.909" endtime="20241124 23:06:43.883"/>
</try>
<msg timestamp="20241124 23:06:43.889" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.909" endtime="20241124 23:06:43.889"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.889" endtime="20241124 23:06:43.889"/>
</return>
<status status="PASS" starttime="20241124 23:06:42.904" endtime="20241124 23:06:43.890"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:43.890" endtime="20241124 23:06:43.890"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:43.890" endtime="20241124 23:06:43.890"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.904" endtime="20241124 23:06:43.890"/>
</try>
<msg timestamp="20241124 23:06:43.890" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:42.904" endtime="20241124 23:06:43.890"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.895" endtime="20241124 23:06:43.895"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.895" endtime="20241124 23:06:43.895"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.895" endtime="20241124 23:06:43.899"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.895" endtime="20241124 23:06:43.899"/>
</if>
<status status="PASS" starttime="20241124 23:06:43.895" endtime="20241124 23:06:43.899"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.900" endtime="20241124 23:06:43.899"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:43.923" level="INFO">Waited for Element with selector id=headerProfileImage at state visible</msg>
<status status="PASS" starttime="20241124 23:06:43.907" endtime="20241124 23:06:43.923"/>
</kw>
<msg timestamp="20241124 23:06:43.923" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.907" endtime="20241124 23:06:43.928"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.928" endtime="20241124 23:06:43.928"/>
</return>
<status status="PASS" starttime="20241124 23:06:43.899" endtime="20241124 23:06:43.928"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.928" endtime="20241124 23:06:43.928"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.928" endtime="20241124 23:06:43.928"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.928" endtime="20241124 23:06:43.928"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.899" endtime="20241124 23:06:43.928"/>
</try>
<msg timestamp="20241124 23:06:43.928" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.899" endtime="20241124 23:06:43.928"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.928" endtime="20241124 23:06:43.928"/>
</return>
<msg timestamp="20241124 23:06:43.930" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.899" endtime="20241124 23:06:43.930"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.933" endtime="20241124 23:06:43.933"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.933" endtime="20241124 23:06:43.933"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.932" endtime="20241124 23:06:43.933"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.932" endtime="20241124 23:06:43.933"/>
</if>
<status status="PASS" starttime="20241124 23:06:43.931" endtime="20241124 23:06:43.933"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.899" endtime="20241124 23:06:43.933"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:43.956" level="INFO">Waited for Element with selector id=headerProfileImage at state enabled</msg>
<status status="PASS" starttime="20241124 23:06:43.940" endtime="20241124 23:06:43.956"/>
</kw>
<msg timestamp="20241124 23:06:43.956" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.937" endtime="20241124 23:06:43.956"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.956"/>
</return>
<status status="PASS" starttime="20241124 23:06:43.937" endtime="20241124 23:06:43.956"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.956"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.956"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.956"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.937" endtime="20241124 23:06:43.956"/>
</try>
<msg timestamp="20241124 23:06:43.956" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.937" endtime="20241124 23:06:43.956"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.956"/>
</return>
<msg timestamp="20241124 23:06:43.956" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 23:06:43.936" endtime="20241124 23:06:43.956"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.962" endtime="20241124 23:06:43.962"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.962" endtime="20241124 23:06:43.962"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.962" endtime="20241124 23:06:43.962"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.962" endtime="20241124 23:06:43.962"/>
</if>
<status status="PASS" starttime="20241124 23:06:43.956" endtime="20241124 23:06:43.962"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.933" endtime="20241124 23:06:43.962"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.899" endtime="20241124 23:06:43.962"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:43.964" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:06:43.962" endtime="20241124 23:06:43.964"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 23:06:43.964" endtime="20241124 23:06:43.964"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:43.964" endtime="20241124 23:06:43.964"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:43.964"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:43.964"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:43.964"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.720"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.720"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.721" endtime="20241124 23:06:44.721"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.721" endtime="20241124 23:06:44.721"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.720" endtime="20241124 23:06:44.721"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.721"/>
</try>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.721"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.721"/>
</kw>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.721"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.721" endtime="20241124 23:06:44.721"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.721" endtime="20241124 23:06:44.721"/>
</branch>
<status status="PASS" starttime="20241124 23:06:43.964" endtime="20241124 23:06:44.721"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.896" endtime="20241124 23:06:44.721"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.883" endtime="20241124 23:06:44.721"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.730" endtime="20241124 23:06:44.730"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.733" endtime="20241124 23:06:44.733"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.721" endtime="20241124 23:06:44.733"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.739" endtime="20241124 23:06:44.739"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.733" endtime="20241124 23:06:44.739"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.744" endtime="20241124 23:06:44.745"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.739" endtime="20241124 23:06:44.745"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.746" endtime="20241124 23:06:44.746"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.745" endtime="20241124 23:06:44.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.746" endtime="20241124 23:06:44.746"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.746" endtime="20241124 23:06:44.746"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.754" endtime="20241124 23:06:44.756"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.756" endtime="20241124 23:06:44.756"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.756" endtime="20241124 23:06:44.756"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.756" endtime="20241124 23:06:44.758"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.756" endtime="20241124 23:06:44.758"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.756" endtime="20241124 23:06:44.758"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.746" endtime="20241124 23:06:44.758"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:44.771" endtime="20241124 23:06:44.771"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.771" endtime="20241124 23:06:44.771"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.758" endtime="20241124 23:06:44.771"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.777"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.771" endtime="20241124 23:06:44.777"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.787"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.787"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.777" endtime="20241124 23:06:44.787"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.787"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.794"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.794"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.794" endtime="20241124 23:06:44.794"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.794" endtime="20241124 23:06:44.794"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.794"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.787" endtime="20241124 23:06:44.794"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.794" endtime="20241124 23:06:44.794"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.794" endtime="20241124 23:06:44.794"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.805"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.805"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.794" endtime="20241124 23:06:44.805"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.881" endtime="20241124 23:06:44.805"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.805"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:44.805" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.805"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.805"/>
</return>
<msg timestamp="20241124 23:06:44.805" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:42.869" endtime="20241124 23:06:44.805"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:5</msg>
<status status="PASS" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.810"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.810" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.810"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:44.820" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:44.819" endtime="20241124 23:06:44.820"/>
</kw>
<msg timestamp="20241124 23:06:44.821" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:44.819" endtime="20241124 23:06:44.821"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:44.821" endtime="20241124 23:06:44.821"/>
</return>
<msg timestamp="20241124 23:06:44.821" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:44.818" endtime="20241124 23:06:44.821"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.826"/>
</kw>
<msg timestamp="20241124 23:06:44.826" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.826"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.826" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.826"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.826" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.826"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.826"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</if>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:44.832" endtime="20241124 23:06:44.832"/>
</return>
<msg timestamp="20241124 23:06:44.832" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.826" endtime="20241124 23:06:44.832"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.834"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.834"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.834"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.835"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.835"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.835"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.834" endtime="20241124 23:06:44.835"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.838"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.835" endtime="20241124 23:06:44.838"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.832" endtime="20241124 23:06:44.838"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.832" endtime="20241124 23:06:44.838"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:44.842" endtime="20241124 23:06:44.842"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.841" endtime="20241124 23:06:44.842"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.841" endtime="20241124 23:06:44.842"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.842" endtime="20241124 23:06:44.845"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.842" endtime="20241124 23:06:44.845"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.845"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:44.841" endtime="20241124 23:06:44.845"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.838" endtime="20241124 23:06:44.845"/>
</if>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.845"/>
</iter>
<status status="PASS" starttime="20241124 23:06:44.810" endtime="20241124 23:06:44.845"/>
</for>
<msg timestamp="20241124 23:06:44.845" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:44.805" endtime="20241124 23:06:44.845"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:44.845" endtime="20241124 23:06:44.850"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:44.850" endtime="20241124 23:06:44.858"/>
</kw>
<msg timestamp="20241124 23:06:44.858" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.850" endtime="20241124 23:06:44.858"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.858" level="INFO">${values} = {'id': '4', 'name': 'Profile icon', 'xpath': 'id=headerProfileImage', 'pageId': '2', 'createdAt': '2024-11-24T16:48:09.826Z', 'updatedAt': '2024-11-24T17:36:27.753Z'}</msg>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.858" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</if>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</return>
<msg timestamp="20241124 23:06:44.858" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.850" endtime="20241124 23:06:44.858"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.858" level="INFO">${xpath} = id=headerProfileImage</msg>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.858"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:44.866" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '112', 'status': 'COMPLETED', 'actionName': 'Click profile header icon', 'actionType': 'CLICK', 'actionXpath': 'id=headerProfileImage', 'inputValue': '', 'errorMessage'...</msg>
<status status="PASS" starttime="20241124 23:06:44.858" endtime="20241124 23:06:44.866"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:44.866" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "112", "status": "COMPLETED", "actionName": "Click profile header icon", "actionType": "CLICK", "actionXpath": "id=headerProfileImage", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241124 23:06:44.866" endtime="20241124 23:06:44.866"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:44.876" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:44.876" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:44.866" endtime="20241124 23:06:44.876"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:44.878" endtime="20241124 23:06:44.879"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:44.879" endtime="20241124 23:06:44.879"/>
</return>
<status status="PASS" starttime="20241124 23:06:44.866" endtime="20241124 23:06:44.882"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.850" endtime="20241124 23:06:44.882"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:44.883"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.883" endtime="20241124 23:06:44.883"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:44.884" endtime="20241124 23:06:44.884"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.884" endtime="20241124 23:06:44.884"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.883" endtime="20241124 23:06:44.884"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:44.885"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:44.885"/>
</iter>
<iter>
<var name="${flowActionSequence}">{'id': '6', 'actionId': '6', 'flowId': '2', 'order': 1, 'createdAt': '2024-11-24T16:52:30.906Z', 'updatedAt': '2024-11-24T16:52:30.906Z', 'action': {'id': '6', 'name': 'Click profile menu icon', 'type...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.887" level="INFO">${action} = {'id': '6', 'name': 'Click profile menu icon', 'type': 'CLICK', 'selectorI': '5', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:51:31.795Z', 'updatedAt': '2024-11-24T16:51:31.795Z', '...</msg>
<status status="PASS" starttime="20241124 23:06:44.886" endtime="20241124 23:06:44.887"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:44.887" endtime="20241124 23:06:44.888"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:44.889" level="INFO">${input} = {'id': '6', 'actionId': '6', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:51:31.968Z', 'updatedAt': '2024-11-24T16:51:31.968Z'}</msg>
<status status="PASS" starttime="20241124 23:06:44.888" endtime="20241124 23:06:44.889"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.890" endtime="20241124 23:06:44.890"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:44.890" endtime="20241124 23:06:44.890"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.889" endtime="20241124 23:06:44.890"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.889" endtime="20241124 23:06:44.890"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:44.893" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:44.892" endtime="20241124 23:06:44.893"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:44.894" endtime="20241124 23:06:44.894"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.893" endtime="20241124 23:06:44.894"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:44.894" endtime="20241124 23:06:44.895"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:44.894" endtime="20241124 23:06:44.895"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:45.040" level="INFO">Waited for Element with selector //p[text()="Profile"] at state attached</msg>
<status status="PASS" starttime="20241124 23:06:44.947" endtime="20241124 23:06:45.040"/>
</kw>
<msg timestamp="20241124 23:06:45.041" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.947" endtime="20241124 23:06:45.041"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.041" endtime="20241124 23:06:45.041"/>
</return>
<status status="PASS" starttime="20241124 23:06:44.947" endtime="20241124 23:06:45.041"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.041" endtime="20241124 23:06:45.041"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.042" endtime="20241124 23:06:45.042"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.041" endtime="20241124 23:06:45.042"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.947" endtime="20241124 23:06:45.042"/>
</try>
<msg timestamp="20241124 23:06:45.042" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.939" endtime="20241124 23:06:45.042"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.042" endtime="20241124 23:06:45.042"/>
</return>
<status status="PASS" starttime="20241124 23:06:44.907" endtime="20241124 23:06:45.043"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:45.043" endtime="20241124 23:06:45.043"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.043" endtime="20241124 23:06:45.043"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.899" endtime="20241124 23:06:45.043"/>
</try>
<msg timestamp="20241124 23:06:45.043" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:44.899" endtime="20241124 23:06:45.043"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.047" endtime="20241124 23:06:45.047"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.047" endtime="20241124 23:06:45.047"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.047" endtime="20241124 23:06:45.048"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.047" endtime="20241124 23:06:45.048"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.046" endtime="20241124 23:06:45.048"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.899" endtime="20241124 23:06:45.048"/>
</kw>
<kw name="fail-if-not-visible-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not visible
after waiting for the element state</doc>
<kw name="is-visible-after-wait" library="UTIL_BrowserHelper">
<var>${is_visible}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is visible
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_VISIBLE}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:45.079" level="INFO">Waited for Element with selector //p[text()="Profile"] at state visible</msg>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</kw>
<msg timestamp="20241124 23:06:45.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.079" endtime="20241124 23:06:45.079"/>
</return>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.079" endtime="20241124 23:06:45.079"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.079" endtime="20241124 23:06:45.079"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.079" endtime="20241124 23:06:45.079"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</try>
<msg timestamp="20241124 23:06:45.079" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.079" endtime="20241124 23:06:45.079"/>
</return>
<msg timestamp="20241124 23:06:45.079" level="INFO">${is_visible} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.051" endtime="20241124 23:06:45.079"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_visible == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.087"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.087"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.087"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.086" endtime="20241124 23:06:45.087"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.084" endtime="20241124 23:06:45.087"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.050" endtime="20241124 23:06:45.087"/>
</kw>
<kw name="fail-if-not-enabled-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not enabled
after waiting for the element state</doc>
<kw name="is-enabled-after-wait" library="UTIL_BrowserHelper">
<var>${is_enabled}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is enabled
after waiting for the element state</doc>
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ENABLED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:45.112" level="INFO">Waited for Element with selector //p[text()="Profile"] at state enabled</msg>
<status status="PASS" starttime="20241124 23:06:45.093" endtime="20241124 23:06:45.112"/>
</kw>
<msg timestamp="20241124 23:06:45.112" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.093" endtime="20241124 23:06:45.112"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.112"/>
</return>
<status status="PASS" starttime="20241124 23:06:45.093" endtime="20241124 23:06:45.112"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.112"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.112"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.112"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.112"/>
</try>
<msg timestamp="20241124 23:06:45.112" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.112"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.112"/>
</return>
<msg timestamp="20241124 23:06:45.112" level="INFO">${is_enabled} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.112"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_enabled == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.121"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.121"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.121"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.121"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.112" endtime="20241124 23:06:45.121"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.087" endtime="20241124 23:06:45.121"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.899" endtime="20241124 23:06:45.121"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${retry_info}</var>
<arg>is_first_try=${True}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:45.121" level="INFO">${retry_info} = {'is_first_try': True}</msg>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.121"/>
</kw>
<try>
<branch type="TRY">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>${retry_count}</arg>
<arg>1s</arg>
<arg>COMP_Button.perform-click-and-validate-post-condition</arg>
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="perform-click-and-validate-post-condition" library="COMP_Button">
<arg>${retry_info}</arg>
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to perform the click operation
And validate if the action is done successfully</doc>
<if>
<branch type="IF" condition="${retry_info}[is_first_try] == ${False}">
<kw name="validate-precondition" library="COMP_Button">
<arg>${selector}</arg>
<tag>robot:private</tag>
<doc>Method used to validate if the selector is actually a button
Also used to validate the button element before performing any action</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.128"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.128"/>
</branch>
<branch type="ELSE">
<kw name="Set To Dictionary" library="Collections">
<arg>${retry_info}</arg>
<arg>is_first_try=${False}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.128"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.128"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.128"/>
</if>
<try>
<branch type="TRY">
<kw name="Click" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>left</arg>
<arg>1</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.456"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.456"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="Log To Console" library="BuiltIn">
<arg>${err_msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.456"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>UNKNOWN_ERROR_OCCURRED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.456"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.456"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.128" endtime="20241124 23:06:45.456"/>
</try>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.456"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.456"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.456"/>
</branch>
<branch type="EXCEPT" variable="${err_msg}">
<kw name="ex-throw-actual-message-from-retry-error-message" library="EX_Exception">
<arg>${err_msg}</arg>
<tag>exception</tag>
<doc>Method used to get the actual message from string(Error msg from retry)</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.456"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.456"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.121" endtime="20241124 23:06:45.456"/>
</try>
<status status="PASS" starttime="20241124 23:06:44.896" endtime="20241124 23:06:45.456"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.895" endtime="20241124 23:06:45.456"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.461" endtime="20241124 23:06:45.461"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.466" endtime="20241124 23:06:45.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.456" endtime="20241124 23:06:45.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.466" endtime="20241124 23:06:45.466"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.466" endtime="20241124 23:06:45.466"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.472" endtime="20241124 23:06:45.472"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.466" endtime="20241124 23:06:45.472"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.472" endtime="20241124 23:06:45.472"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.472" endtime="20241124 23:06:45.472"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.478" endtime="20241124 23:06:45.479"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.472" endtime="20241124 23:06:45.479"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.481" endtime="20241124 23:06:45.481"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.483" endtime="20241124 23:06:45.483"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.481" endtime="20241124 23:06:45.483"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.484" endtime="20241124 23:06:45.484"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.483" endtime="20241124 23:06:45.484"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.481" endtime="20241124 23:06:45.484"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.479" endtime="20241124 23:06:45.484"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:45.494" endtime="20241124 23:06:45.494"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.500" endtime="20241124 23:06:45.500"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.486" endtime="20241124 23:06:45.502"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.502" endtime="20241124 23:06:45.502"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.502" endtime="20241124 23:06:45.510"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.502" endtime="20241124 23:06:45.510"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.510" endtime="20241124 23:06:45.510"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.510" endtime="20241124 23:06:45.510"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.502" endtime="20241124 23:06:45.510"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.502" endtime="20241124 23:06:45.510"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:45.526" endtime="20241124 23:06:45.526"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.545" endtime="20241124 23:06:45.545"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.510" endtime="20241124 23:06:45.545"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.583" endtime="20241124 23:06:45.585"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.591" endtime="20241124 23:06:45.591"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.590" endtime="20241124 23:06:45.591"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.592" endtime="20241124 23:06:45.592"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.591" endtime="20241124 23:06:45.592"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.590" endtime="20241124 23:06:45.593"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.545" endtime="20241124 23:06:45.593"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.599" endtime="20241124 23:06:45.599"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.593" endtime="20241124 23:06:45.599"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:45.632" endtime="20241124 23:06:45.632"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.632" endtime="20241124 23:06:45.632"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.599" endtime="20241124 23:06:45.635"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.893" endtime="20241124 23:06:45.637"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.640" endtime="20241124 23:06:45.641"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:45.648" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:45.644" endtime="20241124 23:06:45.648"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:45.648" endtime="20241124 23:06:45.648"/>
</return>
<msg timestamp="20241124 23:06:45.650" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:44.892" endtime="20241124 23:06:45.650"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.663" level="INFO">${key} = testCaseFlowSequenceId:2::flowActionSequenceId:6</msg>
<status status="PASS" starttime="20241124 23:06:45.661" endtime="20241124 23:06:45.663"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.665" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:45.665" endtime="20241124 23:06:45.665"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.665" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:45.665" endtime="20241124 23:06:45.665"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.668" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:45.668" endtime="20241124 23:06:45.668"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.673" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:45.670" endtime="20241124 23:06:45.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.676" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:45.673" endtime="20241124 23:06:45.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.676" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:45.676" endtime="20241124 23:06:45.676"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.679" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:45.679" endtime="20241124 23:06:45.679"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:45.679" endtime="20241124 23:06:45.679"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<msg timestamp="20241124 23:06:45.691" level="FAIL">Dictionary does not contain key 'testCaseFlowSequenceId:3::flowActionSequenceId:7'.</msg>
<status status="FAIL" starttime="20241124 23:06:45.691" endtime="20241124 23:06:45.691"/>
</kw>
<msg timestamp="20241124 23:06:45.691" level="INFO">${no_none_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:45.690" endtime="20241124 23:06:45.691"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.691" endtime="20241124 23:06:45.696"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.698" endtime="20241124 23:06:45.698"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.696" endtime="20241124 23:06:45.698"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.700" endtime="20241124 23:06:45.700"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.698" endtime="20241124 23:06:45.710"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.696" endtime="20241124 23:06:45.710"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.691" endtime="20241124 23:06:45.714"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.691" endtime="20241124 23:06:45.714"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:45.714" endtime="20241124 23:06:45.714"/>
</return>
<msg timestamp="20241124 23:06:45.715" level="INFO">${is_source_exists} = False</msg>
<status status="PASS" starttime="20241124 23:06:45.684" endtime="20241124 23:06:45.715"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:45.728" endtime="20241124 23:06:45.728"/>
</kw>
<msg timestamp="20241124 23:06:45.728" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.728" endtime="20241124 23:06:45.730"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.732" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:45.730" endtime="20241124 23:06:45.732"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.732" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.732" endtime="20241124 23:06:45.732"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.732" endtime="20241124 23:06:45.732"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.732" endtime="20241124 23:06:45.732"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.732" endtime="20241124 23:06:45.732"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.732" endtime="20241124 23:06:45.732"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.730" endtime="20241124 23:06:45.738"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.730" endtime="20241124 23:06:45.738"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:45.738" endtime="20241124 23:06:45.741"/>
</return>
<msg timestamp="20241124 23:06:45.741" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.722" endtime="20241124 23:06:45.741"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.741"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.741"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.741"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.741"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.741" endtime="20241124 23:06:45.747"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.747"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.755" endtime="20241124 23:06:45.755"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.755"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.755"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.757" endtime="20241124 23:06:45.757"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:45.757" endtime="20241124 23:06:45.757"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.755" endtime="20241124 23:06:45.757"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.757" endtime="20241124 23:06:45.757"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:45.757" endtime="20241124 23:06:45.757"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:45.757" endtime="20241124 23:06:45.758"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.755" endtime="20241124 23:06:45.758"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.755" endtime="20241124 23:06:45.758"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.755" endtime="20241124 23:06:45.758"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.758"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.747" endtime="20241124 23:06:45.759"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.663" endtime="20241124 23:06:45.759"/>
</iter>
<status status="PASS" starttime="20241124 23:06:45.663" endtime="20241124 23:06:45.759"/>
</for>
<msg timestamp="20241124 23:06:45.759" level="INFO">${assertion_message} = None</msg>
<status status="PASS" starttime="20241124 23:06:45.653" endtime="20241124 23:06:45.759"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.759" endtime="20241124 23:06:45.759"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.763"/>
</kw>
<msg timestamp="20241124 23:06:45.763" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.763"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.763" level="INFO">${values} = {'id': '5', 'name': 'Profile menu icon', 'xpath': '//p[text()="Profile"]', 'pageId': '2', 'createdAt': '2024-11-24T16:49:21.505Z', 'updatedAt': '2024-11-24T16:49:21.505Z'}</msg>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.763"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.771" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.770" endtime="20241124 23:06:45.771"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.771"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.771" endtime="20241124 23:06:45.771"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.771" endtime="20241124 23:06:45.771"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.771"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.771"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.771"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:45.771" endtime="20241124 23:06:45.776"/>
</return>
<msg timestamp="20241124 23:06:45.778" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.763" endtime="20241124 23:06:45.778"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.780" level="INFO">${xpath} = //p[text()="Profile"]</msg>
<status status="PASS" starttime="20241124 23:06:45.778" endtime="20241124 23:06:45.780"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.778" endtime="20241124 23:06:45.780"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.780" endtime="20241124 23:06:45.780"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.780" endtime="20241124 23:06:45.780"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.778" endtime="20241124 23:06:45.780"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:45.780" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '113', 'status': 'COMPLETED', 'actionName': 'Click profile menu icon', 'actionType': 'CLICK', 'actionXpath': '//p[text()="Profile"]', 'inputValue': '', 'errorMessage': ...</msg>
<status status="PASS" starttime="20241124 23:06:45.780" endtime="20241124 23:06:45.780"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:45.788" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "113", "status": "COMPLETED", "actionName": "Click profile menu icon", "actionType": "CLICK", "actionXpath": "//p[text()=\"Profile\"]", "inputValue": "", "errorMessage"...</msg>
<status status="PASS" starttime="20241124 23:06:45.780" endtime="20241124 23:06:45.790"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:45.801" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:45.801" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:45.791" endtime="20241124 23:06:45.801"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.801" endtime="20241124 23:06:45.809"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:45.809" endtime="20241124 23:06:45.809"/>
</return>
<status status="PASS" starttime="20241124 23:06:45.780" endtime="20241124 23:06:45.810"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.759" endtime="20241124 23:06:45.810"/>
</kw>
<status status="PASS" starttime="20241124 23:06:44.885" endtime="20241124 23:06:45.810"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.810" endtime="20241124 23:06:45.812"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:45.812" endtime="20241124 23:06:45.812"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.812" endtime="20241124 23:06:45.812"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.810" endtime="20241124 23:06:45.815"/>
</branch>
<status status="PASS" starttime="20241124 23:06:44.885" endtime="20241124 23:06:45.815"/>
</try>
<status status="PASS" starttime="20241124 23:06:44.885" endtime="20241124 23:06:45.815"/>
</iter>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:45.815"/>
</for>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:45.815"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.849" endtime="20241124 23:06:45.815"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:45.823" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '56', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 23:06:45.816" endtime="20241124 23:06:45.825"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:45.827" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "56", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 23:06:45.827" endtime="20241124 23:06:45.827"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:45.845" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:45.845" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:45.829" endtime="20241124 23:06:45.845"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.845" endtime="20241124 23:06:45.845"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:45.845" endtime="20241124 23:06:45.845"/>
</return>
<status status="PASS" starttime="20241124 23:06:45.826" endtime="20241124 23:06:45.853"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.815" endtime="20241124 23:06:45.853"/>
</kw>
<status status="PASS" starttime="20241124 23:06:42.837" endtime="20241124 23:06:45.853"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.853" endtime="20241124 23:06:45.856"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:45.856" endtime="20241124 23:06:45.856"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.856" endtime="20241124 23:06:45.856"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.853" endtime="20241124 23:06:45.856"/>
</branch>
<status status="PASS" starttime="20241124 23:06:42.837" endtime="20241124 23:06:45.856"/>
</try>
<status status="PASS" starttime="20241124 23:06:42.837" endtime="20241124 23:06:45.856"/>
</iter>
<iter>
<var name="${testCaseFlowSequence}">{'id': '3', 'testCaseId': '1', 'flowId': '3', 'order': 2, 'createdAt': '2024-11-24T16:55:57.542Z', 'updatedAt': '2024-11-24T17:33:07.401Z', 'flow': {'id': '3', 'name': 'Get Profile information', 'proj...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${flow}</var>
<arg>${testCaseFlowSequence}[flow]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.862" level="INFO">${flow} = {'id': '3', 'name': 'Get Profile information', 'projectId': '1', 'createdAt': '2024-11-24T16:52:52.554Z', 'updatedAt': '2024-11-24T16:52:52.554Z', 'flowActionSequences': [{'id': '7', 'actionId': '7', ...</msg>
<status status="PASS" starttime="20241124 23:06:45.861" endtime="20241124 23:06:45.862"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Flow Name: ${flow}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.862" endtime="20241124 23:06:45.862"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_flow_action_sequences_exists}</var>
<arg>${flow}</arg>
<arg>flowActionSequences</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:45.874" endtime="20241124 23:06:45.874"/>
</kw>
<msg timestamp="20241124 23:06:45.874" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.872" endtime="20241124 23:06:45.874"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.877" level="INFO">${values} = [{'id': '7', 'actionId': '7', 'flowId': '3', 'order': 0, 'createdAt': '2024-11-24T16:52:52.808Z', 'updatedAt': '2024-11-24T16:52:52.808Z', 'action': {'id': '7', 'name': 'Get profile email', 'type': 'G...</msg>
<status status="PASS" starttime="20241124 23:06:45.874" endtime="20241124 23:06:45.877"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.880" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.877" endtime="20241124 23:06:45.880"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.877" endtime="20241124 23:06:45.880"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.882" endtime="20241124 23:06:45.883"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.882" endtime="20241124 23:06:45.883"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.877" endtime="20241124 23:06:45.883"/>
</if>
<status status="PASS" starttime="20241124 23:06:45.874" endtime="20241124 23:06:45.883"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.874" endtime="20241124 23:06:45.883"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:45.883" endtime="20241124 23:06:45.883"/>
</return>
<msg timestamp="20241124 23:06:45.883" level="INFO">${is_flow_action_sequences_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:45.871" endtime="20241124 23:06:45.883"/>
</kw>
<if>
<branch type="IF" condition="$is_flow_action_sequences_exists">
<for flavor="IN">
<var>${flowActionSequence}</var>
<value>@{flow}[flowActionSequences]</value>
<iter>
<var name="${flowActionSequence}">{'id': '7', 'actionId': '7', 'flowId': '3', 'order': 0, 'createdAt': '2024-11-24T16:52:52.808Z', 'updatedAt': '2024-11-24T16:52:52.808Z', 'action': {'id': '7', 'name': 'Get profile email', 'type': 'GE...</var>
<try>
<branch type="TRY">
<kw name="Set Variable" library="BuiltIn">
<var>${action}</var>
<arg>${flowActionSequence}[action]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.893" level="INFO">${action} = {'id': '7', 'name': 'Get profile email', 'type': 'GET_TEXT', 'selectorI': '6', 'valueRege': '', 'projectId': '1', 'createdAt': '2024-11-24T16:51:50.748Z', 'updatedAt': '2024-11-24T16:51:50.748Z', 'sel...</msg>
<status status="PASS" starttime="20241124 23:06:45.892" endtime="20241124 23:06:45.893"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Action Name: ${action}[name]</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:45.893" endtime="20241124 23:06:45.896"/>
</kw>
<kw name="Get Selected Input" library="Common_util">
<var>${input}</var>
<arg>${flowActionSequence}</arg>
<msg timestamp="20241124 23:06:45.897" level="INFO">${input} = {'id': '7', 'actionId': '7', 'name': 'Input 01', 'value': '', 'waitAfterAction': '0', 'isDefault': True, 'createdAt': '2024-11-24T16:51:50.920Z', 'updatedAt': '2024-11-24T16:51:50.920Z'}</msg>
<status status="PASS" starttime="20241124 23:06:45.897" endtime="20241124 23:06:45.897"/>
</kw>
<if>
<branch type="IF" condition="$input == $None">
<kw name="Log To Console" library="BuiltIn">
<arg>Input not found for this action. Terminate the test case here!!!</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.906" endtime="20241124 23:06:45.906"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INPUT_NOT_FOUND_IN_ACTION</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.907" endtime="20241124 23:06:45.907"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.897" endtime="20241124 23:06:45.907"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.897" endtime="20241124 23:06:45.909"/>
</if>
<kw name="execute-action">
<var>${value}</var>
<arg>${action}</arg>
<arg>${input}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>${input}[value]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:45.915" level="INFO">${value} = </msg>
<status status="PASS" starttime="20241124 23:06:45.915" endtime="20241124 23:06:45.915"/>
</kw>
<if>
<branch type="IF" condition="'${action}[type]' == '${LAUNCH_BROWSER}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:45.922" endtime="20241124 23:06:45.924"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.918" endtime="20241124 23:06:45.924"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${NEW_PAGE}'">
<kw name="new-page" library="COMP_BrowserContext">
<arg>${input}[value]</arg>
<status status="NOT RUN" starttime="20241124 23:06:45.925" endtime="20241124 23:06:45.926"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.925" endtime="20241124 23:06:45.926"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.932" endtime="20241124 23:06:45.932"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.927" endtime="20241124 23:06:45.932"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${DOUBLE_CLICK}'">
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.941" endtime="20241124 23:06:45.942"/>
</kw>
<kw name="left-click" library="COMP_Button">
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Performs left click operation on button</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.944" endtime="20241124 23:06:45.944"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.932" endtime="20241124 23:06:45.944"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_DROPDOWN_VALUE}'">
<kw name="get-selected-option" library="COMP_Select">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the selected option
Error will thrown if multiple options selected</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.948" endtime="20241124 23:06:45.948"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.944" endtime="20241124 23:06:45.948"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_DROPDOWN_VALUE}'">
<kw name="select-single-option" library="COMP_Select">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Selects the option by given attribute</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.957" endtime="20241124 23:06:45.957"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.949" endtime="20241124 23:06:45.957"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${TYPE_TEXT}'">
<kw name="set-value" library="COMP_Textbox">
<arg>${action}[selector][xpath]</arg>
<arg>${input}[value]</arg>
<tag>component</tag>
<doc>Updates Field Value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.957" endtime="20241124 23:06:45.961"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXTBOX_VALUE}'">
<kw name="get-value" library="COMP_Textbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Returns Field Value</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_CHECKBOX_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.961"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_CHECKBOX_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.961" endtime="20241124 23:06:45.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_RADIO_VALUE}'">
<kw name="get-value" library="COMP_Checkbox">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>component</tag>
<doc>Gets the current checkbox status</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.977"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${SET_RADIO_VALUE}'">
<kw name="evaluate(${input}[value] == TRUE)">
<var>${select}</var>
<status status="NOT RUN" starttime="20241124 23:06:45.990" endtime="20241124 23:06:45.990"/>
</kw>
<kw name="set-value" library="COMP_Checkbox">
<arg>${action}[selector][xpath]</arg>
<arg>${select}</arg>
<tag>component</tag>
<doc>Updates the Field value and checks for post condition
And retries if the retry value is provided</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.977" endtime="20241124 23:06:45.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${IS_ELEMENT_VISIBLE}'">
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</kw>
<if>
<branch type="IF" condition="${value}">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>TRUE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${value}</var>
<arg>FALSE</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:45.993" endtime="20241124 23:06:45.993"/>
</branch>
<branch type="ELSE IF" condition="'${action}[type]' == '${GET_TEXT}'">
<kw name="get-property" library="UTIL_BrowserHelper">
<var>${value}</var>
<arg>${action}[selector][xpath]</arg>
<arg>innerText</arg>
<tag>util</tag>
<doc>Method used to get property</doc>
<kw name="fail-if-not-attached-after-wait" library="UTIL_Validation">
<arg>${selector}</arg>
<tag>util</tag>
<doc>Throws error if the element is not attached to the DOM
after waiting for the element state</doc>
<kw name="is-attached-after-wait" library="UTIL_BrowserHelper">
<var>${is_attached}</var>
<arg>${selector}</arg>
<tag>util</tag>
<doc>checks whether the given selector is attached to the DOM
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="is-element-state-appear-after-wait" library="UTIL_BrowserHelper">
<var>${result}</var>
<arg>${selector}</arg>
<arg>${ELEMENT_STATE_ATTACHED}</arg>
<tag>util</tag>
<doc>Used to get the element state
after waiting for the element state</doc>
<try>
<branch type="TRY">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${result}</var>
<arg>RPA.Browser.Playwright.Wait For Elements State</arg>
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Wait For Elements State" library="RPA.Browser.Playwright">
<arg>${selector}</arg>
<arg>${state}</arg>
<arg>timeout=12s</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20241124 23:06:46.011" level="INFO">Waited for Element with selector //p[text()="EMAIL"]/following-sibling::p at state attached</msg>
<status status="PASS" starttime="20241124 23:06:46.009" endtime="20241124 23:06:46.011"/>
</kw>
<msg timestamp="20241124 23:06:46.011" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.009" endtime="20241124 23:06:46.011"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:46.011" endtime="20241124 23:06:46.011"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.009" endtime="20241124 23:06:46.011"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while getting element state: ${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.017"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ELEMENT_NOT_ATTACHED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.017"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.017"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.004" endtime="20241124 23:06:46.017"/>
</try>
<msg timestamp="20241124 23:06:46.017" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.004" endtime="20241124 23:06:46.017"/>
</kw>
<return>
<value>${result}</value>
<status status="PASS" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.017"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.004" endtime="20241124 23:06:46.017"/>
</branch>
<branch type="EXCEPT">
<return>
<value>${False}</value>
<status status="NOT RUN" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.017"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.017" endtime="20241124 23:06:46.020"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.004" endtime="20241124 23:06:46.020"/>
</try>
<msg timestamp="20241124 23:06:46.021" level="INFO">${is_attached} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.004" endtime="20241124 23:06:46.021"/>
</kw>
<kw name="fail-keyword-if" library="UTIL_Validation">
<arg>${is_attached == False}</arg>
<arg>${message}</arg>
<tag>util</tag>
<doc>Throws error with a custom message if given condition satisifes
first argument must be an expression/boolean
second argument must a message
Eg: fail-keyword-if {var1 == var2} {message}</doc>
<if>
<branch type="IF" condition="${condition}">
<kw name="Log To Console" library="BuiltIn">
<arg>Conditional exception: ${message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.021"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.021"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.021"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.021"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.021"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.003" endtime="20241124 23:06:46.021"/>
</kw>
<try>
<branch type="TRY">
<kw name="Get Property" library="RPA.Browser.Playwright">
<var>${property}</var>
<arg>${selector}</arg>
<arg>${property_name}</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns the ``property`` of the element found by ``selector``.</doc>
<msg timestamp="20241124 23:06:46.036" level="INFO">Property: 'bharani@ideas2it.com'</msg>
<msg timestamp="20241124 23:06:46.036" level="INFO">${property} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:46.026" endtime="20241124 23:06:46.036"/>
</kw>
<return>
<value>${property}</value>
<status status="PASS" starttime="20241124 23:06:46.036" endtime="20241124 23:06:46.036"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.036"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<arg>ERROR</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.036" endtime="20241124 23:06:46.036"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>INVALID_BROWSER_ELEMENT_PROPERTY</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.036" endtime="20241124 23:06:46.036"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.036" endtime="20241124 23:06:46.036"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.021" endtime="20241124 23:06:46.036"/>
</try>
<msg timestamp="20241124 23:06:46.036" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:45.993" endtime="20241124 23:06:46.036"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.993" endtime="20241124 23:06:46.036"/>
</branch>
<branch type="ELSE">
<kw name="Log To Message">
<arg>Action not developed. Terminate the TestCase here!!!</arg>
<status status="NOT RUN" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>ACTION_NOT_DEVELOPED</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.036" endtime="20241124 23:06:46.043"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.915" endtime="20241124 23:06:46.043"/>
</if>
<kw name="Log To Console" library="BuiltIn">
<arg>${value}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>${input}[waitAfterAction]s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20241124 23:06:46.043" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<return>
<value>${value}</value>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</return>
<msg timestamp="20241124 23:06:46.043" level="INFO">${value} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:45.909" endtime="20241124 23:06:46.043"/>
</kw>
<kw name="perform-assertion">
<var>${assertion_message}</var>
<arg>${ACCUMULATION}</arg>
<arg>${assertions}</arg>
<arg>${testCaseFlowSequence}[id]</arg>
<arg>${flowActionSequence}[id]</arg>
<arg>${value}</arg>
<kw name="Set Variable" library="BuiltIn">
<var>${key}</var>
<arg>testCaseFlowSequenceId:${testCaseFlowSequenceId}::flowActionSequenceId:${flowActionSequenceId}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.043" level="INFO">${key} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<for flavor="IN">
<var>${assertion}</var>
<value>@{assertions}</value>
<iter>
<var name="${assertion}">{'id': '1', 'testCaseId': '1', 'operator': 'SHOULD_BE_EQUAL_TO', 'source': 'testCaseFlowSequenceId:3::flowActionSequenceId:7', 'target': 'testCaseFlowSequenceId:1::flowActionSequenceId:2', 'customTarg...</var>
<kw name="Set Variable" library="BuiltIn">
<var>${source}</var>
<arg>${assertion}[source]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.043" level="INFO">${source} = testCaseFlowSequenceId:3::flowActionSequenceId:7</msg>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.043"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${target}</var>
<arg>${assertion}[target]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.051" level="INFO">${target} = testCaseFlowSequenceId:1::flowActionSequenceId:2</msg>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${skip}</var>
<arg>${assertion}[skip]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.051" level="INFO">${skip} = False</msg>
<status status="PASS" starttime="20241124 23:06:46.051" endtime="20241124 23:06:46.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${operator}</var>
<arg>${assertion}[operator]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.051" level="INFO">${operator} = SHOULD_BE_EQUAL_TO</msg>
<status status="PASS" starttime="20241124 23:06:46.051" endtime="20241124 23:06:46.051"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${useCustomTargetValue}</var>
<arg>${assertion}[useCustomTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.053" level="INFO">${useCustomTargetValue} = False</msg>
<status status="PASS" starttime="20241124 23:06:46.051" endtime="20241124 23:06:46.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${customTargetValue}</var>
<arg>${assertion}[customTargetValue]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.054" level="INFO">${customTargetValue} = </msg>
<status status="PASS" starttime="20241124 23:06:46.054" endtime="20241124 23:06:46.054"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${errorMessage}</var>
<arg>${assertion}[errorMessage]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.054" level="INFO">${errorMessage} = Email mismatch</msg>
<status status="PASS" starttime="20241124 23:06:46.054" endtime="20241124 23:06:46.054"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${ACCUMULATION}</arg>
<arg>${key}=${value}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:46.054" endtime="20241124 23:06:46.056"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_source_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${source}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</kw>
<msg timestamp="20241124 23:06:46.059" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.058" endtime="20241124 23:06:46.059"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.059" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.059" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:46.059" endtime="20241124 23:06:46.059"/>
</return>
<msg timestamp="20241124 23:06:46.062" level="INFO">${is_source_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.057" endtime="20241124 23:06:46.062"/>
</kw>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_target_exists}</var>
<arg>${ACCUMULATION}</arg>
<arg>${target}</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:46.062" endtime="20241124 23:06:46.062"/>
</kw>
<msg timestamp="20241124 23:06:46.062" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.062" endtime="20241124 23:06:46.062"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.066" level="INFO">${values} = bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.066" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.062" endtime="20241124 23:06:46.066"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.062" endtime="20241124 23:06:46.066"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.066"/>
</return>
<msg timestamp="20241124 23:06:46.066" level="INFO">${is_target_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.062" endtime="20241124 23:06:46.066"/>
</kw>
<if>
<branch type="IF" condition="'${source}' == '${key}' and '${is_source_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${customTargetValue}</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${customTargetValue}</value>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.070"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.075"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.075"/>
</if>
<if>
<branch type="IF" condition="$is_target_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] == ${ACCUMULATION}[${target}]</value>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${source}] != ${ACCUMULATION}[${target}]</value>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.070" endtime="20241124 23:06:46.075"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.066" endtime="20241124 23:06:46.075"/>
</if>
<if>
<branch type="IF" condition="'${target}' == '${key}' and '${is_target_exists}' == '${True}'">
<if>
<branch type="IF" condition="$skip">
<return>
<value>Skipped assertion!!</value>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</if>
<if>
<branch type="IF" condition="$useCustomTargetValue">
<kw name="Log To Console" library="BuiltIn">
<arg>No need to assert here.</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</if>
<if>
<branch type="IF" condition="$is_source_exists">
<if>
<branch type="IF" condition="'${operator}' == 'SHOULD_BE_EQUAL_TO'">
<kw name="Should Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] == ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.075"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</branch>
<branch type="ELSE IF" condition="'${operator}' == 'SHOULD_NOT_BE_EQUAL_TO'">
<kw name="Should Not Be Equal" library="BuiltIn">
<arg>${ACCUMULATION}[${target}]</arg>
<arg>${ACCUMULATION}[${source}]</arg>
<arg>${errorMessage}</arg>
<doc>Fails if the given objects are equal.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.083" endtime="20241124 23:06:46.083"/>
</kw>
<return>
<value>Assertion passed: ${ACCUMULATION}[${target}] != ${ACCUMULATION}[${source}]</value>
<status status="NOT RUN" starttime="20241124 23:06:46.083" endtime="20241124 23:06:46.083"/>
</return>
<status status="NOT RUN" starttime="20241124 23:06:46.083" endtime="20241124 23:06:46.083"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</if>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:06:46.075" endtime="20241124 23:06:46.083"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.083"/>
</iter>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.083"/>
</for>
<msg timestamp="20241124 23:06:46.083" level="INFO">${assertion_message} = Assertion passed: bharani@ideas2it.com == bharani@ideas2it.com</msg>
<status status="PASS" starttime="20241124 23:06:46.043" endtime="20241124 23:06:46.083"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${assertion_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:46.083" endtime="20241124 23:06:46.086"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${EMPTY}</arg>
<arg>${assertion_message}</arg>
<kw name="is-value-not-none" library="UTIL_Collection">
<var>${is_selector_exists}</var>
<arg>${action}</arg>
<arg>selector</arg>
<tag>util</tag>
<doc>checks whether the key exists in dicitonary</doc>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>dictionary should contain key</arg>
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Dictionary Should Contain Key" library="Collections">
<arg>${dictionary}</arg>
<arg>${key}</arg>
<doc>Fails if ``key`` is not found from ``dictionary``.</doc>
<status status="PASS" starttime="20241124 23:06:46.091" endtime="20241124 23:06:46.091"/>
</kw>
<msg timestamp="20241124 23:06:46.091" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.091" endtime="20241124 23:06:46.091"/>
</kw>
<if>
<branch type="IF" condition="$no_none_exists == $True">
<kw name="Set Variable" library="BuiltIn">
<var>${values}</var>
<arg>${dictionary}[${key}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.094" level="INFO">${values} = {'id': '6', 'name': 'Email', 'xpath': '//p[text()="EMAIL"]/following-sibling::p', 'pageId': '2', 'createdAt': '2024-11-24T16:50:29.634Z', 'updatedAt': '2024-11-24T16:50:29.634Z'}</msg>
<status status="PASS" starttime="20241124 23:06:46.094" endtime="20241124 23:06:46.094"/>
</kw>
<if>
<branch type="IF" condition="$values != $None">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${True}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.094" level="INFO">${no_none_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.094" endtime="20241124 23:06:46.094"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.094" endtime="20241124 23:06:46.095"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${no_none_exists}</var>
<arg>${False}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.095" endtime="20241124 23:06:46.095"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.095" endtime="20241124 23:06:46.095"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.094" endtime="20241124 23:06:46.096"/>
</if>
<status status="PASS" starttime="20241124 23:06:46.094" endtime="20241124 23:06:46.096"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.091" endtime="20241124 23:06:46.096"/>
</if>
<return>
<value>${no_none_exists}</value>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</return>
<msg timestamp="20241124 23:06:46.096" level="INFO">${is_selector_exists} = True</msg>
<status status="PASS" starttime="20241124 23:06:46.091" endtime="20241124 23:06:46.096"/>
</kw>
<if>
<branch type="IF" condition="$is_selector_exists">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${action}[selector][xpath]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241124 23:06:46.096" level="INFO">${xpath} = //p[text()="EMAIL"]/following-sibling::p</msg>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</branch>
<branch type="ELSE">
<kw name="Set Variable" library="BuiltIn">
<var>${xpath}</var>
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</branch>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</if>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>flowActionSequenceHistoryId=${flowActionSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>actionName=${action}[name]</arg>
<arg>actionType=${action}[type]</arg>
<arg>actionXpath=${xpath}</arg>
<arg>inputValue=${input}[value]</arg>
<arg>errorMessage=${errorMessage}</arg>
<arg>assertionMessage=${assertionMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:46.096" level="INFO">${response_message} = {'flowActionSequenceHistoryId': '111', 'status': 'COMPLETED', 'actionName': 'Get profile email', 'actionType': 'GET_TEXT', 'actionXpath': '//p[text()="EMAIL"]/following-sibling::p', 'inputValue': '', ...</msg>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.096"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:46.099" level="INFO">${json_response} = {"flowActionSequenceHistoryId": "111", "status": "COMPLETED", "actionName": "Get profile email", "actionType": "GET_TEXT", "actionXpath": "//p[text()=\"EMAIL\"]/following-sibling::p", "inputValue": ""...</msg>
<status status="PASS" starttime="20241124 23:06:46.099" endtime="20241124 23:06:46.099"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:46.106" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:46.106" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:46.099" endtime="20241124 23:06:46.106"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:46.106" endtime="20241124 23:06:46.108"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:46.108" endtime="20241124 23:06:46.108"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.096" endtime="20241124 23:06:46.108"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.086" endtime="20241124 23:06:46.109"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.890" endtime="20241124 23:06:46.109"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.109" endtime="20241124 23:06:46.109"/>
</kw>
<kw name="send-action-sequence-message">
<arg>${flowActionSequence}[flowActionSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${action}</arg>
<arg>${input}</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:46.109" endtime="20241124 23:06:46.110"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:46.110" endtime="20241124 23:06:46.110"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:46.109" endtime="20241124 23:06:46.110"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.890" endtime="20241124 23:06:46.110"/>
</try>
<status status="PASS" starttime="20241124 23:06:45.890" endtime="20241124 23:06:46.110"/>
</iter>
<status status="PASS" starttime="20241124 23:06:45.886" endtime="20241124 23:06:46.110"/>
</for>
<status status="PASS" starttime="20241124 23:06:45.886" endtime="20241124 23:06:46.110"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.886" endtime="20241124 23:06:46.110"/>
</if>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>COMPLETED</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseFlowSequenceHistoryId=${testCaseFlowSequenceHistoryId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:46.114" level="INFO">${response_message} = {'testCaseFlowSequenceHistoryId': '57', 'status': 'COMPLETED', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 23:06:46.114" endtime="20241124 23:06:46.114"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:46.117" level="INFO">${json_response} = {"testCaseFlowSequenceHistoryId": "57", "status": "COMPLETED", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 23:06:46.116" endtime="20241124 23:06:46.117"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:47.165" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:47.167" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:46.117" endtime="20241124 23:06:47.167"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:47.169" endtime="20241124 23:06:47.171"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:47.171" endtime="20241124 23:06:47.171"/>
</return>
<status status="PASS" starttime="20241124 23:06:46.116" endtime="20241124 23:06:47.171"/>
</kw>
<status status="PASS" starttime="20241124 23:06:46.110" endtime="20241124 23:06:47.171"/>
</kw>
<status status="PASS" starttime="20241124 23:06:45.860" endtime="20241124 23:06:47.176"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.177" endtime="20241124 23:06:47.177"/>
</kw>
<kw name="send-flow-sequence-message">
<arg>${testCaseFlowSequence}[testCaseFlowSequenceHistoryId]</arg>
<arg>FAILED</arg>
<arg>${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:47.178" endtime="20241124 23:06:47.178"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.180" endtime="20241124 23:06:47.180"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:47.176" endtime="20241124 23:06:47.180"/>
</branch>
<status status="PASS" starttime="20241124 23:06:45.860" endtime="20241124 23:06:47.181"/>
</try>
<status status="PASS" starttime="20241124 23:06:45.856" endtime="20241124 23:06:47.181"/>
</iter>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:47.181"/>
</for>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:47.182"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.808" endtime="20241124 23:06:47.182"/>
</if>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>PASS</arg>
<kw name="Create Dictionary" library="BuiltIn">
<var>${response_message}</var>
<arg>testCaseRunId=${testCaseRunId}</arg>
<arg>status=${status}</arg>
<arg>errorMessage=${errorMessage}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20241124 23:06:47.188" level="INFO">${response_message} = {'testCaseRunId': '21', 'status': 'PASS', 'errorMessage': ''}</msg>
<status status="PASS" starttime="20241124 23:06:47.188" endtime="20241124 23:06:47.188"/>
</kw>
<kw name="Push response message to kafka topic" library="UTIL_Common">
<arg>${response_message}</arg>
<tag>function</tag>
<doc>push the response message to kafka topic</doc>
<kw name="Evaluate" library="BuiltIn">
<var>${json_response}</var>
<arg>json.dumps(${payload_response_msg})</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241124 23:06:47.194" level="INFO">${json_response} = {"testCaseRunId": "21", "status": "PASS", "errorMessage": ""}</msg>
<status status="PASS" starttime="20241124 23:06:47.194" endtime="20241124 23:06:47.194"/>
</kw>
<kw name="Push Message To Topic" library="TopicProducer">
<var>${producer_response}</var>
<arg>${json_response}</arg>
<doc>Kafka Producer to send the response as json message and push it</doc>
<msg timestamp="20241124 23:06:47.213" level="INFO">Message delivered to response_topic [0]</msg>
<msg timestamp="20241124 23:06:47.219" level="INFO">${producer_response} = &lt;function delivery_report at 0x000001F2753FA430&gt;</msg>
<status status="PASS" starttime="20241124 23:06:47.194" endtime="20241124 23:06:47.220"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>kafka_producer_response:${producer_response}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:47.220" endtime="20241124 23:06:47.224"/>
</kw>
<return>
<value>${producer_response}</value>
<status status="PASS" starttime="20241124 23:06:47.224" endtime="20241124 23:06:47.224"/>
</return>
<status status="PASS" starttime="20241124 23:06:47.188" endtime="20241124 23:06:47.224"/>
</kw>
<status status="PASS" starttime="20241124 23:06:47.183" endtime="20241124 23:06:47.227"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:47.227"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.229" endtime="20241124 23:06:47.229"/>
</kw>
<kw name="send-test-case-run-message">
<arg>${testCaseRun}[id]</arg>
<arg>FAIL</arg>
<arg>errorMessage=${error_message}</arg>
<status status="NOT RUN" starttime="20241124 23:06:47.229" endtime="20241124 23:06:47.229"/>
</kw>
<kw name="ex-fail" library="EX_Exception">
<arg>${error_message}</arg>
<tag>exception</tag>
<doc>wrapper over the builtin Fail keyword, to support additional operations during failure</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.229" endtime="20241124 23:06:47.229"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:47.229" endtime="20241124 23:06:47.229"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.788" endtime="20241124 23:06:47.229"/>
</try>
<status status="PASS" starttime="20241124 23:06:32.748" endtime="20241124 23:06:47.236"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Command type not developed</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.236" endtime="20241124 23:06:47.236"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:47.236" endtime="20241124 23:06:47.236"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.748" endtime="20241124 23:06:47.236"/>
</if>
<status status="PASS" starttime="20241124 23:06:32.716" endtime="20241124 23:06:47.236"/>
</kw>
<status status="PASS" starttime="20241124 23:06:32.716" endtime="20241124 23:06:47.236"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.236" endtime="20241124 23:06:47.236"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:47.236" endtime="20241124 23:06:47.236"/>
</branch>
<status status="PASS" starttime="20241124 23:06:32.716" endtime="20241124 23:06:47.236"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<try>
<branch type="TRY">
<kw name="Close Browser" library="RPA.Browser.Playwright">
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Closes the current browser.</doc>
<msg timestamp="20241124 23:06:47.841" level="INFO">Closed browser</msg>
<status status="PASS" starttime="20241124 23:06:47.244" endtime="20241124 23:06:47.841"/>
</kw>
<status status="PASS" starttime="20241124 23:06:47.244" endtime="20241124 23:06:47.841"/>
</branch>
<branch type="EXCEPT" variable="${err}">
<kw name="Log To Console" library="BuiltIn">
<arg>Error while closing browser: ${err}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:06:47.841" endtime="20241124 23:06:47.841"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:06:47.841" endtime="20241124 23:06:47.841"/>
</branch>
<status status="PASS" starttime="20241124 23:06:47.244" endtime="20241124 23:06:47.841"/>
</try>
<status status="PASS" starttime="20241124 23:06:47.244" endtime="20241124 23:06:47.841"/>
</kw>
<status status="PASS" starttime="20241124 23:04:40.642" endtime="20241124 23:06:47.841"/>
</iter>
<iter>
<kw name="launch-browser" library="COMP_BrowserContext">
<kw name="New Browser" library="RPA.Browser.Playwright">
<arg>chromium</arg>
<arg>headless=False</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new playwright Browser with specified options.</doc>
<msg timestamp="20241124 23:06:47.841" level="INFO">{"browser": "chromium", "headless": false, "devtools": false, "handleSIGHUP": true, "handleSIGINT": true, "handleSIGTERM": true, "slowMo": 0.0, "timeout": 30000.0, "deprecated_pos_args": [], "tracesDir": "C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\3140e3f2-76ce-4523-9763-b4c852746692"}</msg>
<msg timestamp="20241124 23:06:48.574" level="INFO">Successfully created browser with options: {"browser":"chromium","headless":false,"devtools":false,"handleSIGHUP":true,"handleSIGINT":true,"handleSIGTERM":true,"slowMo":0,"timeout":30000,"deprecated_pos_args":[],"tracesDir":"C:\\Users\\Admin\\Documents\\Hackathon\\Test Automation Studio\\Test-automation-studio-projects\\test-automation-rf\\code\\browser\\traces\\3140e3f2-76ce-4523-9763-b4c852746692"}</msg>
<status status="PASS" starttime="20241124 23:06:47.841" endtime="20241124 23:06:48.574"/>
</kw>
<kw name="New Context" library="RPA.Browser.Playwright">
<arg>viewport={'width': 1280, 'height': 720}</arg>
<arg>acceptDownloads=True</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Create a new BrowserContext with specified options.</doc>
<msg timestamp="20241124 23:06:48.574" level="INFO">{
  "acceptDownloads": true,
  "bypassCSP": false,
  "forcedColors": "none",
  "hideRfBrowser": false,
  "ignoreHTTPSErrors": false,
  "javaScriptEnabled": true,
  "offline": false,
  "reducedMotion": "no-preference",
  "viewport": {
    "width": 1280,
    "height": 720
  },
  "deprecated_pos_args": []
}</msg>
<msg timestamp="20241124 23:06:48.590" level="INFO">Successfully created context. </msg>
<msg timestamp="20241124 23:06:48.590" level="INFO">{'acceptDownloads': True, 'bypassCSP': False, 'forcedColors': 'none', 'hideRfBrowser': False, 'ignoreHTTPSErrors': False, 'javaScriptEnabled': True, 'offline': False, 'reducedMotion': 'no-preference', 'viewport': {'width': 1280, 'height': 720}, 'deprecated_pos_args': []}</msg>
<status status="PASS" starttime="20241124 23:06:48.574" endtime="20241124 23:06:48.590"/>
</kw>
<kw name="Set Browser Timeout" library="RPA.Browser.Playwright">
<arg>${browser_timeout}</arg>
<tag>Config</tag>
<tag>Setter</tag>
<doc>Sets the timeout used by most input and getter keywords.</doc>
<status status="PASS" starttime="20241124 23:06:48.590" endtime="20241124 23:06:48.590"/>
</kw>
<kw name="New Page" library="RPA.Browser.Playwright">
<var>${page_id}</var>
<arg>https://www.google.com/</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page.</doc>
<msg timestamp="20241124 23:06:51.928" level="INFO">Successfully initialized new page object and opened url: https://www.google.com/</msg>
<msg timestamp="20241124 23:06:51.928" level="INFO">${page_id} = {'page_id': 'page=27c9dce3-70d8-43b6-8389-77b75bab2ee1', 'video_path': ''}</msg>
<status status="PASS" starttime="20241124 23:06:48.590" endtime="20241124 23:06:51.929"/>
</kw>
<status status="PASS" starttime="20241124 23:06:47.841" endtime="20241124 23:06:51.929"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>&lt;===Polling message===&gt;</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20241124 23:06:51.929" endtime="20241124 23:06:51.930"/>
</kw>
<kw name="Get A Command" library="CommandConsumer">
<var>${json}</var>
<arg>${5}</arg>
<msg timestamp="20241124 23:13:47.248" level="INFO">${json} = {'type': 'KILL'}</msg>
<status status="PASS" starttime="20241124 23:06:51.931" endtime="20241124 23:13:47.248"/>
</kw>
<if>
<branch type="IF" condition="'${json}[type]' == 'KILL'">
<break>
<status status="PASS" starttime="20241124 23:13:47.248" endtime="20241124 23:13:47.248"/>
</break>
<status status="PASS" starttime="20241124 23:13:47.248" endtime="20241124 23:13:47.248"/>
</branch>
<status status="PASS" starttime="20241124 23:13:47.248" endtime="20241124 23:13:47.248"/>
</if>
<try>
<branch type="TRY">
<kw name="execute-test-case">
<arg>${json}</arg>
<status status="NOT RUN" starttime="20241124 23:13:47.254" endtime="20241124 23:13:47.257"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:13:47.254" endtime="20241124 23:13:47.257"/>
</branch>
<branch type="EXCEPT" variable="${error_message}">
<kw name="Log To Console" library="BuiltIn">
<arg>${error_message}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20241124 23:13:47.257" endtime="20241124 23:13:47.257"/>
</kw>
<status status="NOT RUN" starttime="20241124 23:13:47.257" endtime="20241124 23:13:47.257"/>
</branch>
<status status="NOT RUN" starttime="20241124 23:13:47.254" endtime="20241124 23:13:47.257"/>
</try>
<kw name="close-browser" library="COMP_BrowserContext">
<status status="NOT RUN" starttime="20241124 23:13:47.257" endtime="20241124 23:13:47.257"/>
</kw>
<status status="PASS" starttime="20241124 23:06:47.841" endtime="20241124 23:13:47.257"/>
</iter>
<status status="PASS" starttime="20241124 23:00:32.576" endtime="20241124 23:13:47.257"/>
</while>
<status status="PASS" starttime="20241124 23:00:32.576" endtime="20241124 23:13:47.257"/>
</kw>
<status status="PASS" starttime="20241124 23:00:32.568" endtime="20241124 23:13:47.264"/>
</test>
<status status="PASS" starttime="20241124 23:00:29.202" endtime="20241124 23:13:47.559"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Start">Start</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
